// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener/OnPeerDisconnected
#include "LiteNetLib/EventBasedNetListener_OnPeerDisconnected.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener/OnPeerDisconnected..ctor
LiteNetLib::EventBasedNetListener::OnPeerDisconnected* LiteNetLib::EventBasedNetListener::OnPeerDisconnected::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return THROW_UNLESS(il2cpp_utils::New<EventBasedNetListener::OnPeerDisconnected*>(object, method));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/OnPeerDisconnected.Invoke
void LiteNetLib::EventBasedNetListener::OnPeerDisconnected::Invoke(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Invoke", peer, disconnectInfo));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/OnPeerDisconnected.BeginInvoke
System::IAsyncResult* LiteNetLib::EventBasedNetListener::OnPeerDisconnected::BeginInvoke(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", peer, disconnectInfo, callback, object));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener/OnPeerDisconnected.EndInvoke
void LiteNetLib::EventBasedNetListener::OnPeerDisconnected::EndInvoke(System::IAsyncResult* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndInvoke", result));
}
