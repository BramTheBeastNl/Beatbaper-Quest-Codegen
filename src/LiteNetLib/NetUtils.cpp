// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.NetUtils
#include "LiteNetLib/NetUtils.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
// Including type: LiteNetLib.LocalAddrType
#include "LiteNetLib/LocalAddrType.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<System.String> IpList
System::Collections::Generic::List_1<::Il2CppString*>* LiteNetLib::NetUtils::_get_IpList() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("LiteNetLib", "NetUtils", "IpList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<System.String> IpList
void LiteNetLib::NetUtils::_set_IpList(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetUtils", "IpList", value));
}
// Autogenerated method: LiteNetLib.NetUtils.MakeEndPoint
System::Net::IPEndPoint* LiteNetLib::NetUtils::MakeEndPoint(::Il2CppString* hostStr, int port) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::IPEndPoint*>("LiteNetLib", "NetUtils", "MakeEndPoint", hostStr, port));
}
// Autogenerated method: LiteNetLib.NetUtils.ResolveAddress
System::Net::IPAddress* LiteNetLib::NetUtils::ResolveAddress(::Il2CppString* hostStr) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::IPAddress*>("LiteNetLib", "NetUtils", "ResolveAddress", hostStr));
}
// Autogenerated method: LiteNetLib.NetUtils.ResolveAddress
System::Net::IPAddress* LiteNetLib::NetUtils::ResolveAddress(::Il2CppString* hostStr, System::Net::Sockets::AddressFamily addressFamily) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::IPAddress*>("LiteNetLib", "NetUtils", "ResolveAddress", hostStr, addressFamily));
}
// Autogenerated method: LiteNetLib.NetUtils.ResolveAddresses
::Array<System::Net::IPAddress*>* LiteNetLib::NetUtils::ResolveAddresses(::Il2CppString* hostStr) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<System::Net::IPAddress*>*>("LiteNetLib", "NetUtils", "ResolveAddresses", hostStr));
}
// Autogenerated method: LiteNetLib.NetUtils.GetLocalIpList
System::Collections::Generic::List_1<::Il2CppString*>* LiteNetLib::NetUtils::GetLocalIpList(LiteNetLib::LocalAddrType addrType) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<::Il2CppString*>*>("LiteNetLib", "NetUtils", "GetLocalIpList", addrType));
}
// Autogenerated method: LiteNetLib.NetUtils.GetLocalIpList
void LiteNetLib::NetUtils::GetLocalIpList(System::Collections::Generic::IList_1<::Il2CppString*>* targetList, LiteNetLib::LocalAddrType addrType) {
  THROW_UNLESS(il2cpp_utils::RunMethod("LiteNetLib", "NetUtils", "GetLocalIpList", targetList, addrType));
}
// Autogenerated method: LiteNetLib.NetUtils.GetLocalIp
::Il2CppString* LiteNetLib::NetUtils::GetLocalIp(LiteNetLib::LocalAddrType addrType) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("LiteNetLib", "NetUtils", "GetLocalIp", addrType));
}
// Autogenerated method: LiteNetLib.NetUtils.PrintInterfaceInfos
void LiteNetLib::NetUtils::PrintInterfaceInfos() {
  THROW_UNLESS(il2cpp_utils::RunMethod("LiteNetLib", "NetUtils", "PrintInterfaceInfos"));
}
// Autogenerated method: LiteNetLib.NetUtils.RelativeSequenceNumber
int LiteNetLib::NetUtils::RelativeSequenceNumber(int number, int expected) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("LiteNetLib", "NetUtils", "RelativeSequenceNumber", number, expected));
}
// Autogenerated method: LiteNetLib.NetUtils..cctor
void LiteNetLib::NetUtils::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("LiteNetLib", "NetUtils", ".cctor"));
}
