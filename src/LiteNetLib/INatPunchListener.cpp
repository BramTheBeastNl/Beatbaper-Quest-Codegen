// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.INatPunchListener
#include "LiteNetLib/INatPunchListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NatAddressType
#include "LiteNetLib/NatAddressType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.INatPunchListener.OnNatIntroductionRequest
void LiteNetLib::INatPunchListener::LiteNetLib_INatPunchListener_OnNatIntroductionRequest(System::Net::IPEndPoint* localEndPoint, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("INatPunchListener").WithContext("OnNatIntroductionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnNatIntroductionRequest", {}, ::il2cpp_utils::ExtractTypes(localEndPoint, remoteEndPoint, token)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localEndPoint, remoteEndPoint, token);
}
// Autogenerated method: LiteNetLib.INatPunchListener.OnNatIntroductionSuccess
void LiteNetLib::INatPunchListener::LiteNetLib_INatPunchListener_OnNatIntroductionSuccess(System::Net::IPEndPoint* targetEndPoint, LiteNetLib::NatAddressType type, ::Il2CppString* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("INatPunchListener").WithContext("OnNatIntroductionSuccess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnNatIntroductionSuccess", {}, ::il2cpp_utils::ExtractTypes(targetEndPoint, type, token)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetEndPoint, type, token);
}
