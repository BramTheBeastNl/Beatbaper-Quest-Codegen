// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.ReliableChannel/PendingPacket
#include "LiteNetLib/ReliableChannel_PendingPacket.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.ReliableChannel/PendingPacket.Init
void LiteNetLib::ReliableChannel::PendingPacket::Init(LiteNetLib::NetPacket* packet) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Init", packet));
}
// Autogenerated method: LiteNetLib.ReliableChannel/PendingPacket.TrySend
void LiteNetLib::ReliableChannel::PendingPacket::TrySend(int64_t currentTime, LiteNetLib::NetPeer* peer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "TrySend", currentTime, peer));
}
// Autogenerated method: LiteNetLib.ReliableChannel/PendingPacket.Clear
bool LiteNetLib::ReliableChannel::PendingPacket::Clear(LiteNetLib::NetPeer* peer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Clear", peer));
}
// Autogenerated method: LiteNetLib.ReliableChannel/PendingPacket.ToString
::Il2CppString* LiteNetLib::ReliableChannel::PendingPacket::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
}
