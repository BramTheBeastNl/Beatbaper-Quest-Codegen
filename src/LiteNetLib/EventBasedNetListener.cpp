// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener
#include "LiteNetLib/EventBasedNetListener.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnPeerConnected
#include "LiteNetLib/EventBasedNetListener_OnPeerConnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnPeerDisconnected
#include "LiteNetLib/EventBasedNetListener_OnPeerDisconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkError
#include "LiteNetLib/EventBasedNetListener_OnNetworkError.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkReceive
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceive.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkReceiveUnconnected
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceiveUnconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkLatencyUpdate
#include "LiteNetLib/EventBasedNetListener_OnNetworkLatencyUpdate.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnConnectionRequest
#include "LiteNetLib/EventBasedNetListener_OnConnectionRequest.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnDeliveryEvent
#include "LiteNetLib/EventBasedNetListener_OnDeliveryEvent.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_PeerConnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_PeerConnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_PeerDisconnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_PeerDisconnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::add_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_NetworkErrorEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_NetworkErrorEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_NetworkReceiveEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_NetworkReceiveEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_NetworkReceiveUnconnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_NetworkReceiveUnconnectedEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::add_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_NetworkLatencyUpdateEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_NetworkLatencyUpdateEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::add_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_ConnectionRequestEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::remove_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_ConnectionRequestEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_DeliveryEvent
void LiteNetLib::EventBasedNetListener::add_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_DeliveryEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_DeliveryEvent
void LiteNetLib::EventBasedNetListener::remove_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_DeliveryEvent", value));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerConnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerConnectedEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearPeerConnectedEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerDisconnectedEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearPeerDisconnectedEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkErrorEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkErrorEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearNetworkErrorEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearNetworkReceiveEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveUnconnectedEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearNetworkReceiveUnconnectedEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkLatencyUpdateEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearNetworkLatencyUpdateEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::ClearConnectionRequestEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearConnectionRequestEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearDeliveryEvent
void LiteNetLib::EventBasedNetListener::ClearDeliveryEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearDeliveryEvent"));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerConnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", peer));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerDisconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", peer, disconnectInfo));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkError
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketErrorCode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", endPoint, socketErrorCode));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceive
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", peer, reader, deliveryMethod));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", remoteEndPoint, reader, messageType));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", peer, latency));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnConnectionRequest
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", request));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.IDeliveryEventListener.OnMessageDelivered
void LiteNetLib::EventBasedNetListener::LiteNetLib_IDeliveryEventListener_OnMessageDelivered(LiteNetLib::NetPeer* peer, ::Il2CppObject* userData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.IDeliveryEventListener.OnMessageDelivered", peer, userData));
}
// Autogenerated method: LiteNetLib.EventBasedNetListener..ctor
LiteNetLib::EventBasedNetListener* LiteNetLib::EventBasedNetListener::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<EventBasedNetListener*>());
}
