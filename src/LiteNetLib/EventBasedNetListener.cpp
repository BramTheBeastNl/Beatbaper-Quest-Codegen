// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.EventBasedNetListener
#include "LiteNetLib/EventBasedNetListener.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnPeerConnected
#include "LiteNetLib/EventBasedNetListener_OnPeerConnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnPeerDisconnected
#include "LiteNetLib/EventBasedNetListener_OnPeerDisconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkError
#include "LiteNetLib/EventBasedNetListener_OnNetworkError.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkReceive
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceive.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkReceiveUnconnected
#include "LiteNetLib/EventBasedNetListener_OnNetworkReceiveUnconnected.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnNetworkLatencyUpdate
#include "LiteNetLib/EventBasedNetListener_OnNetworkLatencyUpdate.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnConnectionRequest
#include "LiteNetLib/EventBasedNetListener_OnConnectionRequest.hpp"
// Including type: LiteNetLib.EventBasedNetListener/OnDeliveryEvent
#include "LiteNetLib/EventBasedNetListener_OnDeliveryEvent.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_PeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PeerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerConnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerConnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerConnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_PeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PeerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::add_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_PeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_PeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_PeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_PeerDisconnectedEvent(LiteNetLib::EventBasedNetListener::OnPeerDisconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_PeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_PeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::add_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_NetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_NetworkErrorEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkErrorEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkErrorEvent(LiteNetLib::EventBasedNetListener::OnNetworkError* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_NetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_NetworkErrorEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_NetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_NetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceive* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_NetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_NetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::add_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_NetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_NetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkReceiveUnconnectedEvent(LiteNetLib::EventBasedNetListener::OnNetworkReceiveUnconnected* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_NetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_NetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::add_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_NetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_NetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_NetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::remove_NetworkLatencyUpdateEvent(LiteNetLib::EventBasedNetListener::OnNetworkLatencyUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_NetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_NetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::add_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_ConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_ConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_ConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::remove_ConnectionRequestEvent(LiteNetLib::EventBasedNetListener::OnConnectionRequest* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_ConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_ConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.add_DeliveryEvent
void LiteNetLib::EventBasedNetListener::add_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("add_DeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_DeliveryEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.remove_DeliveryEvent
void LiteNetLib::EventBasedNetListener::remove_DeliveryEvent(LiteNetLib::EventBasedNetListener::OnDeliveryEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("remove_DeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_DeliveryEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerConnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearPeerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearPeerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearPeerDisconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearPeerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearPeerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearPeerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkErrorEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearNetworkErrorEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearNetworkErrorEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearNetworkReceiveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearNetworkReceiveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkReceiveUnconnectedEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkReceiveUnconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearNetworkReceiveUnconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearNetworkReceiveUnconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearNetworkLatencyUpdateEvent
void LiteNetLib::EventBasedNetListener::ClearNetworkLatencyUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearNetworkLatencyUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearNetworkLatencyUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearConnectionRequestEvent
void LiteNetLib::EventBasedNetListener::ClearConnectionRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearConnectionRequestEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearConnectionRequestEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.ClearDeliveryEvent
void LiteNetLib::EventBasedNetListener::ClearDeliveryEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("ClearDeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearDeliveryEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerConnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnPeerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnPeerDisconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnPeerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, disconnectInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkError
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnNetworkError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, socketErrorCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceive
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnNetworkReceive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, reader, messageType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, latency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, latency);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.INetEventListener.OnConnectionRequest
void LiteNetLib::EventBasedNetListener::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.INetEventListener.OnConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LiteNetLib.EventBasedNetListener.LiteNetLib.IDeliveryEventListener.OnMessageDelivered
void LiteNetLib::EventBasedNetListener::LiteNetLib_IDeliveryEventListener_OnMessageDelivered(LiteNetLib::NetPeer* peer, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("EventBasedNetListener").WithContext("LiteNetLib.IDeliveryEventListener.OnMessageDelivered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.IDeliveryEventListener.OnMessageDelivered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, userData);
}
