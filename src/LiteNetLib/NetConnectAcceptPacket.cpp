// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.NetConnectAcceptPacket
#include "LiteNetLib/NetConnectAcceptPacket.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Size
int LiteNetLib::NetConnectAcceptPacket::_get_Size() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetConnectAcceptPacket", "Size"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Size
void LiteNetLib::NetConnectAcceptPacket::_set_Size(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetConnectAcceptPacket", "Size", value));
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket..ctor
LiteNetLib::NetConnectAcceptPacket* LiteNetLib::NetConnectAcceptPacket::New_ctor(int64_t connectionId, uint8_t connectionNumber, bool isReusedPeer) {
  return THROW_UNLESS(il2cpp_utils::New<NetConnectAcceptPacket*>(connectionId, connectionNumber, isReusedPeer));
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket.FromData
LiteNetLib::NetConnectAcceptPacket* LiteNetLib::NetConnectAcceptPacket::FromData(LiteNetLib::NetPacket* packet) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<LiteNetLib::NetConnectAcceptPacket*>("LiteNetLib", "NetConnectAcceptPacket", "FromData", packet));
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket.Make
LiteNetLib::NetPacket* LiteNetLib::NetConnectAcceptPacket::Make(int64_t connectId, uint8_t connectNum, bool reusedPeer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<LiteNetLib::NetPacket*>("LiteNetLib", "NetConnectAcceptPacket", "Make", connectId, connectNum, reusedPeer));
}
