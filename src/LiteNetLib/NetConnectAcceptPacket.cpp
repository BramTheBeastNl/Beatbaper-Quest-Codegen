// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.NetConnectAcceptPacket
#include "LiteNetLib/NetConnectAcceptPacket.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 Size
int LiteNetLib::NetConnectAcceptPacket::_get_Size() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetConnectAcceptPacket").WithContext("_get_Size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetConnectAcceptPacket", "Size"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 Size
void LiteNetLib::NetConnectAcceptPacket::_set_Size(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetConnectAcceptPacket").WithContext("_set_Size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetConnectAcceptPacket", "Size", value));
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket..ctor
LiteNetLib::NetConnectAcceptPacket* LiteNetLib::NetConnectAcceptPacket::New_ctor(int64_t connectionId, uint8_t connectionNumber, bool isReusedPeer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetConnectAcceptPacket").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NetConnectAcceptPacket*>(connectionId, connectionNumber, isReusedPeer));
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket.FromData
LiteNetLib::NetConnectAcceptPacket* LiteNetLib::NetConnectAcceptPacket::FromData(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetConnectAcceptPacket").WithContext("FromData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("LiteNetLib", "NetConnectAcceptPacket", il2cpp_utils::NoArgClass<LiteNetLib::NetConnectAcceptPacket*>(), "FromData", {}, ::il2cpp_utils::ExtractTypes(packet)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetConnectAcceptPacket*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetConnectAcceptPacket.Make
LiteNetLib::NetPacket* LiteNetLib::NetConnectAcceptPacket::Make(int64_t connectId, uint8_t connectNum, bool reusedPeer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetConnectAcceptPacket").WithContext("Make");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("LiteNetLib", "NetConnectAcceptPacket", il2cpp_utils::NoArgClass<LiteNetLib::NetPacket*>(), "Make", {}, ::il2cpp_utils::ExtractTypes(connectId, connectNum, reusedPeer)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPacket*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectId, connectNum, reusedPeer);
}
