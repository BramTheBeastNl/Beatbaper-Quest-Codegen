// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.NetPeer/IncomingFragments
#include "LiteNetLib/NetPeer_IncomingFragments.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: LiteNetLib.NetPacketPool
#include "LiteNetLib/NetPacketPool.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
// Including type: LiteNetLib.BaseChannel
#include "LiteNetLib/BaseChannel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: LiteNetLib.NetStatistics
#include "LiteNetLib/NetStatistics.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.NetConnectAcceptPacket
#include "LiteNetLib/NetConnectAcceptPacket.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.DisconnectResult
#include "LiteNetLib/DisconnectResult.hpp"
// Including type: LiteNetLib.ShutdownResult
#include "LiteNetLib/ShutdownResult.hpp"
// Including type: LiteNetLib.ConnectRequestResult
#include "LiteNetLib/ConnectRequestResult.hpp"
// Including type: LiteNetLib.NetConnectRequestPacket
#include "LiteNetLib/NetConnectRequestPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MtuCheckDelay
int LiteNetLib::NetPeer::_get_MtuCheckDelay() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_get_MtuCheckDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetPeer", "MtuCheckDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MtuCheckDelay
void LiteNetLib::NetPeer::_set_MtuCheckDelay(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_set_MtuCheckDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetPeer", "MtuCheckDelay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxMtuCheckAttempts
int LiteNetLib::NetPeer::_get_MaxMtuCheckAttempts() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_get_MaxMtuCheckAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetPeer", "MaxMtuCheckAttempts"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxMtuCheckAttempts
void LiteNetLib::NetPeer::_set_MaxMtuCheckAttempts(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_set_MaxMtuCheckAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetPeer", "MaxMtuCheckAttempts", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ShutdownDelay
int LiteNetLib::NetPeer::_get_ShutdownDelay() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_get_ShutdownDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetPeer", "ShutdownDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ShutdownDelay
void LiteNetLib::NetPeer::_set_ShutdownDelay(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("_set_ShutdownDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetPeer", "ShutdownDelay", value));
}
// Autogenerated method: LiteNetLib.NetPeer.get_ConnectionNum
uint8_t LiteNetLib::NetPeer::get_ConnectionNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_ConnectionNum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint8_t>(), "get_ConnectionNum", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.set_ConnectionNum
void LiteNetLib::NetPeer::set_ConnectionNum(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("set_ConnectionNum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_ConnectionNum", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPeer.get_ConnectionState
LiteNetLib::ConnectionState LiteNetLib::NetPeer::get_ConnectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_ConnectionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<LiteNetLib::ConnectionState>(), "get_ConnectionState", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::ConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_ConnectTime
int64_t LiteNetLib::NetPeer::get_ConnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_ConnectTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int64_t>(), "get_ConnectTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_Ping
int LiteNetLib::NetPeer::get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_Ping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_Ping", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_Mtu
int LiteNetLib::NetPeer::get_Mtu() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_Mtu");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_Mtu", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_RemoteTimeDelta
int64_t LiteNetLib::NetPeer::get_RemoteTimeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_RemoteTimeDelta");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int64_t>(), "get_RemoteTimeDelta", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_RemoteUtcTime
System::DateTime LiteNetLib::NetPeer::get_RemoteUtcTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_RemoteUtcTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::DateTime>(), "get_RemoteUtcTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_TimeSinceLastPacket
int LiteNetLib::NetPeer::get_TimeSinceLastPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_TimeSinceLastPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_TimeSinceLastPacket", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.get_ResendDelay
double LiteNetLib::NetPeer::get_ResendDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("get_ResendDelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<double>(), "get_ResendDelay", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer..ctor
LiteNetLib::NetPeer* LiteNetLib::NetPeer::New_ctor(LiteNetLib::NetManager* netManager, System::Net::IPEndPoint* remoteEndPoint, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NetPeer*>(netManager, remoteEndPoint, id));
}
// Autogenerated method: LiteNetLib.NetPeer.SetMtu
void LiteNetLib::NetPeer::SetMtu(int mtuIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SetMtu");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetMtu", {}, ::il2cpp_utils::ExtractTypes(mtuIdx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mtuIdx);
}
// Autogenerated method: LiteNetLib.NetPeer.GetPacketsCountInReliableQueue
int LiteNetLib::NetPeer::GetPacketsCountInReliableQueue(uint8_t channelNumber, bool ordered) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("GetPacketsCountInReliableQueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetPacketsCountInReliableQueue", {}, ::il2cpp_utils::ExtractTypes(channelNumber, ordered)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, channelNumber, ordered);
}
// Autogenerated method: LiteNetLib.NetPeer.CreateChannel
LiteNetLib::BaseChannel* LiteNetLib::NetPeer::CreateChannel(uint8_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("CreateChannel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<LiteNetLib::BaseChannel*>(), "CreateChannel", {}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::BaseChannel*, false>(this, ___internal__method, idx);
}
// Autogenerated method: LiteNetLib.NetPeer..ctor
LiteNetLib::NetPeer* LiteNetLib::NetPeer::New_ctor(LiteNetLib::NetManager* netManager, System::Net::IPEndPoint* remoteEndPoint, int id, uint8_t connectNum, LiteNetLib::Utils::NetDataWriter* connectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NetPeer*>(netManager, remoteEndPoint, id, connectNum, connectData));
}
// Autogenerated method: LiteNetLib.NetPeer..ctor
LiteNetLib::NetPeer* LiteNetLib::NetPeer::New_ctor(LiteNetLib::NetManager* netManager, System::Net::IPEndPoint* remoteEndPoint, int id, int64_t connectId, uint8_t connectNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NetPeer*>(netManager, remoteEndPoint, id, connectId, connectNum));
}
// Autogenerated method: LiteNetLib.NetPeer.Reject
void LiteNetLib::NetPeer::Reject(int64_t connectionId, uint8_t connectionNumber, ::Array<uint8_t>* data, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Reject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Reject", {}, ::il2cpp_utils::ExtractTypes(connectionId, connectionNumber, data, start, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectionId, connectionNumber, data, start, length);
}
// Autogenerated method: LiteNetLib.NetPeer.ProcessConnectAccept
bool LiteNetLib::NetPeer::ProcessConnectAccept(LiteNetLib::NetConnectAcceptPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("ProcessConnectAccept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "ProcessConnectAccept", {}, ::il2cpp_utils::ExtractTypes(packet)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetPeer.GetMaxSinglePacketSize
int LiteNetLib::NetPeer::GetMaxSinglePacketSize(LiteNetLib::DeliveryMethod options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("GetMaxSinglePacketSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetMaxSinglePacketSize", {}, ::il2cpp_utils::ExtractTypes(options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, options);
}
// Autogenerated method: LiteNetLib.NetPeer.SendWithDeliveryEvent
void LiteNetLib::NetPeer::SendWithDeliveryEvent(::Array<uint8_t>* data, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendWithDeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendWithDeliveryEvent", {}, ::il2cpp_utils::ExtractTypes(data, channelNumber, deliveryMethod, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channelNumber, deliveryMethod, userData);
}
// Autogenerated method: LiteNetLib.NetPeer.SendWithDeliveryEvent
void LiteNetLib::NetPeer::SendWithDeliveryEvent(::Array<uint8_t>* data, int start, int length, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendWithDeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendWithDeliveryEvent", {}, ::il2cpp_utils::ExtractTypes(data, start, length, channelNumber, deliveryMethod, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, start, length, channelNumber, deliveryMethod, userData);
}
// Autogenerated method: LiteNetLib.NetPeer.SendWithDeliveryEvent
void LiteNetLib::NetPeer::SendWithDeliveryEvent(LiteNetLib::Utils::NetDataWriter* dataWriter, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendWithDeliveryEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendWithDeliveryEvent", {}, ::il2cpp_utils::ExtractTypes(dataWriter, channelNumber, deliveryMethod, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataWriter, channelNumber, deliveryMethod, userData);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(::Array<uint8_t>* data, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(data, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, deliveryMethod);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(LiteNetLib::Utils::NetDataWriter* dataWriter, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(dataWriter, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataWriter, deliveryMethod);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(::Array<uint8_t>* data, int start, int length, LiteNetLib::DeliveryMethod options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(data, start, length, options)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, start, length, options);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(::Array<uint8_t>* data, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(data, channelNumber, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channelNumber, deliveryMethod);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(LiteNetLib::Utils::NetDataWriter* dataWriter, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(dataWriter, channelNumber, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataWriter, channelNumber, deliveryMethod);
}
// Autogenerated method: LiteNetLib.NetPeer.Send
void LiteNetLib::NetPeer::Send(::Array<uint8_t>* data, int start, int length, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Send", {}, ::il2cpp_utils::ExtractTypes(data, start, length, channelNumber, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, start, length, channelNumber, deliveryMethod);
}
// Autogenerated method: LiteNetLib.NetPeer.SendInternal
void LiteNetLib::NetPeer::SendInternal(::Array<uint8_t>* data, int start, int length, uint8_t channelNumber, LiteNetLib::DeliveryMethod deliveryMethod, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendInternal", {}, ::il2cpp_utils::ExtractTypes(data, start, length, channelNumber, deliveryMethod, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, start, length, channelNumber, deliveryMethod, userData);
}
// Autogenerated method: LiteNetLib.NetPeer.Disconnect
void LiteNetLib::NetPeer::Disconnect(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Disconnect", {}, ::il2cpp_utils::ExtractTypes(data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: LiteNetLib.NetPeer.Disconnect
void LiteNetLib::NetPeer::Disconnect(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Disconnect", {}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LiteNetLib.NetPeer.Disconnect
void LiteNetLib::NetPeer::Disconnect(::Array<uint8_t>* data, int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Disconnect", {}, ::il2cpp_utils::ExtractTypes(data, start, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, start, count);
}
// Autogenerated method: LiteNetLib.NetPeer.Disconnect
void LiteNetLib::NetPeer::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Disconnect", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.ProcessDisconnect
LiteNetLib::DisconnectResult LiteNetLib::NetPeer::ProcessDisconnect(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("ProcessDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<LiteNetLib::DisconnectResult>(), "ProcessDisconnect", {}, ::il2cpp_utils::ExtractTypes(packet)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::DisconnectResult, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetPeer.Shutdown
LiteNetLib::ShutdownResult LiteNetLib::NetPeer::Shutdown(::Array<uint8_t>* data, int start, int length, bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Shutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<LiteNetLib::ShutdownResult>(), "Shutdown", {}, ::il2cpp_utils::ExtractTypes(data, start, length, force)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::ShutdownResult, false>(this, ___internal__method, data, start, length, force);
}
// Autogenerated method: LiteNetLib.NetPeer.UpdateRoundTripTime
void LiteNetLib::NetPeer::UpdateRoundTripTime(int roundTripTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("UpdateRoundTripTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateRoundTripTime", {}, ::il2cpp_utils::ExtractTypes(roundTripTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, roundTripTime);
}
// Autogenerated method: LiteNetLib.NetPeer.AddReliablePacket
void LiteNetLib::NetPeer::AddReliablePacket(LiteNetLib::DeliveryMethod method, LiteNetLib::NetPacket* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("AddReliablePacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AddReliablePacket", {}, ::il2cpp_utils::ExtractTypes(method, p)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, method, p);
}
// Autogenerated method: LiteNetLib.NetPeer.ProcessMtuPacket
void LiteNetLib::NetPeer::ProcessMtuPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("ProcessMtuPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ProcessMtuPacket", {}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetPeer.UpdateMtuLogic
void LiteNetLib::NetPeer::UpdateMtuLogic(int deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("UpdateMtuLogic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateMtuLogic", {}, ::il2cpp_utils::ExtractTypes(deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: LiteNetLib.NetPeer.ProcessConnectRequest
LiteNetLib::ConnectRequestResult LiteNetLib::NetPeer::ProcessConnectRequest(LiteNetLib::NetConnectRequestPacket* connRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("ProcessConnectRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<LiteNetLib::ConnectRequestResult>(), "ProcessConnectRequest", {}, ::il2cpp_utils::ExtractTypes(connRequest)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::ConnectRequestResult, false>(this, ___internal__method, connRequest);
}
// Autogenerated method: LiteNetLib.NetPeer.ProcessPacket
void LiteNetLib::NetPeer::ProcessPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("ProcessPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ProcessPacket", {}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetPeer.SendMerged
void LiteNetLib::NetPeer::SendMerged() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendMerged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendMerged", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.SendUserData
void LiteNetLib::NetPeer::SendUserData(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("SendUserData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SendUserData", {}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.NetPeer.Flush
void LiteNetLib::NetPeer::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Flush", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPeer.Update
void LiteNetLib::NetPeer::Update(int deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes(deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: LiteNetLib.NetPeer.RecycleAndDeliver
void LiteNetLib::NetPeer::RecycleAndDeliver(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPeer").WithContext("RecycleAndDeliver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "RecycleAndDeliver", {}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
