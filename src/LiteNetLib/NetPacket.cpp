// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LastProperty
int LiteNetLib::NetPacket::_get_LastProperty() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("_get_LastProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NetPacket", "LastProperty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LastProperty
void LiteNetLib::NetPacket::_set_LastProperty(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("_set_LastProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NetPacket", "LastProperty", value));
}
// Autogenerated method: LiteNetLib.NetPacket.get_Property
LiteNetLib::PacketProperty LiteNetLib::NetPacket::get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_Property");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Property", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::PacketProperty, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_Property
void LiteNetLib::NetPacket::set_Property(LiteNetLib::PacketProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_Property");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Property", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_ConnectionNumber
uint8_t LiteNetLib::NetPacket::get_ConnectionNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_ConnectionNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ConnectionNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_ConnectionNumber
void LiteNetLib::NetPacket::set_ConnectionNumber(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_ConnectionNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ConnectionNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_Sequence
uint16_t LiteNetLib::NetPacket::get_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_Sequence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Sequence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_Sequence
void LiteNetLib::NetPacket::set_Sequence(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_Sequence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Sequence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_IsFragmented
bool LiteNetLib::NetPacket::get_IsFragmented() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_IsFragmented");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsFragmented", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.MarkFragmented
void LiteNetLib::NetPacket::MarkFragmented() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("MarkFragmented");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkFragmented", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.get_ChannelId
uint8_t LiteNetLib::NetPacket::get_ChannelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_ChannelId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ChannelId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_ChannelId
void LiteNetLib::NetPacket::set_ChannelId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_ChannelId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ChannelId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_FragmentId
uint16_t LiteNetLib::NetPacket::get_FragmentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_FragmentId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FragmentId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_FragmentId
void LiteNetLib::NetPacket::set_FragmentId(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_FragmentId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_FragmentId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_FragmentPart
uint16_t LiteNetLib::NetPacket::get_FragmentPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_FragmentPart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FragmentPart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_FragmentPart
void LiteNetLib::NetPacket::set_FragmentPart(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_FragmentPart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_FragmentPart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.get_FragmentsTotal
uint16_t LiteNetLib::NetPacket::get_FragmentsTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("get_FragmentsTotal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FragmentsTotal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.set_FragmentsTotal
void LiteNetLib::NetPacket::set_FragmentsTotal(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("set_FragmentsTotal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_FragmentsTotal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLib.NetPacket.GetHeaderSize
int LiteNetLib::NetPacket::GetHeaderSize(LiteNetLib::PacketProperty property) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("GetHeaderSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("LiteNetLib", "NetPacket", "GetHeaderSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(property)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, property);
}
// Autogenerated method: LiteNetLib.NetPacket.GetHeaderSize
int LiteNetLib::NetPacket::GetHeaderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("GetHeaderSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHeaderSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NetPacket.FromBytes
bool LiteNetLib::NetPacket::FromBytes(::Array<uint8_t>* data, int start, int packetSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext("FromBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FromBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, start, packetSize)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, start, packetSize);
}
// Autogenerated method: LiteNetLib.NetPacket..cctor
void LiteNetLib::NetPacket::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NetPacket").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("LiteNetLib", "NetPacket", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
