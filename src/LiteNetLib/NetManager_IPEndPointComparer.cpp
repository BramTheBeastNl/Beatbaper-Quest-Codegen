// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLib.NetManager/IPEndPointComparer
#include "LiteNetLib/NetManager_IPEndPointComparer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLib.NetManager/IPEndPointComparer.Equals
bool LiteNetLib::NetManager::IPEndPointComparer::Equals(System::Net::IPEndPoint* x, System::Net::IPEndPoint* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("IPEndPointComparer").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: LiteNetLib.NetManager/IPEndPointComparer.GetHashCode
int LiteNetLib::NetManager::IPEndPointComparer::GetHashCode(System::Net::IPEndPoint* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("IPEndPointComparer").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: LiteNetLib.NetManager/IPEndPointComparer..ctor
LiteNetLib::NetManager::IPEndPointComparer* LiteNetLib::NetManager::IPEndPointComparer::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("IPEndPointComparer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NetManager::IPEndPointComparer*>());
}
