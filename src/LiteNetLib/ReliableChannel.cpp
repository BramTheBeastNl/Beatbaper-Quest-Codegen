// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.ReliableChannel
#include "LiteNetLib/ReliableChannel.hpp"
// Including type: LiteNetLib.ReliableChannel/PendingPacket
#include "LiteNetLib/ReliableChannel_PendingPacket.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BitsInByte
int LiteNetLib::ReliableChannel::_get_BitsInByte() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "ReliableChannel", "BitsInByte"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BitsInByte
void LiteNetLib::ReliableChannel::_set_BitsInByte(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ReliableChannel", "BitsInByte", value));
}
// Autogenerated method: LiteNetLib.ReliableChannel..ctor
LiteNetLib::ReliableChannel* LiteNetLib::ReliableChannel::New_ctor(LiteNetLib::NetPeer* peer, bool ordered, uint8_t id) {
  return THROW_UNLESS(il2cpp_utils::New<ReliableChannel*>(peer, ordered, id));
}
// Autogenerated method: LiteNetLib.ReliableChannel.ProcessAck
void LiteNetLib::ReliableChannel::ProcessAck(LiteNetLib::NetPacket* packet) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessAck", packet));
}
// Autogenerated method: LiteNetLib.ReliableChannel.SendNextPackets
void LiteNetLib::ReliableChannel::SendNextPackets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendNextPackets"));
}
// Autogenerated method: LiteNetLib.ReliableChannel.ProcessPacket
bool LiteNetLib::ReliableChannel::ProcessPacket(LiteNetLib::NetPacket* packet) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessPacket", packet));
}
