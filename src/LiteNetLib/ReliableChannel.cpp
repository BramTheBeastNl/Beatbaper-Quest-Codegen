// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.ReliableChannel
#include "LiteNetLib/ReliableChannel.hpp"
// Including type: LiteNetLib.ReliableChannel/PendingPacket
#include "LiteNetLib/ReliableChannel_PendingPacket.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 BitsInByte
int LiteNetLib::ReliableChannel::_get_BitsInByte() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("ReliableChannel").WithContext("_get_BitsInByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "ReliableChannel", "BitsInByte"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 BitsInByte
void LiteNetLib::ReliableChannel::_set_BitsInByte(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("ReliableChannel").WithContext("_set_BitsInByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "ReliableChannel", "BitsInByte", value));
}
// Autogenerated method: LiteNetLib.ReliableChannel.ProcessAck
void LiteNetLib::ReliableChannel::ProcessAck(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("ReliableChannel").WithContext("ProcessAck");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessAck", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: LiteNetLib.ReliableChannel.SendNextPackets
void LiteNetLib::ReliableChannel::SendNextPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("ReliableChannel").WithContext("SendNextPackets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNextPackets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.ReliableChannel.ProcessPacket
bool LiteNetLib::ReliableChannel::ProcessPacket(LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("ReliableChannel").WithContext("ProcessPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet);
}
