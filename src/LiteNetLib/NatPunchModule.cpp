// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLib.NatPunchModule
#include "LiteNetLib/NatPunchModule.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.NatPunchModule/NatIntroduceRequestPacket
#include "LiteNetLib/NatPunchModule_NatIntroduceRequestPacket.hpp"
// Including type: LiteNetLib.NatPunchModule/NatIntroduceResponsePacket
#include "LiteNetLib/NatPunchModule_NatIntroduceResponsePacket.hpp"
// Including type: LiteNetLib.NatPunchModule/NatPunchPacket
#include "LiteNetLib/NatPunchModule_NatPunchPacket.hpp"
// Including type: LiteNetLib.NetSocket
#include "LiteNetLib/NetSocket.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: LiteNetLib.Utils.NetPacketProcessor
#include "LiteNetLib/Utils/NetPacketProcessor.hpp"
// Including type: LiteNetLib.INatPunchListener
#include "LiteNetLib/INatPunchListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPacket
#include "LiteNetLib/NetPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxTokenLength
int LiteNetLib::NatPunchModule::_get_MaxTokenLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("_get_MaxTokenLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LiteNetLib", "NatPunchModule", "MaxTokenLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxTokenLength
void LiteNetLib::NatPunchModule::_set_MaxTokenLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("_set_MaxTokenLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LiteNetLib", "NatPunchModule", "MaxTokenLength", value));
}
// Autogenerated method: LiteNetLib.NatPunchModule.ProcessMessage
void LiteNetLib::NatPunchModule::ProcessMessage(System::Net::IPEndPoint* senderEndPoint, LiteNetLib::NetPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("ProcessMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(senderEndPoint, packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, senderEndPoint, packet);
}
// Autogenerated method: LiteNetLib.NatPunchModule.Init
void LiteNetLib::NatPunchModule::Init(LiteNetLib::INatPunchListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: LiteNetLib.NatPunchModule.NatIntroduce
void LiteNetLib::NatPunchModule::NatIntroduce(System::Net::IPEndPoint* hostInternal, System::Net::IPEndPoint* hostExternal, System::Net::IPEndPoint* clientInternal, System::Net::IPEndPoint* clientExternal, ::Il2CppString* additionalInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("NatIntroduce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NatIntroduce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostInternal, hostExternal, clientInternal, clientExternal, additionalInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hostInternal, hostExternal, clientInternal, clientExternal, additionalInfo);
}
// Autogenerated method: LiteNetLib.NatPunchModule.PollEvents
void LiteNetLib::NatPunchModule::PollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("PollEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLib.NatPunchModule.SendNatIntroduceRequest
void LiteNetLib::NatPunchModule::SendNatIntroduceRequest(::Il2CppString* host, int port, ::Il2CppString* additionalInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("SendNatIntroduceRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNatIntroduceRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host, port, additionalInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, host, port, additionalInfo);
}
// Autogenerated method: LiteNetLib.NatPunchModule.SendNatIntroduceRequest
void LiteNetLib::NatPunchModule::SendNatIntroduceRequest(System::Net::IPEndPoint* masterServerEndPoint, ::Il2CppString* additionalInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("SendNatIntroduceRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNatIntroduceRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(masterServerEndPoint, additionalInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, masterServerEndPoint, additionalInfo);
}
// Autogenerated method: LiteNetLib.NatPunchModule.OnNatIntroductionRequest
void LiteNetLib::NatPunchModule::OnNatIntroductionRequest(LiteNetLib::NatPunchModule::NatIntroduceRequestPacket* req, System::Net::IPEndPoint* senderEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("OnNatIntroductionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNatIntroductionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(req, senderEndPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, req, senderEndPoint);
}
// Autogenerated method: LiteNetLib.NatPunchModule.OnNatIntroductionResponse
void LiteNetLib::NatPunchModule::OnNatIntroductionResponse(LiteNetLib::NatPunchModule::NatIntroduceResponsePacket* req) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("OnNatIntroductionResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNatIntroductionResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(req)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, req);
}
// Autogenerated method: LiteNetLib.NatPunchModule.OnNatPunch
void LiteNetLib::NatPunchModule::OnNatPunch(LiteNetLib::NatPunchModule::NatPunchPacket* req, System::Net::IPEndPoint* senderEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("LiteNetLib").WithContext("NatPunchModule").WithContext("OnNatPunch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNatPunch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(req, senderEndPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, req, senderEndPoint);
}
