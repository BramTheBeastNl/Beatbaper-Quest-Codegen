// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors None
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors None
void System::Net::Security::SslPolicyErrors::_set_None(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::SslPolicyErrors::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::Invoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.BeginInvoke
::System::IAsyncResult* System::Net::Security::LocalCertSelectionCallback::BeginInvoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, callback, object);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.EndInvoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& System::Net::Security::SslStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.IMonoSslStream impl
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::IMonoSslStream*& System::Net::Security::SslStream::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::IMonoSslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslStream.get_Impl
::Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.CreateMonoSslStream
::Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::CreateMonoSslStream(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsProvider* provider, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::CreateMonoSslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SslStream", "CreateMonoSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, innerStream, leaveInnerStreamOpen, provider, settings);
}
// Autogenerated method: System.Net.Security.SslStream.AuthenticateAsServer
void System::Net::Security::SslStream::AuthenticateAsServer(::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::AuthenticateAsServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificateRequired), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: System.Net.Security.SslStream.CheckDisposed
void System::Net::Security::SslStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_IsAuthenticated
bool System::Net::Security::SslStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanSeek
bool System::Net::Security::SslStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanRead
bool System::Net::Security::SslStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanWrite
bool System::Net::Security::SslStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_ReadTimeout
int System::Net::Security::SslStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_WriteTimeout
int System::Net::Security::SslStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Length
int64_t System::Net::Security::SslStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Position
int64_t System::Net::Security::SslStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_Position
void System::Net::Security::SslStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.SetLength
void System::Net::Security::SslStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.Seek
int64_t System::Net::Security::SslStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Security.SslStream.Flush
void System::Net::Security::SslStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.Dispose
void System::Net::Security::SslStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Security.SslStream.Read
int System::Net::Security::SslStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.Write
void System::Net::Security::SslStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.BeginRead
::System::IAsyncResult* System::Net::Security::SslStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndRead
int System::Net::Security::SslStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Security.SslStream.BeginWrite
::System::IAsyncResult* System::Net::Security::SslStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndWrite
void System::Net::Security::SslStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.DuplicateAddressDetectionState
#include "System/Net/NetworkInformation/DuplicateAddressDetectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Invalid
::System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Invalid
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Invalid(::System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Tentative
::System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Tentative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Tentative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Tentative"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Tentative
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Tentative(::System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Tentative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Tentative", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Duplicate
::System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Duplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Duplicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Duplicate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Duplicate
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Duplicate(::System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Duplicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Duplicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Deprecated
::System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Deprecated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Deprecated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Deprecated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Deprecated
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Deprecated(::System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Deprecated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Deprecated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Preferred
::System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Preferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Preferred");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Preferred"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Preferred
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Preferred(::System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Preferred");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Preferred", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::DuplicateAddressDetectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::DuplicateAddressDetectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformation
#include "System/Net/NetworkInformation/GatewayIPAddressInformation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformation
#include "System/Net/NetworkInformation/GatewayIPAddressInformation.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.Net.NetworkInformation.GatewayIPAddressInformation> addresses
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::System::Net::NetworkInformation::GatewayIPAddressInformation*>*& System::Net::NetworkInformation::GatewayIPAddressInformationCollection::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::System::Net::NetworkInformation::GatewayIPAddressInformation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.get_Count
int System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.get_IsReadOnly
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::CopyTo(::ArrayW<::System::Net::NetworkInformation::GatewayIPAddressInformation*> array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Add(::System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.InternalAdd
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::InternalAdd(::System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Contains(::System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Net::NetworkInformation::GatewayIPAddressInformation*>* System::Net::NetworkInformation::GatewayIPAddressInformationCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Net::NetworkInformation::GatewayIPAddressInformation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::NetworkInformation::GatewayIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Remove(::System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.Net.IPAddress> addresses
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::System::Net::IPAddress*>*& System::Net::NetworkInformation::IPAddressCollection::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::System::Net::IPAddress*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.get_Count
int System::Net::NetworkInformation::IPAddressCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.get_IsReadOnly
bool System::Net::NetworkInformation::IPAddressCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.CopyTo
void System::Net::NetworkInformation::IPAddressCollection::CopyTo(::ArrayW<::System::Net::IPAddress*> array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Add
void System::Net::NetworkInformation::IPAddressCollection::Add(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.InternalAdd
void System::Net::NetworkInformation::IPAddressCollection::InternalAdd(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Contains
bool System::Net::NetworkInformation::IPAddressCollection::Contains(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::NetworkInformation::IPAddressCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Net::IPAddress*>* System::Net::NetworkInformation::IPAddressCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Net::IPAddress*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Remove
bool System::Net::NetworkInformation::IPAddressCollection::Remove(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Clear
void System::Net::NetworkInformation::IPAddressCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPAddressInformation
#include "System/Net/NetworkInformation/IPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.IPAddressInformation.get_Address
::System::Net::IPAddress* System::Net::NetworkInformation::IPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPGlobalProperties
#include "System/Net/NetworkInformation/IPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
bool System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
void System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField", value));
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_PlatformNeedsLibCWorkaround
bool System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "get_PlatformNeedsLibCWorkaround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
::System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "GetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.InternalGetIPGlobalProperties
::System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "InternalGetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.IPInterfaceProperties.get_UnicastAddresses
::System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::IPInterfaceProperties::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPInterfaceProperties::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPInterfaceProperties.get_GatewayAddresses
::System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::IPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/IPv4InterfaceStatistics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInformationException
#include "System/Net/NetworkInformation/NetworkInformationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceType
#include "System/Net/NetworkInformation/NetworkInterfaceType.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_Name
::StringW System::Net::NetworkInformation::NetworkInterface::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterface::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_OperationalStatus
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::NetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_NetworkInterfaceType
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterface::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterface::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::NetworkInterface::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterface::GetAllNetworkInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterface", "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.GetIPProperties
::System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::NetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceComponent
#include "System/Net/NetworkInformation/NetworkInterfaceComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
::System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4(::System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
::System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6(::System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::NetworkInterfaceComponent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Up
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Up"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Up
void System::Net::NetworkInformation::OperationalStatus::_set_Up(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Down
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Down"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Down
void System::Net::NetworkInformation::OperationalStatus::_set_Down(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Testing
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Testing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_Testing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Testing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Testing
void System::Net::NetworkInformation::OperationalStatus::_set_Testing(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_Testing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Testing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Unknown
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Unknown
void System::Net::NetworkInformation::OperationalStatus::_set_Unknown(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Dormant
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Dormant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_Dormant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Dormant"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Dormant
void System::Net::NetworkInformation::OperationalStatus::_set_Dormant(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_Dormant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Dormant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus NotPresent
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_NotPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_NotPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "NotPresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus NotPresent
void System::Net::NetworkInformation::OperationalStatus::_set_NotPresent(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_NotPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "NotPresent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus LowerLayerDown
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_LowerLayerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_get_LowerLayerDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "LowerLayerDown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus LowerLayerDown
void System::Net::NetworkInformation::OperationalStatus::_set_LowerLayerDown(::System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::_set_LowerLayerDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "LowerLayerDown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::OperationalStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::OperationalStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.PrefixOrigin
#include "System/Net/NetworkInformation/PrefixOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Other
::System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Other
void System::Net::NetworkInformation::PrefixOrigin::_set_Other(::System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Manual
::System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Manual
void System::Net::NetworkInformation::PrefixOrigin::_set_Manual(::System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin WellKnown
::System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_WellKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_get_WellKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "WellKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin WellKnown
void System::Net::NetworkInformation::PrefixOrigin::_set_WellKnown(::System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_set_WellKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "WellKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Dhcp
::System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Dhcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_get_Dhcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Dhcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Dhcp
void System::Net::NetworkInformation::PrefixOrigin::_set_Dhcp(::System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_set_Dhcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Dhcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin RouterAdvertisement
::System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_RouterAdvertisement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_get_RouterAdvertisement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "RouterAdvertisement"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin RouterAdvertisement
void System::Net::NetworkInformation::PrefixOrigin::_set_RouterAdvertisement(::System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::_set_RouterAdvertisement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "RouterAdvertisement", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::PrefixOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::PrefixOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.SuffixOrigin
#include "System/Net/NetworkInformation/SuffixOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Other
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Other
void System::Net::NetworkInformation::SuffixOrigin::_set_Other(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Manual
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Manual
void System::Net::NetworkInformation::SuffixOrigin::_set_Manual(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin WellKnown
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_WellKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_WellKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "WellKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin WellKnown
void System::Net::NetworkInformation::SuffixOrigin::_set_WellKnown(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_WellKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "WellKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin OriginDhcp
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_OriginDhcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_OriginDhcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "OriginDhcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin OriginDhcp
void System::Net::NetworkInformation::SuffixOrigin::_set_OriginDhcp(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_OriginDhcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "OriginDhcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin LinkLayerAddress
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_LinkLayerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_LinkLayerAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "LinkLayerAddress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin LinkLayerAddress
void System::Net::NetworkInformation::SuffixOrigin::_set_LinkLayerAddress(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_LinkLayerAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "LinkLayerAddress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Random
::System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Random"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Random
void System::Net::NetworkInformation::SuffixOrigin::_set_Random(::System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Random", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::SuffixOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SuffixOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.SystemGatewayIPAddressInformation
#include "System/Net/NetworkInformation/SystemGatewayIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress address
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& System::Net::NetworkInformation::SystemGatewayIPAddressInformation::dyn_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemGatewayIPAddressInformation::dyn_address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "address"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.SystemGatewayIPAddressInformation.ToGatewayIpAddressInformationCollection
::System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection(::System::Net::NetworkInformation::IPAddressCollection* addresses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemGatewayIPAddressInformation", "ToGatewayIpAddressInformationCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addresses)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, addresses);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformation
#include "System/Net/NetworkInformation/UnicastIPAddressInformation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformation
#include "System/Net/NetworkInformation/UnicastIPAddressInformation.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.Net.NetworkInformation.UnicastIPAddressInformation> addresses
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::System::Net::NetworkInformation::UnicastIPAddressInformation*>*& System::Net::NetworkInformation::UnicastIPAddressInformationCollection::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::System::Net::NetworkInformation::UnicastIPAddressInformation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.get_Count
int System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.get_IsReadOnly
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::CopyTo(::ArrayW<::System::Net::NetworkInformation::UnicastIPAddressInformation*> array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Add(::System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.InternalAdd
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::InternalAdd(::System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Contains(::System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::NetworkInformation::UnicastIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Net::NetworkInformation::UnicastIPAddressInformation*>* System::Net::NetworkInformation::UnicastIPAddressInformationCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Net::NetworkInformation::UnicastIPAddressInformation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Remove(::System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceType
#include "System/Net/NetworkInformation/NetworkInterfaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Unknown
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Unknown
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Unknown(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType TokenRing
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_TokenRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_TokenRing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "TokenRing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType TokenRing
void System::Net::NetworkInformation::NetworkInterfaceType::_set_TokenRing(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_TokenRing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "TokenRing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Fddi
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Fddi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Fddi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Fddi"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Fddi
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Fddi(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Fddi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Fddi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType BasicIsdn
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_BasicIsdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_BasicIsdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "BasicIsdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType BasicIsdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_BasicIsdn(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_BasicIsdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "BasicIsdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType PrimaryIsdn
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_PrimaryIsdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_PrimaryIsdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "PrimaryIsdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType PrimaryIsdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_PrimaryIsdn(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_PrimaryIsdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "PrimaryIsdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ppp
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ppp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Ppp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ppp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ppp
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ppp(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Ppp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ppp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Loopback
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Loopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Loopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Loopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Loopback
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Loopback(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Loopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Loopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet3Megabit
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet3Megabit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet3Megabit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet3Megabit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet3Megabit
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet3Megabit(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet3Megabit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet3Megabit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Slip
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Slip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Slip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Slip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Slip
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Slip(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Slip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Slip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Atm
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Atm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Atm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Atm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Atm
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Atm(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Atm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Atm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType GenericModem
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_GenericModem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_GenericModem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "GenericModem"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType GenericModem
void System::Net::NetworkInformation::NetworkInterfaceType::_set_GenericModem(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_GenericModem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "GenericModem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetT
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetT"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetT
void System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetT(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Isdn
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Isdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Isdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Isdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Isdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Isdn(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Isdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Isdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetFx
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetFx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetFx"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetFx
void System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetFx(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetFx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetFx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wireless80211
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wireless80211() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Wireless80211");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wireless80211"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wireless80211
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wireless80211(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Wireless80211");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wireless80211", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType AsymmetricDsl
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_AsymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_AsymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "AsymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType AsymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_AsymmetricDsl(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_AsymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "AsymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType RateAdaptDsl
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_RateAdaptDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_RateAdaptDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "RateAdaptDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType RateAdaptDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_RateAdaptDsl(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_RateAdaptDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "RateAdaptDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType SymmetricDsl
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_SymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_SymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "SymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType SymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_SymmetricDsl(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_SymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "SymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType VeryHighSpeedDsl
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_VeryHighSpeedDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_VeryHighSpeedDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "VeryHighSpeedDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType VeryHighSpeedDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_VeryHighSpeedDsl(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_VeryHighSpeedDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "VeryHighSpeedDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType IPOverAtm
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_IPOverAtm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_IPOverAtm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "IPOverAtm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType IPOverAtm
void System::Net::NetworkInformation::NetworkInterfaceType::_set_IPOverAtm(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_IPOverAtm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "IPOverAtm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType GigabitEthernet
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_GigabitEthernet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_GigabitEthernet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "GigabitEthernet"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType GigabitEthernet
void System::Net::NetworkInformation::NetworkInterfaceType::_set_GigabitEthernet(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_GigabitEthernet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "GigabitEthernet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Tunnel
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Tunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Tunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Tunnel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Tunnel
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Tunnel(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Tunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Tunnel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType MultiRateSymmetricDsl
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_MultiRateSymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_MultiRateSymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "MultiRateSymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType MultiRateSymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_MultiRateSymmetricDsl(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_MultiRateSymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "MultiRateSymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType HighPerformanceSerialBus
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_HighPerformanceSerialBus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_HighPerformanceSerialBus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "HighPerformanceSerialBus"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType HighPerformanceSerialBus
void System::Net::NetworkInformation::NetworkInterfaceType::_set_HighPerformanceSerialBus(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_HighPerformanceSerialBus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "HighPerformanceSerialBus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wman
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Wman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wman"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wman
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wman(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Wman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wman", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp2
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp2"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp2
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp2(::System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::NetworkInterfaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetBiosNodeType
#include "System/Net/NetworkInformation/NetBiosNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
void System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
void System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
void System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
void System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
void System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::NetBiosNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.CommonUnixIPGlobalProperties
#include "System/Net/NetworkInformation/CommonUnixIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.getdomainname
int System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname(::ArrayW<uint8_t> name, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "CommonUnixIPGlobalProperties", "getdomainname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, len);
}
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixIPGlobalProperties
#include "System/Net/NetworkInformation/UnixIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties
#include "System/Net/NetworkInformation/UnixNoLibCIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MibIPGlobalProperties
#include "System/Net/NetworkInformation/MibIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] wsChars
::ArrayW<::Il2CppChar> System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] wsChars
void System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String StatisticsFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatisticsFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String StatisticsFileIPv6
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFileIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFileIPv6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatisticsFileIPv6"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TcpFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_TcpFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_TcpFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TcpFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Tcp6File
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Tcp6File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Tcp6File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tcp6File"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UdpFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_UdpFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_UdpFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UdpFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Udp6File
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Udp6File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Udp6File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Udp6File"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.MibIPGlobalProperties..cctor
void System::Net::NetworkInformation::MibIPGlobalProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "MibIPGlobalProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPGlobalProperties
#include "System/Net/NetworkInformation/Win32IPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32IPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixIPInterfaceProperties
#include "System/Net/NetworkInformation/UnixIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.UnixNetworkInterface
#include "System/Net/NetworkInformation/UnixNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex ns
::System::Text::RegularExpressions::Regex* System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_ns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "ns"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex ns
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_ns(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_ns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "ns", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex search
::System::Text::RegularExpressions::Regex* System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_search() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_search");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "search"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex search
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_search(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_search");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "search", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Net.NetworkInformation.UnixNetworkInterface iface
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::UnixNetworkInterface*& System::Net::NetworkInformation::UnixIPInterfaceProperties::dyn_iface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::dyn_iface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iface"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::UnixNetworkInterface**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.IPAddress> addresses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::IPAddress*>*& System::Net::NetworkInformation::UnixIPInterfaceProperties::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::IPAddress*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.UnixIPInterfaceProperties..cctor
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "UnixIPInterfaceProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnixIPInterfaceProperties.get_UnicastAddresses
::System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::UnixIPInterfaceProperties::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixIPInterfaceProperties::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxIPInterfaceProperties
#include "System/Net/NetworkInformation/LinuxIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.LinuxNetworkInterface
#include "System/Net/NetworkInformation/LinuxNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.LinuxIPInterfaceProperties.ParseRouteInfo
::System::Net::NetworkInformation::IPAddressCollection* System::Net::NetworkInformation::LinuxIPInterfaceProperties::ParseRouteInfo(::StringW iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxIPInterfaceProperties::ParseRouteInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRouteInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPAddressCollection*, false>(this, ___internal__method, iface);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxIPInterfaceProperties.get_GatewayAddresses
::System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::LinuxIPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxIPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MacOsIPInterfaceProperties
#include "System/Net/NetworkInformation/MacOsIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.MacOsNetworkInterface
#include "System/Net/NetworkInformation/MacOsNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.MacOsIPInterfaceProperties.ParseRouteInfo_internal
bool System::Net::NetworkInformation::MacOsIPInterfaceProperties::ParseRouteInfo_internal(::StringW iface, ByRef<::ArrayW<::StringW>> gw_addr_list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsIPInterfaceProperties::ParseRouteInfo_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "MacOsIPInterfaceProperties", "ParseRouteInfo_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::StringW>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iface, byref(gw_addr_list));
}
// Autogenerated method: System.Net.NetworkInformation.MacOsIPInterfaceProperties.get_GatewayAddresses
::System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::MacOsIPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsIPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPInterfaceProperties2
#include "System/Net/NetworkInformation/Win32IPInterfaceProperties2.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.NetworkInformation.Win32_IP_ADAPTER_ADDRESSES addr
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES& System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_addr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_addr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addr"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.NetworkInformation.Win32_MIB_IFROW mib4
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_MIB_IFROW& System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_mib4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_mib4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mib4"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_MIB_IFROW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.NetworkInformation.Win32_MIB_IFROW mib6
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_MIB_IFROW& System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_mib6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::dyn_mib6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mib6"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_MIB_IFROW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.Win32FromUnicast
::System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::Win32FromUnicast(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::Win32FromUnicast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32IPInterfaceProperties2", "Win32FromUnicast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.get_GatewayAddresses
::System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.get_UnicastAddresses
::System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/Win32IPv4InterfaceStatistics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32_MIB_IFROW info
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_MIB_IFROW& System::Net::NetworkInformation::Win32IPv4InterfaceStatistics::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPv4InterfaceStatistics::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_MIB_IFROW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxArpHardware
#include "System/Net/NetworkInformation/LinuxArpHardware.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_ETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_ETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "ETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
void System::Net::NetworkInformation::LinuxArpHardware::_set_ETHER(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_ETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "ETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_EETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_EETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "EETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
void System::Net::NetworkInformation::LinuxArpHardware::_set_EETHER(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_EETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "EETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_PRONET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_PRONET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "PRONET"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
void System::Net::NetworkInformation::LinuxArpHardware::_set_PRONET(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_PRONET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "PRONET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_ATM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_ATM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "ATM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
void System::Net::NetworkInformation::LinuxArpHardware::_set_ATM(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_ATM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "ATM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
void System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
void System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
void System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP6(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
void System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP6(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_PPP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_PPP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "PPP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
void System::Net::NetworkInformation::LinuxArpHardware::_set_PPP(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_PPP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "PPP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_LOOPBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_LOOPBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "LOOPBACK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
void System::Net::NetworkInformation::LinuxArpHardware::_set_LOOPBACK(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_LOOPBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "LOOPBACK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_FDDI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_FDDI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "FDDI"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
void System::Net::NetworkInformation::LinuxArpHardware::_set_FDDI(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_FDDI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "FDDI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
void System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
void System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL6(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_SIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SIT"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
void System::Net::NetworkInformation::LinuxArpHardware::_set_SIT(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_SIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SIT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IPDDP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_IPDDP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IPDDP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
void System::Net::NetworkInformation::LinuxArpHardware::_set_IPDDP(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_IPDDP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IPDDP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IPGRE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_IPGRE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IPGRE"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
void System::Net::NetworkInformation::LinuxArpHardware::_set_IPGRE(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_IPGRE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IPGRE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
::System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IP6GRE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_get_IP6GRE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IP6GRE"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
void System::Net::NetworkInformation::LinuxArpHardware::_set_IP6GRE(::System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::_set_IP6GRE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IP6GRE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::LinuxArpHardware::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxArpHardware::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MacOsArpHardware
#include "System/Net/NetworkInformation/MacOsArpHardware.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware ETHER
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_ETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_ETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "ETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware ETHER
void System::Net::NetworkInformation::MacOsArpHardware::_set_ETHER(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_ETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "ETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware ATM
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_ATM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_ATM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "ATM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware ATM
void System::Net::NetworkInformation::MacOsArpHardware::_set_ATM(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_ATM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "ATM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware SLIP
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_SLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_SLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "SLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware SLIP
void System::Net::NetworkInformation::MacOsArpHardware::_set_SLIP(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_SLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "SLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware PPP
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_PPP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_PPP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "PPP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware PPP
void System::Net::NetworkInformation::MacOsArpHardware::_set_PPP(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_PPP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "PPP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware LOOPBACK
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_LOOPBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_LOOPBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "LOOPBACK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware LOOPBACK
void System::Net::NetworkInformation::MacOsArpHardware::_set_LOOPBACK(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_LOOPBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "LOOPBACK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware FDDI
::System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_FDDI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_get_FDDI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "FDDI"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware FDDI
void System::Net::NetworkInformation::MacOsArpHardware::_set_FDDI(::System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::_set_FDDI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "FDDI", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::MacOsArpHardware::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsArpHardware::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.SystemNetworkInterface
#include "System/Net/NetworkInformation/SystemNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory
#include "System/Net/NetworkInformation/NetworkInterfaceFactory.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.NetworkInformation.NetworkInterfaceFactory nif
::System::Net::NetworkInformation::NetworkInterfaceFactory* System::Net::NetworkInformation::SystemNetworkInterface::_get_nif() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemNetworkInterface::_get_nif");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceFactory*>("System.Net.NetworkInformation", "SystemNetworkInterface", "nif"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.NetworkInformation.NetworkInterfaceFactory nif
void System::Net::NetworkInformation::SystemNetworkInterface::_set_nif(::System::Net::NetworkInformation::NetworkInterfaceFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemNetworkInterface::_set_nif");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SystemNetworkInterface", "nif", value));
}
// Autogenerated method: System.Net.NetworkInformation.SystemNetworkInterface..cctor
void System::Net::NetworkInformation::SystemNetworkInterface::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemNetworkInterface::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemNetworkInterface", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.SystemNetworkInterface.GetNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::SystemNetworkInterface::GetNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::SystemNetworkInterface::GetNetworkInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemNetworkInterface", "GetNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory
#include "System/Net/NetworkInformation/NetworkInterfaceFactory.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.UnixNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_UnixNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.MacOsNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_MacOsNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.LinuxNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_LinuxNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.Win32NetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_Win32NetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory.GetAllNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::NetworkInterfaceFactory::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory.Create
::System::Net::NetworkInformation::NetworkInterfaceFactory* System::Net::NetworkInformation::NetworkInterfaceFactory::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::NetworkInterfaceFactory*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.UnixNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_UnixNetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.UnixNetworkInterfaceAPI.getifaddrs
int System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs(ByRef<::System::IntPtr> ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/UnixNetworkInterfaceAPI", "getifaddrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ifap));
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.UnixNetworkInterfaceAPI.freeifaddrs
void System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs(::System::IntPtr ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/UnixNetworkInterfaceAPI", "freeifaddrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ifap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ifap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.MacOsNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_MacOsNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.MacOsNetworkInterfaceAPI.GetAllNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.LinuxNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_LinuxNetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.LinuxNetworkInterfaceAPI.FreeInterfaceAddresses
void System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses(::System::IntPtr ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/LinuxNetworkInterfaceAPI", "FreeInterfaceAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ifap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ifap);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.LinuxNetworkInterfaceAPI.GetInterfaceAddresses
int System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses(ByRef<::System::IntPtr> ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/LinuxNetworkInterfaceAPI", "GetInterfaceAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ifap));
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.LinuxNetworkInterfaceAPI.GetAllNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.Win32NetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_Win32NetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.Win32NetworkInterfaceAPI.GetAdaptersAddresses
int System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses(uint family, uint flags, ::System::IntPtr reserved, ::System::IntPtr info, ByRef<int> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/Win32NetworkInterfaceAPI", "GetAdaptersAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(family), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, family, flags, reserved, info, byref(size));
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.Win32NetworkInterfaceAPI.GetAdaptersAddresses
::ArrayW<::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES> System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/Win32NetworkInterfaceAPI", "GetAdaptersAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/System.Net.NetworkInformation.Win32NetworkInterfaceAPI.GetAllNetworkInterfaces
::ArrayW<::System::Net::NetworkInformation::NetworkInterface*> System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Net::NetworkInformation::NetworkInterface*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixNetworkInterface
#include "System/Net/NetworkInformation/UnixNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Net.NetworkInformation.IPInterfaceProperties ipproperties
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::IPInterfaceProperties*& System::Net::NetworkInformation::UnixNetworkInterface::dyn_ipproperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::dyn_ipproperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ipproperties"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::IPInterfaceProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::UnixNetworkInterface::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Net.IPAddress> addresses
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::IPAddress*>*& System::Net::NetworkInformation::UnixNetworkInterface::dyn_addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::dyn_addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addresses"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::IPAddress*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] macAddress
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::NetworkInformation::UnixNetworkInterface::dyn_macAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::dyn_macAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "macAddress"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.NetworkInterfaceType type
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::NetworkInterfaceType& System::Net::NetworkInformation::UnixNetworkInterface::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::NetworkInterfaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.AddAddress
void System::Net::NetworkInformation::UnixNetworkInterface::AddAddress(::System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::AddAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.SetLinkLayerInfo
void System::Net::NetworkInformation::UnixNetworkInterface::SetLinkLayerInfo(int index, ::ArrayW<uint8_t> macAddress, ::System::Net::NetworkInformation::NetworkInterfaceType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::SetLinkLayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLinkLayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(macAddress), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, macAddress, type);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.get_Name
::StringW System::Net::NetworkInformation::UnixNetworkInterface::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.get_NetworkInterfaceType
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::UnixNetworkInterface::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNetworkInterface::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxNetworkInterface
#include "System/Net/NetworkInformation/LinuxNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String iface_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iface_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iface_operstate_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_operstate_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_operstate_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iface_operstate_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String iface_flags_path
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_flags_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::dyn_iface_flags_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iface_flags_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_IfacePath
::StringW System::Net::NetworkInformation::LinuxNetworkInterface::get_IfacePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::get_IfacePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfacePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.ReadLine
::StringW System::Net::NetworkInformation::LinuxNetworkInterface::ReadLine(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "LinuxNetworkInterface", "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_OperationalStatus
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::LinuxNetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.GetIPProperties
::System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::LinuxNetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxNetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MacOsNetworkInterface
#include "System/Net/NetworkInformation/MacOsNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _ifa_flags
[[deprecated("Use field access instead!")]] uint& System::Net::NetworkInformation::MacOsNetworkInterface::dyn__ifa_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsNetworkInterface::dyn__ifa_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ifa_flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.MacOsNetworkInterface.get_OperationalStatus
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::MacOsNetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsNetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.MacOsNetworkInterface.GetIPProperties
::System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::MacOsNetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsNetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32NetworkInterface2
#include "System/Net/NetworkInformation/Win32NetworkInterface2.hpp"
// Including type: System.Net.NetworkInformation.Win32IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/Win32IPv4InterfaceStatistics.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32_IP_ADAPTER_ADDRESSES addr
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES& System::Net::NetworkInformation::Win32NetworkInterface2::dyn_addr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::dyn_addr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addr"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32_MIB_IFROW mib4
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_MIB_IFROW& System::Net::NetworkInformation::Win32NetworkInterface2::dyn_mib4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::dyn_mib4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mib4"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_MIB_IFROW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32_MIB_IFROW mib6
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_MIB_IFROW& System::Net::NetworkInformation::Win32NetworkInterface2::dyn_mib6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::dyn_mib6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mib6"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_MIB_IFROW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32IPv4InterfaceStatistics ip4stats
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32IPv4InterfaceStatistics*& System::Net::NetworkInformation::Win32NetworkInterface2::dyn_ip4stats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::dyn_ip4stats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ip4stats"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32IPv4InterfaceStatistics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.IPInterfaceProperties ip_if_props
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::IPInterfaceProperties*& System::Net::NetworkInformation::Win32NetworkInterface2::dyn_ip_if_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::dyn_ip_if_props");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ip_if_props"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::IPInterfaceProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.GetIfEntry
int System::Net::NetworkInformation::Win32NetworkInterface2::GetIfEntry(ByRef<::System::Net::NetworkInformation::Win32_MIB_IFROW> row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::GetIfEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface2", "GetIfEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(row));
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_Name
::StringW System::Net::NetworkInformation::Win32NetworkInterface2::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_NetworkInterfaceType
::System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::Win32NetworkInterface2::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_OperationalStatus
::System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::Win32NetworkInterface2::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.GetIPProperties
::System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::Win32NetworkInterface2::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface2::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32UnicastIPAddressInformation
#include "System/Net/NetworkInformation/Win32UnicastIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.NetworkInformation.Win32_IP_ADAPTER_UNICAST_ADDRESS info
[[deprecated("Use field access instead!")]] ::System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS& System::Net::NetworkInformation::Win32UnicastIPAddressInformation::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32UnicastIPAddressInformation::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress ipv4Mask
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& System::Net::NetworkInformation::Win32UnicastIPAddressInformation::dyn_ipv4Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32UnicastIPAddressInformation::dyn_ipv4Mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ipv4Mask"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.Win32UnicastIPAddressInformation.PrefixLengthToSubnetMask
::System::Net::IPAddress* System::Net::NetworkInformation::Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask(uint8_t prefixLength, ::System::Net::Sockets::AddressFamily family) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32UnicastIPAddressInformation", "PrefixLengthToSubnetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefixLength), ::il2cpp_utils::ExtractType(family)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefixLength, family);
}
// Autogenerated method: System.Net.NetworkInformation.Win32UnicastIPAddressInformation.get_Address
::System::Net::IPAddress* System::Net::NetworkInformation::Win32UnicastIPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32UnicastIPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxUnicastIPAddressInformation
#include "System/Net/NetworkInformation/LinuxUnicastIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.IPAddress address
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::dyn_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::dyn_address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "address"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxUnicastIPAddressInformation.get_Address
::System::Net::IPAddress* System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32NetworkInterface
#include "System/Net/NetworkInformation/Win32NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
::System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::Win32_FIXED_INFO>("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
void System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo(::System::Net::NetworkInformation::Win32_FIXED_INFO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized", value));
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.get_FixedInfo
::System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "get_FixedInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::Win32_FIXED_INFO, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.GetNetworkParams
int System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams(::System::IntPtr ptr, ByRef<int> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "GetNetworkParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, byref(size));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32_SOCKET_ADDRESS
#include "System/Net/NetworkInformation/Win32_SOCKET_ADDRESS.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Sockaddr
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::dyn_Sockaddr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::dyn_Sockaddr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Sockaddr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SockaddrLength
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::dyn_SockaddrLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::dyn_SockaddrLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SockaddrLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.Win32_SOCKET_ADDRESS.GetIPAddress
::System::Net::IPAddress* System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::GetIPAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::GetIPAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIPAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MacOsStructs.sockaddr_dl
#include "System/Net/NetworkInformation/MacOsStructs/sockaddr_dl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_len
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_len");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_len"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_family
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_family() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_family");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_family"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 sdl_index
[[deprecated("Use field access instead!")]] uint16_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_index"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_type
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_type"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_nlen
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_nlen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_nlen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_nlen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_alen
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_alen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_alen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_alen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte sdl_slen
[[deprecated("Use field access instead!")]] uint8_t& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_slen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_slen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_slen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] sdl_data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::dyn_sdl_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdl_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.MacOsStructs.sockaddr_dl.Read
void System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::Read(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Configuration.DefaultProxySectionInternal
#include "System/Net/Configuration/DefaultProxySectionInternal.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object classSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object classSyncObject
void System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy webProxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::Configuration::DefaultProxySectionInternal::dyn_webProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::dyn_webProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webProxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_ClassSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "get_ClassSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_WebProxy
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetDefaultProxy_UsingOldMonoCode
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetDefaultProxy_UsingOldMonoCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSystemWebProxy
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSystemWebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSection
::System::Net::Configuration::DefaultProxySectionInternal* System::Net::Configuration::DefaultProxySectionInternal::GetSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Configuration::DefaultProxySectionInternal*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.UnicodeDecodingConformance
#include "System/Net/Configuration/UnicodeDecodingConformance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Auto
::System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Auto
void System::Net::Configuration::UnicodeDecodingConformance::_set_Auto(::System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Strict
::System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Strict
void System::Net::Configuration::UnicodeDecodingConformance::_set_Strict(::System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Strict", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Compat
::System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_get_Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Compat"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Compat
void System::Net::Configuration::UnicodeDecodingConformance::_set_Compat(::System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_set_Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Compat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Loose
::System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Loose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_get_Loose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Loose"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Loose
void System::Net::Configuration::UnicodeDecodingConformance::_set_Loose(::System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::_set_Loose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Loose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Configuration::UnicodeDecodingConformance::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeDecodingConformance::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.UnicodeEncodingConformance
#include "System/Net/Configuration/UnicodeEncodingConformance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Auto
::System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Auto
void System::Net::Configuration::UnicodeEncodingConformance::_set_Auto(::System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Strict
::System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Strict
void System::Net::Configuration::UnicodeEncodingConformance::_set_Strict(::System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Strict", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Compat
::System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_get_Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Compat"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Compat
void System::Net::Configuration::UnicodeEncodingConformance::_set_Compat(::System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::_set_Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Compat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Configuration::UnicodeEncodingConformance::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::UnicodeEncodingConformance::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSectionInternal
#include "System/Net/Configuration/SettingsSectionInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
::System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::SettingsSectionInternal*>("System.Net.Configuration", "SettingsSectionInternal", "instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
void System::Net::Configuration::SettingsSectionInternal::_set_instance(::System::Net::Configuration::SettingsSectionInternal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "SettingsSectionInternal", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean HttpListenerUnescapeRequestUrl
[[deprecated("Use field access instead!")]] bool& System::Net::Configuration::SettingsSectionInternal::dyn_HttpListenerUnescapeRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::dyn_HttpListenerUnescapeRequestUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpListenerUnescapeRequestUrl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Net.Sockets.IPProtectionLevel IPProtectionLevel
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::IPProtectionLevel& System::Net::Configuration::SettingsSectionInternal::dyn_IPProtectionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::dyn_IPProtectionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPProtectionLevel"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::IPProtectionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Section
::System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::get_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::get_Section");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", "get_Section", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Configuration::SettingsSectionInternal*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Ipv6Enabled
bool System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ipv6Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal..cctor
void System::Net::Configuration::SettingsSectionInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCache
#include "System/Net/Cache/RequestCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Char[] LineSplits
::ArrayW<::Il2CppChar> System::Net::Cache::RequestCache::_get_LineSplits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::_get_LineSplits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net.Cache", "RequestCache", "LineSplits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] LineSplits
void System::Net::Cache::RequestCache::_set_LineSplits(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::_set_LineSplits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCache", "LineSplits", value));
}
// Autogenerated method: System.Net.Cache.RequestCache..cctor
void System::Net::Cache::RequestCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Cache", "RequestCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cache.RequestCacheValidator
#include "System/Net/Cache/RequestCacheValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Cache.RequestCacheValidator.CreateValidator
::Il2CppObject* System::Net::Cache::RequestCacheValidator::CreateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheValidator::CreateValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCacheBinding
#include "System/Net/Cache/RequestCacheBinding.hpp"
// Including type: System.Net.Cache.RequestCache
#include "System/Net/Cache/RequestCache.hpp"
// Including type: System.Net.Cache.RequestCacheValidator
#include "System/Net/Cache/RequestCacheValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCache m_RequestCache
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCache*& System::Net::Cache::RequestCacheBinding::dyn_m_RequestCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::dyn_m_RequestCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestCache"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheValidator m_CacheValidator
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheValidator*& System::Net::Cache::RequestCacheBinding::dyn_m_CacheValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::dyn_m_CacheValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheValidator"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCacheBinding.get_Cache
::System::Net::Cache::RequestCache* System::Net::Cache::RequestCacheBinding::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::get_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCache*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cache.RequestCacheBinding.get_Validator
::System::Net::Cache::RequestCacheValidator* System::Net::Cache::RequestCacheBinding::get_Validator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::get_Validator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCacheValidator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCacheLevel
#include "System/Net/Cache/RequestCacheLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Default
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Default
void System::Net::Cache::RequestCacheLevel::_set_Default(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel BypassCache
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_BypassCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_BypassCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "BypassCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel BypassCache
void System::Net::Cache::RequestCacheLevel::_set_BypassCache(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_BypassCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "BypassCache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_CacheOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
void System::Net::Cache::RequestCacheLevel::_set_CacheOnly(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_CacheOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
void System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Revalidate
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Revalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Revalidate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Revalidate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Revalidate
void System::Net::Cache::RequestCacheLevel::_set_Revalidate(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Revalidate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Revalidate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Reload
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Reload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Reload"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Reload
void System::Net::Cache::RequestCacheLevel::_set_Reload(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Reload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Reload", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
void System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Cache::RequestCacheLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheLevel m_Level
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheLevel& System::Net::Cache::RequestCachePolicy::dyn_m_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCachePolicy::dyn_m_Level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Level"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCachePolicy.get_Level
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCachePolicy::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCachePolicy::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCacheLevel, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cache.RequestCacheProtocol
#include "System/Net/Cache/RequestCacheProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.CaseSensitiveStringDictionary
#include "System/Collections/Specialized/CaseSensitiveStringDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.CaseSensitiveStringDictionary.Add
void System::Collections::Specialized::CaseSensitiveStringDictionary::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CaseSensitiveStringDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.HybridDictionary
#include "System/Collections/Specialized/HybridDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::HybridDictionary::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable hashtable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Specialized::HybridDictionary::dyn_hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::dyn_hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean caseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::HybridDictionary::dyn_caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::dyn_caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::HybridDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.set_Item
void System::Collections::Specialized::HybridDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_List
::System::Collections::Specialized::ListDictionary* System::Collections::Specialized::HybridDictionary::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::ListDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Count
int System::Collections::Specialized::HybridDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Keys
::System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_IsReadOnly
bool System::Collections::Specialized::HybridDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::HybridDictionary::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Values
::System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.ChangeOver
void System::Collections::Specialized::HybridDictionary::ChangeOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::ChangeOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Add
void System::Collections::Specialized::HybridDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Clear
void System::Collections::Specialized::HybridDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Contains
bool System::Collections::Specialized::HybridDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.CopyTo
void System::Collections::Specialized::HybridDictionary::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Specialized::HybridDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::HybridDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Remove
void System::Collections::Specialized::HybridDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::HybridDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode head
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::ListDictionary::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::ListDictionary::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Collections::Specialized::ListDictionary::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::ListDictionary::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::ListDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.set_Item
void System::Collections::Specialized::ListDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Count
int System::Collections::Specialized::ListDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Keys
::System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_IsReadOnly
bool System::Collections::Specialized::ListDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::ListDictionary::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Values
::System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Add
void System::Collections::Specialized::ListDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Clear
void System::Collections::Specialized::ListDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Contains
bool System::Collections::Specialized::ListDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.CopyTo
void System::Collections::Specialized::ListDictionary::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Specialized::ListDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Remove
void System::Collections::Specialized::ListDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode current
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary list
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode current
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.NodeKeyValueCollection/System.Collections.Specialized.NodeKeyValueEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object key
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Specialized.ListDictionary/System.Collections.Specialized.DictionaryNode next
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::ListDictionary::DictionaryNode*& System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::ListDictionary::DictionaryNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::ListDictionary::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase
#include "System/Collections/Specialized/NameObjectCollectionBase.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.StringComparer defaultComparer
::System::StringComparer* System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::StringComparer*>("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.StringComparer defaultComparer
void System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer(::System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readOnly
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::NameObjectCollectionBase::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _entriesArray
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesArray"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _keyComparer
[[deprecated("Use field access instead!")]] ::System::Collections::IEqualityComparer*& System::Collections::Specialized::NameObjectCollectionBase::dyn__keyComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__keyComparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyComparer"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _entriesTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__entriesTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry _nullKeyEntry
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry*& System::Collections::Specialized::NameObjectCollectionBase::dyn__nullKeyEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__nullKeyEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullKeyEntry"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _serializationInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& System::Collections::Specialized::NameObjectCollectionBase::dyn__serializationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__serializationInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializationInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::NameObjectCollectionBase::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::NameObjectCollectionBase::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_IsReadOnly
bool System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_Count
int System::Collections::Specialized::NameObjectCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase..cctor
void System::Collections::Specialized::NameObjectCollectionBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameObjectCollectionBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData
void System::Collections::Specialized::NameObjectCollectionBase::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization
void System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.FindEntry
::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry* System::Collections::Specialized::NameObjectCollectionBase::FindEntry(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::FindEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
void System::Collections::Specialized::NameObjectCollectionBase::BaseAdd(::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
void System::Collections::Specialized::NameObjectCollectionBase::BaseRemove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
void System::Collections::Specialized::NameObjectCollectionBase::BaseSet(::StringW name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
::StringW System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::NameObjectCollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String Key
[[deprecated("Use field access instead!")]] ::StringW& System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object Value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Specialized.NameObjectCollectionBase _coll
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::NameObjectCollectionBase*& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__coll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__coll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coll"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::NameObjectCollectionBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.MoveNext
bool System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/System.Collections.Specialized.NameObjectKeysEnumerator.Reset
void System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.CompatibleComparer
#include "System/Collections/Specialized/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.IComparer defaultComparer
::System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::IComparer*>("System.Collections.Specialized", "CompatibleComparer", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IComparer defaultComparer
void System::Collections::Specialized::CompatibleComparer::_set_defaultComparer(::System::Collections::IComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultComparer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.IHashCodeProvider defaultHashProvider
::System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::IHashCodeProvider*>("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IHashCodeProvider defaultHashProvider
void System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider(::System::Collections::IHashCodeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer _comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::Collections::Specialized::CompatibleComparer::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IHashCodeProvider _hcp
[[deprecated("Use field access instead!")]] ::System::Collections::IHashCodeProvider*& System::Collections::Specialized::CompatibleComparer::dyn__hcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::dyn__hcp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hcp"))->offset;
  return *reinterpret_cast<::System::Collections::IHashCodeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_Comparer
::System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_HashCodeProvider
::System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultComparer
::System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_DefaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::get_DefaultComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultHashCodeProvider
::System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultHashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IHashCodeProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.Equals
bool System::Collections::Specialized::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.GetHashCode
int System::Collections::Specialized::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] _all
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Collections::Specialized::NameValueCollection::dyn__all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::dyn__all");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_all"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _allKeys
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Collections::Specialized::NameValueCollection::dyn__allKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::dyn__allKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.get_Item
::StringW System::Collections::Specialized::NameValueCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.set_Item
void System::Collections::Specialized::NameValueCollection::set_Item(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
void System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateCachedArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsOneString
::StringW System::Collections::Specialized::NameValueCollection::GetAsOneString(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::GetAsOneString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsOneString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsStringArray
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetAsStringArray(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::GetAsStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Add
void System::Collections::Specialized::NameValueCollection::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::StringW System::Collections::Specialized::NameValueCollection::Get(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetValues(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Set
void System::Collections::Specialized::NameValueCollection::Set(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Remove
void System::Collections::Specialized::NameValueCollection::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::StringW System::Collections::Specialized::NameValueCollection::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::ArrayW<::StringW> System::Collections::Specialized::NameValueCollection::GetValues(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetKey
::StringW System::Collections::Specialized::NameValueCollection::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::NameValueCollection::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary
#include "System/Collections/Specialized/OrderedDictionary.hpp"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objectsArray
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::dyn__objectsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__objectsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsArray"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _objectsTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Specialized::OrderedDictionary::dyn__objectsTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__objectsTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _initialCapacity
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::OrderedDictionary::dyn__initialCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__initialCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IEqualityComparer*& System::Collections::Specialized::OrderedDictionary::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readOnly
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::OrderedDictionary::dyn__readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Collections::Specialized::OrderedDictionary::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _siInfo
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& System::Collections::Specialized::OrderedDictionary::dyn__siInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::dyn__siInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_siInfo"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Count
int System::Collections::Specialized::OrderedDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_IsReadOnly
bool System::Collections::Specialized::OrderedDictionary::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Keys
::System::Collections::ICollection* System::Collections::Specialized::OrderedDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_objectsArray
::System::Collections::ArrayList* System::Collections::Specialized::OrderedDictionary::get_objectsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_objectsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_objectsTable
::System::Collections::Hashtable* System::Collections::Specialized::OrderedDictionary::get_objectsTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_objectsTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.set_Item
void System::Collections::Specialized::OrderedDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.get_Values
::System::Collections::ICollection* System::Collections::Specialized::OrderedDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Add
void System::Collections::Specialized::OrderedDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Clear
void System::Collections::Specialized::OrderedDictionary::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Contains
bool System::Collections::Specialized::OrderedDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.CopyTo
void System::Collections::Specialized::OrderedDictionary::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.IndexOfKey
int System::Collections::Specialized::OrderedDictionary::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::IndexOfKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.OnDeserialization
void System::Collections::Specialized::OrderedDictionary::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.Remove
void System::Collections::Specialized::OrderedDictionary::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Specialized::OrderedDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.GetObjectData
void System::Collections::Specialized::OrderedDictionary::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Collections::Specialized::OrderedDictionary::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _objectReturnType
[[deprecated("Use field access instead!")]] int& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn__objectReturnType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectReturnType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator arrayEnumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::dyn_arrayEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayEnumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.MoveNext
bool System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryEnumerator.Reset
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection
#include "System/Collections/Specialized/OrderedDictionary_OrderedDictionaryKeyValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _objects
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
[[deprecated("Use field access instead!")]] bool& System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.OrderedDictionary/System.Collections.Specialized.OrderedDictionaryKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::OrderedDictionary::OrderedDictionaryKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.StringCollection
#include "System/Collections/Specialized/StringCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList data
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Collections::Specialized::StringCollection::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Item
::StringW System::Collections::Specialized::StringCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.set_Item
void System::Collections::Specialized::StringCollection::set_Item(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Count
int System::Collections::Specialized::StringCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsReadOnly
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsFixedSize
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_SyncRoot
::Il2CppObject* System::Collections::Specialized::StringCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::Specialized::StringCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.set_Item
void System::Collections::Specialized::StringCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Add
int System::Collections::Specialized::StringCollection::Add(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Clear
void System::Collections::Specialized::StringCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Contains
bool System::Collections::Specialized::StringCollection::Contains(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.CopyTo
void System::Collections::Specialized::StringCollection::CopyTo(::ArrayW<::StringW> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.IndexOf
int System::Collections::Specialized::StringCollection::IndexOf(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Insert
void System::Collections::Specialized::StringCollection::Insert(int index, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Remove
void System::Collections::Specialized::StringCollection::Remove(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.RemoveAt
void System::Collections::Specialized::StringCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Add
int System::Collections::Specialized::StringCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains
bool System::Collections::Specialized::StringCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf
int System::Collections::Specialized::StringCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert
void System::Collections::Specialized::StringCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove
void System::Collections::Specialized::StringCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::StringCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::StringCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable contents
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Collections::Specialized::StringDictionary::dyn_contents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::dyn_contents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contents"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.Add
void System::Collections::Specialized::StringDictionary::Add(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.StringDictionary.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Specialized::StringDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Specialized::StringDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.BitHelper
#include "System/Collections/Generic/BitHelper_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Collections::Generic::BitHelper_::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32* _arrayPtr
[[deprecated("Use field access instead!")]] int*& System::Collections::Generic::BitHelper_::dyn__arrayPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__arrayPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayPtr"))->offset;
  return *reinterpret_cast<int**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _array
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Collections::Generic::BitHelper_::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _useStackAlloc
[[deprecated("Use field access instead!")]] bool& System::Collections::Generic::BitHelper_::dyn__useStackAlloc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::dyn__useStackAlloc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStackAlloc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Generic.BitHelper.MarkBit
void System::Collections::Generic::BitHelper_::MarkBit(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::MarkBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.IsMarked
bool System::Collections::Generic::BitHelper_::IsMarked(int bitPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::IsMarked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMarked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitPosition);
}
// Autogenerated method: System.Collections.Generic.BitHelper.ToIntArrayLength
int System::Collections::Generic::BitHelper_::ToIntArrayLength(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::BitHelper_::ToIntArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "BitHelper", "ToIntArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NodeColor
#include "System/Collections/Generic/NodeColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Black
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Black
void System::Collections::Generic::NodeColor::_set_Black(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Red
::System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Red
void System::Collections::Generic::NodeColor::_set_Red(::System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Red", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::NodeColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NodeColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.TreeRotation
#include "System/Collections/Generic/TreeRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Left
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Left"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Left
void System::Collections::Generic::TreeRotation::_set_Left(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation LeftRight
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation LeftRight
void System::Collections::Generic::TreeRotation::_set_LeftRight(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Right
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Right
void System::Collections::Generic::TreeRotation::_set_Right(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation RightLeft
::System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_RightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_get_RightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "RightLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation RightLeft
void System::Collections::Generic::TreeRotation::_set_RightLeft(::System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::_set_RightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "RightLeft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::TreeRotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::TreeRotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, ::System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(configContext), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub__::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub__::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.ByteArrayContent
#include "System/Net/Http/ByteArrayContent.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] content
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Http::ByteArrayContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::Net::Http::ByteArrayContent::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Net::Http::ByteArrayContent::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::ByteArrayContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.ByteArrayContent.TryComputeLength
bool System::Net::Http::ByteArrayContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::ByteArrayContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.FormUrlEncodedContent
#include "System/Net/Http/FormUrlEncodedContent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.EncodeContent
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::EncodeContent(::System::Collections::Generic::IEnumerable_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>>* nameValueCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::FormUrlEncodedContent::EncodeContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "EncodeContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameValueCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nameValueCollection);
}
// Autogenerated method: System.Net.Http.FormUrlEncodedContent.SerializeValue
::ArrayW<uint8_t> System::Net::Http::FormUrlEncodedContent::SerializeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::FormUrlEncodedContent::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "FormUrlEncodedContent", "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan TimeoutDefault
::System::TimeSpan System::Net::Http::HttpClient::_get_TimeoutDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::_get_TimeoutDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Net.Http", "HttpClient", "TimeoutDefault"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan TimeoutDefault
void System::Net::Http::HttpClient::_set_TimeoutDefault(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::_set_TimeoutDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClient", "TimeoutDefault", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Uri base_address
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpClient::dyn_base_address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_base_address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_address"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource cts
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::dyn_cts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_cts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cts"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClient::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpClient::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buffer_size
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpClient::dyn_buffer_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_buffer_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer_size"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan timeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Net::Http::HttpClient::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient.get_MaxResponseContentBufferSize
int64_t System::Net::Http::HttpClient::get_MaxResponseContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::get_MaxResponseContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxResponseContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.set_Timeout
void System::Net::Http::HttpClient::set_Timeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpClient..cctor
void System::Net::Http::HttpClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.GetAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::GetAsync(::System::Uri* requestUri, ::System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::GetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.PostAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::PostAsync(::System::Uri* requestUri, ::System::Net::Http::HttpContent* content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::PostAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(content)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, content);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsyncWorker
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsyncWorker(::System::Net::Http::HttpRequestMessage* request, ::System::Net::Http::HttpCompletionOption completionOption, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsyncWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsyncWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.GetStringAsync
::System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpClient::GetStringAsync(::System::Uri* requestUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::GetStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method, requestUri);
}
// Autogenerated method: System.Net.Http.HttpClient.<>n__0
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::$$n__0(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.Dispose
void System::Net::Http::HttpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpCompletionOption completionOption
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpCompletionOption& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_completionOption");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionOption"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpCompletionOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <response>5__1
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$response$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<response>5__1"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource <lcts>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$lcts$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lcts>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.MoveNext
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<SendAsyncWorker>d__47.SetStateMachine
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53
#include "System/Net/Http/HttpClient_-GetStringAsync-d__53.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClient <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri requestUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_requestUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpResponseMessage <resp>5__1
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpResponseMessage*& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$resp$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<resp>5__1"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpResponseMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.Http.HttpResponseMessage> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::Http::HttpResponseMessage*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.String> <>u__2
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter& System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::StringW>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.MoveNext
void System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/System.Net.Http.<GetStringAsync>d__53.SetStateMachine
void System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClient::$GetStringAsync$d__53::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler
#include "System/Net/Http/HttpClientHandler.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 groupCounter
int64_t System::Net::Http::HttpClientHandler::_get_groupCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::_get_groupCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Net.Http", "HttpClientHandler", "groupCounter"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 groupCounter
void System::Net::Http::HttpClientHandler::_set_groupCounter(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::_set_groupCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler", "groupCounter", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowAutoRedirect
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_allowAutoRedirect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoRedirect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.DecompressionMethods automaticDecompression
[[deprecated("Use field access instead!")]] ::System::Net::DecompressionMethods& System::Net::Http::HttpClientHandler::dyn_automaticDecompression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_automaticDecompression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticDecompression"))->offset;
  return *reinterpret_cast<::System::Net::DecompressionMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.CookieContainer cookieContainer
[[deprecated("Use field access instead!")]] ::System::Net::CookieContainer*& System::Net::Http::HttpClientHandler::dyn_cookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_cookieContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieContainer"))->offset;
  return *reinterpret_cast<::System::Net::CookieContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Net::Http::HttpClientHandler::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxAutomaticRedirections
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_maxAutomaticRedirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAutomaticRedirections"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 maxRequestContentBufferSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_maxRequestContentBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRequestContentBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preAuthenticate
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_preAuthenticate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_preAuthenticate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preAuthenticate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::Http::HttpClientHandler::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useCookies
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useCookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useCookies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCookies"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useDefaultCredentials
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useDefaultCredentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDefaultCredentials"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useProxy
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_useProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_useProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useProxy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sentRequest
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_sentRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_sentRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sentRequest"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String connectionGroupName
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpClientHandler::dyn_connectionGroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_connectionGroupName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionGroupName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpClientHandler::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_CookieContainer
::System::Net::CookieContainer* System::Net::Http::HttpClientHandler::get_CookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::get_CookieContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CookieContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::CookieContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_MaxRequestContentBufferSize
int64_t System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRequestContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateWebRequest
::System::Net::HttpWebRequest* System::Net::Http::HttpClientHandler::CreateWebRequest(::System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::CreateWebRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpWebRequest*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateResponseMessage
::System::Net::Http::HttpResponseMessage* System::Net::Http::HttpClientHandler::CreateResponseMessage(::System::Net::HttpWebResponse* wr, ::System::Net::Http::HttpRequestMessage* requestMessage, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::CreateResponseMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateResponseMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wr), ::il2cpp_utils::ExtractType(requestMessage), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method, wr, requestMessage, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.MethodHasBody
bool System::Net::Http::HttpClientHandler::MethodHasBody(::System::Net::Http::HttpMethod* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::MethodHasBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler", "MethodHasBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.Dispose
void System::Net::Http::HttpClientHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClientHandler::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
::System::Net::Http::HttpClientHandler::$$c* System::Net::Http::HttpClientHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::HttpClientHandler::$$c*>("System.Net.Http", "HttpClientHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.HttpClientHandler/System.Net.Http.<>c <>9
void System::Net::Http::HttpClientHandler::$$c::_set_$$9(::System::Net::Http::HttpClientHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
::System::Func_2<::StringW, bool>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__64_0
::System::Action_1<::Il2CppObject*>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__64_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0", value)));
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c..cctor
void System::Net::Http::HttpClientHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<CreateWebRequest>b__61_0
bool System::Net::Http::HttpClientHandler::$$c::$CreateWebRequest$b__61_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::<CreateWebRequest>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateWebRequest>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<>c.<SendAsync>b__64_0
void System::Net::Http::HttpClientHandler::$$c::$SendAsync$b__64_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$$c::<SendAsync>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendAsync>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Net.Http.HttpResponseMessage> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpClientHandler <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClientHandler*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClientHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpRequestMessage request
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_request");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebRequest <wrequest>5__1
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wrequest$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wrequest>5__1"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <content>5__2
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$content$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<content>5__2"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream <stream>5__3
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$stream$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stream>5__3"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpWebResponse <wresponse>5__4
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebResponse*& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$wresponse$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<wresponse>5__4"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenRegistration <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$7__wrap1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.IO.Stream> <>u__2
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::IO::Stream*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebResponse> <>u__3
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__4
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>& System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.MoveNext
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/System.Net.Http.<SendAsync>d__64.SetStateMachine
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
::System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseContentRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_get_ResponseContentRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseContentRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
void System::Net::Http::HttpCompletionOption::_set_ResponseContentRead(::System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_set_ResponseContentRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseContentRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
::System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
void System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead(::System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpCompletionOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpCompletionOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream buffer
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent::FixedMemoryStream*& System::Net::Http::HttpContent::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent::FixedMemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpContent::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpContentHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpContentHeaders*& System::Net::Http::HttpContent::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpContentHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent.get_Headers
::System::Net::Http::Headers::HttpContentHeaders* System::Net::Http::HttpContent::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpContentHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.get_LoadedBufferLength
::System::Nullable_1<int64_t> System::Net::Http::HttpContent::get_LoadedBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::get_LoadedBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadedBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyTo
void System::Net::Http::HttpContent::CopyTo(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.CreateFixedMemoryStream
::System::Net::Http::HttpContent::FixedMemoryStream* System::Net::Http::HttpContent::CreateFixedMemoryStream(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::CreateFixedMemoryStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "CreateFixedMemoryStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent::FixedMemoryStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.ReadAsStringAsync
::System::Threading::Tasks::Task_1<::StringW>* System::Net::Http::HttpContent::ReadAsStringAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::ReadAsStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.GetEncodingFromBuffer
::System::Text::Encoding* System::Net::Http::HttpContent::GetEncodingFromBuffer(::ArrayW<uint8_t> buffer, int length, ByRef<int> preambleLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::GetEncodingFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "GetEncodingFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(preambleLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, byref(preambleLength));
}
// Autogenerated method: System.Net.Http.HttpContent.StartsWith
int System::Net::Http::HttpContent::StartsWith(::ArrayW<uint8_t> array, int length, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, length, value);
}
// Autogenerated method: System.Net.Http.HttpContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::HttpContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.TryComputeLength
bool System::Net::Http::HttpContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 maxSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::dyn_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.CheckOverflow
void System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.WriteByte
void System::Net::Http::HttpContent::FixedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.FixedMemoryStream.Write
void System::Net::Http::HttpContent::FixedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::FixedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maxBufferSize
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_maxBufferSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBufferSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.MoveNext
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<LoadIntoBufferAsync>d__17.SetStateMachine
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.HttpContent <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.MoveNext
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/System.Net.Http.<ReadAsStringAsync>d__20.SetStateMachine
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageHandler::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageInvoker
#include "System/Net/Http/HttpMessageInvoker.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMessageHandler handler
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMessageHandler*& System::Net::Http::HttpMessageInvoker::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean disposeHandler
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpMessageInvoker::dyn_disposeHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::dyn_disposeHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposeHandler"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.SendAsync
::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageInvoker::SendAsync(::System::Net::Http::HttpRequestMessage* request, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMessageInvoker::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod delete_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_delete_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_delete_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "delete_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod delete_method
void System::Net::Http::HttpMethod::_set_delete_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_delete_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "delete_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod get_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_get_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "get_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod get_method
void System::Net::Http::HttpMethod::_set_get_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_get_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "get_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod head_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_head_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_head_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "head_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod head_method
void System::Net::Http::HttpMethod::_set_head_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_head_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "head_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod options_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_options_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_options_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "options_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod options_method
void System::Net::Http::HttpMethod::_set_options_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_options_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "options_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod post_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_post_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_post_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "post_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod post_method
void System::Net::Http::HttpMethod::_set_post_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_post_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "post_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod put_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_put_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_put_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "put_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod put_method
void System::Net::Http::HttpMethod::_set_put_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_put_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "put_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod trace_method
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_trace_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_get_trace_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "trace_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod trace_method
void System::Net::Http::HttpMethod::_set_trace_method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::_set_trace_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "trace_method", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String method
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpMethod::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Get
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Method
::StringW System::Net::Http::HttpMethod::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Post
::System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Post() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::get_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod..cctor
void System::Net::Http::HttpMethod::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::System::Net::Http::HttpMethod* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.HttpMethod.GetHashCode
int System::Net::Http::HttpMethod::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.ToString
::StringW System::Net::Http::HttpMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.op_Equality
bool System::Net::Http::operator ==(::System::Net::Http::HttpMethod* left, ::System::Net::Http::HttpMethod& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpMethod::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestException
#include "System/Net/Http/HttpRequestException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpRequestHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpRequestHeaders*& System::Net::Http::HttpRequestMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpRequestHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpMethod method
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpMethod*& System::Net::Http::HttpRequestMessage::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpRequestMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Net::Http::HttpRequestMessage::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_used
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_is_used() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_is_used");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_used"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpRequestMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpRequestMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Content
void System::Net::Http::HttpRequestMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Headers
::System::Net::Http::Headers::HttpRequestHeaders* System::Net::Http::HttpRequestMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpRequestHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Method
::System::Net::Http::HttpMethod* System::Net::Http::HttpRequestMessage::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Method
void System::Net::Http::HttpRequestMessage::set_Method(::System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_RequestUri
::System::Uri* System::Net::Http::HttpRequestMessage::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_RequestUri
void System::Net::Http::HttpRequestMessage::set_RequestUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::set_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Version
::System::Version* System::Net::Http::HttpRequestMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.IsAllowedAbsoluteUri
bool System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpRequestMessage", "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.SetIsUsed
bool System::Net::Http::HttpRequestMessage::SetIsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::SetIsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.ToString
::StringW System::Net::Http::HttpRequestMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpRequestMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.Headers.HttpResponseHeaders headers
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpResponseHeaders*& System::Net::Http::HttpResponseMessage::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpResponseHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String reasonPhrase
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::HttpResponseMessage::dyn_reasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_reasonPhrase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reasonPhrase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpStatusCode statusCode
[[deprecated("Use field access instead!")]] ::System::Net::HttpStatusCode& System::Net::Http::HttpResponseMessage::dyn_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_statusCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCode"))->offset;
  return *reinterpret_cast<::System::Net::HttpStatusCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Version version
[[deprecated("Use field access instead!")]] ::System::Version*& System::Net::Http::HttpResponseMessage::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Http::HttpResponseMessage::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpContent <Content>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$Content$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Content>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpRequestMessage <RequestMessage>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::dyn_$RequestMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequestMessage>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Content
::System::Net::Http::HttpContent* System::Net::Http::HttpResponseMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_Content
void System::Net::Http::HttpResponseMessage::set_Content(::System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Headers
::System::Net::Http::Headers::HttpResponseHeaders* System::Net::Http::HttpResponseMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpResponseHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_IsSuccessStatusCode
bool System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_ReasonPhrase
::StringW System::Net::Http::HttpResponseMessage::get_ReasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_ReasonPhrase
void System::Net::Http::HttpResponseMessage::set_ReasonPhrase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_RequestMessage
void System::Net::Http::HttpResponseMessage::set_RequestMessage(::System::Net::Http::HttpRequestMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_RequestMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_StatusCode
::System::Net::HttpStatusCode System::Net::Http::HttpResponseMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_StatusCode
void System::Net::Http::HttpResponseMessage::set_StatusCode(::System::Net::HttpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Version
::System::Version* System::Net::Http::HttpResponseMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
::System::Net::Http::HttpResponseMessage* System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.ToString
::StringW System::Net::Http::HttpResponseMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::HttpResponseMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StreamContent
#include "System/Net/Http/StreamContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream content
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Http::StreamContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 bufferSize
[[deprecated("Use field access instead!")]] int& System::Net::Http::StreamContent::dyn_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_bufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Net::Http::StreamContent::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 startPosition
[[deprecated("Use field access instead!")]] int64_t& System::Net::Http::StreamContent::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean contentCopied
[[deprecated("Use field access instead!")]] bool& System::Net::Http::StreamContent::dyn_contentCopied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::dyn_contentCopied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentCopied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.StreamContent.Dispose
void System::Net::Http::StreamContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.StreamContent.SerializeToStreamAsync
::System::Threading::Tasks::Task* System::Net::Http::StreamContent::SerializeToStreamAsync(::System::IO::Stream* stream, ::System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.StreamContent.TryComputeLength
bool System::Net::Http::StreamContent::TryComputeLength(ByRef<int64_t> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StreamContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StringContent
#include "System/Net/Http/StringContent.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.StringContent.GetByteArray
::ArrayW<uint8_t> System::Net::Http::StringContent::GetByteArray(::StringW content, ::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::StringContent::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "StringContent", "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content), ::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content, encoding);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.AuthenticationHeaderValue
#include "System/Net/Http/Headers/AuthenticationHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Parameter>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Parameter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parameter>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Scheme>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::dyn_$Scheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Scheme>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Parameter
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Parameter
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Scheme
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Scheme
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::AuthenticationHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParseElement
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::AuthenticationHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.Equals
bool System::Net::Http::Headers::AuthenticationHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode
int System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.ToString
::StringW System::Net::Http::Headers::AuthenticationHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::AuthenticationHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> extensions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> no_cache_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_no_cache_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "no_cache_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> private_headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_private_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "private_headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MaxStale>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStale$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStale>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MaxStaleLimit>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MaxStaleLimit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxStaleLimit>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <MinFresh>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MinFresh$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MinFresh>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <MustRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$MustRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MustRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoCache>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoCache$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoCache>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoStore>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoStore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoStore>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <NoTransform>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$NoTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NoTransform>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OnlyIfCached>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$OnlyIfCached$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnlyIfCached>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Private>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Private$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Private>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ProxyRevalidate>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$ProxyRevalidate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProxyRevalidate>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Public>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$Public$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Public>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.TimeSpan> <SharedMaxAge>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::TimeSpan>& System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::dyn_$SharedMaxAge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SharedMaxAge>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCacheHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
::System::Collections::Generic::ICollection_1<::StringW>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(::System::Nullable_1<::System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::CacheControlHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::CacheControlHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::StringW System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CacheControlHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionExtensions
#include "System/Net/Http/Headers/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionExtensions.SetValue
void System::Net::Http::Headers::CollectionExtensions::SetValue(::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>* parameters, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionExtensions::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionExtensions", "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameters, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.CollectionParser
#include "System/Net/Http/Headers/CollectionParser.hpp"
// Including type: System.Net.Http.Headers.ElementTryParser`1
#include "System/Net/Http/Headers/ElementTryParser_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParse
bool System::Net::Http::Headers::CollectionParser::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::StringW>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::StringW>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParseStringElement
bool System::Net::Http::Headers::CollectionParser::TryParseStringElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::CollectionParser::TryParseStringElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParseStringElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentDispositionHeaderValue
#include "System/Net/Http/Headers/ContentDispositionHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String dispositionType
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_dispositionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dispositionType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentDispositionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse
bool System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentDispositionHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentDispositionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentDispositionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.Equals
bool System::Net::Http::Headers::ContentDispositionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentDispositionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentDispositionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentRangeHeaderValue
#include "System/Net/Http/Headers/ContentRangeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String unit
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unit"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <From>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$From$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<From>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <Length>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> <To>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::dyn_$To$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<To>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_From
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_From
void System::Net::Http::Headers::ContentRangeHeaderValue::set_From(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Length
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_Length
void System::Net::Http::Headers::ContentRangeHeaderValue::set_Length(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_To
::System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_To
void System::Net::Http::Headers::ContentRangeHeaderValue::set_To(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Unit
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentRangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse
bool System::Net::Http::Headers::ContentRangeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::ContentRangeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentRangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::ContentRangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.Equals
bool System::Net::Http::Headers::ContentRangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.ToString
::StringW System::Net::Http::Headers::ContentRangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::ContentRangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
::System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_get_any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(::System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::_set_any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWeak>k__BackingField
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$IsWeak$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWeak>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Tag>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::StringW System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::EntityTagHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::EntityTagHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::StringW System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::EntityTagHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HashCodeCalculator
#include "System/Net/Http/Headers/HashCodeCalculator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.HeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_HeaderTypeInfo_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/System.Net.Http.Headers.CollectionHeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_CollectionHeaderTypeInfo_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.Http.Headers.TryParseDelegate`1
#include "System/Net/Http/Headers/TryParseDelegate_1.hpp"
// Including type: System.Net.Http.Headers.TryParseListDelegate`1
#include "System/Net/Http/Headers/TryParseListDelegate_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean AllowsMany
[[deprecated("Use field access instead!")]] bool& System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_AllowsMany");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllowsMany"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Name
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::HeaderInfo::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<System.Object,System.String> <CustomToString>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::dyn_$CustomToString$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CustomToString>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_CustomToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::HeaderInfo::get_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Il2CppObject*, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.set_CustomToString
void System::Net::Http::Headers::HeaderInfo::set_CustomToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::set_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_Separator
::StringW System::Net::Http::Headers::HeaderInfo::get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::get_Separator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Separator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.AddToCollection
void System::Net::Http::Headers::HeaderInfo::AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::AddToCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collection, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(::System::Net::Http::Headers::HttpHeaders* headers, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::CreateCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, headers, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.ToStringCollection
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HeaderInfo::ToStringCollection(::Il2CppObject* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::ToStringCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.TryParse
bool System::Net::Http::Headers::HeaderInfo::TryParse(::StringW value, ByRef<::Il2CppObject*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HeaderInfo::TryParse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpContent content
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpContent*& System::Net::Http::Headers::HttpContentHeaders::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentLength
::System::Nullable_1<int64_t> System::Net::Http::Headers::HttpContentHeaders::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentType
::System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::HttpContentHeaders::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::MediaTypeHeaderValue*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.set_ContentType
void System::Net::Http::Headers::HttpContentHeaders::set_ContentType(::System::Net::Http::Headers::MediaTypeHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpContentHeaders::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind None
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind None
void System::Net::Http::Headers::HttpHeaderKind::_set_None(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Request
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Request"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Request
void System::Net::Http::Headers::HttpHeaderKind::_set_Request(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Response
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Response
void System::Net::Http::Headers::HttpHeaderKind::_set_Response(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Content
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Content
void System::Net::Http::Headers::HttpHeaderKind::_set_Content(::System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaderKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaderKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* System::Net::Http::Headers::HttpHeaders::_get_known_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_get_known_headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>*>("System.Net.Http.Headers", "HttpHeaders", "known_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
void System::Net::Http::Headers::HttpHeaders::_set_known_headers(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::_set_known_headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaders", "known_headers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> headers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>*& System::Net::Http::Headers::HttpHeaders::dyn_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_headers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.HttpHeaderKind HeaderKind
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaderKind& System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_HeaderKind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HeaderKind"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaderKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> connectionclose
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_connectionclose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_connectionclose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionclose"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> transferEncodingChunked
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::dyn_transferEncodingChunked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transferEncodingChunked"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders..cctor
void System::Net::Http::Headers::HttpHeaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.AddInternal
bool System::Net::Http::Headers::HttpHeaders::AddInternal(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values, ::System::Net::Http::Headers::HeaderInfo* headerInfo, bool ignoreInvalid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(headerInfo), ::il2cpp_utils::ExtractType(ignoreInvalid)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values, headerInfo, ignoreInvalid);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation
bool System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation(::StringW name, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddWithoutValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.CheckName
::System::Net::Http::Headers::HeaderInfo* System::Net::Http::Headers::HttpHeaders::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HeaderInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryCheckName
bool System::Net::Http::Headers::HttpHeaders::TryCheckName(::StringW name, ByRef<::System::Net::Http::Headers::HeaderInfo*> headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::TryCheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::HeaderInfo*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(headerInfo));
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>* System::Net::Http::Headers::HttpHeaders::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Net::Http::Headers::HttpHeaders::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.Remove
bool System::Net::Http::Headers::HttpHeaders::Remove(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetSingleHeaderString
::StringW System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString(::StringW key, ::System::Collections::Generic::IEnumerable_1<::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetSingleHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetAllHeaderValues
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues(::System::Net::Http::Headers::HttpHeaders::HeaderBucket* bucket, ::System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllHeaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, bucket, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetKnownHeaderKind
::System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetKnownHeaderKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderKind, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.ToString
::StringW System::Net::Http::Headers::HttpHeaders::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Parsed
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_Parsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Parsed"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> values
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Func`2<System.Object,System.String> CustomToString
[[deprecated("Use field access instead!")]] ::System::Func_2<::Il2CppObject*, ::StringW>*& System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::dyn_CustomToString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomToString"))->offset;
  return *reinterpret_cast<::System::Func_2<::Il2CppObject*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_HasStringValues
bool System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasStringValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.get_Values
::System::Collections::Generic::List_1<::StringW>* System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.set_Values
void System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket.ParsedToString
::StringW System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsedToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,System.Collections.Generic.IEnumerable`1<System.String>> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Http.Headers.HttpHeaders <>4__this
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::HttpHeaders*& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::HttpHeaders**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.HeaderBucket> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator& System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Net::Http::Headers::HttpHeaders::HeaderBucket*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*> System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::System::Collections::Generic::IEnumerable_1<::StringW>*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.IDisposable.Dispose
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.MoveNext
bool System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.<>m__Finally1
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/System.Net.Http.Headers.<GetEnumerator>d__19.System.Collections.IEnumerator.Reset
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> expectContinue
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::dyn_expectContinue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectContinue"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Connection
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionClose
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionKeepAlive
bool System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Host
::StringW System::Net::Http::Headers::HttpRequestHeaders::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncoding
::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::HttpHeaderValueCollection_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncodingChunked
::System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncodingChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.AddHeaders
void System::Net::Http::Headers::HttpRequestHeaders::AddHeaders(::System::Net::Http::Headers::HttpRequestHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::AddHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::HttpRequestHeaders::$$c* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::HttpRequestHeaders::$$c*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9(::System::Net::Http::Headers::HttpRequestHeaders::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__19_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__19_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__22_0
::System::Predicate_1<::StringW>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::StringW>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__22_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0(::System::Predicate_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0(::System::Predicate_1<::System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpRequestHeaders/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionClose>b__19_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionClose>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ConnectionKeepAlive>b__22_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0(::StringW l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionKeepAlive>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_ExpectContinue>b__29_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ExpectContinue>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/System.Net.Http.Headers.<>c.<get_TransferEncodingChunked>b__71_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0(::System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_TransferEncodingChunked>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Token Empty
::System::Net::Http::Headers::Token System::Net::Http::Headers::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token>("System.Net.Http.Headers", "Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Token Empty
void System::Net::Http::Headers::Token::_set_Empty(::System::Net::Http::Headers::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.Headers.Token/System.Net.Http.Headers.Type type
[[deprecated("Use field access instead!")]] ::System::Net::Http::Headers::Token::Type& System::Net::Http::Headers::Token::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Net::Http::Headers::Token::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$StartPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <EndPosition>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::dyn_$EndPosition$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EndPosition>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_StartPosition
int System::Net::Http::Headers::Token::get_StartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_StartPosition
void System::Net::Http::Headers::Token::set_StartPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_EndPosition
int System::Net::Http::Headers::Token::get_EndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_EndPosition
void System::Net::Http::Headers::Token::set_EndPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::set_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_Kind
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token::Type, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token..ctor
// ABORTED elsewhere.  System::Net::Http::Headers::Token::Token(::System::Net::Http::Headers::Token::Type type, int startPosition, int endPosition)
// Autogenerated method: System.Net.Http.Headers.Token..cctor
void System::Net::Http::Headers::Token::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Token", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.ToString
::StringW System::Net::Http::Headers::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Token/System.Net.Http.Headers.Type
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Error
void System::Net::Http::Headers::Token::Type::_set_Error(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type End
void System::Net::Http::Headers::Token::Type::_set_End(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type Token
void System::Net::Http::Headers::Token::Type::_set_Token(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_QuotedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_QuotedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "QuotedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type QuotedString
void System::Net::Http::Headers::Token::Type::_set_QuotedString(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_QuotedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "QuotedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorEqual
void System::Net::Http::Headers::Token::Type::_set_SeparatorEqual(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSemicolon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSemicolon
void System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSemicolon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSemicolon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorSlash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorSlash
void System::Net::Http::Headers::Token::Type::_set_SeparatorSlash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorSlash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorDash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorDash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorDash"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorDash
void System::Net::Http::Headers::Token::Type::_set_SeparatorDash(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorDash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorDash", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_SeparatorComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_SeparatorComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "SeparatorComma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type SeparatorComma
void System::Net::Http::Headers::Token::Type::_set_SeparatorComma(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_SeparatorComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "SeparatorComma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
::System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::Type::_get_OpenParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_get_OpenParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Token::Type>("System.Net.Http.Headers", "Token/Type", "OpenParens"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.Token/System.Net.Http.Headers.Type OpenParens
void System::Net::Http::Headers::Token::Type::_set_OpenParens(::System::Net::Http::Headers::Token::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::_set_OpenParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token/Type", "OpenParens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Token::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Token::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean[] token_chars
::ArrayW<bool> System::Net::Http::Headers::Lexer::_get_token_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_token_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.Net.Http.Headers", "Lexer", "token_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean[] token_chars
void System::Net::Http::Headers::Lexer::_set_token_chars(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_token_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "token_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 last_token_char
int System::Net::Http::Headers::Lexer::_get_last_token_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_last_token_char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Http.Headers", "Lexer", "last_token_char"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 last_token_char
void System::Net::Http::Headers::Lexer::_set_last_token_char(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_last_token_char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "last_token_char", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] dt_formats
::ArrayW<::StringW> System::Net::Http::Headers::Lexer::_get_dt_formats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_get_dt_formats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Net.Http.Headers", "Lexer", "dt_formats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] dt_formats
void System::Net::Http::Headers::Lexer::_set_dt_formats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::_set_dt_formats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Lexer", "dt_formats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String s
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::Lexer::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Net::Http::Headers::Lexer::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.get_Position
int System::Net::Http::Headers::Lexer::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.set_Position
void System::Net::Http::Headers::Lexer::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Lexer..cctor
void System::Net::Http::Headers::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetStringValue
::StringW System::Net::Http::Headers::Lexer::GetStringValue(::System::Net::Http::Headers::Token start, ::System::Net::Http::Headers::Token end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetQuotedStringValue
::StringW System::Net::Http::Headers::Lexer::GetQuotedStringValue(::System::Net::Http::Headers::Token start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetQuotedStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuotedStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.GetRemainingStringValue
::StringW System::Net::Http::Headers::Lexer::GetRemainingStringValue(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::GetRemainingStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsStarStringValue
bool System::Net::Http::Headers::Lexer::IsStarStringValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsStarStringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStarStringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetNumericValue
bool System::Net::Http::Headers::Lexer::TryGetNumericValue(::System::Net::Http::Headers::Token token, ByRef<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetNumericValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetNumericValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetTimeSpanValue
::System::Nullable_1<::System::TimeSpan> System::Net::Http::Headers::Lexer::TryGetTimeSpanValue(::System::Net::Http::Headers::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetTimeSpanValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetTimeSpanValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::TimeSpan>, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::System::Net::Http::Headers::Token token, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDateValue
bool System::Net::Http::Headers::Lexer::TryGetDateValue(::StringW text, ByRef<::System::DateTimeOffset> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "TryGetDateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.TryGetDoubleValue
bool System::Net::Http::Headers::Lexer::TryGetDoubleValue(::System::Net::Http::Headers::Token token, ByRef<double> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::TryGetDoubleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDoubleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token, byref(value));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidToken
bool System::Net::Http::Headers::Lexer::IsValidToken(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.IsValidCharacter
bool System::Net::Http::Headers::Lexer::IsValidCharacter(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::IsValidCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Lexer", "IsValidCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.EatChar
void System::Net::Http::Headers::Lexer::EatChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::EatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.PeekChar
int System::Net::Http::Headers::Lexer::PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Lexer.ScanCommentOptional
bool System::Net::Http::Headers::Lexer::ScanCommentOptional(ByRef<::StringW> value, ByRef<::System::Net::Http::Headers::Token> readToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::ScanCommentOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCommentOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(value), byref(readToken));
}
// Autogenerated method: System.Net.Http.Headers.Lexer.Scan
::System::Net::Http::Headers::Token System::Net::Http::Headers::Lexer::Scan(bool recognizeDash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Lexer::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recognizeDash)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::Token, false>(this, ___internal__method, recognizeDash);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String media_type
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::dyn_media_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "media_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_CharSet
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_CharSet
void System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_CharSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CharSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.set_MediaType
void System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::set_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::MediaTypeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeHeaderValue::TryParse(::StringW input, ByRef<::System::Net::Http::Headers::MediaTypeHeaderValue*> parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.TryParseMediaType
::System::Nullable_1<::System::Net::Http::Headers::Token> System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType(::System::Net::Http::Headers::Lexer* lexer, ByRef<::StringW> media) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::TryParseMediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue", "TryParseMediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::Net::Http::Headers::Token>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(media));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.Equals
bool System::Net::Http::Headers::MediaTypeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode
int System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue.ToString
::StringW System::Net::Http::Headers::MediaTypeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/MediaTypeHeaderValue_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::MediaTypeHeaderValue::$$c*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9(::System::Net::Http::Headers::MediaTypeHeaderValue::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>*>("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.NameValueHeaderValue> <>9__6_0
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0(::System::Predicate_1<::System::Net::Http::Headers::NameValueHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", "<>9__6_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::MediaTypeHeaderValue::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeHeaderValue/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeHeaderValue/System.Net.Http.Headers.<>c.<get_CharSet>b__6_0
bool System::Net::Http::Headers::MediaTypeHeaderValue::$$c::$get_CharSet$b__6_0(::System::Net::Http::Headers::NameValueHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeHeaderValue::$$c::<get_CharSet>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CharSet>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
#include "System/Net/Http/Headers/MediaTypeWithQualityHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParseElement
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse
bool System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "MediaTypeWithQualityHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::MediaTypeWithQualityHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Name
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Name
void System::Net::Http::Headers::NameValueHeaderValue::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.get_Value
::StringW System::Net::Http::Headers::NameValueHeaderValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.set_Value
void System::Net::Http::Headers::NameValueHeaderValue::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Create
::System::Net::Http::Headers::NameValueHeaderValue* System::Net::Http::Headers::NameValueHeaderValue::Create(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Http::Headers::NameValueHeaderValue*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParsePragma
bool System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParsePragma");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParsePragma", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseParameters
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*> result, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(result), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.Equals
bool System::Net::Http::Headers::NameValueHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.NameValueWithParametersHeaderValue
#include "System/Net/Http/Headers/NameValueWithParametersHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Net.Http.Headers.NameValueHeaderValue> parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>*& System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::dyn_parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueHeaderValue*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.get_Parameters
::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::ICollection_1<::System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::NameValueWithParametersHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse(::StringW input, int minimalCount, ByRef<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, minimalCount, byref(result));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParseElement
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement(::System::Net::Http::Headers::Lexer* lexer, ByRef<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*> parsedValue, ByRef<::System::Net::Http::Headers::Token> t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "NameValueWithParametersHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::NameValueWithParametersHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexer, byref(parsedValue), byref(t));
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals
bool System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode
int System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString
::StringW System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::NameValueWithParametersHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Parser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.Check
void System::Net::Http::Headers::Parser::Token::Check(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Token.TryCheck
bool System::Net::Http::Headers::Parser::Token::TryCheck(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Token::TryCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Token", "TryCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime
#include "System/Net/Http/Headers/Parser_DateTime.hpp"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Func`2<System.Object,System.String> ToString
::System::Func_2<::Il2CppObject*, ::StringW>* System::Net::Http::Headers::Parser::DateTime::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_get_ToString");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::StringW>*>("System.Net.Http.Headers", "Parser/DateTime", "ToString")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Func`2<System.Object,System.String> ToString
void System::Net::Http::Headers::Parser::DateTime::_set_ToString(::System::Func_2<::Il2CppObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime", "ToString", value));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime..cctor
void System::Net::Http::Headers::Parser::DateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime.TryParse
bool System::Net::Http::Headers::Parser::DateTime::TryParse(::StringW input, ByRef<::System::DateTimeOffset> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::System::DateTimeOffset&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c
#include "System/Net/Http/Headers/Parser_DateTime_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
::System::Net::Http::Headers::Parser::DateTime::$$c* System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Http::Headers::Parser::DateTime::$$c*>("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c <>9
void System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9(::System::Net::Http::Headers::Parser::DateTime::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Parser/DateTime/<>c", "<>9", value)));
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c..cctor
void System::Net::Http::Headers::Parser::DateTime::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/DateTime/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.DateTime/System.Net.Http.Headers.<>c.<.cctor>b__2_0
::StringW System::Net::Http::Headers::Parser::DateTime::$$c::$_cctor$b__2_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::DateTime::$$c::<.cctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, l);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress
#include "System/Net/Http/Headers/Parser_EmailAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.EmailAddress.TryParse
bool System::Net::Http::Headers::Parser::EmailAddress::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::EmailAddress::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/EmailAddress", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host
#include "System/Net/Http/Headers/Parser_Host.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Host.TryParse
bool System::Net::Http::Headers::Parser::Host::TryParse(::StringW input, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Host::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Host", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int
#include "System/Net/Http/Headers/Parser_Int.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Int.TryParse
bool System::Net::Http::Headers::Parser::Int::TryParse(::StringW input, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Int::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Int", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long
#include "System/Net/Http/Headers/Parser_Long.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.Parser/System.Net.Http.Headers.Long.TryParse
bool System::Net::Http::Headers::Parser::Long::TryParse(::StringW input, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Http::Headers::Parser::Long::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Parser/Long", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, byref(result));
}
