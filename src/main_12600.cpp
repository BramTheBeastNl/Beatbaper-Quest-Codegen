// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/TransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.GameObjectCreationParameters <GameObjectInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$GameObjectInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$GameObjectInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GameObjectInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.get_GameObjectInfo
::Zenject::GameObjectCreationParameters* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::get_GameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::get_GameObjectInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameObjectInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.set_GameObjectInfo
void Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::set_GameObjectInfo(::Zenject::GameObjectCreationParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::set_GameObjectInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameObjectInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransform
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, parent);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransform
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* parentGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, parentGetter);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransformGroup
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransformGroup(::StringW transformGroupname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransformGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransformGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformGroupname)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, transformGroupname);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IdBinder
#include "Zenject/IdBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo _bindInfo
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::IdBinder::dyn__bindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdBinder::dyn__bindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindInfo"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.IdBinder.WithId
void Zenject::IdBinder::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdBinder::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/IdScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder.WithId
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::IdScopeConcreteIdArgConditionCopyNonLazyBinder::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdScopeConcreteIdArgConditionCopyNonLazyBinder::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IfNotBoundBinder
#include "Zenject/IfNotBoundBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo <BindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::IfNotBoundBinder::dyn_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::dyn_$BindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.IfNotBoundBinder.get_BindInfo
::Zenject::BindInfo* Zenject::IfNotBoundBinder::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IfNotBoundBinder.set_BindInfo
void Zenject::IfNotBoundBinder::set_BindInfo(::Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.IfNotBoundBinder.IfNotBound
void Zenject::IfNotBoundBinder::IfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::IfNotBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IfNotBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstantiateCallbackConditionCopyNonLazyBinder
#include "Zenject/InstantiateCallbackConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.InstantiateCallbackConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0`1
#include "Zenject/InstantiateCallbackConditionCopyNonLazyBinder_--c__DisplayClass2_0_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstantiateCallbackConditionCopyNonLazyBinder.OnInstantiated
::Zenject::ConditionCopyNonLazyBinder* Zenject::InstantiateCallbackConditionCopyNonLazyBinder::OnInstantiated(::System::Action_2<::Zenject::InjectContext*, ::Il2CppObject*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InstantiateCallbackConditionCopyNonLazyBinder::OnInstantiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInstantiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NonLazyBinder
#include "Zenject/NonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NonLazyBinder.NonLazy
::Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::NonLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NonLazyBinder::NonLazy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NonLazy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NonLazyBinder.Lazy
::Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::Lazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NonLazyBinder::Lazy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lazy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsCached
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsSingle
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsTransient
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsTransient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsTransient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsTransient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder
#include "Zenject/SubContainerBinder.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0
#include "Zenject/SubContainerBinder_--c__DisplayClass7_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/SubContainerBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0
#include "Zenject/SubContainerBinder_--c__DisplayClass10_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0
#include "Zenject/SubContainerBinder_--c__DisplayClass11_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/SubContainerBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/SubContainerBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/SubContainerBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0
#include "Zenject/SubContainerBinder_--c__DisplayClass17_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/SubContainerBinder_--c__DisplayClass18_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0
#include "Zenject/SubContainerBinder_--c__DisplayClass20_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/SubContainerBinder_--c__DisplayClass22_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0
#include "Zenject/SubContainerBinder_--c__DisplayClass24_0.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.BindInfo _bindInfo
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::SubContainerBinder::dyn__bindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__bindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindInfo"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.BindStatement _bindStatement
[[deprecated("Use field access instead!")]] ::Zenject::BindStatement*& Zenject::SubContainerBinder::dyn__bindStatement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__bindStatement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindStatement"))->offset;
  return *reinterpret_cast<::Zenject::BindStatement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::SubContainerBinder::dyn__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
[[deprecated("Use field access instead!")]] bool& Zenject::SubContainerBinder::dyn__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__resolveAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolveAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder.set_SubFinalizer
void Zenject::SubContainerBinder::set_SubFinalizer(::Zenject::IBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::set_SubFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstance
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstance(::Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainer);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstanceGetter
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstanceGetter(::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>* subContainerGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstanceGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstanceGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainerGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainerGetter);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstaller
::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstaller(::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByMethod
::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByMethod(::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectMethod(::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewGameObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewGameObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabMethod(::UnityEngine::Object* prefab, ::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectInstaller(::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewGameObjectInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewGameObjectInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabInstaller(::UnityEngine::Object* prefab, ::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceMethod(::StringW resourcePath, ::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResourceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceInstaller(::StringW resourcePath, ::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResourceInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewContextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewContextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewContextPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewContextPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0
#include "Zenject/SubContainerBinder_--c__DisplayClass7_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer subContainer
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerBinder::$$c__DisplayClass7_0::dyn_subContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::dyn_subContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainer"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.<ByInstance>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass7_0::$ByInstance$b__0(::Zenject::DiContainer* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::<ByInstance>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstance>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, _);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass7_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass7_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/SubContainerBinder_--c__DisplayClass8_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,Zenject.DiContainer> subContainerGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass8_0::dyn_subContainerGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::dyn_subContainerGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.<ByInstanceGetter>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass8_0::$ByInstanceGetter$b__0(::Zenject::DiContainer* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::<ByInstanceGetter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstanceGetter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, _);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass8_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass8_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0
#include "Zenject/SubContainerBinder_--c__DisplayClass10_0.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorBindInfo subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.<ByInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass10_0::$ByInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::<ByInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass10_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass10_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0
#include "Zenject/SubContainerBinder_--c__DisplayClass11_0.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorBindInfo subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.<ByMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass11_0::$ByMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::<ByMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass11_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass11_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/SubContainerBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.<ByNewGameObjectMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass12_0::$ByNewGameObjectMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::<ByNewGameObjectMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewGameObjectMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass12_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass12_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/SubContainerBinder_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.<ByNewPrefabMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass13_0::$ByNewPrefabMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::<ByNewPrefabMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass13_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass13_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/SubContainerBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.<ByNewGameObjectInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass15_0::$ByNewGameObjectInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::<ByNewGameObjectInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewGameObjectInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass15_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass15_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0
#include "Zenject/SubContainerBinder_--c__DisplayClass17_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.<ByNewPrefabInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass17_0::$ByNewPrefabInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::<ByNewPrefabInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass17_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass17_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/SubContainerBinder_--c__DisplayClass18_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.<ByNewPrefabResourceMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass18_0::$ByNewPrefabResourceMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::<ByNewPrefabResourceMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabResourceMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass18_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass18_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0
#include "Zenject/SubContainerBinder_--c__DisplayClass20_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.<ByNewPrefabResourceInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass20_0::$ByNewPrefabResourceInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::<ByNewPrefabResourceInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabResourceInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass20_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass20_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/SubContainerBinder_--c__DisplayClass22_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.<ByNewContextPrefab>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass22_0::$ByNewContextPrefab$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::<ByNewContextPrefab>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewContextPrefab>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass22_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass22_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0
#include "Zenject/SubContainerBinder_--c__DisplayClass24_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.<ByNewContextPrefabResource>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass24_0::$ByNewContextPrefabResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::<ByNewContextPrefabResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewContextPrefabResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass24_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass24_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.WithKernel
::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.SubContainerCreatorBindInfo _subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::dyn__subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::dyn__subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder.WithKernel
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingUtil
#include "Zenject/BindingUtil.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InvalidBindResponses
#include "Zenject/InvalidBindResponses.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingUtil.AssertIsValidPrefab
void Zenject::BindingUtil::AssertIsValidPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefab);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidGameObject
void Zenject::BindingUtil::AssertIsValidGameObject(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertDerivesFromUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertDerivesFromUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotComponents
void Zenject::BindingUtil::AssertTypesAreNotComponents(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertTypesAreNotComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertTypesAreNotComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidResourcePath
void Zenject::BindingUtil::AssertIsValidResourcePath(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidResourcePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidResourcePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotAbstract
void Zenject::BindingUtil::AssertTypesAreNotAbstract(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertTypesAreNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertTypesAreNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromType
void Zenject::BindingUtil::AssertIsDerivedFromType(::System::Type* concreteType, ::System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(parentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteType, parentType);
}
// Autogenerated method: Zenject.BindingUtil.AssertConcreteTypeListIsNotEmpty
void Zenject::BindingUtil::AssertConcreteTypeListIsNotEmpty(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertConcreteTypeListIsNotEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertConcreteTypeListIsNotEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes, ::Zenject::InvalidBindResponses invalidBindResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(parentTypes), ::il2cpp_utils::ExtractType(invalidBindResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes, parentTypes, invalidBindResponse);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Type* concreteType, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteType, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::Il2CppObject* instance, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::Il2CppObject* instance, ::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, baseType);
}
// Autogenerated method: Zenject.BindingUtil.CreateCachedProvider
::Zenject::IProvider* Zenject::BindingUtil::CreateCachedProvider(::Zenject::IProvider* creator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::CreateCachedProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "CreateCachedProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creator);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::IBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IBindingFinalizer.FinalizeBinding
void Zenject::IBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NullBindingFinalizer
#include "Zenject/NullBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NullBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::NullBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NullBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NullBindingFinalizer.FinalizeBinding
void Zenject::NullBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NullBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabBindingFinalizer
#include "Zenject/PrefabBindingFinalizer.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.GameObjectCreationParameters _gameObjectBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::PrefabBindingFinalizer::dyn__gameObjectBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__gameObjectBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Object _prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::PrefabBindingFinalizer::dyn__prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*& Zenject::PrefabBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.FinalizeBindingConcrete
void Zenject::PrefabBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.FinalizeBindingSelf
void Zenject::PrefabBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.OnFinalizeBinding
void Zenject::PrefabBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Type> concreteTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabResourceBindingFinalizer
#include "Zenject/PrefabResourceBindingFinalizer.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.GameObjectCreationParameters _gameObjectBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::PrefabResourceBindingFinalizer::dyn__gameObjectBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__gameObjectBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::PrefabResourceBindingFinalizer::dyn__resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*& Zenject::PrefabResourceBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.FinalizeBindingConcrete
void Zenject::PrefabResourceBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.FinalizeBindingSelf
void Zenject::PrefabResourceBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.OnFinalizeBinding
void Zenject::PrefabResourceBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Type> concreteTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProviderBindingFinalizer
#include "Zenject/ProviderBindingFinalizer.hpp"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.ScopeTypes
#include "Zenject/ScopeTypes.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo <BindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::ProviderBindingFinalizer::dyn_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::dyn_$BindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindInfo
::Zenject::BindInfo* Zenject::ProviderBindingFinalizer::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.set_BindInfo
void Zenject::ProviderBindingFinalizer::set_BindInfo(::Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.GetScope
::Zenject::ScopeTypes Zenject::ProviderBindingFinalizer::GetScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::GetScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeTypes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.FinalizeBinding
void Zenject::ProviderBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.OnFinalizeBinding
void Zenject::ProviderBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvider
void Zenject::ProviderBindingFinalizer::RegisterProvider(::Zenject::DiContainer* container, ::System::Type* contractType, ::Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, contractType, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderPerContract
void Zenject::ProviderBindingFinalizer::RegisterProviderPerContract(::Zenject::DiContainer* container, ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProviderPerContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderPerContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderForAllContracts
void Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts(::Zenject::DiContainer* container, ::Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderForAllContracts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersPerContractAndConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes, ::System::Func_3<::System::Type*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersPerContractAndConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.ValidateBindTypes
bool Zenject::ProviderBindingFinalizer::ValidateBindTypes(::System::Type* concreteType, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::ValidateBindTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateBindTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, concreteType, contractType);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersForAllContractsPerConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes, ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersForAllContractsPerConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
::Zenject::ProviderBindingFinalizer::$$c* Zenject::ProviderBindingFinalizer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::ProviderBindingFinalizer::$$c*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9(::Zenject::ProviderBindingFinalizer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__7_0
::System::Func_2<::System::Type*, ::StringW>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::StringW>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__7_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0(::System::Func_2<::System::Type*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__8_0
::System::Func_2<::System::Type*, ::StringW>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::StringW>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__8_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0(::System::Func_2<::System::Type*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c..cctor
void Zenject::ProviderBindingFinalizer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<GetScope>b__7_0
::StringW Zenject::ProviderBindingFinalizer::$$c::$GetScope$b__7_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::<GetScope>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScope>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<FinalizeBinding>b__8_0
::StringW Zenject::ProviderBindingFinalizer::$$c::$FinalizeBinding$b__8_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::<FinalizeBinding>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBinding>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::ProviderBindingFinalizer::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ProviderBindingFinalizer::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopableBindingFinalizer
#include "Zenject/ScopableBindingFinalizer.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*& Zenject::ScopableBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingConcrete
void Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingSelf
void Zenject::ScopableBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.OnFinalizeBinding
void Zenject::ScopableBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::ScopableBindingFinalizer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::ScopableBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.__zenCreate
::Il2CppObject* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass3_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass3_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::ScopableBindingFinalizer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::ScopableBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.__zenCreate
::Il2CppObject* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass4_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass4_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SingleProviderBindingFinalizer
#include "Zenject/SingleProviderBindingFinalizer.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*& Zenject::SingleProviderBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SingleProviderBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SingleProviderBindingFinalizer.OnFinalizeBinding
void Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer
#include "Zenject/SubContainerBindingFinalizer.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::SubContainerBindingFinalizer::dyn__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::dyn__subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
[[deprecated("Use field access instead!")]] bool& Zenject::SubContainerBindingFinalizer::dyn__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::dyn__resolveAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolveAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _creatorFactory
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::DiContainer*, ::Zenject::ISubContainerCreator*>*& Zenject::SubContainerBindingFinalizer::dyn__creatorFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::dyn__creatorFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creatorFactory"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::DiContainer*, ::Zenject::ISubContainerCreator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.FinalizeBindingConcrete
void Zenject::SubContainerBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.FinalizeBindingSelf
void Zenject::SubContainerBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.OnFinalizeBinding
void Zenject::SubContainerBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBindingFinalizer*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorCached*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::dyn_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::dyn_containerCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containerCreator"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBindingFinalizer*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorCached*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::dyn_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::dyn_containerCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containerCreator"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0*& Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer
#include "Zenject/SubContainerPrefabBindingFinalizer.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::SubContainerPrefabBindingFinalizer::dyn__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::dyn__subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
[[deprecated("Use field access instead!")]] bool& Zenject::SubContainerPrefabBindingFinalizer::dyn__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::dyn__resolveAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolveAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _subContainerCreatorFactory
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::DiContainer*, ::Zenject::ISubContainerCreator*>*& Zenject::SubContainerPrefabBindingFinalizer::dyn__subContainerCreatorFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::dyn__subContainerCreatorFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subContainerCreatorFactory"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::DiContainer*, ::Zenject::ISubContainerCreator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.FinalizeBindingConcrete
void Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.FinalizeBindingSelf
void Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.OnFinalizeBinding
void Zenject::SubContainerPrefabBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerPrefabBindingFinalizer*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerPrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorCached*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_containerCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containerCreator"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerPrefabBindingFinalizer*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerPrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorCached*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_containerCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containerCreator"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*& Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerPrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IMemoryPool.get_NumTotal
int Zenject::IMemoryPool::get_NumTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::get_NumTotal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_NumActive
int Zenject::IMemoryPool::get_NumActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::get_NumActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_NumInactive
int Zenject::IMemoryPool::get_NumInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::get_NumInactive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_ItemType
::System::Type* Zenject::IMemoryPool::get_ItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::get_ItemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.Resize
void Zenject::IMemoryPool::Resize(int desiredPoolSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::Resize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredPoolSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, desiredPoolSize);
}
// Autogenerated method: Zenject.IMemoryPool.Clear
void Zenject::IMemoryPool::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.ExpandBy
void Zenject::IMemoryPool::ExpandBy(int numToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::ExpandBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numToAdd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numToAdd);
}
// Autogenerated method: Zenject.IMemoryPool.ShrinkBy
void Zenject::IMemoryPool::ShrinkBy(int numToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::ShrinkBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShrinkBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numToRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numToRemove);
}
// Autogenerated method: Zenject.IMemoryPool.Despawn
void Zenject::IMemoryPool::Despawn(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IMemoryPool::Despawn");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolExceededFixedSizeException
#include "Zenject/PoolExceededFixedSizeException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MemoryPoolSettings
#include "Zenject/MemoryPoolSettings.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.MemoryPoolSettings Default
::Zenject::MemoryPoolSettings* Zenject::MemoryPoolSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::MemoryPoolSettings*>("Zenject", "MemoryPoolSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.MemoryPoolSettings Default
void Zenject::MemoryPoolSettings::_set_Default(::Zenject::MemoryPoolSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "MemoryPoolSettings", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InitialSize
[[deprecated("Use field access instead!")]] int& Zenject::MemoryPoolSettings::dyn_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::dyn_InitialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxSize
[[deprecated("Use field access instead!")]] int& Zenject::MemoryPoolSettings::dyn_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::dyn_MaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PoolExpandMethods ExpandMethod
[[deprecated("Use field access instead!")]] ::Zenject::PoolExpandMethods& Zenject::MemoryPoolSettings::dyn_ExpandMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::dyn_ExpandMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpandMethod"))->offset;
  return *reinterpret_cast<::Zenject::PoolExpandMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ShowExpandWarning
[[deprecated("Use field access instead!")]] bool& Zenject::MemoryPoolSettings::dyn_ShowExpandWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::dyn_ShowExpandWarning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ShowExpandWarning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.MemoryPoolSettings..cctor
void Zenject::MemoryPoolSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "MemoryPoolSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolSettings.__zenCreate
::Il2CppObject* Zenject::MemoryPoolSettings::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "MemoryPoolSettings", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.MemoryPoolSettings.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::MemoryPoolSettings::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolSettings::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "MemoryPoolSettings", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PoolCleanupChecker
#include "Zenject/PoolCleanupChecker.hpp"
// Including type: Zenject.PoolCleanupChecker/Zenject.<>c
#include "Zenject/PoolCleanupChecker_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.IMemoryPool> _poolFactories
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::IMemoryPool*>*& Zenject::PoolCleanupChecker::dyn__poolFactories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::dyn__poolFactories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poolFactories"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::IMemoryPool*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Type> _ignoredPools
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::PoolCleanupChecker::dyn__ignoredPools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::dyn__ignoredPools");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoredPools"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PoolCleanupChecker.LateDispose
void Zenject::PoolCleanupChecker::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::LateDispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PoolCleanupChecker.__zenCreate
::Il2CppObject* Zenject::PoolCleanupChecker::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PoolCleanupChecker.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PoolCleanupChecker::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PoolCleanupChecker/Zenject.<>c
#include "Zenject/PoolCleanupChecker_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.PoolCleanupChecker/Zenject.<>c <>9
::Zenject::PoolCleanupChecker::$$c* Zenject::PoolCleanupChecker::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::PoolCleanupChecker::$$c*>("Zenject", "PoolCleanupChecker/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.PoolCleanupChecker/Zenject.<>c <>9
void Zenject::PoolCleanupChecker::$$c::_set_$$9(::Zenject::PoolCleanupChecker::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolCleanupChecker/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
::System::Func_2<::System::Type*, bool>* Zenject::PoolCleanupChecker::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "PoolCleanupChecker/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
void Zenject::PoolCleanupChecker::$$c::_set_$$9__2_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolCleanupChecker/<>c", "<>9__2_0", value)));
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c..cctor
void Zenject::PoolCleanupChecker::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c.<.ctor>b__2_0
bool Zenject::PoolCleanupChecker::$$c::$_ctor$b__2_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::PoolCleanupChecker::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PoolCleanupChecker::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolCleanupChecker::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52
#include "Zenject/InjectContext_-get_ParentContexts-d__52.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54
#include "Zenject/InjectContext_-get_ParentContextsAndSelf-d__54.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56
#include "Zenject/InjectContext_-get_AllObjectTypes-d__56.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindingId _bindingId
[[deprecated("Use field access instead!")]] ::Zenject::BindingId& Zenject::InjectContext::dyn__bindingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__bindingId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindingId"))->offset;
  return *reinterpret_cast<::Zenject::BindingId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _objectType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::InjectContext::dyn__objectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__objectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext _parentContext
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::dyn__parentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__parentContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentContext"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _objectInstance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::InjectContext::dyn__objectInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__objectInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectInstance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _memberName
[[deprecated("Use field access instead!")]] ::StringW& Zenject::InjectContext::dyn__memberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__memberName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_memberName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _optional
[[deprecated("Use field access instead!")]] bool& Zenject::InjectContext::dyn__optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__optional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optional"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectSources _sourceType
[[deprecated("Use field access instead!")]] ::Zenject::InjectSources& Zenject::InjectContext::dyn__sourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__sourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceType"))->offset;
  return *reinterpret_cast<::Zenject::InjectSources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _fallBackValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::InjectContext::dyn__fallBackValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__fallBackValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fallBackValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _concreteIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::InjectContext::dyn__concreteIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__concreteIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_concreteIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::InjectContext::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.InjectContext.get_BindingId
::Zenject::BindingId Zenject::InjectContext::get_BindingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_BindingId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingId, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_ObjectType
::System::Type* Zenject::InjectContext::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ObjectType
void Zenject::InjectContext::set_ObjectType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContext
::Zenject::InjectContext* Zenject::InjectContext::get_ParentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ParentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ParentContext
void Zenject::InjectContext::set_ParentContext(::Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_ParentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ObjectInstance
::Il2CppObject* Zenject::InjectContext::get_ObjectInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ObjectInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ObjectInstance
void Zenject::InjectContext::set_ObjectInstance(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_ObjectInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Identifier
::Il2CppObject* Zenject::InjectContext::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Identifier
void Zenject::InjectContext::set_Identifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_MemberName
::StringW Zenject::InjectContext::get_MemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_MemberName
void Zenject::InjectContext::set_MemberName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_MemberType
::System::Type* Zenject::InjectContext::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_MemberType
void Zenject::InjectContext::set_MemberType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Optional
bool Zenject::InjectContext::get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Optional
void Zenject::InjectContext::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_SourceType
::Zenject::InjectSources Zenject::InjectContext::get_SourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectSources, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_SourceType
void Zenject::InjectContext::set_SourceType(::Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ConcreteIdentifier
::Il2CppObject* Zenject::InjectContext::get_ConcreteIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ConcreteIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConcreteIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ConcreteIdentifier
void Zenject::InjectContext::set_ConcreteIdentifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_ConcreteIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConcreteIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_FallBackValue
::Il2CppObject* Zenject::InjectContext::get_FallBackValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_FallBackValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FallBackValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_FallBackValue
void Zenject::InjectContext::set_FallBackValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_FallBackValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FallBackValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Container
::Zenject::DiContainer* Zenject::InjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Container
void Zenject::InjectContext::set_Container(::Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::set_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContexts
::System::Collections::Generic::IEnumerable_1<::Zenject::InjectContext*>* Zenject::InjectContext::get_ParentContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ParentContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContextsAndSelf
::System::Collections::Generic::IEnumerable_1<::Zenject::InjectContext*>* Zenject::InjectContext::get_ParentContextsAndSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_ParentContextsAndSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContextsAndSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_AllObjectTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::InjectContext::get_AllObjectTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::get_AllObjectTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllObjectTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.Dispose
void Zenject::InjectContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.Reset
void Zenject::InjectContext::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.CreateSubContext
::Zenject::InjectContext* Zenject::InjectContext::CreateSubContext(::System::Type* memberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method, memberType);
}
// Autogenerated method: Zenject.InjectContext.CreateSubContext
::Zenject::InjectContext* Zenject::InjectContext::CreateSubContext(::System::Type* memberType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method, memberType, identifier);
}
// Autogenerated method: Zenject.InjectContext.Clone
::Zenject::InjectContext* Zenject::InjectContext::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.GetObjectGraphString
::StringW Zenject::InjectContext::GetObjectGraphString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::GetObjectGraphString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectGraphString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52
#include "Zenject/InjectContext_-get_ParentContexts-d__52.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext <>2__current
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>*& Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current
::Zenject::InjectContext* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_Generic_IEnumerator$Zenject_InjectContext$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.IDisposable.Dispose
void Zenject::InjectContext::$get_ParentContexts$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.MoveNext
bool Zenject::InjectContext::$get_ParentContexts$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.<>m__Finally1
void Zenject::InjectContext::$get_ParentContexts$d__52::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_Generic_IEnumerable$Zenject_InjectContext$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.__zenCreate
::Il2CppObject* Zenject::InjectContext::$get_ParentContexts$d__52::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_ParentContexts>d__52", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::InjectContext::$get_ParentContexts$d__52::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContexts$d__52::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_ParentContexts>d__52", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54
#include "Zenject/InjectContext_-get_ParentContextsAndSelf-d__54.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext <>2__current
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>*& Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current
::Zenject::InjectContext* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_Generic_IEnumerator$Zenject_InjectContext$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.IDisposable.Dispose
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.MoveNext
bool Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.<>m__Finally1
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_Generic_IEnumerable$Zenject_InjectContext$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.__zenCreate
::Il2CppObject* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_ParentContextsAndSelf>d__54", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_ParentContextsAndSelf>d__54", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56
#include "Zenject/InjectContext_-get_AllObjectTypes-d__56.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <>2__current
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>*& Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::Zenject::InjectContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.Generic.IEnumerator<System.Type>.get_Current
::System::Type* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_Generic_IEnumerator$System_Type$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.Generic.IEnumerator<System.Type>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Type>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.IDisposable.Dispose
void Zenject::InjectContext::$get_AllObjectTypes$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.MoveNext
bool Zenject::InjectContext::$get_AllObjectTypes$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.<>m__Finally1
void Zenject::InjectContext::$get_AllObjectTypes$d__56::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Type*>* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_Generic_IEnumerable$System_Type$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.__zenCreate
::Il2CppObject* Zenject::InjectContext::$get_AllObjectTypes$d__56::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_AllObjectTypes>d__56", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::InjectContext::$get_AllObjectTypes$d__56::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectContext::$get_AllObjectTypes$d__56::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectContext/<get_AllObjectTypes>d__56", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TypeValuePair
#include "Zenject/TypeValuePair.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type Type
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::TypeValuePair::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TypeValuePair::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::TypeValuePair::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TypeValuePair::dyn_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.TypeValuePair..ctor
// ABORTED elsewhere.  Zenject::TypeValuePair::TypeValuePair(::System::Type* type, ::Il2CppObject* value)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil
#include "Zenject/InjectUtil.hpp"
// Including type: Zenject.InjectUtil/Zenject.<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InjectUtil.CreateArgList
::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* Zenject::InjectUtil::CreateArgList(::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::CreateArgList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "CreateArgList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: Zenject.InjectUtil.PopValueWithType
bool Zenject::InjectUtil::PopValueWithType(::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* extraArgMap, ::System::Type* injectedFieldType, ByRef<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::PopValueWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "PopValueWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraArgMap), ::il2cpp_utils::ExtractType(injectedFieldType), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraArgMap, injectedFieldType, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil/Zenject.<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.InjectUtil/Zenject.<>c <>9
::Zenject::InjectUtil::$$c* Zenject::InjectUtil::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::InjectUtil::$$c*>("Zenject", "InjectUtil/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.InjectUtil/Zenject.<>c <>9
void Zenject::InjectUtil::$$c::_set_$$9(::Zenject::InjectUtil::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
::System::Func_2<::Il2CppObject*, ::Zenject::TypeValuePair>* Zenject::InjectUtil::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppObject*, ::Zenject::TypeValuePair>*>("Zenject", "InjectUtil/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
void Zenject::InjectUtil::$$c::_set_$$9__0_0(::System::Func_2<::Il2CppObject*, ::Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c..cctor
void Zenject::InjectUtil::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c.<CreateArgList>b__0_0
::Zenject::TypeValuePair Zenject::InjectUtil::$$c::$CreateArgList$b__0_0(::Il2CppObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::<CreateArgList>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateArgList>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::TypeValuePair, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::InjectUtil::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::InjectUtil::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InjectUtil::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Context
#include "Zenject/Context.hpp"
// Including type: Zenject.Context/Zenject.<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.ZenjectBinding
#include "Zenject/ZenjectBinding.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _scriptableObjectInstallers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::ScriptableObjectInstaller*>*& Zenject::Context::dyn__scriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::dyn__scriptableObjectInstallers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scriptableObjectInstallers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::ScriptableObjectInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _monoInstallers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>*& Zenject::Context::dyn__monoInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::dyn__monoInstallers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_monoInstallers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _installerPrefabs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>*& Zenject::Context::dyn__installerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::dyn__installerPrefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_installerPrefabs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.InstallerBase> _normalInstallers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::InstallerBase*>*& Zenject::Context::dyn__normalInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::dyn__normalInstallers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalInstallers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::InstallerBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Type> _normalInstallerTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::Context::dyn__normalInstallerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::dyn__normalInstallerTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalInstallerTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.Context.get_Installers
::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* Zenject::Context::get_Installers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_Installers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Installers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_Installers
void Zenject::Context::set_Installers(::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::set_Installers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Installers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_InstallerPrefabs
::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* Zenject::Context::get_InstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_InstallerPrefabs
void Zenject::Context::set_InstallerPrefabs(::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::set_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_ScriptableObjectInstallers
::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>* Zenject::Context::get_ScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_ScriptableObjectInstallers
void Zenject::Context::set_ScriptableObjectInstallers(::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::set_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallerTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::Context::get_NormalInstallerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallerTypes
void Zenject::Context::set_NormalInstallerTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::set_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallers
::System::Collections::Generic::IEnumerable_1<::Zenject::InstallerBase*>* Zenject::Context::get_NormalInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::InstallerBase*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallers
void Zenject::Context::set_NormalInstallers(::System::Collections::Generic::IEnumerable_1<::Zenject::InstallerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::set_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_Container
::Zenject::DiContainer* Zenject::Context::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.GetRootGameObjects
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::Context::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.AddNormalInstallerType
void Zenject::Context::AddNormalInstallerType(::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::AddNormalInstallerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNormalInstallerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.Context.AddNormalInstaller
void Zenject::Context::AddNormalInstaller(::Zenject::InstallerBase* installer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::AddNormalInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNormalInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, installer);
}
// Autogenerated method: Zenject.Context.CheckInstallerPrefabTypes
void Zenject::Context::CheckInstallerPrefabTypes(::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>* installers, ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::CheckInstallerPrefabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInstallerPrefabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installers), ::il2cpp_utils::ExtractType(installerPrefabs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers(::System::Collections::Generic::List_1<::Zenject::InstallerBase*>* normalInstallers, ::System::Collections::Generic::List_1<::System::Type*>* normalInstallerTypes, ::System::Collections::Generic::List_1<::Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers, ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>* installers, ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalInstallers), ::il2cpp_utils::ExtractType(normalInstallerTypes), ::il2cpp_utils::ExtractType(scriptableObjectInstallers), ::il2cpp_utils::ExtractType(installers), ::il2cpp_utils::ExtractType(installerPrefabs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, normalInstallers, normalInstallerTypes, scriptableObjectInstallers, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallSceneBindings
void Zenject::Context::InstallSceneBindings(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::InstallSceneBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallSceneBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.Context.InstallZenjectBinding
void Zenject::Context::InstallZenjectBinding(::Zenject::ZenjectBinding* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::InstallZenjectBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallZenjectBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Zenject.Context.GetInjectableMonoBehaviours
void Zenject::Context::GetInjectableMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, components);
}
// Autogenerated method: Zenject.Context.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::Context::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Context/Zenject.<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Context/Zenject.<>c <>9
::Zenject::Context::$$c* Zenject::Context::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::Context::$$c*>("Zenject", "Context/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Context/Zenject.<>c <>9
void Zenject::Context::$$c::_set_$$9(::Zenject::Context::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
::System::Func_2<::System::Type*, bool>* Zenject::Context::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "Context/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
void Zenject::Context::$$c::_set_$$9__16_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9__16_0", value)));
}
// Autogenerated method: Zenject.Context/Zenject.<>c..cctor
void Zenject::Context::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Context/Zenject.<>c.<set_NormalInstallerTypes>b__16_0
bool Zenject::Context::$$c::$set_NormalInstallerTypes$b__16_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::<set_NormalInstallerTypes>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_NormalInstallerTypes>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.Context/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::Context::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.Context/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::Context::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::Context::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::GameObjectContext::dyn_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn_PreInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::GameObjectContext::dyn_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn_PostInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::GameObjectContext::dyn_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn_PreResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::GameObjectContext::dyn_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn_PostResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.MonoKernel _kernel
[[deprecated("Use field access instead!")]] ::Zenject::MonoKernel*& Zenject::GameObjectContext::dyn__kernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn__kernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kernel"))->offset;
  return *reinterpret_cast<::Zenject::MonoKernel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::GameObjectContext::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.GameObjectContext.add_PreInstall
void Zenject::GameObjectContext::add_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreInstall
void Zenject::GameObjectContext::remove_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostInstall
void Zenject::GameObjectContext::add_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostInstall
void Zenject::GameObjectContext::remove_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PreResolve
void Zenject::GameObjectContext::add_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreResolve
void Zenject::GameObjectContext::remove_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostResolve
void Zenject::GameObjectContext::add_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostResolve
void Zenject::GameObjectContext::remove_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.Construct
void Zenject::GameObjectContext::Construct(::Zenject::DiContainer* parentContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentContainer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentContainer);
}
// Autogenerated method: Zenject.GameObjectContext.InstallBindings
void Zenject::GameObjectContext::InstallBindings(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.GameObjectContext.__zenInjectMethod0
void Zenject::GameObjectContext::__zenInjectMethod0(::Il2CppObject* P_0, ::ArrayW<::Il2CppObject*> P_1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::__zenInjectMethod0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectContext", "__zenInjectMethod0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0), ::il2cpp_utils::ExtractType(P_1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0, P_1);
}
// Autogenerated method: Zenject.GameObjectContext.get_Container
::Zenject::DiContainer* Zenject::GameObjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetRootGameObjects
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::GameObjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.RunInternal
void Zenject::GameObjectContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetInjectableMonoBehaviours
void Zenject::GameObjectContext::GetInjectableMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated method: Zenject.GameObjectContext.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::GameObjectContext::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectContext::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectContext", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProjectContext
#include "Zenject/ProjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePath
::StringW Zenject::ProjectContext::_get_ProjectContextResourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_get_ProjectContextResourcePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Zenject", "ProjectContext", "ProjectContextResourcePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePath
void Zenject::ProjectContext::_set_ProjectContextResourcePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_set_ProjectContextResourcePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePathOld
::StringW Zenject::ProjectContext::_get_ProjectContextResourcePathOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_get_ProjectContextResourcePathOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Zenject", "ProjectContext", "ProjectContextResourcePathOld"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePathOld
void Zenject::ProjectContext::_set_ProjectContextResourcePathOld(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_set_ProjectContextResourcePathOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePathOld", value));
}
// Autogenerated static field getter
// Get static field: static private Zenject.ProjectContext _instance
::Zenject::ProjectContext* Zenject::ProjectContext::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::ProjectContext*>("Zenject", "ProjectContext", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.ProjectContext _instance
void Zenject::ProjectContext::_set__instance(::Zenject::ProjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
bool Zenject::ProjectContext::_get_$ValidateOnNextRun$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_get_$ValidateOnNextRun$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
void Zenject::ProjectContext::_set_$ValidateOnNextRun$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::_set_$ValidateOnNextRun$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::ProjectContext::dyn_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn_PreInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::ProjectContext::dyn_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn_PostInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::ProjectContext::dyn_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn_PreResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::ProjectContext::dyn_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn_PostResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _parentNewObjectsUnderContext
[[deprecated("Use field access instead!")]] bool& Zenject::ProjectContext::dyn__parentNewObjectsUnderContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn__parentNewObjectsUnderContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentNewObjectsUnderContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ReflectionBakingCoverageModes _editorReflectionBakingCoverageMode
[[deprecated("Use field access instead!")]] ::Zenject::ReflectionBakingCoverageModes& Zenject::ProjectContext::dyn__editorReflectionBakingCoverageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn__editorReflectionBakingCoverageMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorReflectionBakingCoverageMode"))->offset;
  return *reinterpret_cast<::Zenject::ReflectionBakingCoverageModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ReflectionBakingCoverageModes _buildsReflectionBakingCoverageMode
[[deprecated("Use field access instead!")]] ::Zenject::ReflectionBakingCoverageModes& Zenject::ProjectContext::dyn__buildsReflectionBakingCoverageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn__buildsReflectionBakingCoverageMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buildsReflectionBakingCoverageMode"))->offset;
  return *reinterpret_cast<::Zenject::ReflectionBakingCoverageModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ZenjectSettings _settings
[[deprecated("Use field access instead!")]] ::Zenject::ZenjectSettings*& Zenject::ProjectContext::dyn__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn__settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settings"))->offset;
  return *reinterpret_cast<::Zenject::ZenjectSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::ProjectContext::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ProjectContext.get_HasInstance
bool Zenject::ProjectContext::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_Instance
::Zenject::ProjectContext* Zenject::ProjectContext::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ProjectContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_ValidateOnNextRun
bool Zenject::ProjectContext::get_ValidateOnNextRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::get_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ValidateOnNextRun
void Zenject::ProjectContext::set_ValidateOnNextRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::set_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "set_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.get_ParentNewObjectsUnderContext
bool Zenject::ProjectContext::get_ParentNewObjectsUnderContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::get_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ParentNewObjectsUnderContext
void Zenject::ProjectContext::set_ParentNewObjectsUnderContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::set_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PreInstall
void Zenject::ProjectContext::add_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreInstall
void Zenject::ProjectContext::remove_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostInstall
void Zenject::ProjectContext::add_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostInstall
void Zenject::ProjectContext::remove_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PreResolve
void Zenject::ProjectContext::add_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreResolve
void Zenject::ProjectContext::remove_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostResolve
void Zenject::ProjectContext::add_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostResolve
void Zenject::ProjectContext::remove_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.TryGetPrefab
::UnityEngine::GameObject* Zenject::ProjectContext::TryGetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::TryGetPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "TryGetPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstantiateAndInitialize
void Zenject::ProjectContext::InstantiateAndInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::InstantiateAndInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "InstantiateAndInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.EnsureIsInitialized
void Zenject::ProjectContext::EnsureIsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::EnsureIsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureIsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Awake
void Zenject::ProjectContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Initialize
void Zenject::ProjectContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstallBindings
void Zenject::ProjectContext::InstallBindings(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.ProjectContext.get_Container
::Zenject::DiContainer* Zenject::ProjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetRootGameObjects
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::ProjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetInjectableMonoBehaviours
void Zenject::ProjectContext::GetInjectableMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated method: Zenject.ProjectContext.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ProjectContext::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProjectContext::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.RunnableContext
#include "Zenject/RunnableContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _staticAutoRun
bool Zenject::RunnableContext::_get__staticAutoRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::_get__staticAutoRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Zenject", "RunnableContext", "_staticAutoRun"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _staticAutoRun
void Zenject::RunnableContext::_set__staticAutoRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::_set__staticAutoRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RunnableContext", "_staticAutoRun", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _autoRun
[[deprecated("Use field access instead!")]] bool& Zenject::RunnableContext::dyn__autoRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::dyn__autoRun");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoRun"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Initialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& Zenject::RunnableContext::dyn_$Initialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::dyn_$Initialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Initialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.RunnableContext.get_Initialized
bool Zenject::RunnableContext::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.set_Initialized
void Zenject::RunnableContext::set_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::set_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.RunnableContext..cctor
void Zenject::RunnableContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "RunnableContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.Initialize
void Zenject::RunnableContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.Run
void Zenject::RunnableContext::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.RunInternal
void Zenject::RunnableContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::RunnableContext::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::RunnableContext::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "RunnableContext", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0
#include "Zenject/SceneContext_--c__DisplayClass49_0.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0
#include "Zenject/SceneContext_--c__DisplayClass51_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
::System::Action_1<::Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsEarlyInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_get_ExtraBindingsEarlyInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsEarlyInstallMethod(::System::Action_1<::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_set_ExtraBindingsEarlyInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
::System::Action_1<::Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_get_ExtraBindingsInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsInstallMethod(::System::Action_1<::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_set_ExtraBindingsInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
::System::Action_1<::Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsLateInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_get_ExtraBindingsLateInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsLateInstallMethod(::System::Action_1<::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_set_ExtraBindingsLateInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraPostInstallMethod
::System::Action_1<::Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraPostInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_get_ExtraPostInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraPostInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraPostInstallMethod
void Zenject::SceneContext::_set_ExtraPostInstallMethod(::System::Action_1<::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_set_ExtraPostInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraPostInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>* Zenject::SceneContext::_get_ParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_get_ParentContainers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>*>("Zenject", "SceneContext", "ParentContainers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
void Zenject::SceneContext::_set_ParentContainers(::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::_set_ParentContainers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ParentContainers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::SceneContext::dyn_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_PreInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::SceneContext::dyn_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_PostInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostInstall"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::SceneContext::dyn_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_PreResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
[[deprecated("Use field access instead!")]] ::System::Action*& Zenject::SceneContext::dyn_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_PostResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PostResolve"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPreInstall
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Zenject::SceneContext::dyn_OnPreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_OnPreInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreInstall"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPostInstall
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Zenject::SceneContext::dyn_OnPostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_OnPostInstall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostInstall"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPreResolve
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Zenject::SceneContext::dyn_OnPreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_OnPreResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPreResolve"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPostResolve
[[deprecated("Use field access instead!")]] ::UnityEngine::Events::UnityEvent*& Zenject::SceneContext::dyn_OnPostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn_OnPostResolve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnPostResolve"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _parentNewObjectsUnderSceneContext
[[deprecated("Use field access instead!")]] bool& Zenject::SceneContext::dyn__parentNewObjectsUnderSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__parentNewObjectsUnderSceneContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentNewObjectsUnderSceneContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _contractNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Zenject::SceneContext::dyn__contractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__contractNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _parentContractNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Zenject::SceneContext::dyn__parentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__parentContractNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentContractNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SceneContext::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.SceneDecoratorContext> _decoratorContexts
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::SceneDecoratorContext*>*& Zenject::SceneContext::dyn__decoratorContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__decoratorContexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decoratorContexts"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::SceneDecoratorContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasInstalled
[[deprecated("Use field access instead!")]] bool& Zenject::SceneContext::dyn__hasInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__hasInstalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasInstalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasResolved
[[deprecated("Use field access instead!")]] bool& Zenject::SceneContext::dyn__hasResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::dyn__hasResolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasResolved"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SceneContext.get_HasResolved
bool Zenject::SceneContext::get_HasResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_HasResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_HasInstalled
bool Zenject::SceneContext::get_HasInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_HasInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_IsValidating
bool Zenject::SceneContext::get_IsValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_IsValidating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_ContractNames
::System::Collections::Generic::IEnumerable_1<::StringW>* Zenject::SceneContext::get_ContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_ContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ContractNames
void Zenject::SceneContext::set_ContractNames(::System::Collections::Generic::IEnumerable_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::set_ContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentContractNames
::System::Collections::Generic::IEnumerable_1<::StringW>* Zenject::SceneContext::get_ParentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentContractNames
void Zenject::SceneContext::set_ParentContractNames(::System::Collections::Generic::IEnumerable_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::set_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentNewObjectsUnderSceneContext
bool Zenject::SceneContext::get_ParentNewObjectsUnderSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentNewObjectsUnderSceneContext
void Zenject::SceneContext::set_ParentNewObjectsUnderSceneContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::set_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PreInstall
void Zenject::SceneContext::add_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreInstall
void Zenject::SceneContext::remove_PreInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostInstall
void Zenject::SceneContext::add_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostInstall
void Zenject::SceneContext::remove_PostInstall(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PreResolve
void Zenject::SceneContext::add_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreResolve
void Zenject::SceneContext::remove_PreResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostResolve
void Zenject::SceneContext::add_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostResolve
void Zenject::SceneContext::remove_PostResolve(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.Awake
void Zenject::SceneContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Validate
void Zenject::SceneContext::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetParentContainers
::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>* Zenject::SceneContext::GetParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::GetParentContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.LookupDecoratorContexts
::System::Collections::Generic::List_1<::Zenject::SceneDecoratorContext*>* Zenject::SceneContext::LookupDecoratorContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::LookupDecoratorContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupDecoratorContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Install
void Zenject::SceneContext::Install() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::Install");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Install", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Resolve
void Zenject::SceneContext::Resolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.InstallBindings
void Zenject::SceneContext::InstallBindings(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.SceneContext.Create
::Zenject::SceneContext* Zenject::SceneContext::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SceneContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.<LookupDecoratorContexts>b__50_2
bool Zenject::SceneContext::$LookupDecoratorContexts$b__50_2(::Zenject::SceneDecoratorContext* decoratorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::<LookupDecoratorContexts>b__50_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoratorContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, decoratorContext);
}
// Autogenerated method: Zenject.SceneContext.get_Container
::Zenject::DiContainer* Zenject::SceneContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.RunInternal
void Zenject::SceneContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetRootGameObjects
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::SceneContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetInjectableMonoBehaviours
void Zenject::SceneContext::GetInjectableMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated method: Zenject.SceneContext.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SceneContext::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0
#include "Zenject/SceneContext_--c__DisplayClass49_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> parentContractNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& Zenject::SceneContext::$$c__DisplayClass49_0::dyn_parentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::dyn_parentContractNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentContractNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.String,System.Boolean> <>9__4
[[deprecated("Use field access instead!")]] ::System::Func_2<::StringW, bool>*& Zenject::SceneContext::$$c__DisplayClass49_0::dyn_$$9__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::dyn_$$9__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
  return *reinterpret_cast<::System::Func_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.<GetParentContainers>b__2
bool Zenject::SceneContext::$$c__DisplayClass49_0::$GetParentContainers$b__2(::Zenject::SceneContext* sceneContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::<GetParentContainers>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneContext)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sceneContext);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.<GetParentContainers>b__4
bool Zenject::SceneContext::$$c__DisplayClass49_0::$GetParentContainers$b__4(::StringW x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::<GetParentContainers>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.__zenCreate
::Il2CppObject* Zenject::SceneContext::$$c__DisplayClass49_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c__DisplayClass49_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SceneContext::$$c__DisplayClass49_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass49_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c__DisplayClass49_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext/Zenject.<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.SceneContext/Zenject.<>c <>9
::Zenject::SceneContext::$$c* Zenject::SceneContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::SceneContext::$$c*>("Zenject", "SceneContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.SceneContext/Zenject.<>c <>9
void Zenject::SceneContext::$$c::_set_$$9(::Zenject::SceneContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
void Zenject::SceneContext::$$c::_set_$$9__49_0(::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__49_1
::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneContext*>*>* Zenject::SceneContext::$$c::_get_$$9__49_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9__49_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__49_1
void Zenject::SceneContext::$$c::_set_$$9__49_1(::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9__49_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__49_3
::System::Func_2<::Zenject::SceneContext*, ::Zenject::DiContainer*>* Zenject::SceneContext::$$c::_get_$$9__49_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9__49_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Zenject::SceneContext*, ::Zenject::DiContainer*>*>("Zenject", "SceneContext/<>c", "<>9__49_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__49_3
void Zenject::SceneContext::$$c::_set_$$9__49_3(::System::Func_2<::Zenject::SceneContext*, ::Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9__49_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__50_0
::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9__50_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__50_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__50_0
void Zenject::SceneContext::$$c::_set_$$9__50_0(::System::Func_2<::UnityEngine::SceneManagement::Scene, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9__50_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__50_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__50_1
::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneDecoratorContext*>*>* Zenject::SceneContext::$$c::_get_$$9__50_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_get_$$9__50_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneDecoratorContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__50_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__50_1
void Zenject::SceneContext::$$c::_set_$$9__50_1(::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::Zenject::SceneDecoratorContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::_set_$$9__50_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__50_1", value)));
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c..cctor
void Zenject::SceneContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_0
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$GetParentContainers$b__49_0(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::<GetParentContainers>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_1
::System::Collections::Generic::IEnumerable_1<::Zenject::SceneContext*>* Zenject::SceneContext::$$c::$GetParentContainers$b__49_1(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::<GetParentContainers>b__49_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::SceneContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_3
::Zenject::DiContainer* Zenject::SceneContext::$$c::$GetParentContainers$b__49_3(::Zenject::SceneContext* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::<GetParentContainers>b__49_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<LookupDecoratorContexts>b__50_0
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__50_0(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::<LookupDecoratorContexts>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<LookupDecoratorContexts>b__50_1
::System::Collections::Generic::IEnumerable_1<::Zenject::SceneDecoratorContext*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__50_1(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::<LookupDecoratorContexts>b__50_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::SceneContext::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SceneContext::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0
#include "Zenject/SceneContext_--c__DisplayClass51_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> parents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>*& Zenject::SceneContext::$$c__DisplayClass51_0::dyn_parents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass51_0::dyn_parents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0.<Install>b__0
bool Zenject::SceneContext::$$c__DisplayClass51_0::$Install$b__0(::Zenject::DiContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass51_0::<Install>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Install>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0.__zenCreate
::Il2CppObject* Zenject::SceneContext::$$c__DisplayClass51_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass51_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c__DisplayClass51_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SceneContext::$$c__DisplayClass51_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneContext::$$c__DisplayClass51_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c__DisplayClass51_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>*& Zenject::SceneDecoratorContext::dyn__lateInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__lateInstallers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lateInstallers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallerPrefabs
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>*& Zenject::SceneDecoratorContext::dyn__lateInstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__lateInstallerPrefabs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lateInstallerPrefabs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::MonoInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _lateScriptableObjectInstallers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::ScriptableObjectInstaller*>*& Zenject::SceneDecoratorContext::dyn__lateScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__lateScriptableObjectInstallers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lateScriptableObjectInstallers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::ScriptableObjectInstaller*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _decoratedContractName
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SceneDecoratorContext::dyn__decoratedContractName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__decoratedContractName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decoratedContractName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SceneDecoratorContext::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _injectableMonoBehaviours
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*& Zenject::SceneDecoratorContext::dyn__injectableMonoBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::dyn__injectableMonoBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_injectableMonoBehaviours"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallers
::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::get_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallers
void Zenject::SceneDecoratorContext::set_LateInstallers(::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::set_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallerPrefabs
::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::get_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallerPrefabs
void Zenject::SceneDecoratorContext::set_LateInstallerPrefabs(::System::Collections::Generic::IEnumerable_1<::Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::set_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateScriptableObjectInstallers
::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>* Zenject::SceneDecoratorContext::get_LateScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::get_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateScriptableObjectInstallers
void Zenject::SceneDecoratorContext::set_LateScriptableObjectInstallers(::System::Collections::Generic::IEnumerable_1<::Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::set_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_DecoratedContractName
::StringW Zenject::SceneDecoratorContext::get_DecoratedContractName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::get_DecoratedContractName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DecoratedContractName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.Initialize
void Zenject::SceneDecoratorContext::Initialize(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorSceneBindings
void Zenject::SceneDecoratorContext::InstallDecoratorSceneBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::InstallDecoratorSceneBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDecoratorSceneBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::InstallDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDecoratorInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallLateDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallLateDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::InstallLateDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallLateDecoratorInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_Container
::Zenject::DiContainer* Zenject::SceneDecoratorContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetRootGameObjects
::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* Zenject::SceneDecoratorContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetInjectableMonoBehaviours
void Zenject::SceneDecoratorContext::GetInjectableMonoBehaviours(::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated method: Zenject.SceneDecoratorContext.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SceneDecoratorContext::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SceneDecoratorContext::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneDecoratorContext", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.StaticContext
#include "Zenject/StaticContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Zenject.DiContainer _container
::Zenject::DiContainer* Zenject::StaticContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::StaticContext::_get__container");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::DiContainer*>("Zenject", "StaticContext", "_container"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.DiContainer _container
void Zenject::StaticContext::_set__container(::Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::StaticContext::_set__container");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "StaticContext", "_container", value));
}
// Autogenerated method: Zenject.StaticContext.get_HasContainer
bool Zenject::StaticContext::get_HasContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::StaticContext::get_HasContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_HasContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.get_Container
::Zenject::DiContainer* Zenject::StaticContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::StaticContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.Clear
void Zenject::StaticContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::StaticContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
