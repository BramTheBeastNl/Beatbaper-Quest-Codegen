// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.SolverManager
#include "RootMotion/SolverManager.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.SolverManager.Disable
void RootMotion::SolverManager::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("Disable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.InitiateSolver
void RootMotion::SolverManager::InitiateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("InitiateSolver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitiateSolver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolver
void RootMotion::SolverManager::UpdateSolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("UpdateSolver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FixTransforms
void RootMotion::SolverManager::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.OnDisable
void RootMotion::SolverManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Start
void RootMotion::SolverManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.get_animatePhysics
bool RootMotion::SolverManager::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Initiate
void RootMotion::SolverManager::Initiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.Update
void RootMotion::SolverManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FindAnimatorRecursive
void RootMotion::SolverManager::FindAnimatorRecursive(UnityEngine::Transform* t, bool findInChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("FindAnimatorRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindAnimatorRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, findInChildren)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t, findInChildren);
}
// Autogenerated method: RootMotion.SolverManager.get_isAnimated
bool RootMotion::SolverManager::get_isAnimated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("get_isAnimated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isAnimated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.FixedUpdate
void RootMotion::SolverManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.LateUpdate
void RootMotion::SolverManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.SolverManager.UpdateSolverExternal
void RootMotion::SolverManager::UpdateSolverExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("SolverManager").WithContext("UpdateSolverExternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSolverExternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
