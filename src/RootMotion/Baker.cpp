// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.Baker
#include "RootMotion/Baker.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Baker.OpenUserManual
void RootMotion::Baker::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenUserManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OpenScriptReference
void RootMotion::Baker::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenScriptReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.SupportGroup
void RootMotion::Baker::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SupportGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.ASThread
void RootMotion::Baker::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ASThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.get_isBaking
bool RootMotion::Baker::get_isBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("get_isBaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isBaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_isBaking
void RootMotion::Baker::set_isBaking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("set_isBaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isBaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.get_bakingProgress
float RootMotion::Baker::get_bakingProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("get_bakingProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bakingProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_bakingProgress
void RootMotion::Baker::set_bakingProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("set_bakingProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_bakingProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.GetCharacterRoot
UnityEngine::Transform* RootMotion::Baker::GetCharacterRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("GetCharacterRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCharacterRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OnStartBaking
void RootMotion::Baker::OnStartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OnStartBaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStartBaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.OnSetLoopFrame
void RootMotion::Baker::OnSetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OnSetLoopFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSetLoopFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: RootMotion.Baker.OnSetCurves
void RootMotion::Baker::OnSetCurves(UnityEngine::AnimationClip*& clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OnSetCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSetCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: RootMotion.Baker.OnSetKeyframes
void RootMotion::Baker::OnSetKeyframes(float time, bool lastFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("OnSetKeyframes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSetKeyframes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, lastFrame)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, lastFrame);
}
// Autogenerated method: RootMotion.Baker.get_clipLength
float RootMotion::Baker::get_clipLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("get_clipLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.set_clipLength
void RootMotion::Baker::set_clipLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("set_clipLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_clipLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.Baker.BakeClip
void RootMotion::Baker::BakeClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("BakeClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BakeClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.StartBaking
void RootMotion::Baker::StartBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("StartBaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.Baker.StopBaking
void RootMotion::Baker::StopBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Baker").WithContext("StopBaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopBaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
