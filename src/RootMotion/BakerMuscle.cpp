// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerMuscle
#include "RootMotion/BakerMuscle.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.BakerMuscle..ctor
RootMotion::BakerMuscle* RootMotion::BakerMuscle::New_ctor(int muscleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BakerMuscle*>(muscleIndex));
}
// Autogenerated method: RootMotion.BakerMuscle.MuscleNameToPropertyName
::Il2CppString* RootMotion::BakerMuscle::MuscleNameToPropertyName(::Il2CppString* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("MuscleNameToPropertyName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "MuscleNameToPropertyName", {}, ::il2cpp_utils::ExtractTypes(n)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, n);
}
// Autogenerated method: RootMotion.BakerMuscle.MultiplyLength
void RootMotion::BakerMuscle::MultiplyLength(UnityEngine::AnimationCurve* curve, float mlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("MultiplyLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "MultiplyLength", {}, ::il2cpp_utils::ExtractTypes(curve, mlp)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curve, mlp);
}
// Autogenerated method: RootMotion.BakerMuscle.SetCurves
void RootMotion::BakerMuscle::SetCurves(UnityEngine::AnimationClip*& clip, float maxError, float lengthMlp) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("SetCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetCurves", {}, ::il2cpp_utils::ExtractTypes(clip, maxError, lengthMlp)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, maxError, lengthMlp);
}
// Autogenerated method: RootMotion.BakerMuscle.Reset
void RootMotion::BakerMuscle::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Reset", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.BakerMuscle.SetKeyframe
void RootMotion::BakerMuscle::SetKeyframe(float time, ::Array<float>* muscles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("SetKeyframe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetKeyframe", {}, ::il2cpp_utils::ExtractTypes(time, muscles)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, muscles);
}
// Autogenerated method: RootMotion.BakerMuscle.SetLoopFrame
void RootMotion::BakerMuscle::SetLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerMuscle").WithContext("SetLoopFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetLoopFrame", {}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
