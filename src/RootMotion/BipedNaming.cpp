// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BipedNaming
#include "RootMotion/BipedNaming.hpp"
// Including type: RootMotion.BipedNaming/BoneType
#include "RootMotion/BipedNaming_BoneType.hpp"
// Including type: RootMotion.BipedNaming/BoneSide
#include "RootMotion/BipedNaming_BoneSide.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeft
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeLeft() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeft
void RootMotion::BipedNaming::_set_typeLeft(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeRight
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeRight() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeRight"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeRight
void RootMotion::BipedNaming::_set_typeRight(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeSpine
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeSpine() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeSpine
void RootMotion::BipedNaming::_set_typeSpine(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeHead
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeHead() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeHead
void RootMotion::BipedNaming::_set_typeHead(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeArm
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeArm() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeArm
void RootMotion::BipedNaming::_set_typeArm(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeg
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeLeg() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeg
void RootMotion::BipedNaming::_set_typeLeg(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeTail
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeTail() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeTail
void RootMotion::BipedNaming::_set_typeTail(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeEye
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeEye() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeEye
void RootMotion::BipedNaming::_set_typeEye(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExclude
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExclude() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExclude"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExclude
void RootMotion::BipedNaming::_set_typeExclude(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExclude", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeSpine
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeSpine() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeSpine
void RootMotion::BipedNaming::_set_typeExcludeSpine(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeHead
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeHead() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeHead
void RootMotion::BipedNaming::_set_typeExcludeHead(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeArm
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeArm() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeArm
void RootMotion::BipedNaming::_set_typeExcludeArm(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeLeg
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeLeg() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeLeg
void RootMotion::BipedNaming::_set_typeExcludeLeg(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeTail
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeTail() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeTail
void RootMotion::BipedNaming::_set_typeExcludeTail(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeEye
::Array<::CsString*>* RootMotion::BipedNaming::_get_typeExcludeEye() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "typeExcludeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeEye
void RootMotion::BipedNaming::_set_typeExcludeEye(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] pelvis
::Array<::CsString*>* RootMotion::BipedNaming::_get_pelvis() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "pelvis"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] pelvis
void RootMotion::BipedNaming::_set_pelvis(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] hand
::Array<::CsString*>* RootMotion::BipedNaming::_get_hand() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "hand"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] hand
void RootMotion::BipedNaming::_set_hand(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "hand", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] foot
::Array<::CsString*>* RootMotion::BipedNaming::_get_foot() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::CsString*>*>("RootMotion", "BipedNaming", "foot"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] foot
void RootMotion::BipedNaming::_set_foot(::Array<::CsString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "foot", value));
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfType
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfType(RootMotion::BipedNaming::BoneType boneType, ::Array<UnityEngine::Transform*>* bones) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Transform*>*>("RootMotion", "BipedNaming", "GetBonesOfType", boneType, bones));
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfSide(RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Transform*>*>("RootMotion", "BipedNaming", "GetBonesOfSide", boneSide, bones));
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfTypeAndSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Transform*>*>("RootMotion", "BipedNaming", "GetBonesOfTypeAndSide", boneType, boneSide, bones));
}
// Autogenerated method: RootMotion.BipedNaming.GetFirstBoneOfTypeAndSide
UnityEngine::Transform* RootMotion::BipedNaming::GetFirstBoneOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>("RootMotion", "BipedNaming", "GetFirstBoneOfTypeAndSide", boneType, boneSide, bones));
}
// Autogenerated method: RootMotion.BipedNaming.GetNamingMatch
UnityEngine::Transform* RootMotion::BipedNaming::GetNamingMatch(::Array<UnityEngine::Transform*>* transforms, ::Array<::Array<::CsString*>*>* namings) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>("RootMotion", "BipedNaming", "GetNamingMatch", transforms, namings));
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneType
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::GetBoneType(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::BipedNaming::BoneType>("RootMotion", "BipedNaming", "GetBoneType", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneSide
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::GetBoneSide(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::BipedNaming::BoneSide>("RootMotion", "BipedNaming", "GetBoneSide", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.GetBone
UnityEngine::Transform* RootMotion::BipedNaming::GetBone(::Array<UnityEngine::Transform*>* transforms, RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<::Array<::CsString*>*>* namings) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>("RootMotion", "BipedNaming", "GetBone", transforms, boneType, boneSide, namings));
}
// Autogenerated method: RootMotion.BipedNaming.isLeft
bool RootMotion::BipedNaming::isLeft(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isLeft", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isRight
bool RootMotion::BipedNaming::isRight(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isRight", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isSpine
bool RootMotion::BipedNaming::isSpine(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isSpine", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isHead
bool RootMotion::BipedNaming::isHead(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isHead", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isArm
bool RootMotion::BipedNaming::isArm(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isArm", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isLeg
bool RootMotion::BipedNaming::isLeg(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isLeg", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isTail
bool RootMotion::BipedNaming::isTail(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isTail", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isEye
bool RootMotion::BipedNaming::isEye(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isEye", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.isTypeExclude
bool RootMotion::BipedNaming::isTypeExclude(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "isTypeExclude", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.matchesNaming
bool RootMotion::BipedNaming::matchesNaming(::CsString* boneName, ::Array<::CsString*>* namingConvention) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "matchesNaming", boneName, namingConvention));
}
// Autogenerated method: RootMotion.BipedNaming.excludesNaming
bool RootMotion::BipedNaming::excludesNaming(::CsString* boneName, ::Array<::CsString*>* namingConvention) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "excludesNaming", boneName, namingConvention));
}
// Autogenerated method: RootMotion.BipedNaming.matchesLastLetter
bool RootMotion::BipedNaming::matchesLastLetter(::CsString* boneName, ::Array<::CsString*>* namingConvention) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "matchesLastLetter", boneName, namingConvention));
}
// Autogenerated method: RootMotion.BipedNaming.LastLetterIs
bool RootMotion::BipedNaming::LastLetterIs(::CsString* boneName, ::CsString* letter) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion", "BipedNaming", "LastLetterIs", boneName, letter));
}
// Autogenerated method: RootMotion.BipedNaming.firstLetter
::CsString* RootMotion::BipedNaming::firstLetter(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("RootMotion", "BipedNaming", "firstLetter", boneName));
}
// Autogenerated method: RootMotion.BipedNaming.lastLetter
::CsString* RootMotion::BipedNaming::lastLetter(::CsString* boneName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("RootMotion", "BipedNaming", "lastLetter", boneName));
}
// Autogenerated method: RootMotion.BipedNaming..cctor
void RootMotion::BipedNaming::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("RootMotion", "BipedNaming", ".cctor"));
}
