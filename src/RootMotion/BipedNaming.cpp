// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BipedNaming
#include "RootMotion/BipedNaming.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeft
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeLeft() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeft
void RootMotion::BipedNaming::_set_typeLeft(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeRight
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeRight() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeRight"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeRight
void RootMotion::BipedNaming::_set_typeRight(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeSpine
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeSpine() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeSpine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeSpine
void RootMotion::BipedNaming::_set_typeSpine(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeSpine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeHead
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeHead() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeHead
void RootMotion::BipedNaming::_set_typeHead(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeArm
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeArm() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeArm
void RootMotion::BipedNaming::_set_typeArm(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeLeg
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeLeg() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeLeg
void RootMotion::BipedNaming::_set_typeLeg(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeTail
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeTail() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeTail
void RootMotion::BipedNaming::_set_typeTail(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeEye
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeEye() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeEye
void RootMotion::BipedNaming::_set_typeEye(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExclude
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExclude() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExclude");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExclude"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExclude
void RootMotion::BipedNaming::_set_typeExclude(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExclude");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExclude", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeSpine
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeSpine() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeSpine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeSpine"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeSpine
void RootMotion::BipedNaming::_set_typeExcludeSpine(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeSpine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeSpine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeHead
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeHead() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeHead"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeHead
void RootMotion::BipedNaming::_set_typeExcludeHead(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeHead", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeArm
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeArm() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeArm"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeArm
void RootMotion::BipedNaming::_set_typeExcludeArm(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeArm", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeLeg
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeLeg() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeLeg"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeLeg
void RootMotion::BipedNaming::_set_typeExcludeLeg(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeLeg", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeTail
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeTail() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeTail"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeTail
void RootMotion::BipedNaming::_set_typeExcludeTail(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeTail", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] typeExcludeEye
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_typeExcludeEye() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_typeExcludeEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "typeExcludeEye"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] typeExcludeEye
void RootMotion::BipedNaming::_set_typeExcludeEye(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_typeExcludeEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "typeExcludeEye", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] pelvis
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_pelvis() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_pelvis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "pelvis"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] pelvis
void RootMotion::BipedNaming::_set_pelvis(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_pelvis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "pelvis", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] hand
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_hand() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_hand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "hand"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] hand
void RootMotion::BipedNaming::_set_hand(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_hand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "hand", value));
}
// Autogenerated static field getter
// Get static field: static public System.String[] foot
::Array<::Il2CppString*>* RootMotion::BipedNaming::_get_foot() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_get_foot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("RootMotion", "BipedNaming", "foot"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] foot
void RootMotion::BipedNaming::_set_foot(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("_set_foot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion", "BipedNaming", "foot", value));
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfType
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfType(RootMotion::BipedNaming::BoneType boneType, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBonesOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneType, bones)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfSide(RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBonesOfSide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfSide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneSide, bones)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetBonesOfTypeAndSide
::Array<UnityEngine::Transform*>* RootMotion::BipedNaming::GetBonesOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBonesOfTypeAndSide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBonesOfTypeAndSide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneType, boneSide, bones)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetFirstBoneOfTypeAndSide
UnityEngine::Transform* RootMotion::BipedNaming::GetFirstBoneOfTypeAndSide(RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<UnityEngine::Transform*>* bones) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetFirstBoneOfTypeAndSide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetFirstBoneOfTypeAndSide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneType, boneSide, bones)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneType, boneSide, bones);
}
// Autogenerated method: RootMotion.BipedNaming.GetNamingMatch
UnityEngine::Transform* RootMotion::BipedNaming::GetNamingMatch(::Array<UnityEngine::Transform*>* transforms, ::Array<::Array<::Il2CppString*>*>* namings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetNamingMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetNamingMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transforms, namings)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transforms, namings);
}
// Creating initializer_list -> params proxy for: UnityEngine.Transform GetNamingMatch(UnityEngine.Transform[] transforms, params System.String[][] namings)
UnityEngine::Transform* RootMotion::BipedNaming::GetNamingMatch(::Array<UnityEngine::Transform*>* transforms, std::initializer_list<::Array<::Il2CppString*>*> namings) {
  return RootMotion::BipedNaming::GetNamingMatch(transforms, ::Array<::Array<::Il2CppString*>*>::New(namings));
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneType
RootMotion::BipedNaming::BoneType RootMotion::BipedNaming::GetBoneType(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBoneType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBoneType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedNaming::BoneType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.GetBoneSide
RootMotion::BipedNaming::BoneSide RootMotion::BipedNaming::GetBoneSide(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBoneSide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBoneSide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedNaming::BoneSide, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.GetBone
UnityEngine::Transform* RootMotion::BipedNaming::GetBone(::Array<UnityEngine::Transform*>* transforms, RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, ::Array<::Array<::Il2CppString*>*>* namings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("GetBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "GetBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transforms, boneType, boneSide, namings)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transforms, boneType, boneSide, namings);
}
// Creating initializer_list -> params proxy for: UnityEngine.Transform GetBone(UnityEngine.Transform[] transforms, RootMotion.BipedNaming/BoneType boneType, RootMotion.BipedNaming/BoneSide boneSide, params System.String[][] namings)
UnityEngine::Transform* RootMotion::BipedNaming::GetBone(::Array<UnityEngine::Transform*>* transforms, RootMotion::BipedNaming::BoneType boneType, RootMotion::BipedNaming::BoneSide boneSide, std::initializer_list<::Array<::Il2CppString*>*> namings) {
  return RootMotion::BipedNaming::GetBone(transforms, boneType, boneSide, ::Array<::Array<::Il2CppString*>*>::New(namings));
}
// Autogenerated method: RootMotion.BipedNaming.isLeft
bool RootMotion::BipedNaming::isLeft(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isRight
bool RootMotion::BipedNaming::isRight(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isSpine
bool RootMotion::BipedNaming::isSpine(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isSpine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isSpine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isHead
bool RootMotion::BipedNaming::isHead(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isHead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isHead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isArm
bool RootMotion::BipedNaming::isArm(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isArm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isArm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isLeg
bool RootMotion::BipedNaming::isLeg(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isLeg");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isLeg", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isTail
bool RootMotion::BipedNaming::isTail(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isTail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isTail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isEye
bool RootMotion::BipedNaming::isEye(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isEye");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isEye", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.isTypeExclude
bool RootMotion::BipedNaming::isTypeExclude(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("isTypeExclude");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "isTypeExclude", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.matchesNaming
bool RootMotion::BipedNaming::matchesNaming(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("matchesNaming");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "matchesNaming", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName, namingConvention)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.excludesNaming
bool RootMotion::BipedNaming::excludesNaming(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("excludesNaming");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "excludesNaming", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName, namingConvention)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.matchesLastLetter
bool RootMotion::BipedNaming::matchesLastLetter(::Il2CppString* boneName, ::Array<::Il2CppString*>* namingConvention) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("matchesLastLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "matchesLastLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName, namingConvention)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, namingConvention);
}
// Autogenerated method: RootMotion.BipedNaming.LastLetterIs
bool RootMotion::BipedNaming::LastLetterIs(::Il2CppString* boneName, ::Il2CppString* letter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("LastLetterIs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "LastLetterIs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName, letter)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName, letter);
}
// Autogenerated method: RootMotion.BipedNaming.firstLetter
::Il2CppString* RootMotion::BipedNaming::firstLetter(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("firstLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "firstLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming.lastLetter
::Il2CppString* RootMotion::BipedNaming::lastLetter(::Il2CppString* boneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext("lastLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", "lastLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boneName);
}
// Autogenerated method: RootMotion.BipedNaming..cctor
void RootMotion::BipedNaming::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedNaming").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedNaming", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
