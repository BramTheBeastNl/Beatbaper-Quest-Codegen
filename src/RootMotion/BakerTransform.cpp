// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.BakerTransform
#include "RootMotion/BakerTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.BakerTransform..ctor
RootMotion::BakerTransform* RootMotion::BakerTransform::New_ctor(UnityEngine::Transform* transform, UnityEngine::Transform* root, bool recordPosition, bool isRootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BakerTransform*>(transform, root, recordPosition, isRootNode));
}
// Autogenerated method: RootMotion.BakerTransform.SetRelativeSpace
void RootMotion::BakerTransform::SetRelativeSpace(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("SetRelativeSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetRelativeSpace", {}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.BakerTransform.SetCurves
void RootMotion::BakerTransform::SetCurves(UnityEngine::AnimationClip*& clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("SetCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetCurves", {}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: RootMotion.BakerTransform.AddRootMotionCurves
void RootMotion::BakerTransform::AddRootMotionCurves(UnityEngine::AnimationClip*& clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("AddRootMotionCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AddRootMotionCurves", {}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: RootMotion.BakerTransform.Reset
void RootMotion::BakerTransform::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Reset", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.BakerTransform.ReduceKeyframes
void RootMotion::BakerTransform::ReduceKeyframes(float maxError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("ReduceKeyframes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReduceKeyframes", {}, ::il2cpp_utils::ExtractTypes(maxError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maxError);
}
// Autogenerated method: RootMotion.BakerTransform.SetKeyframes
void RootMotion::BakerTransform::SetKeyframes(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("SetKeyframes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetKeyframes", {}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: RootMotion.BakerTransform.AddLoopFrame
void RootMotion::BakerTransform::AddLoopFrame(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BakerTransform").WithContext("AddLoopFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AddLoopFrame", {}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
