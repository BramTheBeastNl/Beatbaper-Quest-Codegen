// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.BipedLimbOrientations
#include "RootMotion/BipedLimbOrientations.hpp"
// Including type: RootMotion.BipedLimbOrientations/LimbOrientation
#include "RootMotion/BipedLimbOrientations_LimbOrientation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.BipedLimbOrientations.get_UMA
RootMotion::BipedLimbOrientations* RootMotion::BipedLimbOrientations::get_UMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedLimbOrientations").WithContext("get_UMA");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedLimbOrientations", "get_UMA", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedLimbOrientations*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: RootMotion.BipedLimbOrientations.get_MaxBiped
RootMotion::BipedLimbOrientations* RootMotion::BipedLimbOrientations::get_MaxBiped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("BipedLimbOrientations").WithContext("get_MaxBiped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "BipedLimbOrientations", "get_MaxBiped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::BipedLimbOrientations*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
