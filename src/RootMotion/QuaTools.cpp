// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.QuaTools
#include "RootMotion/QuaTools.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.QuaTools.Lerp
UnityEngine::Quaternion RootMotion::QuaTools::Lerp(UnityEngine::Quaternion fromRotation, UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromRotation, toRotation, weight)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.Slerp
UnityEngine::Quaternion RootMotion::QuaTools::Slerp(UnityEngine::Quaternion fromRotation, UnityEngine::Quaternion toRotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("Slerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "Slerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromRotation, toRotation, weight)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromRotation, toRotation, weight);
}
// Autogenerated method: RootMotion.QuaTools.LinearBlend
UnityEngine::Quaternion RootMotion::QuaTools::LinearBlend(UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("LinearBlend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "LinearBlend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, weight)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.SphericalBlend
UnityEngine::Quaternion RootMotion::QuaTools::SphericalBlend(UnityEngine::Quaternion q, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("SphericalBlend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "SphericalBlend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, weight)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, weight);
}
// Autogenerated method: RootMotion.QuaTools.FromToAroundAxis
UnityEngine::Quaternion RootMotion::QuaTools::FromToAroundAxis(UnityEngine::Vector3 fromDirection, UnityEngine::Vector3 toDirection, UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("FromToAroundAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToAroundAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromDirection, toDirection, axis)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromDirection, toDirection, axis);
}
// Autogenerated method: RootMotion.QuaTools.RotationToLocalSpace
UnityEngine::Quaternion RootMotion::QuaTools::RotationToLocalSpace(UnityEngine::Quaternion space, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("RotationToLocalSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "RotationToLocalSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(space, rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, space, rotation);
}
// Autogenerated method: RootMotion.QuaTools.FromToRotation
UnityEngine::Quaternion RootMotion::QuaTools::FromToRotation(UnityEngine::Quaternion from, UnityEngine::Quaternion to) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("FromToRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "FromToRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(from, to)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: RootMotion.QuaTools.GetAxis
UnityEngine::Vector3 RootMotion::QuaTools::GetAxis(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("GetAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "GetAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: RootMotion.QuaTools.ClampRotation
UnityEngine::Quaternion RootMotion::QuaTools::ClampRotation(UnityEngine::Quaternion rotation, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("ClampRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, clampWeight, clampSmoothing)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.ClampAngle
float RootMotion::QuaTools::ClampAngle(float angle, float clampWeight, int clampSmoothing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("ClampAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ClampAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle, clampWeight, clampSmoothing)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle, clampWeight, clampSmoothing);
}
// Autogenerated method: RootMotion.QuaTools.MatchRotation
UnityEngine::Quaternion RootMotion::QuaTools::MatchRotation(UnityEngine::Quaternion targetRotation, UnityEngine::Vector3 targetforwardAxis, UnityEngine::Vector3 targetUpAxis, UnityEngine::Vector3 forwardAxis, UnityEngine::Vector3 upAxis) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("MatchRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "MatchRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetRotation, targetforwardAxis, targetUpAxis, forwardAxis, upAxis)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetRotation, targetforwardAxis, targetUpAxis, forwardAxis, upAxis);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
UnityEngine::Vector3 RootMotion::QuaTools::ToBiPolar(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(euler)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: RootMotion.QuaTools.ToBiPolar
float RootMotion::QuaTools::ToBiPolar(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("QuaTools").WithContext("ToBiPolar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "QuaTools", "ToBiPolar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle);
}
