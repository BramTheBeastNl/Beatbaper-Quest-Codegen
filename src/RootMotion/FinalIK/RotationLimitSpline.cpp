// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimitSpline
#include "RootMotion/FinalIK/RotationLimitSpline.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Keyframe
#include "UnityEngine/Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.OpenUserManual
void RootMotion::FinalIK::RotationLimitSpline::OpenUserManual() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("OpenUserManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OpenUserManual", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.OpenScriptReference
void RootMotion::FinalIK::RotationLimitSpline::OpenScriptReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("OpenScriptReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OpenScriptReference", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.SupportGroup
void RootMotion::FinalIK::RotationLimitSpline::SupportGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("SupportGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SupportGroup", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.ASThread
void RootMotion::FinalIK::RotationLimitSpline::ASThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("ASThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ASThread", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.SetSpline
void RootMotion::FinalIK::RotationLimitSpline::SetSpline(::Array<UnityEngine::Keyframe>* keyframes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("SetSpline");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetSpline", {}, ::il2cpp_utils::ExtractTypes(keyframes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyframes);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.LimitSwing
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitSpline::LimitSwing(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("LimitSwing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Quaternion>(), "LimitSwing", {}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline.LimitRotation
UnityEngine::Quaternion RootMotion::FinalIK::RotationLimitSpline::LimitRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext("LimitRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Quaternion>(), "LimitRotation", {}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitSpline..ctor
RootMotion::FinalIK::RotationLimitSpline* RootMotion::FinalIK::RotationLimitSpline::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("RotationLimitSpline").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RotationLimitSpline*>());
}
