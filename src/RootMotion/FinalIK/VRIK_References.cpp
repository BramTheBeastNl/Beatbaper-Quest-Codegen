// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.VRIK/References
#include "RootMotion/FinalIK/VRIK_References.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.VRIK/References.GetTransforms
::Array<UnityEngine::Transform*>* RootMotion::FinalIK::VRIK::References::GetTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("References").WithContext("GetTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<UnityEngine::Transform*>*>(), "GetTransforms", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.get_isFilled
bool RootMotion::FinalIK::VRIK::References::get_isFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("References").WithContext("get_isFilled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isFilled", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.get_isEmpty
bool RootMotion::FinalIK::VRIK::References::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("References").WithContext("get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isEmpty", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References.AutoDetectReferences
bool RootMotion::FinalIK::VRIK::References::AutoDetectReferences(UnityEngine::Transform* root, RootMotion::FinalIK::VRIK::References*& references) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("References").WithContext("AutoDetectReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "VRIK/References", il2cpp_utils::NoArgClass<bool>(), "AutoDetectReferences", {}, ::il2cpp_utils::ExtractTypes(root, references)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root, references);
}
// Autogenerated method: RootMotion.FinalIK.VRIK/References..ctor
RootMotion::FinalIK::VRIK::References* RootMotion::FinalIK::VRIK::References::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("References").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<VRIK::References*>());
}
