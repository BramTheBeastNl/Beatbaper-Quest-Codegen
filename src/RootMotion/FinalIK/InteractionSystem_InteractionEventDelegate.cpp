// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate
#include "RootMotion/FinalIK/InteractionSystem_InteractionEventDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: RootMotion.FinalIK.FullBodyBipedEffector
#include "RootMotion/FinalIK/FullBodyBipedEffector.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: RootMotion.FinalIK.InteractionObject/InteractionEvent
#include "RootMotion/FinalIK/InteractionObject_InteractionEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate..ctor
RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate* RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("InteractionEventDelegate").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<InteractionSystem::InteractionEventDelegate*>(object, method));
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.Invoke
void RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::Invoke(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, RootMotion::FinalIK::InteractionObject::InteractionEvent* interactionEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("InteractionEventDelegate").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Invoke", {}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, interactionEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, effectorType, interactionObject, interactionEvent);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.BeginInvoke
System::IAsyncResult* RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::BeginInvoke(RootMotion::FinalIK::FullBodyBipedEffector effectorType, RootMotion::FinalIK::InteractionObject* interactionObject, RootMotion::FinalIK::InteractionObject::InteractionEvent* interactionEvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("InteractionEventDelegate").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginInvoke", {}, ::il2cpp_utils::ExtractTypes(effectorType, interactionObject, interactionEvent, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, effectorType, interactionObject, interactionEvent, callback, object);
}
// Autogenerated method: RootMotion.FinalIK.InteractionSystem/InteractionEventDelegate.EndInvoke
void RootMotion::FinalIK::InteractionSystem::InteractionEventDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("InteractionEventDelegate").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "EndInvoke", {}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
