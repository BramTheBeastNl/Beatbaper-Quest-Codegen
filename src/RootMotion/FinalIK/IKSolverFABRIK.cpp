// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveForward
void RootMotion::FinalIK::IKSolverFABRIK::SolveForward(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveForward", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveBackward
void RootMotion::FinalIK::IKSolverFABRIK::SolveBackward(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveBackward", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveJoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::SolveJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "SolveJoint", pos1, pos2, length));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPreSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPreSolve"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPostSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnPostSolve"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.Solve
void RootMotion::FinalIK::IKSolverFABRIK::Solve(UnityEngine::Vector3 targetPosition) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Solve", targetPosition));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.ForwardReach
void RootMotion::FinalIK::IKSolverFABRIK::ForwardReach(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ForwardReach", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMove
void RootMotion::FinalIK::IKSolverFABRIK::SolverMove(int index, UnityEngine::Vector3 offset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolverMove", index, offset));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotate
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotate(int index, UnityEngine::Quaternion rotation, bool recursive) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolverRotate", index, rotation, recursive));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotateChildren
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren(int index, UnityEngine::Quaternion rotation) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolverRotateChildren", index, rotation));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMoveChildrenAroundPoint
void RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint(int index, UnityEngine::Quaternion rotation) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolverMoveChildrenAroundPoint", index, rotation));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "GetParentSolverRotation", index));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "GetParentSolverPosition", index));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetLimitedRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation(int index, UnityEngine::Quaternion q, bool& changed) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "GetLimitedRotation", index, q, changed));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.LimitForward
void RootMotion::FinalIK::IKSolverFABRIK::LimitForward(int rotateBone, int limitBone) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LimitForward", rotateBone, limitBone));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReach
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReach(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackwardReach", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachUnlimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackwardReachUnlimited", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachLimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackwardReachLimited", position));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositions
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MapToSolverPositions"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositionsLimited
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MapToSolverPositionsLimited"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "GetIKPosition"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIK::OnInitiate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnInitiate"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIK::OnUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnUpdate"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_boneLengthCanBeZero"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK..ctor
RootMotion::FinalIK::IKSolverFABRIK* RootMotion::FinalIK::IKSolverFABRIK::New_ctor() {
  return (IKSolverFABRIK*)THROW_UNLESS(il2cpp_utils::New("RootMotion.FinalIK", "IKSolverFABRIK"));
}
