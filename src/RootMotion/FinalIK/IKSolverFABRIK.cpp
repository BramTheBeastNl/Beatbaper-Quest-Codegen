// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFABRIK
#include "RootMotion/FinalIK/IKSolverFABRIK.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: RootMotion.FinalIK.IKSolver/IterationDelegate
#include "RootMotion/FinalIK/IKSolver_IterationDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveForward
void RootMotion::FinalIK::IKSolverFABRIK::SolveForward(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolveForward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolveForward", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveBackward
void RootMotion::FinalIK::IKSolverFABRIK::SolveBackward(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolveBackward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolveBackward", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolveJoint
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::SolveJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolveJoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "SolveJoint", {}, ::il2cpp_utils::ExtractTypes(pos1, pos2, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, pos1, pos2, length);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPreSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnPreSolve", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnPostSolve
void RootMotion::FinalIK::IKSolverFABRIK::OnPostSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("OnPostSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnPostSolve", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.Solve
void RootMotion::FinalIK::IKSolverFABRIK::Solve(UnityEngine::Vector3 targetPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Solve", {}, ::il2cpp_utils::ExtractTypes(targetPosition)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.ForwardReach
void RootMotion::FinalIK::IKSolverFABRIK::ForwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("ForwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ForwardReach", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMove
void RootMotion::FinalIK::IKSolverFABRIK::SolverMove(int index, UnityEngine::Vector3 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolverMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolverMove", {}, ::il2cpp_utils::ExtractTypes(index, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, offset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotate
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotate(int index, UnityEngine::Quaternion rotation, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolverRotate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolverRotate", {}, ::il2cpp_utils::ExtractTypes(index, rotation, recursive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation, recursive);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverRotateChildren
void RootMotion::FinalIK::IKSolverFABRIK::SolverRotateChildren(int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolverRotateChildren");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolverRotateChildren", {}, ::il2cpp_utils::ExtractTypes(index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.SolverMoveChildrenAroundPoint
void RootMotion::FinalIK::IKSolverFABRIK::SolverMoveChildrenAroundPoint(int index, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("SolverMoveChildrenAroundPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SolverMoveChildrenAroundPoint", {}, ::il2cpp_utils::ExtractTypes(index, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverRotation(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("GetParentSolverRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Quaternion>(), "GetParentSolverRotation", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetParentSolverPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetParentSolverPosition(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("GetParentSolverPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "GetParentSolverPosition", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetLimitedRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverFABRIK::GetLimitedRotation(int index, UnityEngine::Quaternion q, bool& changed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("GetLimitedRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Quaternion>(), "GetLimitedRotation", {}, ::il2cpp_utils::ExtractTypes(index, q, changed)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, index, q, changed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.LimitForward
void RootMotion::FinalIK::IKSolverFABRIK::LimitForward(int rotateBone, int limitBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("LimitForward");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LimitForward", {}, ::il2cpp_utils::ExtractTypes(rotateBone, limitBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotateBone, limitBone);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReach
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReach(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("BackwardReach");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BackwardReach", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachUnlimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachUnlimited(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("BackwardReachUnlimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BackwardReachUnlimited", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.BackwardReachLimited
void RootMotion::FinalIK::IKSolverFABRIK::BackwardReachLimited(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("BackwardReachLimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BackwardReachLimited", {}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositions
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("MapToSolverPositions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "MapToSolverPositions", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.MapToSolverPositionsLimited
void RootMotion::FinalIK::IKSolverFABRIK::MapToSolverPositionsLimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("MapToSolverPositionsLimited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "MapToSolverPositionsLimited", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.GetIKPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIK::GetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("GetIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "GetIKPosition", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIK::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnInitiate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIK::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnUpdate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK.get_boneLengthCanBeZero
bool RootMotion::FinalIK::IKSolverFABRIK::get_boneLengthCanBeZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext("get_boneLengthCanBeZero");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_boneLengthCanBeZero", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIK..ctor
RootMotion::FinalIK::IKSolverFABRIK* RootMotion::FinalIK::IKSolverFABRIK::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIK").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IKSolverFABRIK*>());
}
