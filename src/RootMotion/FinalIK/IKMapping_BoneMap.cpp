// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Initiate
void RootMotion::FinalIK::IKMapping::BoneMap::Initiate(UnityEngine::Transform* transform, RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transform, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_swingDirection
UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::get_swingDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("get_swingDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_swingDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.StoreDefaultLocalState
void RootMotion::FinalIK::IKMapping::BoneMap::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.FixTransform
void RootMotion::FinalIK::IKMapping::BoneMap::FixTransform(bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_isNodeBone
bool RootMotion::FinalIK::IKMapping::BoneMap::get_isNodeBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("get_isNodeBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isNodeBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLength
void RootMotion::FinalIK::IKMapping::BoneMap::SetLength(RootMotion::FinalIK::IKMapping::BoneMap* nextBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nextBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nextBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(RootMotion::FinalIK::IKMapping::BoneMap* swingTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalSwingAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalSwingAxis(RootMotion::FinalIK::IKMapping::BoneMap* bone1, RootMotion::FinalIK::IKMapping::BoneMap* bone2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetLocalSwingAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalSwingAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetLocalTwistAxis
void RootMotion::FinalIK::IKMapping::BoneMap::SetLocalTwistAxis(UnityEngine::Vector3 twistDirection, UnityEngine::Vector3 normalDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetLocalTwistAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalTwistAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(twistDirection, normalDirection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, twistDirection, normalDirection);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetPlane
void RootMotion::FinalIK::IKMapping::BoneMap::SetPlane(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Transform* planeBone1, UnityEngine::Transform* planeBone2, UnityEngine::Transform* planeBone3) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, planeBone1, planeBone2, planeBone3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, planeBone1, planeBone2, planeBone3);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.UpdatePlane
void RootMotion::FinalIK::IKMapping::BoneMap::UpdatePlane(bool rotation, bool position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("UpdatePlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation, position);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.MaintainRotation
void RootMotion::FinalIK::IKMapping::BoneMap::MaintainRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("MaintainRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MaintainRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.SetToIKPosition
void RootMotion::FinalIK::IKMapping::BoneMap::SetToIKPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("SetToIKPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToIKPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.FixToNode
void RootMotion::FinalIK::IKMapping::BoneMap::FixToNode(RootMotion::FinalIK::IKSolverFullBody* solver, float weight, RootMotion::FinalIK::IKSolver::Node* fixNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("FixToNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixToNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight, fixNode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight, fixNode);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.GetPlanePosition
UnityEngine::Vector3 RootMotion::FinalIK::IKMapping::BoneMap::GetPlanePosition(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("GetPlanePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlanePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.PositionToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::PositionToPlane(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("PositionToPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PositionToPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToPlane
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToPlane(RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("RotateToPlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToPlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(UnityEngine::Vector3 swingTarget, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("Swing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingTarget, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingTarget, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Swing
void RootMotion::FinalIK::IKMapping::BoneMap::Swing(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("Swing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Swing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos1, pos2, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos1, pos2, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.Twist
void RootMotion::FinalIK::IKMapping::BoneMap::Twist(UnityEngine::Vector3 twistDirection, UnityEngine::Vector3 normalDirection, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("Twist");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Twist", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(twistDirection, normalDirection, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, twistDirection, normalDirection, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToMaintain
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToMaintain(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("RotateToMaintain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToMaintain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.RotateToEffector
void RootMotion::FinalIK::IKMapping::BoneMap::RotateToEffector(RootMotion::FinalIK::IKSolverFullBody* solver, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("RotateToEffector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateToEffector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.GetTargetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::GetTargetRotation(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("GetTargetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTargetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.IKMapping/BoneMap.get_lastAnimatedTargetRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKMapping::BoneMap::get_lastAnimatedTargetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BoneMap").WithContext("get_lastAnimatedTargetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastAnimatedTargetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
