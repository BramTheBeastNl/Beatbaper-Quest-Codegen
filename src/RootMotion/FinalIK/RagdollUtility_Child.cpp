// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.RagdollUtility/Child
#include "RootMotion/FinalIK/RagdollUtility_Child.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Child..ctor
RootMotion::FinalIK::RagdollUtility::Child* RootMotion::FinalIK::RagdollUtility::Child::New_ctor(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Child").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RagdollUtility::Child*>(transform));
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Child.FixTransform
void RootMotion::FinalIK::RagdollUtility::Child::FixTransform(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Child").WithContext("FixTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "FixTransform", {}, ::il2cpp_utils::ExtractTypes(weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: RootMotion.FinalIK.RagdollUtility/Child.StoreLocalState
void RootMotion::FinalIK::RagdollUtility::Child::StoreLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Child").WithContext("StoreLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StoreLocalState", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
