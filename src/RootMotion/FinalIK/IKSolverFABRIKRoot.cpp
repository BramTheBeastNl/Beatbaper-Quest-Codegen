// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverFABRIKRoot
#include "RootMotion/FinalIK/IKSolverFABRIKRoot.hpp"
// Including type: RootMotion.FinalIK.FABRIKChain
#include "RootMotion/FinalIK/FABRIKChain.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsRoot
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsRoot(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("IsRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.AddPointsToArray
void RootMotion::FinalIK::IKSolverFABRIKRoot::AddPointsToArray(::Array<RootMotion::FinalIK::IKSolver::Point*>*& array, RootMotion::FinalIK::FABRIKChain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("AddPointsToArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPointsToArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, chain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, chain);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetCentroid
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverFABRIKRoot::GetCentroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("GetCentroid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCentroid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.IsValid
bool RootMotion::FinalIK::IKSolverFABRIKRoot::IsValid(::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.StoreDefaultLocalState
void RootMotion::FinalIK::IKSolverFABRIKRoot::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.FixTransforms
void RootMotion::FinalIK::IKSolverFABRIKRoot::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnInitiate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnInitiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("OnInitiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.OnUpdate
void RootMotion::FinalIK::IKSolverFABRIKRoot::OnUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("OnUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoints
::Array<RootMotion::FinalIK::IKSolver::Point*>* RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("GetPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<RootMotion::FinalIK::IKSolver::Point*>*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverFABRIKRoot.GetPoint
RootMotion::FinalIK::IKSolver::Point* RootMotion::FinalIK::IKSolverFABRIKRoot::GetPoint(UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKSolverFABRIKRoot").WithContext("GetPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolver::Point*, false>(this, ___internal__method, transform);
}
