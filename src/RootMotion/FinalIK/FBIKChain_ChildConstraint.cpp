// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.FBIKChain/ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.get_nominalDistance
float RootMotion::FinalIK::FBIKChain::ChildConstraint::get_nominalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("get_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_nominalDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.set_nominalDistance
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_nominalDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("set_nominalDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_nominalDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.get_isRigid
bool RootMotion::FinalIK::FBIKChain::ChildConstraint::get_isRigid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("get_isRigid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRigid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.set_isRigid
void RootMotion::FinalIK::FBIKChain::ChildConstraint::set_isRigid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("set_isRigid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isRigid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.Initiate
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.OnPreSolve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::OnPreSolve(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("OnPreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain/ChildConstraint.Solve
void RootMotion::FinalIK::FBIKChain::ChildConstraint::Solve(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ChildConstraint").WithContext("Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
