// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.FBIKChain
#include "RootMotion/FinalIK/FBIKChain.hpp"
// Including type: RootMotion.FinalIK.FBIKChain/ChildConstraint
#include "RootMotion/FinalIK/FBIKChain_ChildConstraint.hpp"
// Including type: RootMotion.FinalIK.IKConstraintBend
#include "RootMotion/FinalIK/IKConstraintBend.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Node
#include "RootMotion/FinalIK/IKSolver_Node.hpp"
// Including type: RootMotion.FinalIK.IKSolver/Point
#include "RootMotion/FinalIK/IKSolver_Point.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single maxLimbLength
float RootMotion::FinalIK::FBIKChain::_get_maxLimbLength() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "FBIKChain", "maxLimbLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single maxLimbLength
void RootMotion::FinalIK::FBIKChain::_set_maxLimbLength(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "FBIKChain", "maxLimbLength", value));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain..ctor
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::FBIKChain::New_ctor(float pin, float pull, ::Array<UnityEngine::Transform*>* nodeTransforms) {
  return (FBIKChain*)THROW_UNLESS(il2cpp_utils::New("RootMotion.FinalIK", "FBIKChain", pin, pull, nodeTransforms));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SetNodes
void RootMotion::FinalIK::FBIKChain::SetNodes(::Array<UnityEngine::Transform*>* boneTransforms) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNodes", boneTransforms));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetNodeIndex
int RootMotion::FinalIK::FBIKChain::GetNodeIndex(UnityEngine::Transform* boneTransform) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetNodeIndex", boneTransform));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.IsValid
bool RootMotion::FinalIK::FBIKChain::IsValid(::CsString*& message) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsValid", message));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Initiate
void RootMotion::FinalIK::FBIKChain::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Initiate", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ReadPose
void RootMotion::FinalIK::FBIKChain::ReadPose(RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReadPose", solver, fullBody));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.CalculateBoneLengths
void RootMotion::FinalIK::FBIKChain::CalculateBoneLengths(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CalculateBoneLengths", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Reach
void RootMotion::FinalIK::FBIKChain::Reach(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reach", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Push
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::Push(RootMotion::FinalIK::IKSolverFullBody* solver) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "Push", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveTrigonometric
void RootMotion::FinalIK::FBIKChain::SolveTrigonometric(RootMotion::FinalIK::IKSolverFullBody* solver, bool calculateBendDirection) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveTrigonometric", solver, calculateBendDirection));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage1
void RootMotion::FinalIK::FBIKChain::Stage1(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stage1", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.Stage2
void RootMotion::FinalIK::FBIKChain::Stage2(RootMotion::FinalIK::IKSolverFullBody* solver, UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stage2", solver, position));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveConstraintSystems
void RootMotion::FinalIK::FBIKChain::SolveConstraintSystems(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveConstraintSystems", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveFABRIKJoint
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::SolveFABRIKJoint(UnityEngine::Vector3 pos1, UnityEngine::Vector3 pos2, float length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "SolveFABRIKJoint", pos1, pos2, length));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.GetDirToBendPoint
UnityEngine::Vector3 RootMotion::FinalIK::FBIKChain::GetDirToBendPoint(UnityEngine::Vector3 direction, UnityEngine::Vector3 bendDirection, float directionMagnitude) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "GetDirToBendPoint", direction, bendDirection, directionMagnitude));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveChildConstraints
void RootMotion::FinalIK::FBIKChain::SolveChildConstraints(RootMotion::FinalIK::IKSolverFullBody* solver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveChildConstraints", solver));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.SolveLinearConstraint
void RootMotion::FinalIK::FBIKChain::SolveLinearConstraint(RootMotion::FinalIK::IKSolver::Node* node1, RootMotion::FinalIK::IKSolver::Node* node2, float crossFade, float distance) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolveLinearConstraint", node1, node2, crossFade, distance));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.ForwardReach
void RootMotion::FinalIK::FBIKChain::ForwardReach(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ForwardReach", position));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain.BackwardReach
void RootMotion::FinalIK::FBIKChain::BackwardReach(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackwardReach", position));
}
// Autogenerated method: RootMotion.FinalIK.FBIKChain..ctor
RootMotion::FinalIK::FBIKChain* RootMotion::FinalIK::FBIKChain::New_ctor() {
  return (FBIKChain*)THROW_UNLESS(il2cpp_utils::New("RootMotion.FinalIK", "FBIKChain"));
}
