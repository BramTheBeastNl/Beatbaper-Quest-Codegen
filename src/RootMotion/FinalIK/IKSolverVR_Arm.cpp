// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single yawOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_yawOffsetAngle() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single yawOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_yawOffsetAngle(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "yawOffsetAngle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single pitchOffsetAngle
float RootMotion::FinalIK::IKSolverVR::Arm::_get_pitchOffsetAngle() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single pitchOffsetAngle
void RootMotion::FinalIK::IKSolverVR::Arm::_set_pitchOffsetAngle(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("RootMotion.FinalIK", "IKSolverVR/Arm", "pitchOffsetAngle", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_position
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_position"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.set_position
void RootMotion::FinalIK::IKSolverVR::Arm::set_position(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_rotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Arm::get_rotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_rotation"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.set_rotation
void RootMotion::FinalIK::IKSolverVR::Arm::set_rotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rotation", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_shoulder
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_shoulder() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_shoulder"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_upperArm
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_upperArm() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_upperArm"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_forearm
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_forearm() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_forearm"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.get_hand
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Arm::get_hand() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_hand"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Stretching
void RootMotion::FinalIK::IKSolverVR::Arm::Stretching() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stretching"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Solve
void RootMotion::FinalIK::IKSolverVR::Arm::Solve(bool isLeft) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Solve", isLeft));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.DamperValue
float RootMotion::FinalIK::IKSolverVR::Arm::DamperValue(float value, float min, float max, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "DamperValue", value, min, max, weight));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.GetBendNormal
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Arm::GetBendNormal(UnityEngine::Vector3 dir) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "GetBendNormal", dir));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Visualize
void RootMotion::FinalIK::IKSolverVR::Arm::Visualize(RootMotion::FinalIK::IKSolverVR::VirtualBone* bone1, RootMotion::FinalIK::IKSolverVR::VirtualBone* bone2, RootMotion::FinalIK::IKSolverVR::VirtualBone* bone3, UnityEngine::Color color) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Visualize", bone1, bone2, bone3, color));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.OnRead
void RootMotion::FinalIK::IKSolverVR::Arm::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnRead", positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.PreSolve
void RootMotion::FinalIK::IKSolverVR::Arm::PreSolve() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PreSolve"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ApplyOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ApplyOffsets"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Arm::ResetOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetOffsets"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm.Write
void RootMotion::FinalIK::IKSolverVR::Arm::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", solvedPositions, solvedRotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Arm..ctor
RootMotion::FinalIK::IKSolverVR::Arm* RootMotion::FinalIK::IKSolverVR::Arm::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<IKSolverVR::Arm*>());
}
