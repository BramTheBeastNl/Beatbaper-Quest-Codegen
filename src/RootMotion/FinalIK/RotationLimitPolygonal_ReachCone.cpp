// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone
#include "RootMotion/FinalIK/RotationLimitPolygonal_ReachCone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_o
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("get_o");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_o", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_a
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("get_a");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_a", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_b
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("get_b");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_b", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_c
UnityEngine::Vector3 RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("get_c");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_c", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone..ctor
RootMotion::FinalIK::RotationLimitPolygonal::ReachCone* RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::New_ctor(UnityEngine::Vector3 _o, UnityEngine::Vector3 _a, UnityEngine::Vector3 _b, UnityEngine::Vector3 _c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RotationLimitPolygonal::ReachCone*>(_o, _a, _b, _c));
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.get_isValid
bool RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("get_isValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isValid", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.RotationLimitPolygonal/ReachCone.Calculate
void RootMotion::FinalIK::RotationLimitPolygonal::ReachCone::Calculate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("ReachCone").WithContext("Calculate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Calculate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
