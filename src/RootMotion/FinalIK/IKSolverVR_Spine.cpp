// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_pelvis
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_pelvis() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_pelvis"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_firstSpineBone
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_firstSpineBone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_firstSpineBone"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_chest
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_chest() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_chest"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_neck
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_neck() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_neck"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_head
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Spine::get_head() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<RootMotion::FinalIK::IKSolverVR::VirtualBone*>(this, "get_head"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_anchorRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_anchorRotation"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.set_anchorRotation
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_anchorRotation", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.get_anchorRelativeToHead
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Spine::get_anchorRelativeToHead() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_anchorRelativeToHead"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.set_anchorRelativeToHead
void RootMotion::FinalIK::IKSolverVR::Spine::set_anchorRelativeToHead(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_anchorRelativeToHead", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.CalculateChestTargetRotation
void RootMotion::FinalIK::IKSolverVR::Spine::CalculateChestTargetRotation(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CalculateChestTargetRotation", rootBone, arms));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Solve
void RootMotion::FinalIK::IKSolverVR::Spine::Solve(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, ::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Solve", rootBone, legs, arms));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.FABRIKPass
void RootMotion::FinalIK::IKSolverVR::Spine::FABRIKPass(UnityEngine::Vector3 animatedPelvisPos, UnityEngine::Vector3 rootUp, float weight) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FABRIKPass", animatedPelvisPos, rootUp, weight));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.SolvePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::SolvePelvis() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SolvePelvis"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.AdjustChestByHands
void RootMotion::FinalIK::IKSolverVR::Spine::AdjustChestByHands(UnityEngine::Quaternion& chestTargetRotation, ::Array<RootMotion::FinalIK::IKSolverVR::Arm*>* arms) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AdjustChestByHands", chestTargetRotation, arms));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.InverseTranslateToHead
void RootMotion::FinalIK::IKSolverVR::Spine::InverseTranslateToHead(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, bool limited, bool useCurrentLegMag, UnityEngine::Vector3 offset, float w) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InverseTranslateToHead", legs, limited, useCurrentLegMag, offset, w));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.TranslatePelvis
void RootMotion::FinalIK::IKSolverVR::Spine::TranslatePelvis(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, UnityEngine::Vector3 deltaPosition, UnityEngine::Quaternion deltaRotation) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TranslatePelvis", legs, deltaPosition, deltaRotation));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.LimitPelvisPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Spine::LimitPelvisPosition(::Array<RootMotion::FinalIK::IKSolverVR::Leg*>* legs, UnityEngine::Vector3 pelvisPosition, bool useCurrentLegMag, int it) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "LimitPelvisPosition", legs, pelvisPosition, useCurrentLegMag, it));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int firstIndex, int lastIndex, UnityEngine::Quaternion targetRotation, float clampWeight, bool uniformWeight, float w) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Bend", bones, firstIndex, lastIndex, targetRotation, clampWeight, uniformWeight, w));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Bend
void RootMotion::FinalIK::IKSolverVR::Spine::Bend(::Array<RootMotion::FinalIK::IKSolverVR::VirtualBone*>* bones, int firstIndex, int lastIndex, UnityEngine::Quaternion targetRotation, UnityEngine::Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Bend", bones, firstIndex, lastIndex, targetRotation, rotationOffset, clampWeight, uniformWeight, w));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.OnRead
void RootMotion::FinalIK::IKSolverVR::Spine::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnRead", positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.PreSolve
void RootMotion::FinalIK::IKSolverVR::Spine::PreSolve() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PreSolve"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ApplyOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ApplyOffsets"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.Write
void RootMotion::FinalIK::IKSolverVR::Spine::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", solvedPositions, solvedRotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Spine::ResetOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetOffsets"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Spine..ctor
RootMotion::FinalIK::IKSolverVR::Spine* RootMotion::FinalIK::IKSolverVR::Spine::New_ctor() {
  return (IKSolverVR::Spine*)THROW_UNLESS(il2cpp_utils::New("RootMotion.FinalIK", "IKSolverVR/Spine"));
}
