// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_position
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_position
void RootMotion::FinalIK::IKSolverVR::Leg::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_rotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Leg::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_rotation
void RootMotion::FinalIK::IKSolverVR::Leg::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("set_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_hasToes
bool RootMotion::FinalIK::IKSolverVR::Leg::get_hasToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_hasToes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasToes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_hasToes
void RootMotion::FinalIK::IKSolverVR::Leg::set_hasToes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("set_hasToes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hasToes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_thigh
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_thigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_thigh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_thigh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_calf
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_calf() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_calf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_calf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_foot
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_foot() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_foot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_foot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_toes
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_toes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_toes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_toes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_lastBone
RootMotion::FinalIK::IKSolverVR::VirtualBone* RootMotion::FinalIK::IKSolverVR::Leg::get_lastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_lastBone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastBone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKSolverVR::VirtualBone*, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.get_thighRelativeToPelvis
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Leg::get_thighRelativeToPelvis() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("get_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.set_thighRelativeToPelvis
void RootMotion::FinalIK::IKSolverVR::Leg::set_thighRelativeToPelvis(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("set_thighRelativeToPelvis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_thighRelativeToPelvis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyPositionOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyPositionOffset(UnityEngine::Vector3 offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("ApplyPositionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyPositionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyRotationOffset
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyRotationOffset(UnityEngine::Quaternion offset, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("ApplyRotationOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyRotationOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Solve
void RootMotion::FinalIK::IKSolverVR::Leg::Solve(bool stretch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stretch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stretch);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.FixTwistRotations
void RootMotion::FinalIK::IKSolverVR::Leg::FixTwistRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("FixTwistRotations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTwistRotations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Stretching
void RootMotion::FinalIK::IKSolverVR::Leg::Stretching() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("Stretching");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stretching", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.OnRead
void RootMotion::FinalIK::IKSolverVR::Leg::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("OnRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.PreSolve
void RootMotion::FinalIK::IKSolverVR::Leg::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("ApplyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.Write
void RootMotion::FinalIK::IKSolverVR::Leg::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Leg.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::Leg::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Leg").WithContext("ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
