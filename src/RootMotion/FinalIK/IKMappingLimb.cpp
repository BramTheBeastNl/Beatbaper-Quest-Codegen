// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKMappingLimb
#include "RootMotion/FinalIK/IKMappingLimb.hpp"
// Including type: RootMotion.FinalIK.IKMappingLimb/BoneMapType
#include "RootMotion/FinalIK/IKMappingLimb_BoneMapType.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: RootMotion.FinalIK.IKSolverFullBody
#include "RootMotion/FinalIK/IKSolverFullBody.hpp"
// Including type: RootMotion.FinalIK.IKSolver
#include "RootMotion/FinalIK/IKSolver.hpp"
// Including type: RootMotion.FinalIK.IKMapping/BoneMap
#include "RootMotion/FinalIK/IKMapping_BoneMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.GetBoneMap
RootMotion::FinalIK::IKMapping::BoneMap* RootMotion::FinalIK::IKMappingLimb::GetBoneMap(RootMotion::FinalIK::IKMappingLimb::BoneMapType boneMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("GetBoneMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBoneMap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boneMap)));
  return ::il2cpp_utils::RunMethodThrow<RootMotion::FinalIK::IKMapping::BoneMap*, false>(this, ___internal__method, boneMap);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetLimbOrientation
void RootMotion::FinalIK::IKMappingLimb::SetLimbOrientation(UnityEngine::Vector3 upper, UnityEngine::Vector3 lower) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("SetLimbOrientation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLimbOrientation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(upper, lower)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, upper, lower);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.SetBones
void RootMotion::FinalIK::IKMappingLimb::SetBones(UnityEngine::Transform* bone1, UnityEngine::Transform* bone2, UnityEngine::Transform* bone3, UnityEngine::Transform* parentBone) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("SetBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone1, bone2, bone3, parentBone)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone1, bone2, bone3, parentBone);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.StoreDefaultLocalState
void RootMotion::FinalIK::IKMappingLimb::StoreDefaultLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("StoreDefaultLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StoreDefaultLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.FixTransforms
void RootMotion::FinalIK::IKMappingLimb::FixTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("FixTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.ReadPose
void RootMotion::FinalIK::IKMappingLimb::ReadPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("ReadPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.WritePose
void RootMotion::FinalIK::IKMappingLimb::WritePose(RootMotion::FinalIK::IKSolverFullBody* solver, bool fullBody) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("WritePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, fullBody)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver, fullBody);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.IsValid
bool RootMotion::FinalIK::IKMappingLimb::IsValid(RootMotion::FinalIK::IKSolver* solver, ::Il2CppString*& message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver, message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, solver, message);
}
// Autogenerated method: RootMotion.FinalIK.IKMappingLimb.Initiate
void RootMotion::FinalIK::IKMappingLimb::Initiate(RootMotion::FinalIK::IKSolverFullBody* solver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("IKMappingLimb").WithContext("Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solver);
}
