// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.get_isStepping
bool RootMotion::FinalIK::IKSolverVR::Footstep::get_isStepping() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("get_isStepping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isStepping", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.get_stepProgress
float RootMotion::FinalIK::IKSolverVR::Footstep::get_stepProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("get_stepProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_stepProgress", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.set_stepProgress
void RootMotion::FinalIK::IKSolverVR::Footstep::set_stepProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("set_stepProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_stepProgress", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep..ctor
RootMotion::FinalIK::IKSolverVR::Footstep* RootMotion::FinalIK::IKSolverVR::Footstep::New_ctor(UnityEngine::Quaternion rootRotation, UnityEngine::Vector3 footPosition, UnityEngine::Quaternion footRotation, UnityEngine::Vector3 characterSpaceOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IKSolverVR::Footstep*>(rootRotation, footPosition, footRotation, characterSpaceOffset));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.Reset
void RootMotion::FinalIK::IKSolverVR::Footstep::Reset(UnityEngine::Quaternion rootRotation, UnityEngine::Vector3 footPosition, UnityEngine::Quaternion footRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Reset", {}, ::il2cpp_utils::ExtractTypes(rootRotation, footPosition, footRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootRotation, footPosition, footRotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.StepTo
void RootMotion::FinalIK::IKSolverVR::Footstep::StepTo(UnityEngine::Vector3 p, UnityEngine::Quaternion rootRotation, float stepThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("StepTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StepTo", {}, ::il2cpp_utils::ExtractTypes(p, rootRotation, stepThreshold)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, p, rootRotation, stepThreshold);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.UpdateStepping
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStepping(UnityEngine::Vector3 p, UnityEngine::Quaternion rootRotation, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("UpdateStepping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateStepping", {}, ::il2cpp_utils::ExtractTypes(p, rootRotation, speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, p, rootRotation, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.UpdateStanding
void RootMotion::FinalIK::IKSolverVR::Footstep::UpdateStanding(UnityEngine::Quaternion rootRotation, float minAngle, float speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("UpdateStanding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateStanding", {}, ::il2cpp_utils::ExtractTypes(rootRotation, minAngle, speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootRotation, minAngle, speed);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Footstep.Update
void RootMotion::FinalIK::IKSolverVR::Footstep::Update(RootMotion::InterpolationMode interpolation, UnityEngine::Events::UnityEvent* onStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Footstep").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes(interpolation, onStep)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, interpolation, onStep);
}
