// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/BodyPart
#include "RootMotion/FinalIK/IKSolverVR_BodyPart.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.OnRead
void RootMotion::FinalIK::IKSolverVR::BodyPart::OnRead(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("OnRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.PreSolve
void RootMotion::FinalIK::IKSolverVR::BodyPart::PreSolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("PreSolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreSolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Write
void RootMotion::FinalIK::IKSolverVR::BodyPart::Write(::Array<UnityEngine::Vector3>*& solvedPositions, ::Array<UnityEngine::Quaternion>*& solvedRotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(solvedPositions, solvedRotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, solvedPositions, solvedRotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.ApplyOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ApplyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("ApplyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.ResetOffsets
void RootMotion::FinalIK::IKSolverVR::BodyPart::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.get_sqrMag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_sqrMag() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("get_sqrMag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sqrMag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.set_sqrMag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_sqrMag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("set_sqrMag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_sqrMag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.get_mag
float RootMotion::FinalIK::IKSolverVR::BodyPart::get_mag() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("get_mag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.set_mag
void RootMotion::FinalIK::IKSolverVR::BodyPart::set_mag(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("set_mag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.SetLOD
void RootMotion::FinalIK::IKSolverVR::BodyPart::SetLOD(int LOD) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("SetLOD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLOD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(LOD)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, LOD);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Read
void RootMotion::FinalIK::IKSolverVR::BodyPart::Read(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasChest, hasNeck, hasShoulders, hasToes, hasLegs, rootIndex, index);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.MovePosition
void RootMotion::FinalIK::IKSolverVR::BodyPart::MovePosition(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("MovePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.MoveRotation
void RootMotion::FinalIK::IKSolverVR::BodyPart::MoveRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("MoveRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Translate
void RootMotion::FinalIK::IKSolverVR::BodyPart::Translate(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("Translate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.TranslateRoot
void RootMotion::FinalIK::IKSolverVR::BodyPart::TranslateRoot(UnityEngine::Vector3 newRootPos, UnityEngine::Quaternion newRootRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("TranslateRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TranslateRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newRootPos, newRootRot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newRootPos, newRootRot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.RotateTo
void RootMotion::FinalIK::IKSolverVR::BodyPart::RotateTo(RootMotion::FinalIK::IKSolverVR::VirtualBone* bone, UnityEngine::Quaternion rotation, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("RotateTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RotateTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bone, rotation, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bone, rotation, weight);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("Visualize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/BodyPart.Visualize
void RootMotion::FinalIK::IKSolverVR::BodyPart::Visualize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("BodyPart").WithContext("Visualize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Visualize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
