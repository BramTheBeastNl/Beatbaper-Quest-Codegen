// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_centerOfMass
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("get_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_centerOfMass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.set_centerOfMass
void RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("set_centerOfMass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_centerOfMass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Initiate
void RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasToes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("Initiate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initiate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations, hasToes)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations, hasToes);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Reset
void RootMotion::FinalIK::IKSolverVR::Locomotion::Reset(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positions, rotations)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positions, rotations);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaRotation
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation(UnityEngine::Quaternion delta, UnityEngine::Vector3 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("AddDeltaRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDeltaRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delta, pivot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delta, pivot);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaPosition
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition(UnityEngine::Vector3 delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("AddDeltaPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDeltaPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delta)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delta);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Solve
void RootMotion::FinalIK::IKSolverVR::Locomotion::Solve(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, RootMotion::FinalIK::IKSolverVR::Spine* spine, RootMotion::FinalIK::IKSolverVR::Leg* leftLeg, RootMotion::FinalIK::IKSolverVR::Leg* rightLeg, RootMotion::FinalIK::IKSolverVR::Arm* leftArm, RootMotion::FinalIK::IKSolverVR::Arm* rightArm, int supportLegIndex, UnityEngine::Vector3& leftFootPosition, UnityEngine::Vector3& rightFootPosition, UnityEngine::Quaternion& leftFootRotation, UnityEngine::Quaternion& rightFootRotation, float& leftFootOffset, float& rightFootOffset, float& leftHeelOffset, float& rightHeelOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("Solve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Solve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, leftFootPosition, rightFootPosition, leftFootRotation, rightFootRotation, leftFootOffset, rightFootOffset, leftHeelOffset, rightHeelOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, leftFootPosition, rightFootPosition, leftFootRotation, rightFootRotation, leftFootOffset, rightFootOffset, leftHeelOffset, rightHeelOffset);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("get_leftFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftFootstepPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("get_rightFootstepPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightFootstepPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("get_leftFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftFootstepRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("get_rightFootstepRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightFootstepRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.StepBlocked
bool RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked(UnityEngine::Vector3 fromPosition, UnityEngine::Vector3 toPosition, UnityEngine::Vector3 rootPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("StepBlocked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StepBlocked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromPosition, toPosition, rootPosition)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fromPosition, toPosition, rootPosition);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.CanStep
bool RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("CanStep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanStep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.GetLineSphereCollision
bool RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision(UnityEngine::Vector3 lineStart, UnityEngine::Vector3 lineEnd, UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion::FinalIK").WithContext("Locomotion").WithContext("GetLineSphereCollision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion.FinalIK", "IKSolverVR/Locomotion", "GetLineSphereCollision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineStart, lineEnd, sphereCenter, sphereRadius)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lineStart, lineEnd, sphereCenter, sphereRadius);
}
