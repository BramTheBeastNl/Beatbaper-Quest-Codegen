// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.FinalIK.IKSolverVR/Locomotion
#include "RootMotion/FinalIK/IKSolverVR_Locomotion.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Footstep
#include "RootMotion/FinalIK/IKSolverVR_Footstep.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/VirtualBone
#include "RootMotion/FinalIK/IKSolverVR_VirtualBone.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Spine
#include "RootMotion/FinalIK/IKSolverVR_Spine.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Leg
#include "RootMotion/FinalIK/IKSolverVR_Leg.hpp"
// Including type: RootMotion.FinalIK.IKSolverVR/Arm
#include "RootMotion/FinalIK/IKSolverVR_Arm.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_centerOfMass
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_centerOfMass() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_centerOfMass"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.set_centerOfMass
void RootMotion::FinalIK::IKSolverVR::Locomotion::set_centerOfMass(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_centerOfMass", value));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Initiate
void RootMotion::FinalIK::IKSolverVR::Locomotion::Initiate(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations, bool hasToes) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Initiate", positions, rotations, hasToes));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Reset
void RootMotion::FinalIK::IKSolverVR::Locomotion::Reset(::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Quaternion>* rotations) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset", positions, rotations));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaRotation
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaRotation(UnityEngine::Quaternion delta, UnityEngine::Vector3 pivot) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddDeltaRotation", delta, pivot));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.AddDeltaPosition
void RootMotion::FinalIK::IKSolverVR::Locomotion::AddDeltaPosition(UnityEngine::Vector3 delta) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddDeltaPosition", delta));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.Solve
void RootMotion::FinalIK::IKSolverVR::Locomotion::Solve(RootMotion::FinalIK::IKSolverVR::VirtualBone* rootBone, RootMotion::FinalIK::IKSolverVR::Spine* spine, RootMotion::FinalIK::IKSolverVR::Leg* leftLeg, RootMotion::FinalIK::IKSolverVR::Leg* rightLeg, RootMotion::FinalIK::IKSolverVR::Arm* leftArm, RootMotion::FinalIK::IKSolverVR::Arm* rightArm, int supportLegIndex, UnityEngine::Vector3& leftFootPosition, UnityEngine::Vector3& rightFootPosition, UnityEngine::Quaternion& leftFootRotation, UnityEngine::Quaternion& rightFootRotation, float& leftFootOffset, float& rightFootOffset, float& leftHeelOffset, float& rightHeelOffset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Solve", rootBone, spine, leftLeg, rightLeg, leftArm, rightArm, supportLegIndex, leftFootPosition, rightFootPosition, leftFootRotation, rightFootRotation, leftFootOffset, rightFootOffset, leftHeelOffset, rightHeelOffset));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_leftFootstepPosition"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepPosition
UnityEngine::Vector3 RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_rightFootstepPosition"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_leftFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_leftFootstepRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_leftFootstepRotation"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.get_rightFootstepRotation
UnityEngine::Quaternion RootMotion::FinalIK::IKSolverVR::Locomotion::get_rightFootstepRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_rightFootstepRotation"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.StepBlocked
bool RootMotion::FinalIK::IKSolverVR::Locomotion::StepBlocked(UnityEngine::Vector3 fromPosition, UnityEngine::Vector3 toPosition, UnityEngine::Vector3 rootPosition) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "StepBlocked", fromPosition, toPosition, rootPosition));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.CanStep
bool RootMotion::FinalIK::IKSolverVR::Locomotion::CanStep() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CanStep"));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion.GetLineSphereCollision
bool RootMotion::FinalIK::IKSolverVR::Locomotion::GetLineSphereCollision(UnityEngine::Vector3 lineStart, UnityEngine::Vector3 lineEnd, UnityEngine::Vector3 sphereCenter, float sphereRadius) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("RootMotion.FinalIK", "IKSolverVR/Locomotion", "GetLineSphereCollision", lineStart, lineEnd, sphereCenter, sphereRadius));
}
// Autogenerated method: RootMotion.FinalIK.IKSolverVR/Locomotion..ctor
RootMotion::FinalIK::IKSolverVR::Locomotion* RootMotion::FinalIK::IKSolverVR::Locomotion::New_ctor() {
  return (IKSolverVR::Locomotion*)THROW_UNLESS(il2cpp_utils::New("RootMotion.FinalIK", "IKSolverVR/Locomotion"));
}
