// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Interp
#include "RootMotion/Interp.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Interp.Float
float RootMotion::Interp::Float(float t, RootMotion::InterpolationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("Float");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "Float", {}, ::il2cpp_utils::ExtractTypes(t, mode)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, mode);
}
// Autogenerated method: RootMotion.Interp.V3
UnityEngine::Vector3 RootMotion::Interp::V3(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, float t, RootMotion::InterpolationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("V3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "V3", {}, ::il2cpp_utils::ExtractTypes(v1, v2, t, mode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, t, mode);
}
// Autogenerated method: RootMotion.Interp.LerpValue
float RootMotion::Interp::LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("LerpValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "LerpValue", {}, ::il2cpp_utils::ExtractTypes(value, target, increaseSpeed, decreaseSpeed)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, target, increaseSpeed, decreaseSpeed);
}
// Autogenerated method: RootMotion.Interp.None
float RootMotion::Interp::None(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("None");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "None", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutCubic
float RootMotion::Interp::InOutCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InOutCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InOutCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutQuintic
float RootMotion::Interp::InOutQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InOutQuintic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InOutQuintic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuintic
float RootMotion::Interp::InQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InQuintic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InQuintic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuartic
float RootMotion::Interp::InQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InQuartic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InQuartic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InCubic
float RootMotion::Interp::InCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InQuadratic
float RootMotion::Interp::InQuadratic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InQuadratic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InQuadratic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutQuintic
float RootMotion::Interp::OutQuintic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutQuintic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutQuintic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutQuartic
float RootMotion::Interp::OutQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutQuartic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutQuartic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutCubic
float RootMotion::Interp::OutCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutInCubic
float RootMotion::Interp::OutInCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutInCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutInCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutInQuartic
float RootMotion::Interp::OutInQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutInQuartic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutInQuartic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.BackInCubic
float RootMotion::Interp::BackInCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("BackInCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "BackInCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.BackInQuartic
float RootMotion::Interp::BackInQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("BackInQuartic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "BackInQuartic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBackCubic
float RootMotion::Interp::OutBackCubic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutBackCubic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutBackCubic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBackQuartic
float RootMotion::Interp::OutBackQuartic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutBackQuartic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutBackQuartic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElasticSmall
float RootMotion::Interp::OutElasticSmall(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutElasticSmall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutElasticSmall", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElasticBig
float RootMotion::Interp::OutElasticBig(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutElasticBig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutElasticBig", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElasticSmall
float RootMotion::Interp::InElasticSmall(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InElasticSmall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InElasticSmall", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElasticBig
float RootMotion::Interp::InElasticBig(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InElasticBig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InElasticBig", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InSine
float RootMotion::Interp::InSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InSine", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutSine
float RootMotion::Interp::OutSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutSine", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InOutSine
float RootMotion::Interp::InOutSine(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InOutSine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InOutSine", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InElastic
float RootMotion::Interp::InElastic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InElastic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InElastic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutElastic
float RootMotion::Interp::OutElastic(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutElastic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutElastic", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.InBack
float RootMotion::Interp::InBack(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("InBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "InBack", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp.OutBack
float RootMotion::Interp::OutBack(float t, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext("OutBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("RootMotion", "Interp", il2cpp_utils::NoArgClass<float>(), "OutBack", {}, ::il2cpp_utils::ExtractTypes(t, b, c)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, b, c);
}
// Autogenerated method: RootMotion.Interp..ctor
RootMotion::Interp* RootMotion::Interp::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("RootMotion").WithContext("Interp").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Interp*>());
}
