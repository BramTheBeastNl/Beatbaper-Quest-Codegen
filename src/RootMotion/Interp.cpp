// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RootMotion.Interp
#include "RootMotion/Interp.hpp"
// Including type: RootMotion.InterpolationMode
#include "RootMotion/InterpolationMode.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.Interp.Float
float RootMotion::Interp::Float(float t, RootMotion::InterpolationMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "Float", t, mode));
}
// Autogenerated method: RootMotion.Interp.V3
UnityEngine::Vector3 RootMotion::Interp::V3(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, float t, RootMotion::InterpolationMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "Interp", "V3", v1, v2, t, mode));
}
// Autogenerated method: RootMotion.Interp.LerpValue
float RootMotion::Interp::LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "LerpValue", value, target, increaseSpeed, decreaseSpeed));
}
// Autogenerated method: RootMotion.Interp.None
float RootMotion::Interp::None(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "None", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InOutCubic
float RootMotion::Interp::InOutCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InOutCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InOutQuintic
float RootMotion::Interp::InOutQuintic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InOutQuintic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InQuintic
float RootMotion::Interp::InQuintic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InQuintic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InQuartic
float RootMotion::Interp::InQuartic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InQuartic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InCubic
float RootMotion::Interp::InCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InQuadratic
float RootMotion::Interp::InQuadratic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InQuadratic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutQuintic
float RootMotion::Interp::OutQuintic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutQuintic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutQuartic
float RootMotion::Interp::OutQuartic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutQuartic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutCubic
float RootMotion::Interp::OutCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutInCubic
float RootMotion::Interp::OutInCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutInCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutInQuartic
float RootMotion::Interp::OutInQuartic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutInQuartic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.BackInCubic
float RootMotion::Interp::BackInCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "BackInCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.BackInQuartic
float RootMotion::Interp::BackInQuartic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "BackInQuartic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutBackCubic
float RootMotion::Interp::OutBackCubic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutBackCubic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutBackQuartic
float RootMotion::Interp::OutBackQuartic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutBackQuartic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutElasticSmall
float RootMotion::Interp::OutElasticSmall(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutElasticSmall", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutElasticBig
float RootMotion::Interp::OutElasticBig(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutElasticBig", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InElasticSmall
float RootMotion::Interp::InElasticSmall(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InElasticSmall", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InElasticBig
float RootMotion::Interp::InElasticBig(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InElasticBig", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InSine
float RootMotion::Interp::InSine(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InSine", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutSine
float RootMotion::Interp::OutSine(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutSine", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InOutSine
float RootMotion::Interp::InOutSine(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InOutSine", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InElastic
float RootMotion::Interp::InElastic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InElastic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutElastic
float RootMotion::Interp::OutElastic(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutElastic", t, b, c));
}
// Autogenerated method: RootMotion.Interp.InBack
float RootMotion::Interp::InBack(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "InBack", t, b, c));
}
// Autogenerated method: RootMotion.Interp.OutBack
float RootMotion::Interp::OutBack(float t, float b, float c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("RootMotion", "Interp", "OutBack", t, b, c));
}
// Autogenerated method: RootMotion.Interp..ctor
RootMotion::Interp* RootMotion::Interp::New_ctor() {
  return (Interp*)THROW_UNLESS(il2cpp_utils::New("RootMotion", "Interp"));
}
