// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RootMotion.V3Tools
#include "RootMotion/V3Tools.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RootMotion.V3Tools.Lerp
UnityEngine::Vector3 RootMotion::V3Tools::Lerp(UnityEngine::Vector3 fromVector, UnityEngine::Vector3 toVector, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "Lerp", fromVector, toVector, weight));
}
// Autogenerated method: RootMotion.V3Tools.Slerp
UnityEngine::Vector3 RootMotion::V3Tools::Slerp(UnityEngine::Vector3 fromVector, UnityEngine::Vector3 toVector, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "Slerp", fromVector, toVector, weight));
}
// Autogenerated method: RootMotion.V3Tools.ExtractVertical
UnityEngine::Vector3 RootMotion::V3Tools::ExtractVertical(UnityEngine::Vector3 v, UnityEngine::Vector3 verticalAxis, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "ExtractVertical", v, verticalAxis, weight));
}
// Autogenerated method: RootMotion.V3Tools.ExtractHorizontal
UnityEngine::Vector3 RootMotion::V3Tools::ExtractHorizontal(UnityEngine::Vector3 v, UnityEngine::Vector3 normal, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "ExtractHorizontal", v, normal, weight));
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "ClampDirection", direction, normalDirection, clampWeight, clampSmoothing));
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, bool& changed) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "ClampDirection", direction, normalDirection, clampWeight, clampSmoothing, changed));
}
// Autogenerated method: RootMotion.V3Tools.ClampDirection
UnityEngine::Vector3 RootMotion::V3Tools::ClampDirection(UnityEngine::Vector3 direction, UnityEngine::Vector3 normalDirection, float clampWeight, int clampSmoothing, float& clampValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "ClampDirection", direction, normalDirection, clampWeight, clampSmoothing, clampValue));
}
// Autogenerated method: RootMotion.V3Tools.LineToPlane
UnityEngine::Vector3 RootMotion::V3Tools::LineToPlane(UnityEngine::Vector3 origin, UnityEngine::Vector3 direction, UnityEngine::Vector3 planeNormal, UnityEngine::Vector3 planePoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "LineToPlane", origin, direction, planeNormal, planePoint));
}
// Autogenerated method: RootMotion.V3Tools.PointToPlane
UnityEngine::Vector3 RootMotion::V3Tools::PointToPlane(UnityEngine::Vector3 point, UnityEngine::Vector3 planePosition, UnityEngine::Vector3 planeNormal) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "PointToPlane", point, planePosition, planeNormal));
}
// Autogenerated method: RootMotion.V3Tools.TransformPointUnscaled
UnityEngine::Vector3 RootMotion::V3Tools::TransformPointUnscaled(UnityEngine::Transform* t, UnityEngine::Vector3 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "TransformPointUnscaled", t, point));
}
// Autogenerated method: RootMotion.V3Tools.InverseTransformPointUnscaled
UnityEngine::Vector3 RootMotion::V3Tools::InverseTransformPointUnscaled(UnityEngine::Transform* t, UnityEngine::Vector3 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("RootMotion", "V3Tools", "InverseTransformPointUnscaled", t, point));
}
