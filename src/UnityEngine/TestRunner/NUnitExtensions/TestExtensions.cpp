// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestRunner.NUnitExtensions.TestExtensions
#include "UnityEngine/TestRunner/NUnitExtensions/TestExtensions.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetTestCategories
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetTestCategories(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetTestCategories");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetTestCategories", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetAllCategoriesFromTest
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAllCategoriesFromTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetAllCategoriesFromTest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetAllCategoriesFromTest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.ParseForNameDuplicates
void UnityEngine::TestRunner::NUnitExtensions::TestExtensions::ParseForNameDuplicates(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("ParseForNameDuplicates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "ParseForNameDuplicates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetChildIndex
int UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetChildIndex(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetChildIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetChildIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.HasChildIndex
bool UnityEngine::TestRunner::NUnitExtensions::TestExtensions::HasChildIndex(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("HasChildIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "HasChildIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetAncestorPath
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetAncestorPath(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetAncestorPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetAncestorPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetUniqueName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetUniqueName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetUniqueName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetUniqueName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetFullName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetFullName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetFullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetFullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetSkipReason
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetSkipReason(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetSkipReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetSkipReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentId
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentId(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetParentId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentFullName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentFullName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetParentFullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentFullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestRunner.NUnitExtensions.TestExtensions.GetParentUniqueName
::Il2CppString* UnityEngine::TestRunner::NUnitExtensions::TestExtensions::GetParentUniqueName(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::TestRunner::NUnitExtensions").WithContext("TestExtensions").WithContext("GetParentUniqueName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.TestRunner.NUnitExtensions", "TestExtensions", "GetParentUniqueName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(test)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, test);
}
