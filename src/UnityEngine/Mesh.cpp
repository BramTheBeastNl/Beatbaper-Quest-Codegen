// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Rendering.IndexFormat
#include "UnityEngine/Rendering/IndexFormat.hpp"
// Including type: UnityEngine.MeshTopology
#include "UnityEngine/MeshTopology.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.BoneWeight
#include "UnityEngine/BoneWeight.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Mesh.Internal_Create
void UnityEngine::Mesh::Internal_Create(UnityEngine::Mesh* mono) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Mesh", "Internal_Create", mono));
}
// Autogenerated method: UnityEngine.Mesh.set_indexFormat
void UnityEngine::Mesh::set_indexFormat(UnityEngine::Rendering::IndexFormat value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_indexFormat", value));
}
// Autogenerated method: UnityEngine.Mesh.GetIndexCountImpl
uint UnityEngine::Mesh::GetIndexCountImpl(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "GetIndexCountImpl", submesh));
}
// Autogenerated method: UnityEngine.Mesh.GetTrianglesImpl
::Array<int>* UnityEngine::Mesh::GetTrianglesImpl(int submesh, bool applyBaseVertex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetTrianglesImpl", submesh, applyBaseVertex));
}
// Autogenerated method: UnityEngine.Mesh.GetIndicesImpl
::Array<int>* UnityEngine::Mesh::GetIndicesImpl(int submesh, bool applyBaseVertex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetIndicesImpl", submesh, applyBaseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetIndicesImpl
void UnityEngine::Mesh::SetIndicesImpl(int submesh, UnityEngine::MeshTopology topology, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* indices, int arrayStart, int arraySize, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndicesImpl", submesh, topology, indicesFormat, indices, arrayStart, arraySize, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.PrintErrorCantAccessChannel
void UnityEngine::Mesh::PrintErrorCantAccessChannel(UnityEngine::Rendering::VertexAttribute ch) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PrintErrorCantAccessChannel", ch));
}
// Autogenerated method: UnityEngine.Mesh.HasVertexAttribute
bool UnityEngine::Mesh::HasVertexAttribute(UnityEngine::Rendering::VertexAttribute attr) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasVertexAttribute", attr));
}
// Autogenerated method: UnityEngine.Mesh.SetArrayForChannelImpl
void UnityEngine::Mesh::SetArrayForChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values, int arraySize, int valuesStart, int valuesCount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetArrayForChannelImpl", channel, format, dim, values, arraySize, valuesStart, valuesCount));
}
// Autogenerated method: UnityEngine.Mesh.GetAllocArrayFromChannelImpl
System::Array* UnityEngine::Mesh::GetAllocArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Array*>(this, "GetAllocArrayFromChannelImpl", channel, format, dim));
}
// Autogenerated method: UnityEngine.Mesh.GetArrayFromChannelImpl
void UnityEngine::Mesh::GetArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetArrayFromChannelImpl", channel, format, dim, values));
}
// Autogenerated method: UnityEngine.Mesh.SetBoneWeightsImpl
void UnityEngine::Mesh::SetBoneWeightsImpl(::Array<UnityEngine::BoneWeight>* weights) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetBoneWeightsImpl", weights));
}
// Autogenerated method: UnityEngine.Mesh.set_bindposes
void UnityEngine::Mesh::set_bindposes(::Array<UnityEngine::Matrix4x4>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_bindposes", value));
}
// Autogenerated method: UnityEngine.Mesh.get_canAccess
bool UnityEngine::Mesh::get_canAccess() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_canAccess"));
}
// Autogenerated method: UnityEngine.Mesh.get_vertexCount
int UnityEngine::Mesh::get_vertexCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_vertexCount"));
}
// Autogenerated method: UnityEngine.Mesh.get_subMeshCount
int UnityEngine::Mesh::get_subMeshCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_subMeshCount"));
}
// Autogenerated method: UnityEngine.Mesh.set_subMeshCount
void UnityEngine::Mesh::set_subMeshCount(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_subMeshCount", value));
}
// Autogenerated method: UnityEngine.Mesh.get_bounds
UnityEngine::Bounds UnityEngine::Mesh::get_bounds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Bounds>(this, "get_bounds"));
}
// Autogenerated method: UnityEngine.Mesh.set_bounds
void UnityEngine::Mesh::set_bounds(UnityEngine::Bounds value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_bounds", value));
}
// Autogenerated method: UnityEngine.Mesh.ClearImpl
void UnityEngine::Mesh::ClearImpl(bool keepVertexLayout) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearImpl", keepVertexLayout));
}
// Autogenerated method: UnityEngine.Mesh.RecalculateBoundsImpl
void UnityEngine::Mesh::RecalculateBoundsImpl() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RecalculateBoundsImpl"));
}
// Autogenerated method: UnityEngine.Mesh.MarkDynamicImpl
void UnityEngine::Mesh::MarkDynamicImpl() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkDynamicImpl"));
}
// Autogenerated method: UnityEngine.Mesh.GetTopologyImpl
UnityEngine::MeshTopology UnityEngine::Mesh::GetTopologyImpl(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::MeshTopology>(this, "GetTopologyImpl", submesh));
}
// Autogenerated method: UnityEngine.Mesh.GetUVChannel
UnityEngine::Rendering::VertexAttribute UnityEngine::Mesh::GetUVChannel(int uvIndex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Rendering::VertexAttribute>(this, "GetUVChannel", uvIndex));
}
// Autogenerated method: UnityEngine.Mesh.DefaultDimensionForChannel
int UnityEngine::Mesh::DefaultDimensionForChannel(UnityEngine::Rendering::VertexAttribute channel) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mesh", "DefaultDimensionForChannel", channel));
}
// Autogenerated method: UnityEngine.Mesh.SetSizedArrayForChannel
void UnityEngine::Mesh::SetSizedArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int dim, System::Array* values, int valuesArrayLength, int valuesStart, int valuesCount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetSizedArrayForChannel", channel, format, dim, values, valuesArrayLength, valuesStart, valuesCount));
}
// Autogenerated method: UnityEngine.Mesh.get_vertices
::Array<UnityEngine::Vector3>* UnityEngine::Mesh::get_vertices() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector3>*>(this, "get_vertices"));
}
// Autogenerated method: UnityEngine.Mesh.set_vertices
void UnityEngine::Mesh::set_vertices(::Array<UnityEngine::Vector3>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_vertices", value));
}
// Autogenerated method: UnityEngine.Mesh.get_normals
::Array<UnityEngine::Vector3>* UnityEngine::Mesh::get_normals() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector3>*>(this, "get_normals"));
}
// Autogenerated method: UnityEngine.Mesh.set_normals
void UnityEngine::Mesh::set_normals(::Array<UnityEngine::Vector3>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_normals", value));
}
// Autogenerated method: UnityEngine.Mesh.get_tangents
::Array<UnityEngine::Vector4>* UnityEngine::Mesh::get_tangents() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector4>*>(this, "get_tangents"));
}
// Autogenerated method: UnityEngine.Mesh.set_tangents
void UnityEngine::Mesh::set_tangents(::Array<UnityEngine::Vector4>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_tangents", value));
}
// Autogenerated method: UnityEngine.Mesh.get_uv
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>(this, "get_uv"));
}
// Autogenerated method: UnityEngine.Mesh.set_uv
void UnityEngine::Mesh::set_uv(::Array<UnityEngine::Vector2>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv", value));
}
// Autogenerated method: UnityEngine.Mesh.get_uv2
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv2() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>(this, "get_uv2"));
}
// Autogenerated method: UnityEngine.Mesh.set_uv2
void UnityEngine::Mesh::set_uv2(::Array<UnityEngine::Vector2>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv2", value));
}
// Autogenerated method: UnityEngine.Mesh.get_uv3
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv3() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>(this, "get_uv3"));
}
// Autogenerated method: UnityEngine.Mesh.get_uv4
::Array<UnityEngine::Vector2>* UnityEngine::Mesh::get_uv4() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>(this, "get_uv4"));
}
// Autogenerated method: UnityEngine.Mesh.get_colors
::Array<UnityEngine::Color>* UnityEngine::Mesh::get_colors() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Color>*>(this, "get_colors"));
}
// Autogenerated method: UnityEngine.Mesh.set_colors
void UnityEngine::Mesh::set_colors(::Array<UnityEngine::Color>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_colors", value));
}
// Autogenerated method: UnityEngine.Mesh.get_colors32
::Array<UnityEngine::Color32>* UnityEngine::Mesh::get_colors32() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Color32>*>(this, "get_colors32"));
}
// Autogenerated method: UnityEngine.Mesh.set_colors32
void UnityEngine::Mesh::set_colors32(::Array<UnityEngine::Color32>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_colors32", value));
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(System::Collections::Generic::List_1<UnityEngine::Vector3>* inVertices) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetVertices", inVertices));
}
// Autogenerated method: UnityEngine.Mesh.SetVertices
void UnityEngine::Mesh::SetVertices(System::Collections::Generic::List_1<UnityEngine::Vector3>* inVertices, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetVertices", inVertices, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(System::Collections::Generic::List_1<UnityEngine::Vector3>* inNormals) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNormals", inNormals));
}
// Autogenerated method: UnityEngine.Mesh.SetNormals
void UnityEngine::Mesh::SetNormals(System::Collections::Generic::List_1<UnityEngine::Vector3>* inNormals, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNormals", inNormals, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(System::Collections::Generic::List_1<UnityEngine::Vector4>* inTangents) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTangents", inTangents));
}
// Autogenerated method: UnityEngine.Mesh.SetTangents
void UnityEngine::Mesh::SetTangents(System::Collections::Generic::List_1<UnityEngine::Vector4>* inTangents, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTangents", inTangents, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color32>* inColors) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetColors", inColors));
}
// Autogenerated method: UnityEngine.Mesh.SetColors
void UnityEngine::Mesh::SetColors(System::Collections::Generic::List_1<UnityEngine::Color32>* inColors, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetColors", inColors, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector2>* uvs) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector3>* uvs) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector2>* uvs, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector3>* uvs, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetUVs
void UnityEngine::Mesh::SetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUVs", channel, uvs, start, length));
}
// Autogenerated method: UnityEngine.Mesh.GetUVs
void UnityEngine::Mesh::GetUVs(int channel, System::Collections::Generic::List_1<UnityEngine::Vector4>* uvs) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetUVs", channel, uvs));
}
// Autogenerated method: UnityEngine.Mesh.PrintErrorCantAccessIndices
void UnityEngine::Mesh::PrintErrorCantAccessIndices() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PrintErrorCantAccessIndices"));
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmesh
bool UnityEngine::Mesh::CheckCanAccessSubmesh(int submesh, bool errorAboutTriangles) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CheckCanAccessSubmesh", submesh, errorAboutTriangles));
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmeshTriangles
bool UnityEngine::Mesh::CheckCanAccessSubmeshTriangles(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CheckCanAccessSubmeshTriangles", submesh));
}
// Autogenerated method: UnityEngine.Mesh.CheckCanAccessSubmeshIndices
bool UnityEngine::Mesh::CheckCanAccessSubmeshIndices(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CheckCanAccessSubmeshIndices", submesh));
}
// Autogenerated method: UnityEngine.Mesh.get_triangles
::Array<int>* UnityEngine::Mesh::get_triangles() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "get_triangles"));
}
// Autogenerated method: UnityEngine.Mesh.set_triangles
void UnityEngine::Mesh::set_triangles(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_triangles", value));
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
::Array<int>* UnityEngine::Mesh::GetTriangles(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetTriangles", submesh));
}
// Autogenerated method: UnityEngine.Mesh.GetTriangles
::Array<int>* UnityEngine::Mesh::GetTriangles(int submesh, bool applyBaseVertex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetTriangles", submesh, applyBaseVertex));
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
::Array<int>* UnityEngine::Mesh::GetIndices(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetIndices", submesh));
}
// Autogenerated method: UnityEngine.Mesh.GetIndices
::Array<int>* UnityEngine::Mesh::GetIndices(int submesh, bool applyBaseVertex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "GetIndices", submesh, applyBaseVertex));
}
// Autogenerated method: UnityEngine.Mesh.GetIndexCount
uint UnityEngine::Mesh::GetIndexCount(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "GetIndexCount", submesh));
}
// Autogenerated method: UnityEngine.Mesh.CheckIndicesArrayRange
void UnityEngine::Mesh::CheckIndicesArrayRange(int valuesLength, int start, int length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CheckIndicesArrayRange", valuesLength, start, length));
}
// Autogenerated method: UnityEngine.Mesh.SetTrianglesImpl
void UnityEngine::Mesh::SetTrianglesImpl(int submesh, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* triangles, int trianglesArrayLength, int start, int length, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTrianglesImpl", submesh, indicesFormat, triangles, trianglesArrayLength, start, length, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int submesh) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, submesh));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(::Array<int>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, submesh));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetTriangles
void UnityEngine::Mesh::SetTriangles(System::Collections::Generic::List_1<int>* triangles, int trianglesStart, int trianglesLength, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTriangles", triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, topology, submesh));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, topology, submesh, calculateBounds));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, topology, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(::Array<int>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<int>* indices, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, topology, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.SetIndices
void UnityEngine::Mesh::SetIndices(System::Collections::Generic::List_1<int>* indices, int indicesStart, int indicesLength, UnityEngine::MeshTopology topology, int submesh, bool calculateBounds, int baseVertex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetIndices", indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex));
}
// Autogenerated method: UnityEngine.Mesh.set_boneWeights
void UnityEngine::Mesh::set_boneWeights(::Array<UnityEngine::BoneWeight>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_boneWeights", value));
}
// Autogenerated method: UnityEngine.Mesh.Clear
void UnityEngine::Mesh::Clear() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Clear"));
}
// Autogenerated method: UnityEngine.Mesh.RecalculateBounds
void UnityEngine::Mesh::RecalculateBounds() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RecalculateBounds"));
}
// Autogenerated method: UnityEngine.Mesh.MarkDynamic
void UnityEngine::Mesh::MarkDynamic() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkDynamic"));
}
// Autogenerated method: UnityEngine.Mesh.GetTopology
UnityEngine::MeshTopology UnityEngine::Mesh::GetTopology(int submesh) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::MeshTopology>(this, "GetTopology", submesh));
}
// Autogenerated method: UnityEngine.Mesh.get_bounds_Injected
void UnityEngine::Mesh::get_bounds_Injected(UnityEngine::Bounds& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "get_bounds_Injected", ret));
}
// Autogenerated method: UnityEngine.Mesh.set_bounds_Injected
void UnityEngine::Mesh::set_bounds_Injected(UnityEngine::Bounds& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_bounds_Injected", value));
}
// Autogenerated method: UnityEngine.Mesh..ctor
UnityEngine::Mesh* UnityEngine::Mesh::New_ctor() {
  return (Mesh*)THROW_UNLESS(il2cpp_utils::New("UnityEngine", "Mesh"));
}
