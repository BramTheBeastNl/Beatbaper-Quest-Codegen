// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.GUIUtility
#include "UnityEngine/GUIUtility.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.FocusType
#include "UnityEngine/FocusType.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.GUISkin
#include "UnityEngine/GUISkin.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 s_SkinMode
int UnityEngine::GUIUtility::_get_s_SkinMode() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "GUIUtility", "s_SkinMode"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 s_SkinMode
void UnityEngine::GUIUtility::_set_s_SkinMode(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "s_SkinMode", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 s_OriginalID
int UnityEngine::GUIUtility::_get_s_OriginalID() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "GUIUtility", "s_OriginalID"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 s_OriginalID
void UnityEngine::GUIUtility::_set_s_OriginalID(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "s_OriginalID", value));
}
// Autogenerated static field getter
// Get static field: static System.Action takeCapture
System::Action* UnityEngine::GUIUtility::_get_takeCapture() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine", "GUIUtility", "takeCapture"));
}
// Autogenerated static field setter
// Set static field: static System.Action takeCapture
void UnityEngine::GUIUtility::_set_takeCapture(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "takeCapture", value));
}
// Autogenerated static field getter
// Get static field: static System.Action releaseCapture
System::Action* UnityEngine::GUIUtility::_get_releaseCapture() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine", "GUIUtility", "releaseCapture"));
}
// Autogenerated static field setter
// Set static field: static System.Action releaseCapture
void UnityEngine::GUIUtility::_set_releaseCapture(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "releaseCapture", value));
}
// Autogenerated static field getter
// Get static field: static System.Func`3<System.Int32,System.IntPtr,System.Boolean> processEvent
System::Func_3<int, System::IntPtr, bool>* UnityEngine::GUIUtility::_get_processEvent() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<int, System::IntPtr, bool>*>("UnityEngine", "GUIUtility", "processEvent")));
}
// Autogenerated static field setter
// Set static field: static System.Func`3<System.Int32,System.IntPtr,System.Boolean> processEvent
void UnityEngine::GUIUtility::_set_processEvent(System::Func_3<int, System::IntPtr, bool>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "processEvent", value));
}
// Autogenerated static field getter
// Get static field: static System.Func`2<System.Exception,System.Boolean> endContainerGUIFromException
System::Func_2<System::Exception*, bool>* UnityEngine::GUIUtility::_get_endContainerGUIFromException() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Exception*, bool>*>("UnityEngine", "GUIUtility", "endContainerGUIFromException")));
}
// Autogenerated static field setter
// Set static field: static System.Func`2<System.Exception,System.Boolean> endContainerGUIFromException
void UnityEngine::GUIUtility::_set_endContainerGUIFromException(System::Func_2<System::Exception*, bool>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "endContainerGUIFromException", value));
}
// Autogenerated static field getter
// Get static field: static System.Action guiChanged
System::Action* UnityEngine::GUIUtility::_get_guiChanged() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("UnityEngine", "GUIUtility", "guiChanged"));
}
// Autogenerated static field setter
// Set static field: static System.Action guiChanged
void UnityEngine::GUIUtility::_set_guiChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "guiChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <guiIsExiting>k__BackingField
bool UnityEngine::GUIUtility::_get_$guiIsExiting$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("UnityEngine", "GUIUtility", "<guiIsExiting>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <guiIsExiting>k__BackingField
void UnityEngine::GUIUtility::_set_$guiIsExiting$k__BackingField(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "<guiIsExiting>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static System.Func`1<System.Boolean> s_HasCurrentWindowKeyFocusFunc
System::Func_1<bool>* UnityEngine::GUIUtility::_get_s_HasCurrentWindowKeyFocusFunc() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Func_1<bool>*>("UnityEngine", "GUIUtility", "s_HasCurrentWindowKeyFocusFunc"));
}
// Autogenerated static field setter
// Set static field: static System.Func`1<System.Boolean> s_HasCurrentWindowKeyFocusFunc
void UnityEngine::GUIUtility::_set_s_HasCurrentWindowKeyFocusFunc(System::Func_1<bool>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GUIUtility", "s_HasCurrentWindowKeyFocusFunc", value));
}
// Autogenerated method: UnityEngine.GUIUtility.get_pixelsPerPoint
float UnityEngine::GUIUtility::get_pixelsPerPoint() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "GUIUtility", "get_pixelsPerPoint"));
}
// Autogenerated method: UnityEngine.GUIUtility.get_guiDepth
int UnityEngine::GUIUtility::get_guiDepth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "get_guiDepth"));
}
// Autogenerated method: UnityEngine.GUIUtility.set_mouseUsed
void UnityEngine::GUIUtility::set_mouseUsed(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_mouseUsed", value));
}
// Autogenerated method: UnityEngine.GUIUtility.set_textFieldInput
void UnityEngine::GUIUtility::set_textFieldInput(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_textFieldInput", value));
}
// Autogenerated method: UnityEngine.GUIUtility.get_systemCopyBuffer
::CsString* UnityEngine::GUIUtility::get_systemCopyBuffer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("UnityEngine", "GUIUtility", "get_systemCopyBuffer"));
}
// Autogenerated method: UnityEngine.GUIUtility.set_systemCopyBuffer
void UnityEngine::GUIUtility::set_systemCopyBuffer(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_systemCopyBuffer", value));
}
// Autogenerated method: UnityEngine.GUIUtility.GetControlID
int UnityEngine::GUIUtility::GetControlID(int hint, UnityEngine::FocusType focusType, UnityEngine::Rect rect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "GetControlID", hint, focusType, rect));
}
// Autogenerated method: UnityEngine.GUIUtility.get_compositionString
::CsString* UnityEngine::GUIUtility::get_compositionString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("UnityEngine", "GUIUtility", "get_compositionString"));
}
// Autogenerated method: UnityEngine.GUIUtility.set_compositionCursorPos
void UnityEngine::GUIUtility::set_compositionCursorPos(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_compositionCursorPos", value));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_GetHotControl
int UnityEngine::GUIUtility::Internal_GetHotControl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "Internal_GetHotControl"));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_GetKeyboardControl
int UnityEngine::GUIUtility::Internal_GetKeyboardControl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "Internal_GetKeyboardControl"));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_SetHotControl
void UnityEngine::GUIUtility::Internal_SetHotControl(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "Internal_SetHotControl", value));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_SetKeyboardControl
void UnityEngine::GUIUtility::Internal_SetKeyboardControl(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "Internal_SetKeyboardControl", value));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_GetDefaultSkin
::CsObject* UnityEngine::GUIUtility::Internal_GetDefaultSkin(int skinMode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsObject*>("UnityEngine", "GUIUtility", "Internal_GetDefaultSkin", skinMode));
}
// Autogenerated method: UnityEngine.GUIUtility.Internal_ExitGUI
void UnityEngine::GUIUtility::Internal_ExitGUI() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "Internal_ExitGUI"));
}
// Autogenerated method: UnityEngine.GUIUtility.MarkGUIChanged
void UnityEngine::GUIUtility::MarkGUIChanged() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "MarkGUIChanged"));
}
// Autogenerated method: UnityEngine.GUIUtility.GetControlID
int UnityEngine::GUIUtility::GetControlID(UnityEngine::FocusType focus) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "GetControlID", focus));
}
// Autogenerated method: UnityEngine.GUIUtility.GetControlID
int UnityEngine::GUIUtility::GetControlID(int hint, UnityEngine::FocusType focus) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "GetControlID", hint, focus));
}
// Autogenerated method: UnityEngine.GUIUtility.GetStateObject
::CsObject* UnityEngine::GUIUtility::GetStateObject(System::Type* t, int controlID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsObject*>("UnityEngine", "GUIUtility", "GetStateObject", t, controlID));
}
// Autogenerated method: UnityEngine.GUIUtility.set_guiIsExiting
void UnityEngine::GUIUtility::set_guiIsExiting(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_guiIsExiting", value));
}
// Autogenerated method: UnityEngine.GUIUtility.get_hotControl
int UnityEngine::GUIUtility::get_hotControl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "get_hotControl"));
}
// Autogenerated method: UnityEngine.GUIUtility.set_hotControl
void UnityEngine::GUIUtility::set_hotControl(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_hotControl", value));
}
// Autogenerated method: UnityEngine.GUIUtility.TakeCapture
void UnityEngine::GUIUtility::TakeCapture() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "TakeCapture"));
}
// Autogenerated method: UnityEngine.GUIUtility.RemoveCapture
void UnityEngine::GUIUtility::RemoveCapture() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "RemoveCapture"));
}
// Autogenerated method: UnityEngine.GUIUtility.get_keyboardControl
int UnityEngine::GUIUtility::get_keyboardControl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "get_keyboardControl"));
}
// Autogenerated method: UnityEngine.GUIUtility.set_keyboardControl
void UnityEngine::GUIUtility::set_keyboardControl(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_keyboardControl", value));
}
// Autogenerated method: UnityEngine.GUIUtility.HasKeyFocus
bool UnityEngine::GUIUtility::HasKeyFocus(int controlID) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "HasKeyFocus", controlID));
}
// Autogenerated method: UnityEngine.GUIUtility.GetDefaultSkin
UnityEngine::GUISkin* UnityEngine::GUIUtility::GetDefaultSkin() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::GUISkin*>("UnityEngine", "GUIUtility", "GetDefaultSkin"));
}
// Autogenerated method: UnityEngine.GUIUtility.ProcessEvent
bool UnityEngine::GUIUtility::ProcessEvent(int instanceID, System::IntPtr nativeEventPtr) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "ProcessEvent", instanceID, nativeEventPtr));
}
// Autogenerated method: UnityEngine.GUIUtility.BeginGUI
void UnityEngine::GUIUtility::BeginGUI(int skinMode, int instanceID, int useGUILayout) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "BeginGUI", skinMode, instanceID, useGUILayout));
}
// Autogenerated method: UnityEngine.GUIUtility.EndGUI
void UnityEngine::GUIUtility::EndGUI(int layoutType) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "EndGUI", layoutType));
}
// Autogenerated method: UnityEngine.GUIUtility.EndGUIFromException
bool UnityEngine::GUIUtility::EndGUIFromException(System::Exception* exception) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "EndGUIFromException", exception));
}
// Autogenerated method: UnityEngine.GUIUtility.EndContainerGUIFromException
bool UnityEngine::GUIUtility::EndContainerGUIFromException(System::Exception* exception) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "EndContainerGUIFromException", exception));
}
// Autogenerated method: UnityEngine.GUIUtility.ResetGlobalState
void UnityEngine::GUIUtility::ResetGlobalState() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "ResetGlobalState"));
}
// Autogenerated method: UnityEngine.GUIUtility.IsExitGUIException
bool UnityEngine::GUIUtility::IsExitGUIException(System::Exception* exception) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "IsExitGUIException", exception));
}
// Autogenerated method: UnityEngine.GUIUtility.ShouldRethrowException
bool UnityEngine::GUIUtility::ShouldRethrowException(System::Exception* exception) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "ShouldRethrowException", exception));
}
// Autogenerated method: UnityEngine.GUIUtility.CheckOnGUI
void UnityEngine::GUIUtility::CheckOnGUI() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "CheckOnGUI"));
}
// Autogenerated method: UnityEngine.GUIUtility.HitTest
bool UnityEngine::GUIUtility::HitTest(UnityEngine::Rect rect, UnityEngine::Vector2 point, int offset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "HitTest", rect, point, offset));
}
// Autogenerated method: UnityEngine.GUIUtility.HitTest
bool UnityEngine::GUIUtility::HitTest(UnityEngine::Rect rect, UnityEngine::Vector2 point, bool isDirectManipulationDevice) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "HitTest", rect, point, isDirectManipulationDevice));
}
// Autogenerated method: UnityEngine.GUIUtility.HitTest
bool UnityEngine::GUIUtility::HitTest(UnityEngine::Rect rect, UnityEngine::Event* evt) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "GUIUtility", "HitTest", rect, evt));
}
// Autogenerated method: UnityEngine.GUIUtility.GetControlID_Injected
int UnityEngine::GUIUtility::GetControlID_Injected(int hint, UnityEngine::FocusType focusType, UnityEngine::Rect& rect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "GUIUtility", "GetControlID_Injected", hint, focusType, rect));
}
// Autogenerated method: UnityEngine.GUIUtility.set_compositionCursorPos_Injected
void UnityEngine::GUIUtility::set_compositionCursorPos_Injected(UnityEngine::Vector2& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "GUIUtility", "set_compositionCursorPos_Injected", value));
}
