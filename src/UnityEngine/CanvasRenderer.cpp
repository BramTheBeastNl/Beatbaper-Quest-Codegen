// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CanvasRenderer.set_hasPopInstruction
void UnityEngine::CanvasRenderer::set_hasPopInstruction(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasPopInstruction", value));
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_materialCount
int UnityEngine::CanvasRenderer::get_materialCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_materialCount"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_materialCount
void UnityEngine::CanvasRenderer::set_materialCount(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_materialCount", value));
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_popMaterialCount
void UnityEngine::CanvasRenderer::set_popMaterialCount(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_popMaterialCount", value));
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_absoluteDepth
int UnityEngine::CanvasRenderer::get_absoluteDepth() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_absoluteDepth"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_hasMoved
bool UnityEngine::CanvasRenderer::get_hasMoved() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasMoved"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_cull
bool UnityEngine::CanvasRenderer::get_cull() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_cull"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_cull
void UnityEngine::CanvasRenderer::set_cull(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_cull", value));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor
void UnityEngine::CanvasRenderer::SetColor(UnityEngine::Color color) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetColor", color));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor
UnityEngine::Color UnityEngine::CanvasRenderer::GetColor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "GetColor"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping
void UnityEngine::CanvasRenderer::EnableRectClipping(UnityEngine::Rect rect) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EnableRectClipping", rect));
}
// Autogenerated method: UnityEngine.CanvasRenderer.DisableRectClipping
void UnityEngine::CanvasRenderer::DisableRectClipping() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisableRectClipping"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(UnityEngine::Material* material, int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMaterial", material, index));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "GetMaterial", index));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetPopMaterial
void UnityEngine::CanvasRenderer::SetPopMaterial(UnityEngine::Material* material, int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPopMaterial", material, index));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetTexture
void UnityEngine::CanvasRenderer::SetTexture(UnityEngine::Texture* texture) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetTexture", texture));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetAlphaTexture
void UnityEngine::CanvasRenderer::SetAlphaTexture(UnityEngine::Texture* texture) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetAlphaTexture", texture));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMesh
void UnityEngine::CanvasRenderer::SetMesh(UnityEngine::Mesh* mesh) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMesh", mesh));
}
// Autogenerated method: UnityEngine.CanvasRenderer.Clear
void UnityEngine::CanvasRenderer::Clear() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Clear"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(UnityEngine::Material* material, UnityEngine::Texture* texture) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMaterial", material, texture));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>(this, "GetMaterial"));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreams
void UnityEngine::CanvasRenderer::SplitUIVertexStreams(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents, System::Collections::Generic::List_1<int>* indices) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreams", verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices));
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStream
void UnityEngine::CanvasRenderer::CreateUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents, System::Collections::Generic::List_1<int>* indices) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStream", verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices));
}
// Autogenerated method: UnityEngine.CanvasRenderer.AddUIVertexStream
void UnityEngine::CanvasRenderer::AddUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "AddUIVertexStream", verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitIndicesStreamsInternal
void UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal(::CsObject* verts, ::CsObject* indices) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "SplitIndicesStreamsInternal", verts, indices));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreamsInternal
void UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal(::CsObject* verts, ::CsObject* positions, ::CsObject* colors, ::CsObject* uv0S, ::CsObject* uv1S, ::CsObject* uv2S, ::CsObject* uv3S, ::CsObject* normals, ::CsObject* tangents) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreamsInternal", verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents));
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStreamInternal
void UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal(::CsObject* verts, ::CsObject* positions, ::CsObject* colors, ::CsObject* uv0S, ::CsObject* uv1S, ::CsObject* uv2S, ::CsObject* uv3S, ::CsObject* normals, ::CsObject* tangents, ::CsObject* indices) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStreamInternal", verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices));
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor_Injected
void UnityEngine::CanvasRenderer::SetColor_Injected(UnityEngine::Color& color) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetColor_Injected", color));
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor_Injected
void UnityEngine::CanvasRenderer::GetColor_Injected(UnityEngine::Color& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetColor_Injected", ret));
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping_Injected
void UnityEngine::CanvasRenderer::EnableRectClipping_Injected(UnityEngine::Rect& rect) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EnableRectClipping_Injected", rect));
}
