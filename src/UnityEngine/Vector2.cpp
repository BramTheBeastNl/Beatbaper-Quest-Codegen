// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 zeroVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_zeroVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 zeroVector
void UnityEngine::Vector2::_set_zeroVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 oneVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_oneVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 oneVector
void UnityEngine::Vector2::_set_oneVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 upVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_upVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "upVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 upVector
void UnityEngine::Vector2::_set_upVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "upVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 downVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_downVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "downVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 downVector
void UnityEngine::Vector2::_set_downVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "downVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 leftVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_leftVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "leftVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 leftVector
void UnityEngine::Vector2::_set_leftVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "leftVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 rightVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_rightVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "rightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 rightVector
void UnityEngine::Vector2::_set_rightVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "rightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_positiveInfinityVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
void UnityEngine::Vector2::_set_positiveInfinityVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
UnityEngine::Vector2 UnityEngine::Vector2::_get_negativeInfinityVector() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("UnityEngine", "Vector2", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
void UnityEngine::Vector2::_set_negativeInfinityVector(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "negativeInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector2::_get_kEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector2::_set_kEpsilon(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilonNormalSqrt
float UnityEngine::Vector2::_get_kEpsilonNormalSqrt() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilonNormalSqrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilonNormalSqrt
void UnityEngine::Vector2::_set_kEpsilonNormalSqrt(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilonNormalSqrt", value));
}
// Autogenerated method: UnityEngine.Vector2.get_Item
float UnityEngine::Vector2::get_Item(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(*this, "get_Item", index));
}
// Autogenerated method: UnityEngine.Vector2.set_Item
void UnityEngine::Vector2::set_Item(int index, float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_Item", index, value));
}
// Autogenerated method: UnityEngine.Vector2..ctor
UnityEngine::Vector2* UnityEngine::Vector2::New_ctor(float x, float y) {
  return (Vector2*)THROW_UNLESS(il2cpp_utils::New("UnityEngine", "Vector2", x, y));
}
// Autogenerated method: UnityEngine.Vector2.Lerp
UnityEngine::Vector2 UnityEngine::Vector2::Lerp(UnityEngine::Vector2 a, UnityEngine::Vector2 b, float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "Lerp", a, b, t));
}
// Autogenerated method: UnityEngine.Vector2.Scale
UnityEngine::Vector2 UnityEngine::Vector2::Scale(UnityEngine::Vector2 a, UnityEngine::Vector2 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "Scale", a, b));
}
// Autogenerated method: UnityEngine.Vector2.Scale
void UnityEngine::Vector2::Scale(UnityEngine::Vector2 scale) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Scale", scale));
}
// Autogenerated method: UnityEngine.Vector2.Normalize
void UnityEngine::Vector2::Normalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Normalize"));
}
// Autogenerated method: UnityEngine.Vector2.get_normalized
UnityEngine::Vector2 UnityEngine::Vector2::get_normalized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>(*this, "get_normalized"));
}
// Autogenerated method: UnityEngine.Vector2.ToString
::Il2CppString* UnityEngine::Vector2::ToString(::Il2CppString* format) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString", format));
}
// Autogenerated method: UnityEngine.Vector2.Perpendicular
UnityEngine::Vector2 UnityEngine::Vector2::Perpendicular(UnityEngine::Vector2 inDirection) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "Perpendicular", inDirection));
}
// Autogenerated method: UnityEngine.Vector2.Dot
float UnityEngine::Vector2::Dot(UnityEngine::Vector2 lhs, UnityEngine::Vector2 rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Vector2", "Dot", lhs, rhs));
}
// Autogenerated method: UnityEngine.Vector2.get_magnitude
float UnityEngine::Vector2::get_magnitude() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(*this, "get_magnitude"));
}
// Autogenerated method: UnityEngine.Vector2.get_sqrMagnitude
float UnityEngine::Vector2::get_sqrMagnitude() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(*this, "get_sqrMagnitude"));
}
// Autogenerated method: UnityEngine.Vector2.Angle
float UnityEngine::Vector2::Angle(UnityEngine::Vector2 from, UnityEngine::Vector2 to) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Vector2", "Angle", from, to));
}
// Autogenerated method: UnityEngine.Vector2.SignedAngle
float UnityEngine::Vector2::SignedAngle(UnityEngine::Vector2 from, UnityEngine::Vector2 to) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Vector2", "SignedAngle", from, to));
}
// Autogenerated method: UnityEngine.Vector2.Distance
float UnityEngine::Vector2::Distance(UnityEngine::Vector2 a, UnityEngine::Vector2 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Vector2", "Distance", a, b));
}
// Autogenerated method: UnityEngine.Vector2.get_zero
UnityEngine::Vector2 UnityEngine::Vector2::get_zero() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "get_zero"));
}
// Autogenerated method: UnityEngine.Vector2.get_one
UnityEngine::Vector2 UnityEngine::Vector2::get_one() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "get_one"));
}
// Autogenerated method: UnityEngine.Vector2.get_up
UnityEngine::Vector2 UnityEngine::Vector2::get_up() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "get_up"));
}
// Autogenerated method: UnityEngine.Vector2.get_right
UnityEngine::Vector2 UnityEngine::Vector2::get_right() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "get_right"));
}
// Autogenerated method: UnityEngine.Vector2..cctor
void UnityEngine::Vector2::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Vector2", ".cctor"));
}
// Autogenerated method: UnityEngine.Vector2.ToString
::Il2CppString* UnityEngine::Vector2::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
}
// Autogenerated method: UnityEngine.Vector2.GetHashCode
int UnityEngine::Vector2::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(::Il2CppObject* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(UnityEngine::Vector2 other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.Vector2.op_Addition
UnityEngine::Vector2 UnityEngine::operator+(const UnityEngine::Vector2& a, const UnityEngine::Vector2& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Addition", a, b));
}
// Autogenerated method: UnityEngine.Vector2.op_Subtraction
UnityEngine::Vector2 UnityEngine::operator-(const UnityEngine::Vector2& a, const UnityEngine::Vector2& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Subtraction", a, b));
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
UnityEngine::Vector2 UnityEngine::operator*(const UnityEngine::Vector2& a, const UnityEngine::Vector2& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Multiply", a, b));
}
// Autogenerated method: UnityEngine.Vector2.op_Division
UnityEngine::Vector2 UnityEngine::operator/(const UnityEngine::Vector2& a, const UnityEngine::Vector2& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Division", a, b));
}
// Autogenerated method: UnityEngine.Vector2.op_UnaryNegation
UnityEngine::Vector2 UnityEngine::operator-(const UnityEngine::Vector2& a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_UnaryNegation", a));
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
UnityEngine::Vector2 UnityEngine::operator*(const UnityEngine::Vector2& a, const float& d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Multiply", a, d));
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
UnityEngine::Vector2 UnityEngine::operator*(const float& d, const UnityEngine::Vector2& a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Multiply", d, a));
}
// Autogenerated method: UnityEngine.Vector2.op_Division
UnityEngine::Vector2 UnityEngine::operator/(const UnityEngine::Vector2& a, const float& d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "Vector2", "op_Division", a, d));
}
// Autogenerated method: UnityEngine.Vector2.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Vector2& lhs, const UnityEngine::Vector2& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Vector2", "op_Equality", lhs, rhs));
}
// Autogenerated method: UnityEngine.Vector2.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Vector2& lhs, const UnityEngine::Vector2& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Vector2", "op_Inequality", lhs, rhs));
}
