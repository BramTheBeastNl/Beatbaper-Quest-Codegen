// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.TouchInputModule
#include "UnityEngine/EventSystems/TouchInputModule.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_allowActivationOnStandalone
bool UnityEngine::EventSystems::TouchInputModule::get_allowActivationOnStandalone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_allowActivationOnStandalone"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_allowActivationOnStandalone
void UnityEngine::EventSystems::TouchInputModule::set_allowActivationOnStandalone(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_allowActivationOnStandalone", value));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_forceModuleActive
bool UnityEngine::EventSystems::TouchInputModule::get_forceModuleActive() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_forceModuleActive"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_forceModuleActive
void UnityEngine::EventSystems::TouchInputModule::set_forceModuleActive(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_forceModuleActive", value));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UseFakeInput
bool UnityEngine::EventSystems::TouchInputModule::UseFakeInput() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "UseFakeInput"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.FakeTouches
void UnityEngine::EventSystems::TouchInputModule::FakeTouches() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FakeTouches"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchEvents
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchEvents() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessTouchEvents"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchPress
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchPress(UnityEngine::EventSystems::PointerEventData* pointerEvent, bool pressed, bool released) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessTouchPress", pointerEvent, pressed, released));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule..ctor
UnityEngine::EventSystems::TouchInputModule* UnityEngine::EventSystems::TouchInputModule::New_ctor() {
  return (TouchInputModule*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.EventSystems", "TouchInputModule"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UpdateModule
void UnityEngine::EventSystems::TouchInputModule::UpdateModule() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateModule"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.IsModuleSupported
bool UnityEngine::EventSystems::TouchInputModule::IsModuleSupported() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsModuleSupported"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::TouchInputModule::ShouldActivateModule() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ShouldActivateModule"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.Process
void UnityEngine::EventSystems::TouchInputModule::Process() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Process"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.DeactivateModule
void UnityEngine::EventSystems::TouchInputModule::DeactivateModule() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DeactivateModule"));
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ToString
::Il2CppString* UnityEngine::EventSystems::TouchInputModule::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
