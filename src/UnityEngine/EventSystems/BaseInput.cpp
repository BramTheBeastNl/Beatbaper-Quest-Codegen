// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: UnityEngine.IMECompositionMode
#include "UnityEngine/IMECompositionMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Touch
#include "UnityEngine/Touch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_compositionString
::Il2CppString* UnityEngine::EventSystems::BaseInput::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_compositionString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_compositionString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_imeCompositionMode
UnityEngine::IMECompositionMode UnityEngine::EventSystems::BaseInput::get_imeCompositionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_imeCompositionMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_imeCompositionMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IMECompositionMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.set_imeCompositionMode
void UnityEngine::EventSystems::BaseInput::set_imeCompositionMode(UnityEngine::IMECompositionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("set_imeCompositionMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_imeCompositionMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_compositionCursorPos
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_compositionCursorPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_compositionCursorPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_compositionCursorPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.set_compositionCursorPos
void UnityEngine::EventSystems::BaseInput::set_compositionCursorPos(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("set_compositionCursorPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_compositionCursorPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mousePresent
bool UnityEngine::EventSystems::BaseInput::get_mousePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_mousePresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mousePresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButtonDown
bool UnityEngine::EventSystems::BaseInput::GetMouseButtonDown(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetMouseButtonDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMouseButtonDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButtonUp
bool UnityEngine::EventSystems::BaseInput::GetMouseButtonUp(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetMouseButtonUp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMouseButtonUp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButton
bool UnityEngine::EventSystems::BaseInput::GetMouseButton(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetMouseButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMouseButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(button)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mousePosition
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_mousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_mousePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mousePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mouseScrollDelta
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_mouseScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_mouseScrollDelta");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mouseScrollDelta", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_touchSupported
bool UnityEngine::EventSystems::BaseInput::get_touchSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_touchSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_touchSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_touchCount
int UnityEngine::EventSystems::BaseInput::get_touchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("get_touchCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_touchCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetTouch
UnityEngine::Touch UnityEngine::EventSystems::BaseInput::GetTouch(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetTouch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTouch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Touch, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetAxisRaw
float UnityEngine::EventSystems::BaseInput::GetAxisRaw(::Il2CppString* axisName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetAxisRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAxisRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(axisName)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axisName);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetButtonDown
bool UnityEngine::EventSystems::BaseInput::GetButtonDown(::Il2CppString* buttonName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::EventSystems").WithContext("BaseInput").WithContext("GetButtonDown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetButtonDown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buttonName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, buttonName);
}
