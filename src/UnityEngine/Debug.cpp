// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Debug
#include "UnityEngine/Debug.hpp"
// Including type: UnityEngine.ILogger
#include "UnityEngine/ILogger.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.ILogger s_Logger
UnityEngine::ILogger* UnityEngine::Debug::_get_s_Logger() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ILogger*>("UnityEngine", "Debug", "s_Logger"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.ILogger s_Logger
void UnityEngine::Debug::_set_s_Logger(UnityEngine::ILogger* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Debug", "s_Logger", value));
}
// Autogenerated method: UnityEngine.Debug.get_unityLogger
UnityEngine::ILogger* UnityEngine::Debug::get_unityLogger() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ILogger*>("UnityEngine", "Debug", "get_unityLogger"));
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(UnityEngine::Vector3 start, UnityEngine::Vector3 end, UnityEngine::Color color) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "DrawLine", start, end, color));
}
// Autogenerated method: UnityEngine.Debug.DrawLine
void UnityEngine::Debug::DrawLine(UnityEngine::Vector3 start, UnityEngine::Vector3 end, UnityEngine::Color color, float duration, bool depthTest) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "DrawLine", start, end, color, duration, depthTest));
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "Log", message));
}
// Autogenerated method: UnityEngine.Debug.Log
void UnityEngine::Debug::Log(::Il2CppObject* message, UnityEngine::Object* context) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "Log", message, context));
}
// Autogenerated method: UnityEngine.Debug.LogFormat
void UnityEngine::Debug::LogFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogFormat", format, args));
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogError", message));
}
// Autogenerated method: UnityEngine.Debug.LogError
void UnityEngine::Debug::LogError(::Il2CppObject* message, UnityEngine::Object* context) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogError", message, context));
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogErrorFormat", format, args));
}
// Autogenerated method: UnityEngine.Debug.LogErrorFormat
void UnityEngine::Debug::LogErrorFormat(UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogErrorFormat", context, format, args));
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(System::Exception* exception) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogException", exception));
}
// Autogenerated method: UnityEngine.Debug.LogException
void UnityEngine::Debug::LogException(System::Exception* exception, UnityEngine::Object* context) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogException", exception, context));
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogWarning", message));
}
// Autogenerated method: UnityEngine.Debug.LogWarning
void UnityEngine::Debug::LogWarning(::Il2CppObject* message, UnityEngine::Object* context) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogWarning", message, context));
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogWarningFormat", format, args));
}
// Autogenerated method: UnityEngine.Debug.LogWarningFormat
void UnityEngine::Debug::LogWarningFormat(UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogWarningFormat", context, format, args));
}
// Autogenerated method: UnityEngine.Debug.LogAssertion
void UnityEngine::Debug::LogAssertion(::Il2CppObject* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "LogAssertion", message));
}
// Autogenerated method: UnityEngine.Debug.get_isDebugBuild
bool UnityEngine::Debug::get_isDebugBuild() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Debug", "get_isDebugBuild"));
}
// Autogenerated method: UnityEngine.Debug.CallOverridenDebugHandler
bool UnityEngine::Debug::CallOverridenDebugHandler(System::Exception* exception, UnityEngine::Object* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Debug", "CallOverridenDebugHandler", exception, obj));
}
// Autogenerated method: UnityEngine.Debug..cctor
void UnityEngine::Debug::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", ".cctor"));
}
// Autogenerated method: UnityEngine.Debug.DrawLine_Injected
void UnityEngine::Debug::DrawLine_Injected(UnityEngine::Vector3& start, UnityEngine::Vector3& end, UnityEngine::Color& color, float duration, bool depthTest) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Debug", "DrawLine_Injected", start, end, color, duration, depthTest));
}
