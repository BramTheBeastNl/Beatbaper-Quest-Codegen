// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.CommandBufferExecutionFlags
#include "UnityEngine/Rendering/CommandBufferExecutionFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags None
UnityEngine::Rendering::CommandBufferExecutionFlags UnityEngine::Rendering::CommandBufferExecutionFlags::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Rendering::CommandBufferExecutionFlags>("UnityEngine.Rendering", "CommandBufferExecutionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags None
void UnityEngine::Rendering::CommandBufferExecutionFlags::_set_None(UnityEngine::Rendering::CommandBufferExecutionFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CommandBufferExecutionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags AsyncCompute
UnityEngine::Rendering::CommandBufferExecutionFlags UnityEngine::Rendering::CommandBufferExecutionFlags::_get_AsyncCompute() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Rendering::CommandBufferExecutionFlags>("UnityEngine.Rendering", "CommandBufferExecutionFlags", "AsyncCompute"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags AsyncCompute
void UnityEngine::Rendering::CommandBufferExecutionFlags::_set_AsyncCompute(UnityEngine::Rendering::CommandBufferExecutionFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CommandBufferExecutionFlags", "AsyncCompute", value));
}
