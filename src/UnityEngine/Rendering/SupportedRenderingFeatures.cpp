// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.SupportedRenderingFeatures
#include "UnityEngine\Rendering\SupportedRenderingFeatures.hpp"
// Including type: System.IntPtr
#include "System\IntPtr.hpp"
// Including type: UnityEngine.MixedLightingMode
#include "UnityEngine\MixedLightingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::_get_s_Active() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Rendering::SupportedRenderingFeatures*>("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
void UnityEngine::Rendering::SupportedRenderingFeatures::_set_s_Active(UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active", value));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_active
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::get_active() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Rendering::SupportedRenderingFeatures*>("UnityEngine.Rendering", "SupportedRenderingFeatures", "get_active"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.set_active
void UnityEngine::Rendering::SupportedRenderingFeatures::set_active(UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "set_active", value));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_defaultMixedLightingModes
UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_defaultMixedLightingModes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>(this, "get_defaultMixedLightingModes"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_mixedLightingModes
UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_mixedLightingModes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>(this, "get_mixedLightingModes"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapBakeTypes
UnityEngine::LightmapBakeType UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapBakeTypes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::LightmapBakeType>(this, "get_lightmapBakeTypes"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapsModes
UnityEngine::LightmapsMode UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapsModes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::LightmapsMode>(this, "get_lightmapsModes"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_enlighten
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_enlighten() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_enlighten"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackMixedLightingModeByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackMixedLightingModeByRef(System::IntPtr fallbackModePtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "FallbackMixedLightingModeByRef", fallbackModePtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupported(UnityEngine::MixedLightingMode mixedMode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsMixedLightingModeSupported", mixedMode));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupportedByRef(UnityEngine::MixedLightingMode mixedMode, System::IntPtr isSupportedPtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsMixedLightingModeSupportedByRef", mixedMode, isSupportedPtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupported(UnityEngine::LightmapBakeType bakeType) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapBakeTypeSupported", bakeType));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupportedByRef(UnityEngine::LightmapBakeType bakeType, System::IntPtr isSupportedPtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapBakeTypeSupportedByRef", bakeType, isSupportedPtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapsModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapsModeSupportedByRef(UnityEngine::LightmapsMode mode, System::IntPtr isSupportedPtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapsModeSupportedByRef", mode, isSupportedPtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapperSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapperSupportedByRef(int lightmapper, System::IntPtr isSupportedPtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapperSupportedByRef", lightmapper, isSupportedPtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackLightmapperByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackLightmapperByRef(System::IntPtr lightmapperPtr) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "FallbackLightmapperByRef", lightmapperPtr));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures..cctor
void UnityEngine::Rendering::SupportedRenderingFeatures::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", ".cctor"));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures..ctor
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::New_ctor() {
  return (SupportedRenderingFeatures*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Rendering", "SupportedRenderingFeatures"));
}
