// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.SupportedRenderingFeatures
#include "UnityEngine/Rendering/SupportedRenderingFeatures.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.MixedLightingMode
#include "UnityEngine/MixedLightingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::_get_s_Active() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("_get_s_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Rendering::SupportedRenderingFeatures*>("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
void UnityEngine::Rendering::SupportedRenderingFeatures::_set_s_Active(UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("_set_s_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active", value));
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_active
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_active");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<UnityEngine::Rendering::SupportedRenderingFeatures*>(), "get_active", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::SupportedRenderingFeatures*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.set_active
void UnityEngine::Rendering::SupportedRenderingFeatures::set_active(UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("set_active");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "set_active", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_defaultMixedLightingModes
UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_defaultMixedLightingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_defaultMixedLightingModes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>(), "get_defaultMixedLightingModes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_mixedLightingModes
UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_mixedLightingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_mixedLightingModes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>(), "get_mixedLightingModes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapBakeTypes
UnityEngine::LightmapBakeType UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapBakeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_lightmapBakeTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::LightmapBakeType>(), "get_lightmapBakeTypes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightmapBakeType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapsModes
UnityEngine::LightmapsMode UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapsModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_lightmapsModes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::LightmapsMode>(), "get_lightmapsModes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightmapsMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_enlighten
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_enlighten() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("get_enlighten");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_enlighten", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackMixedLightingModeByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackMixedLightingModeByRef(System::IntPtr fallbackModePtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("FallbackMixedLightingModeByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "FallbackMixedLightingModeByRef", {}, ::il2cpp_utils::ExtractTypes(fallbackModePtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fallbackModePtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupported(UnityEngine::MixedLightingMode mixedMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsMixedLightingModeSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<bool>(), "IsMixedLightingModeSupported", {}, ::il2cpp_utils::ExtractTypes(mixedMode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mixedMode);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupportedByRef(UnityEngine::MixedLightingMode mixedMode, System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsMixedLightingModeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "IsMixedLightingModeSupportedByRef", {}, ::il2cpp_utils::ExtractTypes(mixedMode, isSupportedPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mixedMode, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupported(UnityEngine::LightmapBakeType bakeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsLightmapBakeTypeSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<bool>(), "IsLightmapBakeTypeSupported", {}, ::il2cpp_utils::ExtractTypes(bakeType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bakeType);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupportedByRef(UnityEngine::LightmapBakeType bakeType, System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsLightmapBakeTypeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "IsLightmapBakeTypeSupportedByRef", {}, ::il2cpp_utils::ExtractTypes(bakeType, isSupportedPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bakeType, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapsModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapsModeSupportedByRef(UnityEngine::LightmapsMode mode, System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsLightmapsModeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "IsLightmapsModeSupportedByRef", {}, ::il2cpp_utils::ExtractTypes(mode, isSupportedPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapperSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapperSupportedByRef(int lightmapper, System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("IsLightmapperSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "IsLightmapperSupportedByRef", {}, ::il2cpp_utils::ExtractTypes(lightmapper, isSupportedPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lightmapper, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackLightmapperByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackLightmapperByRef(System::IntPtr lightmapperPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext("FallbackLightmapperByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), "FallbackLightmapperByRef", {}, ::il2cpp_utils::ExtractTypes(lightmapperPtr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lightmapperPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures..cctor
void UnityEngine::Rendering::SupportedRenderingFeatures::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures..ctor
UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Rendering").WithContext("SupportedRenderingFeatures").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SupportedRenderingFeatures*>());
}
