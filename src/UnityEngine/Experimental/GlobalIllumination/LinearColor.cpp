// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LinearColor
#include "UnityEngine/Experimental/GlobalIllumination/LinearColor.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.Convert
UnityEngine::Experimental::GlobalIllumination::LinearColor UnityEngine::Experimental::GlobalIllumination::LinearColor::Convert(UnityEngine::Color color, float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Experimental::GlobalIllumination").WithContext("LinearColor").WithContext("Convert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LinearColor", il2cpp_utils::NoArgClass<UnityEngine::Experimental::GlobalIllumination::LinearColor>(), "Convert", {}, ::il2cpp_utils::ExtractTypes(color, intensity)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Experimental::GlobalIllumination::LinearColor, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, color, intensity);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.Black
UnityEngine::Experimental::GlobalIllumination::LinearColor UnityEngine::Experimental::GlobalIllumination::LinearColor::Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Experimental::GlobalIllumination").WithContext("LinearColor").WithContext("Black");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LinearColor", il2cpp_utils::NoArgClass<UnityEngine::Experimental::GlobalIllumination::LinearColor>(), "Black", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Experimental::GlobalIllumination::LinearColor, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
