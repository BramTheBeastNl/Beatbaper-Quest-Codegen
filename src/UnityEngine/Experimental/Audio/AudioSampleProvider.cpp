// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider
#include "UnityEngine/Experimental/Audio/AudioSampleProvider.hpp"
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler
#include "UnityEngine/Experimental/Audio/AudioSampleProvider_SampleFramesHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesAvailable
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesAvailable(int sampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Experimental::Audio").WithContext("AudioSampleProvider").WithContext("InvokeSampleFramesAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InvokeSampleFramesAvailable", {}, ::il2cpp_utils::ExtractTypes(sampleFrameCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sampleFrameCount);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesOverflow
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesOverflow(int droppedSampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Experimental::Audio").WithContext("AudioSampleProvider").WithContext("InvokeSampleFramesOverflow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InvokeSampleFramesOverflow", {}, ::il2cpp_utils::ExtractTypes(droppedSampleFrameCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, droppedSampleFrameCount);
}
