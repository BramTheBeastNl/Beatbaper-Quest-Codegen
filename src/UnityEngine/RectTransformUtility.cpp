// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransformUtility
#include "UnityEngine/RectTransformUtility.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Corners
::Array<UnityEngine::Vector3>* UnityEngine::RectTransformUtility::_get_s_Corners() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("UnityEngine", "RectTransformUtility", "s_Corners"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Corners
void UnityEngine::RectTransformUtility::_set_s_Corners(::Array<UnityEngine::Vector3>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransformUtility", "s_Corners", value));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint
UnityEngine::Vector2 UnityEngine::RectTransformUtility::PixelAdjustPoint(UnityEngine::Vector2 point, UnityEngine::Transform* elementTransform, UnityEngine::Canvas* canvas) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "RectTransformUtility", "PixelAdjustPoint", point, elementTransform, canvas));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect
UnityEngine::Rect UnityEngine::RectTransformUtility::PixelAdjustRect(UnityEngine::RectTransform* rectTransform, UnityEngine::Canvas* canvas) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Rect>("UnityEngine", "RectTransformUtility", "PixelAdjustRect", rectTransform, canvas));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle
bool UnityEngine::RectTransformUtility::PointInRectangle(UnityEngine::Vector2 screenPoint, UnityEngine::RectTransform* rect, UnityEngine::Camera* cam) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "RectTransformUtility", "PointInRectangle", screenPoint, rect, cam));
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", rect, screenPoint, cam));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector3& worldPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "RectTransformUtility", "ScreenPointToWorldPointInRectangle", rect, screenPoint, cam, worldPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector2& localPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "RectTransformUtility", "ScreenPointToLocalPointInRectangle", rect, screenPoint, cam, localPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToRay
UnityEngine::Ray UnityEngine::RectTransformUtility::ScreenPointToRay(UnityEngine::Camera* cam, UnityEngine::Vector2 screenPos) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Ray>("UnityEngine", "RectTransformUtility", "ScreenPointToRay", cam, screenPos));
}
// Autogenerated method: UnityEngine.RectTransformUtility.WorldToScreenPoint
UnityEngine::Vector2 UnityEngine::RectTransformUtility::WorldToScreenPoint(UnityEngine::Camera* cam, UnityEngine::Vector3 worldPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "RectTransformUtility", "WorldToScreenPoint", cam, worldPoint));
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutOnAxis
void UnityEngine::RectTransformUtility::FlipLayoutOnAxis(UnityEngine::RectTransform* rect, int axis, bool keepPositioning, bool recursive) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "RectTransformUtility", "FlipLayoutOnAxis", rect, axis, keepPositioning, recursive));
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutAxes
void UnityEngine::RectTransformUtility::FlipLayoutAxes(UnityEngine::RectTransform* rect, bool keepPositioning, bool recursive) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "RectTransformUtility", "FlipLayoutAxes", rect, keepPositioning, recursive));
}
// Autogenerated method: UnityEngine.RectTransformUtility.GetTransposed
UnityEngine::Vector2 UnityEngine::RectTransformUtility::GetTransposed(UnityEngine::Vector2 input) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine", "RectTransformUtility", "GetTransposed", input));
}
// Autogenerated method: UnityEngine.RectTransformUtility..cctor
void UnityEngine::RectTransformUtility::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "RectTransformUtility", ".cctor"));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint_Injected
void UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected(UnityEngine::Vector2& point, UnityEngine::Transform* elementTransform, UnityEngine::Canvas* canvas, UnityEngine::Vector2& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint_Injected", point, elementTransform, canvas, ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect_Injected
void UnityEngine::RectTransformUtility::PixelAdjustRect_Injected(UnityEngine::RectTransform* rectTransform, UnityEngine::Canvas* canvas, UnityEngine::Rect& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect_Injected", rectTransform, canvas, ret));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle_Injected
bool UnityEngine::RectTransformUtility::PointInRectangle_Injected(UnityEngine::Vector2& screenPoint, UnityEngine::RectTransform* rect, UnityEngine::Camera* cam) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "RectTransformUtility", "PointInRectangle_Injected", screenPoint, rect, cam));
}
