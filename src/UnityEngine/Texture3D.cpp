// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Texture3D
#include "UnityEngine/Texture3D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Texture3D.Internal_CreateImpl
bool UnityEngine::Texture3D::Internal_CreateImpl(UnityEngine::Texture3D* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("Internal_CreateImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Texture3D", "Internal_CreateImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mono, w, h, d, mipCount, format, flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture3D.Internal_Create
void UnityEngine::Texture3D::Internal_Create(UnityEngine::Texture3D* mono, int w, int h, int d, int mipCount, UnityEngine::Experimental::Rendering::GraphicsFormat format, UnityEngine::Experimental::Rendering::TextureCreationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("Internal_Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Texture3D", "Internal_Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mono, w, h, d, mipCount, format, flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mono, w, h, d, mipCount, format, flags);
}
// Autogenerated method: UnityEngine.Texture3D.ApplyImpl
void UnityEngine::Texture3D::ApplyImpl(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("ApplyImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateMipmaps, makeNoLongerReadable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture3D.SetPixels32
void UnityEngine::Texture3D::SetPixels32(::Array<UnityEngine::Color32>* colors, int miplevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("SetPixels32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colors, miplevel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors, miplevel);
}
// Autogenerated method: UnityEngine.Texture3D.SetPixels32
void UnityEngine::Texture3D::SetPixels32(::Array<UnityEngine::Color32>* colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("SetPixels32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPixels32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colors)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colors);
}
// Autogenerated method: UnityEngine.Texture3D.Apply
void UnityEngine::Texture3D::Apply(bool updateMipmaps, bool makeNoLongerReadable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateMipmaps, makeNoLongerReadable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMipmaps, makeNoLongerReadable);
}
// Autogenerated method: UnityEngine.Texture3D.Apply
void UnityEngine::Texture3D::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("Apply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Texture3D.get_isReadable
bool UnityEngine::Texture3D::get_isReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Texture3D").WithContext("get_isReadable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isReadable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
