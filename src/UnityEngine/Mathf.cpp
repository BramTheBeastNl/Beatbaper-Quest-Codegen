// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Mathf
#include "UnityEngine/Mathf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single Epsilon
float UnityEngine::Mathf::_get_Epsilon() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Mathf", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Epsilon
void UnityEngine::Mathf::_set_Epsilon(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Mathf", "Epsilon", value));
}
// Autogenerated method: UnityEngine.Mathf.NextPowerOfTwo
int UnityEngine::Mathf::NextPowerOfTwo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("NextPowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "NextPowerOfTwo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.GammaToLinearSpace
float UnityEngine::Mathf::GammaToLinearSpace(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("GammaToLinearSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "GammaToLinearSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.PerlinNoise
float UnityEngine::Mathf::PerlinNoise(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("PerlinNoise");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "PerlinNoise", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.Mathf.Sin
float UnityEngine::Mathf::Sin(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Sin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Cos
float UnityEngine::Mathf::Cos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Cos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Cos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Tan
float UnityEngine::Mathf::Tan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Tan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Tan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Asin
float UnityEngine::Mathf::Asin(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Asin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Asin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Acos
float UnityEngine::Mathf::Acos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Acos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Acos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan
float UnityEngine::Mathf::Atan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Atan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan2
float UnityEngine::Mathf::Atan2(float y, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Atan2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(y, x)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, y, x);
}
// Autogenerated method: UnityEngine.Mathf.Sqrt
float UnityEngine::Mathf::Sqrt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Sqrt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sqrt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
float UnityEngine::Mathf::Abs(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Abs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
int UnityEngine::Mathf::Abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Abs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Min
float UnityEngine::Mathf::Min(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Min");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Min
int UnityEngine::Mathf::Min(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Min");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Max");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(::Array<float>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Max");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(values)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values);
}
// Creating initializer_list -> params proxy for: System.Single Max(params System.Single[] values)
float UnityEngine::Mathf::Max(std::initializer_list<float> values) {
  return UnityEngine::Mathf::Max(::Array<float>::New(values));
}
// Autogenerated method: UnityEngine.Mathf.Max
int UnityEngine::Mathf::Max(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Max");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Pow
float UnityEngine::Mathf::Pow(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Pow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Pow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f, p)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f, p)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Ceil
float UnityEngine::Mathf::Ceil(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Ceil");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Ceil", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Floor
float UnityEngine::Mathf::Floor(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Floor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Floor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Round
float UnityEngine::Mathf::Round(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Round");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Round", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.CeilToInt
int UnityEngine::Mathf::CeilToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("CeilToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "CeilToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.FloorToInt
int UnityEngine::Mathf::FloorToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("FloorToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "FloorToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.RoundToInt
int UnityEngine::Mathf::RoundToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("RoundToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "RoundToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Sign
float UnityEngine::Mathf::Sign(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Sign");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sign", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
float UnityEngine::Mathf::Clamp(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Clamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, min, max)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
int UnityEngine::Mathf::Clamp(int value, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Clamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, min, max)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp01
float UnityEngine::Mathf::Clamp01(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Clamp01");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp01", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Lerp
float UnityEngine::Mathf::Lerp(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.LerpUnclamped
float UnityEngine::Mathf::LerpUnclamped(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.MoveTowards
float UnityEngine::Mathf::MoveTowards(float current, float target, float maxDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("MoveTowards");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "MoveTowards", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(current, target, maxDelta)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, current, target, maxDelta);
}
// Autogenerated method: UnityEngine.Mathf.Approximately
bool UnityEngine::Mathf::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, float& currentVelocity, float smoothTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothDamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(current, target, currentVelocity, smoothTime)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, current, target, currentVelocity, smoothTime);
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, float& currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothDamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(current, target, currentVelocity, smoothTime, maxSpeed, deltaTime)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, current, target, currentVelocity, smoothTime, maxSpeed, deltaTime);
}
// Autogenerated method: UnityEngine.Mathf.Repeat
float UnityEngine::Mathf::Repeat(float t, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("Repeat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Repeat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, length)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, length);
}
// Autogenerated method: UnityEngine.Mathf.InverseLerp
float UnityEngine::Mathf::InverseLerp(float a, float b, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("InverseLerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "InverseLerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, value)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, value);
}
// Autogenerated method: UnityEngine.Mathf.DeltaAngle
float UnityEngine::Mathf::DeltaAngle(float current, float target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext("DeltaAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "DeltaAngle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(current, target)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, current, target);
}
// Autogenerated method: UnityEngine.Mathf..cctor
void UnityEngine::Mathf::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Mathf").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Mathf", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
