// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Mathf
#include "UnityEngine/Mathf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single Epsilon
float UnityEngine::Mathf::_get_Epsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Mathf", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Epsilon
void UnityEngine::Mathf::_set_Epsilon(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Mathf", "Epsilon", value));
}
// Autogenerated method: UnityEngine.Mathf.NextPowerOfTwo
int UnityEngine::Mathf::NextPowerOfTwo(int value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "NextPowerOfTwo", value));
}
// Autogenerated method: UnityEngine.Mathf.GammaToLinearSpace
float UnityEngine::Mathf::GammaToLinearSpace(float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "GammaToLinearSpace", value));
}
// Autogenerated method: UnityEngine.Mathf.Sin
float UnityEngine::Mathf::Sin(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Sin", f));
}
// Autogenerated method: UnityEngine.Mathf.Cos
float UnityEngine::Mathf::Cos(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Cos", f));
}
// Autogenerated method: UnityEngine.Mathf.Tan
float UnityEngine::Mathf::Tan(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Tan", f));
}
// Autogenerated method: UnityEngine.Mathf.Asin
float UnityEngine::Mathf::Asin(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Asin", f));
}
// Autogenerated method: UnityEngine.Mathf.Acos
float UnityEngine::Mathf::Acos(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Acos", f));
}
// Autogenerated method: UnityEngine.Mathf.Atan
float UnityEngine::Mathf::Atan(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Atan", f));
}
// Autogenerated method: UnityEngine.Mathf.Atan2
float UnityEngine::Mathf::Atan2(float y, float x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Atan2", y, x));
}
// Autogenerated method: UnityEngine.Mathf.Sqrt
float UnityEngine::Mathf::Sqrt(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Sqrt", f));
}
// Autogenerated method: UnityEngine.Mathf.Abs
float UnityEngine::Mathf::Abs(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Abs", f));
}
// Autogenerated method: UnityEngine.Mathf.Abs
int UnityEngine::Mathf::Abs(int value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "Abs", value));
}
// Autogenerated method: UnityEngine.Mathf.Min
float UnityEngine::Mathf::Min(float a, float b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Min", a, b));
}
// Autogenerated method: UnityEngine.Mathf.Min
int UnityEngine::Mathf::Min(int a, int b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "Min", a, b));
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(float a, float b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Max", a, b));
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(::Array<float>* values) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Max", values));
}
// Creating initializer_list -> params proxy for: System.Single Max(params System.Single[] values)
float UnityEngine::Mathf::Max(std::initializer_list<float> values) {
  return UnityEngine::Mathf::Max(::Array<float>::New(values));
}
// Autogenerated method: UnityEngine.Mathf.Max
int UnityEngine::Mathf::Max(int a, int b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "Max", a, b));
}
// Autogenerated method: UnityEngine.Mathf.Pow
float UnityEngine::Mathf::Pow(float f, float p) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Pow", f, p));
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f, float p) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Log", f, p));
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Log", f));
}
// Autogenerated method: UnityEngine.Mathf.Ceil
float UnityEngine::Mathf::Ceil(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Ceil", f));
}
// Autogenerated method: UnityEngine.Mathf.Floor
float UnityEngine::Mathf::Floor(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Floor", f));
}
// Autogenerated method: UnityEngine.Mathf.Round
float UnityEngine::Mathf::Round(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Round", f));
}
// Autogenerated method: UnityEngine.Mathf.CeilToInt
int UnityEngine::Mathf::CeilToInt(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "CeilToInt", f));
}
// Autogenerated method: UnityEngine.Mathf.FloorToInt
int UnityEngine::Mathf::FloorToInt(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "FloorToInt", f));
}
// Autogenerated method: UnityEngine.Mathf.RoundToInt
int UnityEngine::Mathf::RoundToInt(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "RoundToInt", f));
}
// Autogenerated method: UnityEngine.Mathf.Sign
float UnityEngine::Mathf::Sign(float f) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Sign", f));
}
// Autogenerated method: UnityEngine.Mathf.Clamp
float UnityEngine::Mathf::Clamp(float value, float min, float max) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Clamp", value, min, max));
}
// Autogenerated method: UnityEngine.Mathf.Clamp
int UnityEngine::Mathf::Clamp(int value, int min, int max) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine", "Mathf", "Clamp", value, min, max));
}
// Autogenerated method: UnityEngine.Mathf.Clamp01
float UnityEngine::Mathf::Clamp01(float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Clamp01", value));
}
// Autogenerated method: UnityEngine.Mathf.Lerp
float UnityEngine::Mathf::Lerp(float a, float b, float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Lerp", a, b, t));
}
// Autogenerated method: UnityEngine.Mathf.LerpUnclamped
float UnityEngine::Mathf::LerpUnclamped(float a, float b, float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "LerpUnclamped", a, b, t));
}
// Autogenerated method: UnityEngine.Mathf.MoveTowards
float UnityEngine::Mathf::MoveTowards(float current, float target, float maxDelta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "MoveTowards", current, target, maxDelta));
}
// Autogenerated method: UnityEngine.Mathf.Approximately
bool UnityEngine::Mathf::Approximately(float a, float b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Mathf", "Approximately", a, b));
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, float& currentVelocity, float smoothTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "SmoothDamp", current, target, currentVelocity, smoothTime));
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, float& currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "SmoothDamp", current, target, currentVelocity, smoothTime, maxSpeed, deltaTime));
}
// Autogenerated method: UnityEngine.Mathf.Repeat
float UnityEngine::Mathf::Repeat(float t, float length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "Repeat", t, length));
}
// Autogenerated method: UnityEngine.Mathf.InverseLerp
float UnityEngine::Mathf::InverseLerp(float a, float b, float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "InverseLerp", a, b, value));
}
// Autogenerated method: UnityEngine.Mathf.DeltaAngle
float UnityEngine::Mathf::DeltaAngle(float current, float target) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "Mathf", "DeltaAngle", current, target));
}
// Autogenerated method: UnityEngine.Mathf..cctor
void UnityEngine::Mathf::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Mathf", ".cctor"));
}
