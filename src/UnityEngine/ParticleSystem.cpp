// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.ParticleSystem/MainModule
#include "UnityEngine/ParticleSystem_MainModule.hpp"
// Including type: UnityEngine.ParticleSystem/EmissionModule
#include "UnityEngine/ParticleSystem_EmissionModule.hpp"
// Including type: UnityEngine.ParticleSystem/ShapeModule
#include "UnityEngine/ParticleSystem_ShapeModule.hpp"
// Including type: UnityEngine.ParticleSystemStopBehavior
#include "UnityEngine/ParticleSystemStopBehavior.hpp"
// Including type: UnityEngine.ParticleSystem/MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.ParticleSystem/MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
// Including type: UnityEngine.ParticleSystem/EmitParams
#include "UnityEngine/ParticleSystem_EmitParams.hpp"
// Including type: UnityEngine.ParticleSystem/ForceOverLifetimeModule
#include "UnityEngine/ParticleSystem_ForceOverLifetimeModule.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(UnityEngine::Vector3 position, UnityEngine::Vector3 velocity, float size, float lifetime, UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, velocity, size, lifetime, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, velocity, size, lifetime, color);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(UnityEngine::ParticleSystem::Particle particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_particleCount
int UnityEngine::ParticleSystem::get_particleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_particleCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_particleCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_time
float UnityEngine::ParticleSystem::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_randomSeed
uint UnityEngine::ParticleSystem::get_randomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_randomSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_randomSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.set_randomSeed
void UnityEngine::ParticleSystem::set_randomSeed(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("set_randomSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_randomSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_useAutoRandomSeed
bool UnityEngine::ParticleSystem::get_useAutoRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_useAutoRandomSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_useAutoRandomSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.set_useAutoRandomSeed
void UnityEngine::ParticleSystem::set_useAutoRandomSeed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("set_useAutoRandomSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_useAutoRandomSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem.SetParticles
void UnityEngine::ParticleSystem::SetParticles(::Array<UnityEngine::ParticleSystem::Particle>*& particles, int size, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("SetParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particles, size, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particles, size, offset);
}
// Autogenerated method: UnityEngine.ParticleSystem.SetParticles
void UnityEngine::ParticleSystem::SetParticles(::Array<UnityEngine::ParticleSystem::Particle>*& particles, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("SetParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particles, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particles, size);
}
// Autogenerated method: UnityEngine.ParticleSystem.GetParticles
int UnityEngine::ParticleSystem::GetParticles(::Array<UnityEngine::ParticleSystem::Particle>*& particles, int size, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("GetParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particles, size, offset)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, particles, size, offset);
}
// Autogenerated method: UnityEngine.ParticleSystem.GetParticles
int UnityEngine::ParticleSystem::GetParticles(::Array<UnityEngine::ParticleSystem::Particle>*& particles, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("GetParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particles, size)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, particles, size);
}
// Autogenerated method: UnityEngine.ParticleSystem.GetParticles
int UnityEngine::ParticleSystem::GetParticles(::Array<UnityEngine::ParticleSystem::Particle>*& particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("GetParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particles)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, particles);
}
// Autogenerated method: UnityEngine.ParticleSystem.Simulate
void UnityEngine::ParticleSystem::Simulate(float t, bool withChildren, bool restart, bool fixedTimeStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Simulate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, withChildren, restart, fixedTimeStep)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t, withChildren, restart, fixedTimeStep);
}
// Autogenerated method: UnityEngine.ParticleSystem.Simulate
void UnityEngine::ParticleSystem::Simulate(float t, bool withChildren, bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Simulate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, withChildren, restart)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t, withChildren, restart);
}
// Autogenerated method: UnityEngine.ParticleSystem.Play
void UnityEngine::ParticleSystem::Play(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Play");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(withChildren)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Stop
void UnityEngine::ParticleSystem::Stop(bool withChildren, UnityEngine::ParticleSystemStopBehavior stopBehavior) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(withChildren, stopBehavior)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, withChildren, stopBehavior);
}
// Autogenerated method: UnityEngine.ParticleSystem.Clear
void UnityEngine::ParticleSystem::Clear(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(withChildren)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Clear
void UnityEngine::ParticleSystem::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit_Internal
void UnityEngine::ParticleSystem::Emit_Internal(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit_Internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit_Internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(UnityEngine::ParticleSystem::EmitParams emitParams, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(emitParams, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, emitParams, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.EmitOld_Internal
void UnityEngine::ParticleSystem::EmitOld_Internal(UnityEngine::ParticleSystem::Particle& particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("EmitOld_Internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EmitOld_Internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_main
UnityEngine::ParticleSystem::MainModule UnityEngine::ParticleSystem::get_main() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_main");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_main", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem::MainModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_emission
UnityEngine::ParticleSystem::EmissionModule UnityEngine::ParticleSystem::get_emission() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_emission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_emission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem::EmissionModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_shape
UnityEngine::ParticleSystem::ShapeModule UnityEngine::ParticleSystem::get_shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_shape");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shape", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem::ShapeModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_forceOverLifetime
UnityEngine::ParticleSystem::ForceOverLifetimeModule UnityEngine::ParticleSystem::get_forceOverLifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("get_forceOverLifetime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_forceOverLifetime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem::ForceOverLifetimeModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit_Injected
void UnityEngine::ParticleSystem::Emit_Injected(UnityEngine::ParticleSystem::EmitParams& emitParams, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("ParticleSystem").WithContext("Emit_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(emitParams, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, emitParams, count);
}
