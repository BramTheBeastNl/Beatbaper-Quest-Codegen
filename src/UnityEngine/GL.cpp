// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GL
#include "UnityEngine/GL.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GL.Vertex3
void UnityEngine::GL::Vertex3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("Vertex3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "Vertex3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, z)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.GL.TexCoord3
void UnityEngine::GL::TexCoord3(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("TexCoord3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "TexCoord3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, z)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.GL.TexCoord2
void UnityEngine::GL::TexCoord2(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("TexCoord2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "TexCoord2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.GL.get_invertCulling
bool UnityEngine::GL::get_invertCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("get_invertCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "get_invertCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.set_invertCulling
void UnityEngine::GL::set_invertCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("set_invertCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "set_invertCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.GL.Flush
void UnityEngine::GL::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.PushMatrix
void UnityEngine::GL::PushMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("PushMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "PushMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.PopMatrix
void UnityEngine::GL::PopMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("PopMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "PopMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.LoadOrtho
void UnityEngine::GL::LoadOrtho() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("LoadOrtho");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "LoadOrtho", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.Begin
void UnityEngine::GL::Begin(int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("Begin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "Begin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.GL.End
void UnityEngine::GL::End() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("End");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "End", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.GL.GLClear
void UnityEngine::GL::GLClear(bool clearDepth, bool clearColor, UnityEngine::Color backgroundColor, float depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("GLClear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "GLClear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clearDepth, clearColor, backgroundColor, depth)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor, depth);
}
// Autogenerated method: UnityEngine.GL.Clear
void UnityEngine::GL::Clear(bool clearDepth, bool clearColor, UnityEngine::Color backgroundColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clearDepth, clearColor, backgroundColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor);
}
// Autogenerated method: UnityEngine.GL.GLClear_Injected
void UnityEngine::GL::GLClear_Injected(bool clearDepth, bool clearColor, UnityEngine::Color& backgroundColor, float depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("GL").WithContext("GLClear_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "GL", "GLClear_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clearDepth, clearColor, backgroundColor, depth)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clearDepth, clearColor, backgroundColor, depth);
}
