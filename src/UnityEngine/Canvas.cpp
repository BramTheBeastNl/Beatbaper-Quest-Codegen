// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Canvas/WillRenderCanvases
#include "UnityEngine/Canvas_WillRenderCanvases.hpp"
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Canvas/WillRenderCanvases willRenderCanvases
UnityEngine::Canvas::WillRenderCanvases* UnityEngine::Canvas::_get_willRenderCanvases() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Canvas::WillRenderCanvases*>("UnityEngine", "Canvas", "willRenderCanvases"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Canvas/WillRenderCanvases willRenderCanvases
void UnityEngine::Canvas::_set_willRenderCanvases(UnityEngine::Canvas::WillRenderCanvases* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Canvas", "willRenderCanvases", value));
}
// Autogenerated method: UnityEngine.Canvas.add_willRenderCanvases
void UnityEngine::Canvas::add_willRenderCanvases(UnityEngine::Canvas::WillRenderCanvases* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Canvas", "add_willRenderCanvases", value));
}
// Autogenerated method: UnityEngine.Canvas.remove_willRenderCanvases
void UnityEngine::Canvas::remove_willRenderCanvases(UnityEngine::Canvas::WillRenderCanvases* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Canvas", "remove_willRenderCanvases", value));
}
// Autogenerated method: UnityEngine.Canvas.get_renderMode
UnityEngine::RenderMode UnityEngine::Canvas::get_renderMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::RenderMode>(this, "get_renderMode"));
}
// Autogenerated method: UnityEngine.Canvas.set_renderMode
void UnityEngine::Canvas::set_renderMode(UnityEngine::RenderMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_renderMode", value));
}
// Autogenerated method: UnityEngine.Canvas.get_isRootCanvas
bool UnityEngine::Canvas::get_isRootCanvas() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isRootCanvas"));
}
// Autogenerated method: UnityEngine.Canvas.get_scaleFactor
float UnityEngine::Canvas::get_scaleFactor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_scaleFactor"));
}
// Autogenerated method: UnityEngine.Canvas.set_scaleFactor
void UnityEngine::Canvas::set_scaleFactor(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_scaleFactor", value));
}
// Autogenerated method: UnityEngine.Canvas.get_referencePixelsPerUnit
float UnityEngine::Canvas::get_referencePixelsPerUnit() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_referencePixelsPerUnit"));
}
// Autogenerated method: UnityEngine.Canvas.set_referencePixelsPerUnit
void UnityEngine::Canvas::set_referencePixelsPerUnit(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_referencePixelsPerUnit", value));
}
// Autogenerated method: UnityEngine.Canvas.get_pixelPerfect
bool UnityEngine::Canvas::get_pixelPerfect() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_pixelPerfect"));
}
// Autogenerated method: UnityEngine.Canvas.set_pixelPerfect
void UnityEngine::Canvas::set_pixelPerfect(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_pixelPerfect", value));
}
// Autogenerated method: UnityEngine.Canvas.get_renderOrder
int UnityEngine::Canvas::get_renderOrder() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_renderOrder"));
}
// Autogenerated method: UnityEngine.Canvas.get_overrideSorting
bool UnityEngine::Canvas::get_overrideSorting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_overrideSorting"));
}
// Autogenerated method: UnityEngine.Canvas.set_overrideSorting
void UnityEngine::Canvas::set_overrideSorting(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_overrideSorting", value));
}
// Autogenerated method: UnityEngine.Canvas.get_sortingOrder
int UnityEngine::Canvas::get_sortingOrder() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_sortingOrder"));
}
// Autogenerated method: UnityEngine.Canvas.set_sortingOrder
void UnityEngine::Canvas::set_sortingOrder(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_sortingOrder", value));
}
// Autogenerated method: UnityEngine.Canvas.get_targetDisplay
int UnityEngine::Canvas::get_targetDisplay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_targetDisplay"));
}
// Autogenerated method: UnityEngine.Canvas.get_sortingLayerID
int UnityEngine::Canvas::get_sortingLayerID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_sortingLayerID"));
}
// Autogenerated method: UnityEngine.Canvas.set_sortingLayerID
void UnityEngine::Canvas::set_sortingLayerID(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_sortingLayerID", value));
}
// Autogenerated method: UnityEngine.Canvas.get_additionalShaderChannels
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::Canvas::get_additionalShaderChannels() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::AdditionalCanvasShaderChannels>(this, "get_additionalShaderChannels"));
}
// Autogenerated method: UnityEngine.Canvas.set_additionalShaderChannels
void UnityEngine::Canvas::set_additionalShaderChannels(UnityEngine::AdditionalCanvasShaderChannels value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_additionalShaderChannels", value));
}
// Autogenerated method: UnityEngine.Canvas.get_rootCanvas
UnityEngine::Canvas* UnityEngine::Canvas::get_rootCanvas() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Canvas*>(this, "get_rootCanvas"));
}
// Autogenerated method: UnityEngine.Canvas.get_worldCamera
UnityEngine::Camera* UnityEngine::Canvas::get_worldCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Camera*>(this, "get_worldCamera"));
}
// Autogenerated method: UnityEngine.Canvas.set_worldCamera
void UnityEngine::Canvas::set_worldCamera(UnityEngine::Camera* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_worldCamera", value));
}
// Autogenerated method: UnityEngine.Canvas.GetDefaultCanvasMaterial
UnityEngine::Material* UnityEngine::Canvas::GetDefaultCanvasMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>("UnityEngine", "Canvas", "GetDefaultCanvasMaterial"));
}
// Autogenerated method: UnityEngine.Canvas.GetETC1SupportedCanvasMaterial
UnityEngine::Material* UnityEngine::Canvas::GetETC1SupportedCanvasMaterial() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Material*>("UnityEngine", "Canvas", "GetETC1SupportedCanvasMaterial"));
}
// Autogenerated method: UnityEngine.Canvas.ForceUpdateCanvases
void UnityEngine::Canvas::ForceUpdateCanvases() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Canvas", "ForceUpdateCanvases"));
}
// Autogenerated method: UnityEngine.Canvas.SendWillRenderCanvases
void UnityEngine::Canvas::SendWillRenderCanvases() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "Canvas", "SendWillRenderCanvases"));
}
// Autogenerated method: UnityEngine.Canvas..ctor
UnityEngine::Canvas* UnityEngine::Canvas::New_ctor() {
  return (Canvas*)THROW_UNLESS(il2cpp_utils::New("UnityEngine", "Canvas"));
}
