// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.MoveNext
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_MoveNext() {
  return UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext();
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("$get_outputs$d__16").WithContext("System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
