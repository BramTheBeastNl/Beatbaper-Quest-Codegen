// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("set_timeSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(UnityEngine::Playables::PlayableGraph graph, double duration, UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, duration, loopMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, UnityEngine::Playables::INotification* payload, UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("AddNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, payload, flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("SortNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, info, currentTime, previousTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, UnityEngine::Playables::FrameData info, UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end, info, playable, checkState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(UnityEngine::Playables::Playable playable, UnityEngine::Playables::PlayableOutput output, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, output, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable, output, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("Restore_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("OnGraphStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeNotificationBehaviour").WithContext("PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
