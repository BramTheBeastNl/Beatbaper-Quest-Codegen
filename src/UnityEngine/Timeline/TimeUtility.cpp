// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameRate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("ToFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("FromFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frames, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("FromFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frames, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate, epsilon)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeValue, frameRate, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeValue, frameRate, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::Il2CppString* timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeCode, frameRate, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::Il2CppString* UnityEngine::Timeline::TimeUtility::RemoveChar(::Il2CppString* str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext("RemoveChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, charToRemoveFunc)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimeUtility").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
