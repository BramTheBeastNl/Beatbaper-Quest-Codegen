// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.Timeline", "TimeUtility", "ToFrames", time, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", time, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "FromFrames", frames, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "FromFrames", frames, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", time, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", time, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", time, frameRate, epsilon));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", time, frameRate));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::Il2CppString* format) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", timeValue, frameRate, format));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::Il2CppString* format) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", timeValue, frameRate, format));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::Il2CppString* timeCode, double frameRate, double defaultValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", timeCode, frameRate, defaultValue));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", clip));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::Il2CppString* UnityEngine::Timeline::TimeUtility::RemoveChar(::Il2CppString* str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("UnityEngine.Timeline", "TimeUtility", "RemoveChar", str, charToRemoveFunc));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Timeline", "TimeUtility", ".cctor"));
}
