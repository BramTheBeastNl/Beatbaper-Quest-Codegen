// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/Versions
#include "UnityEngine/Timeline/TimelineClip_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kDefaultClipCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kDefaultClipCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single kDefaultClipDurationInSeconds
float UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kDefaultClipDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single kDefaultClipDurationInSeconds
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kDefaultClipDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMin
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kTimeScaleMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMin
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kTimeScaleMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMax
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kTimeScaleMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMax
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kTimeScaleMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String kDefaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String kDefaultCurvesName
void UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinDuration
double UnityEngine::Timeline::TimelineClip::_get_kMinDuration() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kMinDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMinDuration"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinDuration
void UnityEngine::Timeline::TimelineClip::_set_kMinDuration(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kMinDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMinDuration", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMaxTimeValue
double UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_get_kMaxTimeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMaxTimeValue
void UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue(double value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("_set_kMaxTimeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPreExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_hasPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPostExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_hasPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_timeScale
double UnityEngine::Timeline::TimelineClip::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_timeScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_timeScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_timeScale
void UnityEngine::Timeline::TimelineClip::set_timeScale(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_timeScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timeScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_start
double UnityEngine::Timeline::TimelineClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_start
void UnityEngine::Timeline::TimelineClip::set_start(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_duration
void UnityEngine::Timeline::TimelineClip::set_duration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_end
double UnityEngine::Timeline::TimelineClip::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_end");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipIn
double UnityEngine::Timeline::TimelineClip::get_clipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_clipIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_clipIn
void UnityEngine::Timeline::TimelineClip::set_clipIn(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_clipIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_clipIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_displayName
::Il2CppString* UnityEngine::Timeline::TimelineClip::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_displayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_displayName
void UnityEngine::Timeline::TimelineClip::set_displayName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_displayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipAssetDuration
double UnityEngine::Timeline::TimelineClip::get_clipAssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_clipAssetDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipAssetDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_curves
void UnityEngine::Timeline::TimelineClip::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_curves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_asset
void UnityEngine::Timeline::TimelineClip::set_asset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_asset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_underlyingAsset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_underlyingAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_underlyingAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_underlyingAsset
void UnityEngine::Timeline::TimelineClip::set_underlyingAsset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_underlyingAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_parentTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::get_parentTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_parentTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_parentTrack
void UnityEngine::Timeline::TimelineClip::set_parentTrack(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_parentTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_parentTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeInDuration
double UnityEngine::Timeline::TimelineClip::get_easeInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeInDuration
void UnityEngine::Timeline::TimelineClip::set_easeInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_easeInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutDuration
double UnityEngine::Timeline::TimelineClip::get_easeOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeOutDuration
void UnityEngine::Timeline::TimelineClip::set_easeOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_easeOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_eastOutTime
double UnityEngine::Timeline::TimelineClip::get_eastOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_eastOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eastOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutTime
double UnityEngine::Timeline::TimelineClip::get_easeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_easeOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInDuration
double UnityEngine::Timeline::TimelineClip::get_blendInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInDuration
void UnityEngine::Timeline::TimelineClip::set_blendInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutDuration
double UnityEngine::Timeline::TimelineClip::get_blendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutDuration
void UnityEngine::Timeline::TimelineClip::set_blendOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendInCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendInCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendInCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendInCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendOutCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendOutCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendIn
bool UnityEngine::Timeline::TimelineClip::get_hasBlendIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_hasBlendIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasBlendIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendOut
bool UnityEngine::Timeline::TimelineClip::get_hasBlendOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_hasBlendOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasBlendOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixInCurve
void UnityEngine::Timeline::TimelineClip::set_mixInCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInPercentage
float UnityEngine::Timeline::TimelineClip::get_mixInPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixInPercentage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInPercentage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInDuration
double UnityEngine::Timeline::TimelineClip::get_mixInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixOutCurve
void UnityEngine::Timeline::TimelineClip::set_mixOutCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutTime
double UnityEngine::Timeline::TimelineClip::get_mixOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutDuration
double UnityEngine::Timeline::TimelineClip::get_mixOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutPercentage
float UnityEngine::Timeline::TimelineClip::get_mixOutPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_mixOutPercentage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutPercentage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_recordable
bool UnityEngine::Timeline::TimelineClip::get_recordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_recordable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_recordable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_recordable
void UnityEngine::Timeline::TimelineClip::set_recordable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_recordable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_recordable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_exposedParameters
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::Timeline::TimelineClip::get_exposedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_exposedParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_exposedParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_clipCaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.Hash
int UnityEngine::Timeline::TimelineClip::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("Hash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixOut
float UnityEngine::Timeline::TimelineClip::EvaluateMixOut(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("EvaluateMixOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateMixOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixIn
float UnityEngine::Timeline::TimelineClip::EvaluateMixIn(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("EvaluateMixIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateMixIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("GetDefaultMixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("GetDefaultMixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTime
double UnityEngine::Timeline::TimelineClip::ToLocalTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::ToLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("ToLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.FromLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::FromLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("FromLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FromLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_animationClip
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_animationClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_animationClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SanitizeTimeValue
double UnityEngine::Timeline::TimelineClip::SanitizeTimeValue(double value, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("SanitizeTimeValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "SanitizeTimeValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_postExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_postExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_preExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_preExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("set_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPostExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("SetPostExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPostExtrapolationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPreExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("SetPreExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPreExtrapolationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("IsExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPreExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("IsPreExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPreExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPostExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("IsPostExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPostExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedStart
double UnityEngine::Timeline::TimelineClip::get_extrapolatedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_extrapolatedStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_extrapolatedStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedDuration
double UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_extrapolatedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_extrapolatedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetExtrapolatedTime
double UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime(double time, UnityEngine::Timeline::TimelineClip::ClipExtrapolation mode, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("GetExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, mode, duration)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, mode, duration);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ConformEaseValues
void UnityEngine::Timeline::TimelineClip::ConformEaseValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("ConformEaseValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConformEaseValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CalculateEasingRatio
double UnityEngine::Timeline::TimelineClip::CalculateEasingRatio(double easeIn, double easeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("CalculateEasingRatio");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "CalculateEasingRatio", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(easeIn, easeOut)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, easeIn, easeOut);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpdateDirty
void UnityEngine::Timeline::TimelineClip::UpdateDirty(double oldValue, double newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UpdateDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip..cctor
void UnityEngine::Timeline::TimelineClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_duration
double UnityEngine::Timeline::TimelineClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_curves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasCurves
bool UnityEngine::Timeline::TimelineClip::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_hasCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_asset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("get_asset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_asset() {
  return UnityEngine::Timeline::TimelineClip::get_asset();
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CreateCurves
void UnityEngine::Timeline::TimelineClip::CreateCurves(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("CreateCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curvesClipName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToString
::Il2CppString* UnityEngine::Timeline::TimelineClip::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineClip").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
