// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Single kMinFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_get_kMinFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMinFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_set_kMinFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kMaxFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_get_kMaxFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMaxFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_set_kMaxFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kDefaultFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_get_kDefaultFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kDefaultFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("_set_kDefaultFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_fps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("get_fps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_fps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("set_fps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_scenePreview
bool UnityEngine::Timeline::TimelineAsset::EditorSettings::get_scenePreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("get_scenePreview");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_scenePreview", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_scenePreview
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_scenePreview(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext("set_scenePreview");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_scenePreview", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings..cctor
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("EditorSettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset/EditorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
