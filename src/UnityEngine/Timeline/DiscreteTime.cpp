// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine\Timeline\DiscreteTime.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(UnityEngine::Timeline::DiscreteTime value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "DiscreteTime", "get_tickValue"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(UnityEngine::Timeline::DiscreteTime time) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(int64_t time) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(double time) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(float time) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(int time) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime* UnityEngine::Timeline::DiscreteTime::New_ctor(int frame, double fps) {
  return (DiscreteTime*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "DiscreteTime", frame, fps));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>(*this, "OneTickBefore"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>(*this, "OneTickAfter"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "GetTick"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "FromTicks", ticks));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(UnityEngine::Timeline::DiscreteTime other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "DiscreteTime", "ToDouble", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.Timeline", "DiscreteTime", "ToFloat", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "Min", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "Max", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", time));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "CompareTo", obj));
}
int UnityEngine::Timeline::DiscreteTime::System_IComparable_CompareTo(::Il2CppObject* obj) {
  return CompareTo(obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::Il2CppString* UnityEngine::Timeline::DiscreteTime::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_Equality", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "op_Addition", lhs, rhs));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", lhs, rhs));
}
