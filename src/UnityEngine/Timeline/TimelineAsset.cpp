// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/Versions
#include "UnityEngine/Timeline/TimelineAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/TimelineAssetUpgrade
#include "UnityEngine/Timeline/TimelineAsset_TimelineAssetUpgrade.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/MediaType
#include "UnityEngine/Timeline/TimelineAsset_MediaType.hpp"
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_editorSettings
UnityEngine::Timeline::TimelineAsset::EditorSettings* UnityEngine::Timeline::TimelineAsset::get_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_editorSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_editorSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::EditorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_fixedDuration
double UnityEngine::Timeline::TimelineAsset::get_fixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fixedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_fixedDuration
void UnityEngine::Timeline::TimelineAsset::set_fixedDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("set_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fixedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_durationMode
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::get_durationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_durationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_durationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::DurationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_durationMode
void UnityEngine::Timeline::TimelineAsset::set_durationMode(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("set_durationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_durationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputTrackCount
int UnityEngine::Timeline::TimelineAsset::get_outputTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_outputTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_rootTrackCount
int UnityEngine::Timeline::TimelineAsset::get_rootTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_rootTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rootTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.OnValidate
void UnityEngine::Timeline::TimelineAsset::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetValidFramerate
float UnityEngine::Timeline::TimelineAsset::GetValidFramerate(float framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GetValidFramerate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "GetValidFramerate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(framerate)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, framerate);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetRootTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GetRootTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetRootTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GetRootTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetOutputTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GetOutputTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOutputTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetOutputTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GetOutputTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOutputTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateRootTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("UpdateRootTrackCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateRootTrackCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateOutputTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("UpdateOutputTrackCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateOutputTrackCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_flattenedTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::get_flattenedTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_flattenedTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flattenedTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_markerTrack
UnityEngine::Timeline::MarkerTrack* UnityEngine::Timeline::TimelineAsset::get_markerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_markerTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_markerTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MarkerTrack*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_trackObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TimelineAsset::get_trackObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_trackObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddTrackInternal
void UnityEngine::Timeline::TimelineAsset::AddTrackInternal(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("AddTrackInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTrackInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.RemoveTrack
void UnityEngine::Timeline::TimelineAsset::RemoveTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("RemoveTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.__internalAwake
void UnityEngine::Timeline::TimelineAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("__internalAwake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateMarkerTrack
void UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("CreateMarkerTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMarkerTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.Invalidate
void UnityEngine::Timeline::TimelineAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("Invalidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CalculateDuration
double UnityEngine::Timeline::TimelineAsset::CalculateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("CalculateDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddSubTracksRecursive
void UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive(UnityEngine::Timeline::TrackAsset* track, System::Collections::Generic::List_1<UnityEngine::Timeline::TrackAsset*>*& allTracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("AddSubTracksRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "AddSubTracksRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track, allTracks)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track, allTracks);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::CreateTrack(System::Type* type, UnityEngine::Timeline::TrackAsset* parent, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("CreateTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, parent, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, type, parent, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteClip
bool UnityEngine::Timeline::TimelineAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("DeleteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteTrack
bool UnityEngine::Timeline::TimelineAsset::DeleteTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("DeleteTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AllocateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::AllocateTrack(UnityEngine::Timeline::TrackAsset* trackAssetParent, ::Il2CppString* trackName, System::Type* trackType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("AllocateTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AllocateTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackAssetParent, trackName, trackType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, trackAssetParent, trackName, trackType);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_duration
double UnityEngine::Timeline::TimelineAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("get_clipCaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelineAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GatherProperties
void UnityEngine::Timeline::TimelineAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Timeline").WithContext("TimelineAsset").WithContext("GatherProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
