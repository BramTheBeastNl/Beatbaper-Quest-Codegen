// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack
#include "UnityEngine/Timeline/AnimationTrack.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultInfiniteClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultInfiniteClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultRecordableClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultRecordableClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_position
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_position"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_position
void UnityEngine::Timeline::AnimationTrack::set_position(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_rotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_rotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_rotation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_rotation
void UnityEngine::Timeline::AnimationTrack::set_rotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rotation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_eulerAngles() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_eulerAngles"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_eulerAngles
void UnityEngine::Timeline::AnimationTrack::set_eulerAngles(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_eulerAngles", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyOffsets
bool UnityEngine::Timeline::AnimationTrack::get_applyOffsets() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_applyOffsets"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyOffsets
void UnityEngine::Timeline::AnimationTrack::set_applyOffsets(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_applyOffsets", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_trackOffset
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::AnimationTrack::get_trackOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TrackOffset>(this, "get_trackOffset"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_trackOffset
void UnityEngine::Timeline::AnimationTrack::set_trackOffset(UnityEngine::Timeline::TrackOffset value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_trackOffset", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_matchTargetFields
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationTrack::get_matchTargetFields() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::MatchTargetFields>(this, "get_matchTargetFields"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_matchTargetFields
void UnityEngine::Timeline::AnimationTrack::set_matchTargetFields(UnityEngine::Timeline::MatchTargetFields value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_matchTargetFields", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClip
UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationTrack::get_infiniteClip() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::AnimationClip*>(this, "get_infiniteClip"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClip
void UnityEngine::Timeline::AnimationTrack::set_infiniteClip(UnityEngine::AnimationClip* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClip", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipRemoveOffset
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_infiniteClipRemoveOffset"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipRemoveOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipRemoveOffset", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_avatarMask
UnityEngine::AvatarMask* UnityEngine::Timeline::AnimationTrack::get_avatarMask() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::AvatarMask*>(this, "get_avatarMask"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_avatarMask
void UnityEngine::Timeline::AnimationTrack::set_avatarMask(UnityEngine::AvatarMask* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_avatarMask", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyAvatarMask
bool UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_applyAvatarMask"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyAvatarMask
void UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_applyAvatarMask", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_inClipMode
bool UnityEngine::Timeline::AnimationTrack::get_inClipMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_inClipMode"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_infiniteClipOffsetPosition"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipOffsetPosition", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_infiniteClipOffsetRotation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipOffsetRotation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_infiniteClipOffsetEulerAngles"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipOffsetEulerAngles", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipApplyFootIK
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_infiniteClipApplyFootIK"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipApplyFootIK
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipApplyFootIK", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipTimeOffset
double UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>(this, "get_infiniteClipTimeOffset"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipTimeOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset(double value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipTimeOffset", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>(this, "get_infiniteClipPreExtrapolation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipPreExtrapolation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>(this, "get_infiniteClipPostExtrapolation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipPostExtrapolation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipLoop
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>(this, "get_infiniteClipLoop"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipLoop
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_infiniteClipLoop", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ResetOffsets
void UnityEngine::Timeline::AnimationTrack::ResetOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetOffsets"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateClip(UnityEngine::AnimationClip* clip) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip*>(this, "CreateClip", clip));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteClip
void UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip(::Il2CppString* infiniteClipName) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CreateInfiniteClip", infiniteClipName));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateRecordableClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateRecordableClip(::Il2CppString* animClipName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip*>(this, "CreateRecordableClip", animClipName));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UpdateClipOffsets
void UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateClipOffsets"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CompileTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "CompileTrackPlayable", graph, track, go, tree, mode));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateDefaultBlend
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateDefaultBlend(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Playables::Playable mixer, bool requireOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "CreateDefaultBlend", graph, go, mixer, requireOffset));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachOffsetPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable playable, UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "AttachOffsetPlayable", graph, playable, pos, rot));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.RequiresMotionXPlayable
bool UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable(UnityEngine::Timeline::AppliedOffsetMode mode, UnityEngine::GameObject* gameObject) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "RequiresMotionXPlayable", mode, gameObject));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UsesAbsoluteMotion
bool UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion(UnityEngine::Timeline::AppliedOffsetMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Timeline", "AnimationTrack", "UsesAbsoluteMotion", mode));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.HasController
bool UnityEngine::Timeline::AnimationTrack::HasController(UnityEngine::GameObject* gameObject) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasController", gameObject));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetBinding
UnityEngine::Animator* UnityEngine::Timeline::AnimationTrack::GetBinding(UnityEngine::Playables::PlayableDirector* director) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Animator*>(this, "GetBinding", director));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateGroupMixer
UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Timeline::AnimationTrack::CreateGroupMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Animations::AnimationLayerMixerPlayable>("UnityEngine.Timeline", "AnimationTrack", "CreateGroupMixer", graph, go, inputCount));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "CreateInfiniteTrackPlayable", graph, go, tree, mode));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ApplyTrackOffset
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable root, UnityEngine::GameObject* go, UnityEngine::Timeline::AppliedOffsetMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "ApplyTrackOffset", graph, root, go, mode));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AssignAnimationClip
void UnityEngine::Timeline::AnimationTrack::AssignAnimationClip(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::AnimationClip* animClip) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AssignAnimationClip", clip, animClip));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetAnimationClips
void UnityEngine::Timeline::AnimationTrack::GetAnimationClips(System::Collections::Generic::List_1<UnityEngine::AnimationClip*>* animClips) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetAnimationClips", animClips));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetOffsetMode
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationTrack::GetOffsetMode(UnityEngine::GameObject* go, bool animatesRootTransform) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::AppliedOffsetMode>(this, "GetOffsetMode", go, animatesRootTransform));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AnimatesRootTransform
bool UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "AnimatesRootTransform"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_openClipOffsetPosition"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_openClipOffsetPosition", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_openClipOffsetRotation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_openClipOffsetRotation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_openClipOffsetEulerAngles"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_openClipOffsetEulerAngles", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>(this, "get_openClipPreExtrapolation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_openClipPreExtrapolation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>(this, "get_openClipPostExtrapolation"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_openClipPostExtrapolation", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CanCompileClips
bool UnityEngine::Timeline::AnimationTrack::CanCompileClips() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CanCompileClips"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::get_outputs() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*>(this, "get_outputs"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClip
void UnityEngine::Timeline::AnimationTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnCreateClip", clip));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CalculateItemsHash
int UnityEngine::Timeline::AnimationTrack::CalculateItemsHash() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "CalculateItemsHash"));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::UnityEngine_Timeline_ILayerable_CreateLayerMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "UnityEngine.Timeline.ILayerable.CreateLayerMixer", graph, go, inputCount));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClipPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::Playable>(this, "OnCreateClipPlayableGraph", graph, go, tree));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetEvaluationTime
void UnityEngine::Timeline::AnimationTrack::GetEvaluationTime(double& outStart, double& outDuration) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetEvaluationTime", outStart, outDuration));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetSequenceTime
void UnityEngine::Timeline::AnimationTrack::GetSequenceTime(double& outStart, double& outDuration) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetSequenceTime", outStart, outDuration));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GatherProperties
void UnityEngine::Timeline::AnimationTrack::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GatherProperties", director, driver));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion(int oldVersion) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnUpgradeFromVersion", oldVersion));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack..ctor
UnityEngine::Timeline::AnimationTrack* UnityEngine::Timeline::AnimationTrack::New_ctor() {
  return (AnimationTrack*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Timeline", "AnimationTrack"));
}
