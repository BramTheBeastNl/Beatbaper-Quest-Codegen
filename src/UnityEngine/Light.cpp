// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Light
#include "UnityEngine\Light.hpp"
// Including type: UnityEngine.LightType
#include "UnityEngine\LightType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine\Color.hpp"
// Including type: UnityEngine.LightShadows
#include "UnityEngine\LightShadows.hpp"
// Including type: UnityEngine.Rendering.LightEvent
#include "UnityEngine\Rendering\LightEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine\Rendering\CommandBuffer.hpp"
// Including type: UnityEngine.Rendering.ShadowMapPass
#include "UnityEngine\Rendering\ShadowMapPass.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Light.get_type
UnityEngine::LightType UnityEngine::Light::get_type() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::LightType>(this, "get_type"));
}
// Autogenerated method: UnityEngine.Light.get_spotAngle
float UnityEngine::Light::get_spotAngle() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_spotAngle"));
}
// Autogenerated method: UnityEngine.Light.get_color
UnityEngine::Color UnityEngine::Light::get_color() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color"));
}
// Autogenerated method: UnityEngine.Light.set_color
void UnityEngine::Light::set_color(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color", value));
}
// Autogenerated method: UnityEngine.Light.get_intensity
float UnityEngine::Light::get_intensity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_intensity"));
}
// Autogenerated method: UnityEngine.Light.set_intensity
void UnityEngine::Light::set_intensity(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_intensity", value));
}
// Autogenerated method: UnityEngine.Light.get_bounceIntensity
float UnityEngine::Light::get_bounceIntensity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_bounceIntensity"));
}
// Autogenerated method: UnityEngine.Light.get_range
float UnityEngine::Light::get_range() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_range"));
}
// Autogenerated method: UnityEngine.Light.get_shadows
UnityEngine::LightShadows UnityEngine::Light::get_shadows() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::LightShadows>(this, "get_shadows"));
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCommandBuffer", evt, buffer));
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer, UnityEngine::Rendering::ShadowMapPass shadowPassMask) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCommandBuffer", evt, buffer, shadowPassMask));
}
// Autogenerated method: UnityEngine.Light.RemoveCommandBuffer
void UnityEngine::Light::RemoveCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveCommandBuffer", evt, buffer));
}
// Autogenerated method: UnityEngine.Light.get_color_Injected
void UnityEngine::Light::get_color_Injected(UnityEngine::Color& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "get_color_Injected", ret));
}
// Autogenerated method: UnityEngine.Light.set_color_Injected
void UnityEngine::Light::set_color_Injected(UnityEngine::Color& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color_Injected", value));
}
