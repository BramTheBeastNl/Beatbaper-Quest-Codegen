// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
// Including type: UnityEngine.LightType
#include "UnityEngine/LightType.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.LightShadows
#include "UnityEngine/LightShadows.hpp"
// Including type: UnityEngine.Rendering.LightEvent
#include "UnityEngine/Rendering/LightEvent.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Rendering.ShadowMapPass
#include "UnityEngine/Rendering/ShadowMapPass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Light.get_type
UnityEngine::LightType UnityEngine::Light::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::LightType>(), "get_type", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_spotAngle
float UnityEngine::Light::get_spotAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_spotAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_spotAngle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_color
UnityEngine::Color UnityEngine::Light::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Color>(), "get_color", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.set_color
void UnityEngine::Light::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("set_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_color", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Light.get_intensity
float UnityEngine::Light::get_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_intensity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_intensity", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.set_intensity
void UnityEngine::Light::set_intensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("set_intensity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_intensity", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Light.get_bounceIntensity
float UnityEngine::Light::get_bounceIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_bounceIntensity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_bounceIntensity", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_range
float UnityEngine::Light::get_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_range");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_range", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.get_shadows
UnityEngine::LightShadows UnityEngine::Light::get_shadows() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_shadows");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::LightShadows>(), "get_shadows", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LightShadows, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AddCommandBuffer", {}, ::il2cpp_utils::ExtractTypes(evt, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Light.AddCommandBuffer
void UnityEngine::Light::AddCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer, UnityEngine::Rendering::ShadowMapPass shadowPassMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("AddCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AddCommandBuffer", {}, ::il2cpp_utils::ExtractTypes(evt, buffer, shadowPassMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer, shadowPassMask);
}
// Autogenerated method: UnityEngine.Light.RemoveCommandBuffer
void UnityEngine::Light::RemoveCommandBuffer(UnityEngine::Rendering::LightEvent evt, UnityEngine::Rendering::CommandBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("RemoveCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "RemoveCommandBuffer", {}, ::il2cpp_utils::ExtractTypes(evt, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, evt, buffer);
}
// Autogenerated method: UnityEngine.Light.get_color_Injected
void UnityEngine::Light::get_color_Injected(UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("get_color_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "get_color_Injected", {}, ::il2cpp_utils::ExtractTypes(ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Light.set_color_Injected
void UnityEngine::Light::set_color_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Light").WithContext("set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_color_Injected", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
