// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Color.ToString
::Il2CppString* UnityEngine::Color::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Color.Lerp
UnityEngine::Color UnityEngine::Color::Lerp(UnityEngine::Color a, UnityEngine::Color b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color.RGBMultiplied
UnityEngine::Color UnityEngine::Color::RGBMultiplied(float multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("RGBMultiplied");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "RGBMultiplied", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplier)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method, multiplier);
}
// Autogenerated method: UnityEngine.Color.get_red
UnityEngine::Color UnityEngine::Color::get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_red");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_red", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_green
UnityEngine::Color UnityEngine::Color::get_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_green");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_green", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_blue
UnityEngine::Color UnityEngine::Color::get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_blue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_blue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_white
UnityEngine::Color UnityEngine::Color::get_white() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_white");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_white", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_black
UnityEngine::Color UnityEngine::Color::get_black() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_black");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_black", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_yellow
UnityEngine::Color UnityEngine::Color::get_yellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_yellow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_yellow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_cyan
UnityEngine::Color UnityEngine::Color::get_cyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_cyan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_cyan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_magenta
UnityEngine::Color UnityEngine::Color::get_magenta() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_magenta");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_magenta", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_gray
UnityEngine::Color UnityEngine::Color::get_gray() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_gray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_gray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_clear
UnityEngine::Color UnityEngine::Color::get_clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_grayscale
float UnityEngine::Color::get_grayscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_grayscale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_grayscale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_linear
UnityEngine::Color UnityEngine::Color::get_linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_linear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_linear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_maxColorComponent
float UnityEngine::Color::get_maxColorComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("get_maxColorComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_maxColorComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.RGBToHSV
void UnityEngine::Color::RGBToHSV(UnityEngine::Color rgbColor, float& H, float& S, float& V) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("RGBToHSV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rgbColor, H, S, V)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rgbColor, H, S, V);
}
// Autogenerated method: UnityEngine.Color.RGBToHSVHelper
void UnityEngine::Color::RGBToHSVHelper(float offset, float dominantcolor, float colorone, float colortwo, float& H, float& S, float& V) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("RGBToHSVHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSVHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, dominantcolor, colorone, colortwo, H, S, V)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, offset, dominantcolor, colorone, colortwo, H, S, V);
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(H, S, V)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, H, S, V);
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V, bool hdr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(H, S, V, hdr)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, H, S, V, hdr);
}
// Autogenerated method: UnityEngine.Color.ToString
::Il2CppString* UnityEngine::Color::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.GetHashCode
int UnityEngine::Color::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(UnityEngine::Color other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.op_Addition
UnityEngine::Color UnityEngine::operator+(const UnityEngine::Color& a, const UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Subtraction
UnityEngine::Color UnityEngine::operator-(const UnityEngine::Color& a, const UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
UnityEngine::Color UnityEngine::operator*(const UnityEngine::Color& a, const UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
UnityEngine::Color UnityEngine::operator*(const UnityEngine::Color& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
UnityEngine::Color UnityEngine::operator*(const float& b, const UnityEngine::Color& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b, a)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, b, a);
}
// Autogenerated method: UnityEngine.Color.op_Division
UnityEngine::Color UnityEngine::operator/(const UnityEngine::Color& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Division");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Division", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Color& lhs, const UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Color.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Color& lhs, const UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Color").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
