// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve..ctor
UnityEngine::ParticleSystem::MinMaxCurve::MinMaxCurve(float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext(".ctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<ParticleSystem::MinMaxCurve>(), ".ctor", {}, ::il2cpp_utils::ExtractTypes(min, max)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.get_mode
UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystem::MinMaxCurve::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("get_mode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::ParticleSystemCurveMode>(), "get_mode", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystemCurveMode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.set_constantMax
void UnityEngine::ParticleSystem::MinMaxCurve::set_constantMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("set_constantMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "set_constantMax", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.set_constantMin
void UnityEngine::ParticleSystem::MinMaxCurve::set_constantMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("set_constantMin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "set_constantMin", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.get_constant
float UnityEngine::ParticleSystem::MinMaxCurve::get_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("get_constant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<float>(), "get_constant", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.Evaluate
float UnityEngine::ParticleSystem::MinMaxCurve::Evaluate(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("Evaluate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<float>(), "Evaluate", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.ParticleSystem/MinMaxCurve.Evaluate
float UnityEngine::ParticleSystem::MinMaxCurve::Evaluate(float time, float lerpFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("MinMaxCurve").WithContext("Evaluate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<float>(), "Evaluate", {}, ::il2cpp_utils::ExtractTypes(time, lerpFactor)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, time, lerpFactor);
}
