// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
UnityEngine::Animations::AnimatorControllerPlayable UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext("_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimatorControllerPlayable>("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
void UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimatorControllerPlayable value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext("_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimatorControllerPlayable::AnimatorControllerPlayable(UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.SetHandle
void UnityEngine::Animations::AnimatorControllerPlayable::SetHandle(UnityEngine::Playables::PlayableHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext("SetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "SetHandle", {}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..cctor
void UnityEngine::Animations::AnimatorControllerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorControllerPlayable", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimatorControllerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext("GetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "GetHandle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.Equals
bool UnityEngine::Animations::AnimatorControllerPlayable::Equals(UnityEngine::Animations::AnimatorControllerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimatorControllerPlayable").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
