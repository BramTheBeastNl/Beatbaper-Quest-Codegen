// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationClipPlayable
#include "UnityEngine/Animations/AnimationClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Create
UnityEngine::Animations::AnimationClipPlayable UnityEngine::Animations::AnimationClipPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Animations::AnimationClipPlayable>("UnityEngine.Animations", "AnimationClipPlayable", "Create", graph, clip));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::PlayableHandle>("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandle", graph, clip));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable..ctor
UnityEngine::Animations::AnimationClipPlayable* UnityEngine::Animations::AnimationClipPlayable::New_ctor(UnityEngine::Playables::PlayableHandle handle) {
  return (AnimationClipPlayable*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Animations", "AnimationClipPlayable", handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetApplyFootIK", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffset
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetRemoveStartOffset", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetOverrideLoopTime", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTime(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetLoopTime", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal", graph, clip, handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIKInternal
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetApplyFootIKInternal", handle, value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffsetInternal
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetRemoveStartOffsetInternal", handle, value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetOverrideLoopTimeInternal", handle, value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetLoopTimeInternal", handle, value));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal_Injected", graph, clip, handle));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::GetHandle() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::PlayableHandle>(*this, "GetHandle"));
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Equals
bool UnityEngine::Animations::AnimationClipPlayable::Equals(UnityEngine::Animations::AnimationClipPlayable other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
