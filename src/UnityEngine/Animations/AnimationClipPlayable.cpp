// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationClipPlayable
#include "UnityEngine/Animations/AnimationClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Create
UnityEngine::Animations::AnimationClipPlayable UnityEngine::Animations::AnimationClipPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<UnityEngine::Animations::AnimationClipPlayable>(), "Create", {}, ::il2cpp_utils::ExtractTypes(graph, clip)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationClipPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("CreateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "CreateHandle", {}, ::il2cpp_utils::ExtractTypes(graph, clip)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationClipPlayable::AnimationClipPlayable(UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "SetApplyFootIK", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffset
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetRemoveStartOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "SetRemoveStartOffset", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetOverrideLoopTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "SetOverrideLoopTime", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetLoopTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "SetLoopTime", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<bool>(), "CreateHandleInternal", {}, ::il2cpp_utils::ExtractTypes(graph, clip, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIKInternal
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetApplyFootIKInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<void>(), "SetApplyFootIKInternal", {}, ::il2cpp_utils::ExtractTypes(handle, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffsetInternal
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetRemoveStartOffsetInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<void>(), "SetRemoveStartOffsetInternal", {}, ::il2cpp_utils::ExtractTypes(handle, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetOverrideLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<void>(), "SetOverrideLoopTimeInternal", {}, ::il2cpp_utils::ExtractTypes(handle, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("SetLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<void>(), "SetLoopTimeInternal", {}, ::il2cpp_utils::ExtractTypes(handle, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", il2cpp_utils::NoArgClass<bool>(), "CreateHandleInternal_Injected", {}, ::il2cpp_utils::ExtractTypes(graph, clip, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("GetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "GetHandle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Equals
bool UnityEngine::Animations::AnimationClipPlayable::Equals(UnityEngine::Animations::AnimationClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationClipPlayable").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
