// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationOffsetPlayable
#include "UnityEngine/Animations/AnimationOffsetPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationOffsetPlayable>("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
void UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationOffsetPlayable value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Create
UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", il2cpp_utils::NoArgClass<UnityEngine::Animations::AnimationOffsetPlayable>(), "Create", {}, ::il2cpp_utils::ExtractTypes(graph, position, rotation, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationOffsetPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("CreateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "CreateHandle", {}, ::il2cpp_utils::ExtractTypes(graph, position, rotation, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..ctor
// ABORTED elsewhere.  UnityEngine::Animations::AnimationOffsetPlayable::AnimationOffsetPlayable(UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", il2cpp_utils::NoArgClass<bool>(), "CreateHandleInternal", {}, ::il2cpp_utils::ExtractTypes(graph, position, rotation, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..cctor
void UnityEngine::Animations::AnimationOffsetPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::Vector3& position, UnityEngine::Quaternion& rotation, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", il2cpp_utils::NoArgClass<bool>(), "CreateHandleInternal_Injected", {}, ::il2cpp_utils::ExtractTypes(graph, position, rotation, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("GetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "GetHandle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Equals
bool UnityEngine::Animations::AnimationOffsetPlayable::Equals(UnityEngine::Animations::AnimationOffsetPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Animations").WithContext("AnimationOffsetPlayable").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
