// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: UnityEngine.IExposedPropertyTable
#include "UnityEngine/IExposedPropertyTable.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayable
UnityEngine::Playables::Playable UnityEngine::Playables::PlayableGraph::GetRootPlayable(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetRootPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::Playable>(), "GetRootPlayable", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(*this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsValid
bool UnityEngine::Playables::PlayableGraph::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "IsValid", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsPlaying
bool UnityEngine::Playables::PlayableGraph::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("IsPlaying");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "IsPlaying", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetResolver
UnityEngine::IExposedPropertyTable* UnityEngine::Playables::PlayableGraph::GetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetResolver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::IExposedPropertyTable*>(), "GetResolver", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IExposedPropertyTable*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetPlayableCount
int UnityEngine::Playables::PlayableGraph::GetPlayableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetPlayableCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "GetPlayableCount", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableCount
int UnityEngine::Playables::PlayableGraph::GetRootPlayableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetRootPlayableCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "GetRootPlayableCount", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreatePlayableHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableGraph::CreatePlayableHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("CreatePlayableHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "CreatePlayableHandle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreateScriptOutputInternal
bool UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal(::Il2CppString* name, UnityEngine::Playables::PlayableOutputHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("CreateScriptOutputInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "CreateScriptOutputInternal", {}, ::il2cpp_utils::ExtractTypes(name, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, name, handle);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableInternal
UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetRootPlayableInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<UnityEngine::Playables::PlayableHandle>(), "GetRootPlayableInternal", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.ConnectInternal
bool UnityEngine::Playables::PlayableGraph::ConnectInternal(UnityEngine::Playables::PlayableHandle source, int sourceOutputPort, UnityEngine::Playables::PlayableHandle destination, int destinationInputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("ConnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "ConnectInternal", {}, ::il2cpp_utils::ExtractTypes(source, sourceOutputPort, destination, destinationInputPort)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, source, sourceOutputPort, destination, destinationInputPort);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsValid_Injected
bool UnityEngine::Playables::PlayableGraph::IsValid_Injected(UnityEngine::Playables::PlayableGraph& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("IsValid_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<bool>(), "IsValid_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsPlaying_Injected
bool UnityEngine::Playables::PlayableGraph::IsPlaying_Injected(UnityEngine::Playables::PlayableGraph& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("IsPlaying_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<bool>(), "IsPlaying_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetResolver_Injected
UnityEngine::IExposedPropertyTable* UnityEngine::Playables::PlayableGraph::GetResolver_Injected(UnityEngine::Playables::PlayableGraph& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetResolver_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<UnityEngine::IExposedPropertyTable*>(), "GetResolver_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IExposedPropertyTable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetPlayableCount_Injected
int UnityEngine::Playables::PlayableGraph::GetPlayableCount_Injected(UnityEngine::Playables::PlayableGraph& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetPlayableCount_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<int>(), "GetPlayableCount_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableCount_Injected
int UnityEngine::Playables::PlayableGraph::GetRootPlayableCount_Injected(UnityEngine::Playables::PlayableGraph& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetRootPlayableCount_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<int>(), "GetRootPlayableCount_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreatePlayableHandle_Injected
void UnityEngine::Playables::PlayableGraph::CreatePlayableHandle_Injected(UnityEngine::Playables::PlayableGraph& _unity_self, UnityEngine::Playables::PlayableHandle& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("CreatePlayableHandle_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<void>(), "CreatePlayableHandle_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, ret);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreateScriptOutputInternal_Injected
bool UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal_Injected(UnityEngine::Playables::PlayableGraph& _unity_self, ::Il2CppString* name, UnityEngine::Playables::PlayableOutputHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("CreateScriptOutputInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<bool>(), "CreateScriptOutputInternal_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self, name, handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, name, handle);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableInternal_Injected
void UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal_Injected(UnityEngine::Playables::PlayableGraph& _unity_self, int index, UnityEngine::Playables::PlayableHandle& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("GetRootPlayableInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<void>(), "GetRootPlayableInternal_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self, index, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, index, ret);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.ConnectInternal_Injected
bool UnityEngine::Playables::PlayableGraph::ConnectInternal_Injected(UnityEngine::Playables::PlayableGraph& _unity_self, UnityEngine::Playables::PlayableHandle& source, int sourceOutputPort, UnityEngine::Playables::PlayableHandle& destination, int destinationInputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableGraph").WithContext("ConnectInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", il2cpp_utils::NoArgClass<bool>(), "ConnectInternal_Injected", {}, ::il2cpp_utils::ExtractTypes(_unity_self, source, sourceOutputPort, destination, destinationInputPort)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, source, sourceOutputPort, destination, destinationInputPort);
}
