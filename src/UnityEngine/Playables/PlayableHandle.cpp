// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
// Including type: UnityEngine.Playables.IPlayableBehaviour
#include "UnityEngine/Playables/IPlayableBehaviour.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Playables.PlayState
#include "UnityEngine/Playables/PlayState.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableTraversalMode
#include "UnityEngine/Playables/PlayableTraversalMode.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Playables.PlayableHandle m_Null
UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::_get_m_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("_get_m_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Playables::PlayableHandle>("UnityEngine.Playables", "PlayableHandle", "m_Null"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Playables.PlayableHandle m_Null
void UnityEngine::Playables::PlayableHandle::_set_m_Null(UnityEngine::Playables::PlayableHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("_set_m_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableHandle", "m_Null", value));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.get_Null
UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("get_Null");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "get_Null", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInput
UnityEngine::Playables::Playable UnityEngine::Playables::PlayableHandle::GetInput(int inputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputPort)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(*this, ___internal__method, inputPort);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight
bool UnityEngine::Playables::PlayableHandle::SetInputWeight(int inputIndex, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetInputWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputIndex, weight)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inputIndex, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeight
float UnityEngine::Playables::PlayableHandle::GetInputWeight(int inputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetInputWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputIndex)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, inputIndex);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CompareVersion
bool UnityEngine::Playables::PlayableHandle::CompareVersion(UnityEngine::Playables::PlayableHandle lhs, UnityEngine::Playables::PlayableHandle rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("CompareVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "CompareVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CheckInputBounds
bool UnityEngine::Playables::PlayableHandle::CheckInputBounds(int inputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("CheckInputBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CheckInputBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inputIndex);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CheckInputBounds
bool UnityEngine::Playables::PlayableHandle::CheckInputBounds(int inputIndex, bool acceptAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("CheckInputBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CheckInputBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputIndex, acceptAny)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inputIndex, acceptAny);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsValid
bool UnityEngine::Playables::PlayableHandle::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayableType
System::Type* UnityEngine::Playables::PlayableHandle::GetPlayableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPlayableType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetPlayableType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetScriptInstance
void UnityEngine::Playables::PlayableHandle::SetScriptInstance(::Il2CppObject* scriptInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetScriptInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetScriptInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scriptInstance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, scriptInstance);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayState
UnityEngine::Playables::PlayState UnityEngine::Playables::PlayableHandle::GetPlayState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPlayState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetPlayState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayState, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Play
void UnityEngine::Playables::PlayableHandle::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Play");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Play", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Pause
void UnityEngine::Playables::PlayableHandle::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetSpeed
void UnityEngine::Playables::PlayableHandle::SetSpeed(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTime
double UnityEngine::Playables::PlayableHandle::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTime
void UnityEngine::Playables::PlayableHandle::SetTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsDone
bool UnityEngine::Playables::PlayableHandle::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("IsDone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IsDone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetDuration
double UnityEngine::Playables::PlayableHandle::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetDuration
void UnityEngine::Playables::PlayableHandle::SetDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetPropagateSetTime
void UnityEngine::Playables::PlayableHandle::SetPropagateSetTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetPropagateSetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetPropagateSetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetGraph
UnityEngine::Playables::PlayableGraph UnityEngine::Playables::PlayableHandle::GetGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetGraph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetGraph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableGraph, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputCount
int UnityEngine::Playables::PlayableHandle::GetInputCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetInputCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputCount
void UnityEngine::Playables::PlayableHandle::SetInputCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetInputCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight
void UnityEngine::Playables::PlayableHandle::SetInputWeight(UnityEngine::Playables::PlayableHandle input, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetInputWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, input, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPreviousTime
double UnityEngine::Playables::PlayableHandle::GetPreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPreviousTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetPreviousTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTraversalMode
void UnityEngine::Playables::PlayableHandle::SetTraversalMode(UnityEngine::Playables::PlayableTraversalMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTraversalMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetTraversalMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTimeWrapMode
UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::PlayableHandle::GetTimeWrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetTimeWrapMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTimeWrapMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::DirectorWrapMode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTimeWrapMode
void UnityEngine::Playables::PlayableHandle::SetTimeWrapMode(UnityEngine::Playables::DirectorWrapMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTimeWrapMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetTimeWrapMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetScriptInstance
::Il2CppObject* UnityEngine::Playables::PlayableHandle::GetScriptInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetScriptInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetScriptInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::GetInputHandle(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetInputHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeightFromIndex
void UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex(int index, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputWeightFromIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetInputWeightFromIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, index, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeightFromIndex
float UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputWeightFromIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetInputWeightFromIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle..cctor
void UnityEngine::Playables::PlayableHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsValid_Injected
bool UnityEngine::Playables::PlayableHandle::IsValid_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("IsValid_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "IsValid_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayableType_Injected
System::Type* UnityEngine::Playables::PlayableHandle::GetPlayableType_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPlayableType_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPlayableType_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetScriptInstance_Injected
void UnityEngine::Playables::PlayableHandle::SetScriptInstance_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, ::Il2CppObject* scriptInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetScriptInstance_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetScriptInstance_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, scriptInstance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, scriptInstance);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayState_Injected
UnityEngine::Playables::PlayState UnityEngine::Playables::PlayableHandle::GetPlayState_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPlayState_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPlayState_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Play_Injected
void UnityEngine::Playables::PlayableHandle::Play_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Play_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "Play_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Pause_Injected
void UnityEngine::Playables::PlayableHandle::Pause_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Pause_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "Pause_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetSpeed_Injected
void UnityEngine::Playables::PlayableHandle::SetSpeed_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetSpeed_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTime_Injected
double UnityEngine::Playables::PlayableHandle::GetTime_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetTime_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTime_Injected
void UnityEngine::Playables::PlayableHandle::SetTime_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTime_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsDone_Injected
bool UnityEngine::Playables::PlayableHandle::IsDone_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("IsDone_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "IsDone_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetDuration_Injected
double UnityEngine::Playables::PlayableHandle::GetDuration_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetDuration_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetDuration_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetDuration_Injected
void UnityEngine::Playables::PlayableHandle::SetDuration_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetDuration_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetDuration_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetPropagateSetTime_Injected
void UnityEngine::Playables::PlayableHandle::SetPropagateSetTime_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetPropagateSetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetPropagateSetTime_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetGraph_Injected
void UnityEngine::Playables::PlayableHandle::GetGraph_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, UnityEngine::Playables::PlayableGraph& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetGraph_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetGraph_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, ret);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputCount_Injected
int UnityEngine::Playables::PlayableHandle::GetInputCount_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputCount_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputCount_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputCount_Injected
void UnityEngine::Playables::PlayableHandle::SetInputCount_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputCount_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputCount_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight_Injected
void UnityEngine::Playables::PlayableHandle::SetInputWeight_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, UnityEngine::Playables::PlayableHandle& input, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputWeight_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputWeight_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, input, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, input, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPreviousTime_Injected
double UnityEngine::Playables::PlayableHandle::GetPreviousTime_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetPreviousTime_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPreviousTime_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTraversalMode_Injected
void UnityEngine::Playables::PlayableHandle::SetTraversalMode_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, UnityEngine::Playables::PlayableTraversalMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTraversalMode_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTraversalMode_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTimeWrapMode_Injected
UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::PlayableHandle::GetTimeWrapMode_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetTimeWrapMode_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetTimeWrapMode_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::DirectorWrapMode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTimeWrapMode_Injected
void UnityEngine::Playables::PlayableHandle::SetTimeWrapMode_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, UnityEngine::Playables::DirectorWrapMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetTimeWrapMode_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTimeWrapMode_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetScriptInstance_Injected
::Il2CppObject* UnityEngine::Playables::PlayableHandle::GetScriptInstance_Injected(UnityEngine::Playables::PlayableHandle& _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetScriptInstance_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetScriptInstance_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputHandle_Injected
void UnityEngine::Playables::PlayableHandle::GetInputHandle_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, int index, UnityEngine::Playables::PlayableHandle& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputHandle_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputHandle_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, index, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, index, ret);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeightFromIndex_Injected
void UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, int index, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("SetInputWeightFromIndex_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputWeightFromIndex_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, index, weight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, index, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeightFromIndex_Injected
float UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex_Injected(UnityEngine::Playables::PlayableHandle& _unity_self, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetInputWeightFromIndex_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputWeightFromIndex_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_unity_self, index)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, _unity_self, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Equals
bool UnityEngine::Playables::PlayableHandle::Equals(::Il2CppObject* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Equals
bool UnityEngine::Playables::PlayableHandle::Equals(UnityEngine::Playables::PlayableHandle other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetHashCode
int UnityEngine::Playables::PlayableHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.op_Equality
bool UnityEngine::Playables::operator ==(const UnityEngine::Playables::PlayableHandle& x, const UnityEngine::Playables::PlayableHandle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Playables").WithContext("PlayableHandle").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
