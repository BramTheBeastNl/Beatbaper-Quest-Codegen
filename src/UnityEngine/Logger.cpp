// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Logger
#include "UnityEngine/Logger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Logger..ctor
UnityEngine::Logger* UnityEngine::Logger::New_ctor(UnityEngine::ILogHandler* logHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Logger*>(logHandler));
}
// Autogenerated method: UnityEngine.Logger.set_logHandler
void UnityEngine::Logger::set_logHandler(UnityEngine::ILogHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("set_logHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_logHandler", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_logEnabled
bool UnityEngine::Logger::get_logEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("get_logEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_logEnabled", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_logEnabled
void UnityEngine::Logger::set_logEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("set_logEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_logEnabled", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_filterLogType
UnityEngine::LogType UnityEngine::Logger::get_filterLogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("get_filterLogType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::LogType>(), "get_filterLogType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LogType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_filterLogType
void UnityEngine::Logger::set_filterLogType(UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("set_filterLogType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_filterLogType", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.IsLogTypeAllowed
bool UnityEngine::Logger::IsLogTypeAllowed(UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("IsLogTypeAllowed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsLogTypeAllowed", {}, ::il2cpp_utils::ExtractTypes(logType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, logType);
}
// Autogenerated method: UnityEngine.Logger.GetString
::Il2CppString* UnityEngine::Logger::GetString(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("GetString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Logger", il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetString", {}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Logger.get_logHandler
UnityEngine::ILogHandler* UnityEngine::Logger::get_logHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("get_logHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::ILogHandler*>(), "get_logHandler", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ILogHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(UnityEngine::LogType logType, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Log", {}, ::il2cpp_utils::ExtractTypes(logType, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(UnityEngine::LogType logType, ::Il2CppObject* message, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Log", {}, ::il2cpp_utils::ExtractTypes(logType, message, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, message, context);
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("LogFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LogFormat", {}, ::il2cpp_utils::ExtractTypes(logType, format, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, System.String format, params System.Object[] args)
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Logger::LogFormat(logType, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("LogFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LogFormat", {}, ::il2cpp_utils::ExtractTypes(logType, context, format, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Creating initializer_list -> params proxy for: System.Void LogFormat(UnityEngine.LogType logType, UnityEngine.Object context, System.String format, params System.Object[] args)
void UnityEngine::Logger::LogFormat(UnityEngine::LogType logType, UnityEngine::Object* context, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::Logger::LogFormat(logType, context, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.Logger.LogException
void UnityEngine::Logger::LogException(System::Exception* exception, UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Logger").WithContext("LogException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LogException", {}, ::il2cpp_utils::ExtractTypes(exception, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exception, context);
}
