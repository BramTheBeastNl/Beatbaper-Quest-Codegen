// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSource.GetPitch
float UnityEngine::AudioSource::GetPitch(UnityEngine::AudioSource* source) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine", "AudioSource", "GetPitch", source));
}
// Autogenerated method: UnityEngine.AudioSource.SetPitch
void UnityEngine::AudioSource::SetPitch(UnityEngine::AudioSource* source, float pitch) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "AudioSource", "SetPitch", source, pitch));
}
// Autogenerated method: UnityEngine.AudioSource.PlayHelper
void UnityEngine::AudioSource::PlayHelper(UnityEngine::AudioSource* source, uint64_t delay) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "AudioSource", "PlayHelper", source, delay));
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play(double delay) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Play", delay));
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShotHelper
void UnityEngine::AudioSource::PlayOneShotHelper(UnityEngine::AudioSource* source, UnityEngine::AudioClip* clip, float volumeScale) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "AudioSource", "PlayOneShotHelper", source, clip, volumeScale));
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop(bool stopOneShots) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stop", stopOneShots));
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumDataHelper
void UnityEngine::AudioSource::GetSpectrumDataHelper(UnityEngine::AudioSource* source, ::Array<float>*& samples, int channel, UnityEngine::FFTWindow window) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine", "AudioSource", "GetSpectrumDataHelper", source, samples, channel, window));
}
// Autogenerated method: UnityEngine.AudioSource.get_volume
float UnityEngine::AudioSource::get_volume() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_volume"));
}
// Autogenerated method: UnityEngine.AudioSource.set_volume
void UnityEngine::AudioSource::set_volume(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_volume", value));
}
// Autogenerated method: UnityEngine.AudioSource.get_pitch
float UnityEngine::AudioSource::get_pitch() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_pitch"));
}
// Autogenerated method: UnityEngine.AudioSource.set_pitch
void UnityEngine::AudioSource::set_pitch(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_pitch", value));
}
// Autogenerated method: UnityEngine.AudioSource.get_time
float UnityEngine::AudioSource::get_time() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_time"));
}
// Autogenerated method: UnityEngine.AudioSource.set_time
void UnityEngine::AudioSource::set_time(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_time", value));
}
// Autogenerated method: UnityEngine.AudioSource.get_timeSamples
int UnityEngine::AudioSource::get_timeSamples() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_timeSamples"));
}
// Autogenerated method: UnityEngine.AudioSource.get_clip
UnityEngine::AudioClip* UnityEngine::AudioSource::get_clip() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::AudioClip*>(this, "get_clip"));
}
// Autogenerated method: UnityEngine.AudioSource.set_clip
void UnityEngine::AudioSource::set_clip(UnityEngine::AudioClip* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_clip", value));
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Play"));
}
// Autogenerated method: UnityEngine.AudioSource.PlayScheduled
void UnityEngine::AudioSource::PlayScheduled(double time) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayScheduled", time));
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(UnityEngine::AudioClip* clip) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayOneShot", clip));
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(UnityEngine::AudioClip* clip, float volumeScale) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayOneShot", clip, volumeScale));
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stop"));
}
// Autogenerated method: UnityEngine.AudioSource.Pause
void UnityEngine::AudioSource::Pause() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Pause"));
}
// Autogenerated method: UnityEngine.AudioSource.UnPause
void UnityEngine::AudioSource::UnPause() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnPause"));
}
// Autogenerated method: UnityEngine.AudioSource.get_isPlaying
bool UnityEngine::AudioSource::get_isPlaying() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isPlaying"));
}
// Autogenerated method: UnityEngine.AudioSource.set_loop
void UnityEngine::AudioSource::set_loop(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_loop", value));
}
// Autogenerated method: UnityEngine.AudioSource.get_playOnAwake
bool UnityEngine::AudioSource::get_playOnAwake() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_playOnAwake"));
}
// Autogenerated method: UnityEngine.AudioSource.set_playOnAwake
void UnityEngine::AudioSource::set_playOnAwake(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playOnAwake", value));
}
// Autogenerated method: UnityEngine.AudioSource.set_reverbZoneMix
void UnityEngine::AudioSource::set_reverbZoneMix(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_reverbZoneMix", value));
}
// Autogenerated method: UnityEngine.AudioSource.set_priority
void UnityEngine::AudioSource::set_priority(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_priority", value));
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumData
void UnityEngine::AudioSource::GetSpectrumData(::Array<float>* samples, int channel, UnityEngine::FFTWindow window) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetSpectrumData", samples, channel, window));
}
