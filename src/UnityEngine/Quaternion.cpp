// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion identityQuaternion
UnityEngine::Quaternion UnityEngine::Quaternion::_get_identityQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("_get_identityQuaternion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Quaternion>("UnityEngine", "Quaternion", "identityQuaternion"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion identityQuaternion
void UnityEngine::Quaternion::_set_identityQuaternion(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("_set_identityQuaternion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "identityQuaternion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Quaternion::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Quaternion", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Quaternion::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "kEpsilon", value));
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation
UnityEngine::Quaternion UnityEngine::Quaternion::FromToRotation(UnityEngine::Vector3 fromDirection, UnityEngine::Vector3 toDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("FromToRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromDirection, toDirection)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromDirection, toDirection);
}
// Autogenerated method: UnityEngine.Quaternion.Inverse
UnityEngine::Quaternion UnityEngine::Quaternion::Inverse(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Inverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.Slerp
UnityEngine::Quaternion UnityEngine::Quaternion::Slerp(UnityEngine::Quaternion a, UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Slerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped
UnityEngine::Quaternion UnityEngine::Quaternion::SlerpUnclamped(UnityEngine::Quaternion a, UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("SlerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Lerp
UnityEngine::Quaternion UnityEngine::Quaternion::Lerp(UnityEngine::Quaternion a, UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad
UnityEngine::Quaternion UnityEngine::Quaternion::Internal_FromEulerRad(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_FromEulerRad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(euler)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad
UnityEngine::Vector3 UnityEngine::Quaternion::Internal_ToEulerRad(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_ToEulerRad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToAxisAngleRad
void UnityEngine::Quaternion::Internal_ToAxisAngleRad(UnityEngine::Quaternion q, UnityEngine::Vector3& axis, float& angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_ToAxisAngleRad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToAxisAngleRad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, axis, angle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, axis, angle);
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis
UnityEngine::Quaternion UnityEngine::Quaternion::AngleAxis(float angle, UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("AngleAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle, axis)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle, axis);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(UnityEngine::Vector3 forward, UnityEngine::Vector3 upwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("LookRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forward, upwards)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, forward, upwards);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(UnityEngine::Vector3 forward) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("LookRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forward)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, forward);
}
// Autogenerated method: UnityEngine.Quaternion.get_identity
UnityEngine::Quaternion UnityEngine::Quaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("get_identity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "get_identity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.IsEqualUsingDot
bool UnityEngine::Quaternion::IsEqualUsingDot(float dot) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("IsEqualUsingDot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "IsEqualUsingDot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dot)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dot);
}
// Autogenerated method: UnityEngine.Quaternion.Dot
float UnityEngine::Quaternion::Dot(UnityEngine::Quaternion a, UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Dot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Dot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(UnityEngine::Vector3 view) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(view)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, view);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(UnityEngine::Vector3 view, UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(view, up)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, view, up);
}
// Autogenerated method: UnityEngine.Quaternion.Angle
float UnityEngine::Quaternion::Angle(UnityEngine::Quaternion a, UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Angle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Angle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_MakePositive
UnityEngine::Vector3 UnityEngine::Quaternion::Internal_MakePositive(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_MakePositive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_MakePositive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(euler)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Quaternion::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.set_eulerAngles
void UnityEngine::Quaternion::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
UnityEngine::Quaternion UnityEngine::Quaternion::Euler(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Euler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, z)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
UnityEngine::Quaternion UnityEngine::Quaternion::Euler(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Euler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(euler)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.ToAngleAxis
void UnityEngine::Quaternion::ToAngleAxis(float& angle, UnityEngine::Vector3& axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("ToAngleAxis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToAngleAxis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle, axis)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, angle, axis);
}
// Autogenerated method: UnityEngine.Quaternion.RotateTowards
UnityEngine::Quaternion UnityEngine::Quaternion::RotateTowards(UnityEngine::Quaternion from, UnityEngine::Quaternion to, float maxDegreesDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("RotateTowards");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "RotateTowards", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(from, to, maxDegreesDelta)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, from, to, maxDegreesDelta);
}
// Autogenerated method: UnityEngine.Quaternion.Normalize
UnityEngine::Quaternion UnityEngine::Quaternion::Normalize(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Normalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Normalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: UnityEngine.Quaternion.Normalize
void UnityEngine::Quaternion::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Normalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion..cctor
void UnityEngine::Quaternion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation_Injected
void UnityEngine::Quaternion::FromToRotation_Injected(UnityEngine::Vector3& fromDirection, UnityEngine::Vector3& toDirection, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("FromToRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fromDirection, toDirection, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fromDirection, toDirection, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Inverse_Injected
void UnityEngine::Quaternion::Inverse_Injected(UnityEngine::Quaternion& rotation, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Inverse_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Slerp_Injected
void UnityEngine::Quaternion::Slerp_Injected(UnityEngine::Quaternion& a, UnityEngine::Quaternion& b, float t, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Slerp_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t, ret);
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped_Injected
void UnityEngine::Quaternion::SlerpUnclamped_Injected(UnityEngine::Quaternion& a, UnityEngine::Quaternion& b, float t, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("SlerpUnclamped_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Lerp_Injected
void UnityEngine::Quaternion::Lerp_Injected(UnityEngine::Quaternion& a, UnityEngine::Quaternion& b, float t, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Lerp_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad_Injected
void UnityEngine::Quaternion::Internal_FromEulerRad_Injected(UnityEngine::Vector3& euler, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_FromEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(euler, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, euler, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad_Injected
void UnityEngine::Quaternion::Internal_ToEulerRad_Injected(UnityEngine::Quaternion& rotation, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_ToEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, ret);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToAxisAngleRad_Injected
void UnityEngine::Quaternion::Internal_ToAxisAngleRad_Injected(UnityEngine::Quaternion& q, UnityEngine::Vector3& axis, float& angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Internal_ToAxisAngleRad_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToAxisAngleRad_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q, axis, angle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q, axis, angle);
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis_Injected
void UnityEngine::Quaternion::AngleAxis_Injected(float angle, UnityEngine::Vector3& axis, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("AngleAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angle, axis, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle, axis, ret);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation_Injected
void UnityEngine::Quaternion::LookRotation_Injected(UnityEngine::Vector3& forward, UnityEngine::Vector3& upwards, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("LookRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forward, upwards, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, forward, upwards, ret);
}
// Autogenerated method: UnityEngine.Quaternion.GetHashCode
int UnityEngine::Quaternion::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(UnityEngine::Quaternion other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.ToString
::Il2CppString* UnityEngine::Quaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
UnityEngine::Quaternion UnityEngine::operator*(const UnityEngine::Quaternion& lhs, const UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
UnityEngine::Vector3 UnityEngine::operator*(const UnityEngine::Quaternion& rotation, const UnityEngine::Vector3& point) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, point)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, point);
}
// Autogenerated method: UnityEngine.Quaternion.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Quaternion& lhs, const UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Quaternion& lhs, const UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine").WithContext("Quaternion").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
