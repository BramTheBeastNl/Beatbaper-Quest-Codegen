// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Vertex
#include "UnityEngine/ProBuilder/Vertex.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_position
UnityEngine::Vector3 UnityEngine::ProBuilder::Vertex::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_position"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_position
void UnityEngine::ProBuilder::Vertex::set_position(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_color
UnityEngine::Color UnityEngine::ProBuilder::Vertex::get_color() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_color
void UnityEngine::ProBuilder::Vertex::set_color(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_normal
UnityEngine::Vector3 UnityEngine::ProBuilder::Vertex::get_normal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_normal"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_normal
void UnityEngine::ProBuilder::Vertex::set_normal(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_normal", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_tangent
UnityEngine::Vector4 UnityEngine::ProBuilder::Vertex::get_tangent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>(this, "get_tangent"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_tangent
void UnityEngine::ProBuilder::Vertex::set_tangent(UnityEngine::Vector4 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_tangent", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_uv0
UnityEngine::Vector2 UnityEngine::ProBuilder::Vertex::get_uv0() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>(this, "get_uv0"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_uv0
void UnityEngine::ProBuilder::Vertex::set_uv0(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv0", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_uv2
UnityEngine::Vector2 UnityEngine::ProBuilder::Vertex::get_uv2() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>(this, "get_uv2"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_uv2
void UnityEngine::ProBuilder::Vertex::set_uv2(UnityEngine::Vector2 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv2", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_uv3
UnityEngine::Vector4 UnityEngine::ProBuilder::Vertex::get_uv3() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>(this, "get_uv3"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_uv3
void UnityEngine::ProBuilder::Vertex::set_uv3(UnityEngine::Vector4 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv3", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_uv4
UnityEngine::Vector4 UnityEngine::ProBuilder::Vertex::get_uv4() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>(this, "get_uv4"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_uv4
void UnityEngine::ProBuilder::Vertex::set_uv4(UnityEngine::Vector4 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_uv4", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_attributes
UnityEngine::ProBuilder::MeshArrays UnityEngine::ProBuilder::Vertex::get_attributes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::MeshArrays>(this, "get_attributes"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.HasArrays
bool UnityEngine::ProBuilder::Vertex::HasArrays(UnityEngine::ProBuilder::MeshArrays attribute) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasArrays", attribute));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasPosition
bool UnityEngine::ProBuilder::Vertex::get_hasPosition() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasPosition"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasPosition
void UnityEngine::ProBuilder::Vertex::set_hasPosition(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasPosition", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasColor
bool UnityEngine::ProBuilder::Vertex::get_hasColor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasColor"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasColor
void UnityEngine::ProBuilder::Vertex::set_hasColor(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasColor", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasNormal
bool UnityEngine::ProBuilder::Vertex::get_hasNormal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasNormal"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasNormal
void UnityEngine::ProBuilder::Vertex::set_hasNormal(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasNormal", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasTangent
bool UnityEngine::ProBuilder::Vertex::get_hasTangent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasTangent"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasTangent
void UnityEngine::ProBuilder::Vertex::set_hasTangent(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasTangent", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasUV0
bool UnityEngine::ProBuilder::Vertex::get_hasUV0() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasUV0"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasUV0
void UnityEngine::ProBuilder::Vertex::set_hasUV0(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasUV0", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasUV2
bool UnityEngine::ProBuilder::Vertex::get_hasUV2() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasUV2"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasUV2
void UnityEngine::ProBuilder::Vertex::set_hasUV2(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasUV2", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasUV3
bool UnityEngine::ProBuilder::Vertex::get_hasUV3() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasUV3"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasUV3
void UnityEngine::ProBuilder::Vertex::set_hasUV3(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasUV3", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.get_hasUV4
bool UnityEngine::ProBuilder::Vertex::get_hasUV4() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasUV4"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.set_hasUV4
void UnityEngine::ProBuilder::Vertex::set_hasUV4(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_hasUV4", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Equals
bool UnityEngine::ProBuilder::Vertex::Equals(UnityEngine::ProBuilder::Vertex* other, UnityEngine::ProBuilder::MeshArrays mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other, mask));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex..ctor
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::New_ctor(UnityEngine::ProBuilder::Vertex* vertex) {
  return (Vertex*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.ProBuilder", "Vertex", vertex));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Add
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Add(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Add", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Add
void UnityEngine::ProBuilder::Vertex::Add(UnityEngine::ProBuilder::Vertex* b) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Add", b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Subtract
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Subtract(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Subtract", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Subtract
void UnityEngine::ProBuilder::Vertex::Subtract(UnityEngine::ProBuilder::Vertex* b) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Subtract", b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Multiply
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Multiply(UnityEngine::ProBuilder::Vertex* a, float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Multiply", a, value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Multiply
void UnityEngine::ProBuilder::Vertex::Multiply(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Multiply", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Divide
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Divide(UnityEngine::ProBuilder::Vertex* a, float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Divide", a, value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Divide
void UnityEngine::ProBuilder::Vertex::Divide(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Divide", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Normalize
void UnityEngine::ProBuilder::Vertex::Normalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Normalize"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.ToString
::Il2CppString* UnityEngine::ProBuilder::Vertex::ToString(::Il2CppString* args) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString", args));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.GetArrays
void UnityEngine::ProBuilder::Vertex::GetArrays(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices, ::Array<UnityEngine::Vector3>*& position, ::Array<UnityEngine::Color>*& color, ::Array<UnityEngine::Vector2>*& uv0, ::Array<UnityEngine::Vector3>*& normal, ::Array<UnityEngine::Vector4>*& tangent, ::Array<UnityEngine::Vector2>*& uv2, System::Collections::Generic::List_1<UnityEngine::Vector4>*& uv3, System::Collections::Generic::List_1<UnityEngine::Vector4>*& uv4) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Vertex", "GetArrays", vertices, position, color, uv0, normal, tangent, uv2, uv3, uv4));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.GetArrays
void UnityEngine::ProBuilder::Vertex::GetArrays(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices, ::Array<UnityEngine::Vector3>*& position, ::Array<UnityEngine::Color>*& color, ::Array<UnityEngine::Vector2>*& uv0, ::Array<UnityEngine::Vector3>*& normal, ::Array<UnityEngine::Vector4>*& tangent, ::Array<UnityEngine::Vector2>*& uv2, System::Collections::Generic::List_1<UnityEngine::Vector4>*& uv3, System::Collections::Generic::List_1<UnityEngine::Vector4>*& uv4, UnityEngine::ProBuilder::MeshArrays attributes) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Vertex", "GetArrays", vertices, position, color, uv0, normal, tangent, uv2, uv3, uv4, attributes));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.SetMesh
void UnityEngine::ProBuilder::Vertex::SetMesh(UnityEngine::Mesh* mesh, System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Vertex", "SetMesh", mesh, vertices));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Average
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Average(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Average", vertices, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Mix
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::Mix(UnityEngine::ProBuilder::Vertex* x, UnityEngine::ProBuilder::Vertex* y, float weight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "Mix", x, y, weight));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex..ctor
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::Vertex::New_ctor() {
  return (Vertex*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.ProBuilder", "Vertex"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Equals
bool UnityEngine::ProBuilder::Vertex::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.Equals
bool UnityEngine::ProBuilder::Vertex::Equals(UnityEngine::ProBuilder::Vertex* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.GetHashCode
int UnityEngine::ProBuilder::Vertex::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Equality
bool UnityEngine::ProBuilder::operator ==(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Vertex", "op_Equality", a, &b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Inequality
bool UnityEngine::ProBuilder::operator !=(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Vertex", "op_Inequality", a, &b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Addition
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::operator+(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "op_Addition", a, &b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Subtraction
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::operator-(UnityEngine::ProBuilder::Vertex* a, UnityEngine::ProBuilder::Vertex& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "op_Subtraction", a, &b));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Multiply
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::operator*(UnityEngine::ProBuilder::Vertex& a, const float& value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "op_Multiply", &a, value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vertex.op_Division
UnityEngine::ProBuilder::Vertex* UnityEngine::ProBuilder::operator/(UnityEngine::ProBuilder::Vertex& a, const float& value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Vertex*>("UnityEngine.ProBuilder", "Vertex", "op_Division", &a, value));
}
