// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.EdgeUtility
#include "UnityEngine/ProBuilder/EdgeUtility.hpp"
// Including type: UnityEngine.ProBuilder.EdgeUtility/<>c__DisplayClass0_0
#include "UnityEngine/ProBuilder/EdgeUtility_--c__DisplayClass0_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine/ProBuilder/ProBuilderMesh.hpp"
// Including type: UnityEngine.ProBuilder.SimpleTuple`2
#include "UnityEngine/ProBuilder/SimpleTuple_2.hpp"
// Including type: UnityEngine.ProBuilder.Face
#include "UnityEngine/ProBuilder/Face.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.GetSharedVertexHandleEdges
System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>* UnityEngine::ProBuilder::EdgeUtility::GetSharedVertexHandleEdges(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>* edges) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("GetSharedVertexHandleEdges");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "GetSharedVertexHandleEdges", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edges)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edges);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.GetSharedVertexHandleEdge
UnityEngine::ProBuilder::Edge UnityEngine::ProBuilder::EdgeUtility::GetSharedVertexHandleEdge(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("GetSharedVertexHandleEdge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "GetSharedVertexHandleEdge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edge)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Edge, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edge);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.GetEdgeWithSharedVertexHandles
UnityEngine::ProBuilder::Edge UnityEngine::ProBuilder::EdgeUtility::GetEdgeWithSharedVertexHandles(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("GetEdgeWithSharedVertexHandles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "GetEdgeWithSharedVertexHandles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edge)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Edge, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edge);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.ValidateEdge
bool UnityEngine::ProBuilder::EdgeUtility::ValidateEdge(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge edge, UnityEngine::ProBuilder::SimpleTuple_2<UnityEngine::ProBuilder::Face*, UnityEngine::ProBuilder::Edge>& validEdge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("ValidateEdge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "ValidateEdge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edge, validEdge)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edge, validEdge);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.Contains
bool UnityEngine::ProBuilder::EdgeUtility::Contains(::Array<UnityEngine::ProBuilder::Edge>* edges, UnityEngine::ProBuilder::Edge edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(edges, edge)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, edges, edge);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.Contains
bool UnityEngine::ProBuilder::EdgeUtility::Contains(::Array<UnityEngine::ProBuilder::Edge>* edges, int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(edges, x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, edges, x, y);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.IndexOf
int UnityEngine::ProBuilder::EdgeUtility::IndexOf(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>* edges, UnityEngine::ProBuilder::Edge edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edges, edge)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edges, edge);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.AllTriangles
::Array<int>* UnityEngine::ProBuilder::EdgeUtility::AllTriangles(::Array<UnityEngine::ProBuilder::Edge>* edges) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("AllTriangles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "AllTriangles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(edges)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, edges);
}
// Autogenerated method: UnityEngine.ProBuilder.EdgeUtility.GetFace
UnityEngine::ProBuilder::Face* UnityEngine::ProBuilder::EdgeUtility::GetFace(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge edge) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("EdgeUtility").WithContext("GetFace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "EdgeUtility", "GetFace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, edge)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Face*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, edge);
}
