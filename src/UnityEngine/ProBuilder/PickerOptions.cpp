// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.PickerOptions
#include "UnityEngine/ProBuilder/PickerOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.ProBuilder.PickerOptions k_Default
UnityEngine::ProBuilder::PickerOptions UnityEngine::ProBuilder::PickerOptions::_get_k_Default() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ProBuilder::PickerOptions>("UnityEngine.ProBuilder", "PickerOptions", "k_Default"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.ProBuilder.PickerOptions k_Default
void UnityEngine::ProBuilder::PickerOptions::_set_k_Default(UnityEngine::ProBuilder::PickerOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "PickerOptions", "k_Default", value));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.get_depthTest
bool UnityEngine::ProBuilder::PickerOptions::get_depthTest() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "get_depthTest"));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.set_depthTest
void UnityEngine::ProBuilder::PickerOptions::set_depthTest(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_depthTest", value));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.get_rectSelectMode
UnityEngine::ProBuilder::RectSelectMode UnityEngine::ProBuilder::PickerOptions::get_rectSelectMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::RectSelectMode>(*this, "get_rectSelectMode"));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.set_rectSelectMode
void UnityEngine::ProBuilder::PickerOptions::set_rectSelectMode(UnityEngine::ProBuilder::RectSelectMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_rectSelectMode", value));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.get_Default
UnityEngine::ProBuilder::PickerOptions UnityEngine::ProBuilder::PickerOptions::get_Default() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::PickerOptions>("UnityEngine.ProBuilder", "PickerOptions", "get_Default"));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.Equals
bool UnityEngine::ProBuilder::PickerOptions::Equals(UnityEngine::ProBuilder::PickerOptions other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions..cctor
void UnityEngine::ProBuilder::PickerOptions::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "PickerOptions", ".cctor"));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.Equals
bool UnityEngine::ProBuilder::PickerOptions::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.GetHashCode
int UnityEngine::ProBuilder::PickerOptions::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.op_Equality
bool UnityEngine::ProBuilder::operator ==(const UnityEngine::ProBuilder::PickerOptions& a, const UnityEngine::ProBuilder::PickerOptions& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "PickerOptions", "op_Equality", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.PickerOptions.op_Inequality
bool UnityEngine::ProBuilder::operator !=(const UnityEngine::ProBuilder::PickerOptions& a, const UnityEngine::ProBuilder::PickerOptions& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "PickerOptions", "op_Inequality", a, b));
}
