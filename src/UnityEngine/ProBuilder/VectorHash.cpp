// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ProBuilder.VectorHash
#include "UnityEngine/ProBuilder/VectorHash.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FltCompareResolution
float UnityEngine::ProBuilder::VectorHash::_get_FltCompareResolution() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("_get_FltCompareResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.ProBuilder", "VectorHash", "FltCompareResolution"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FltCompareResolution
void UnityEngine::ProBuilder::VectorHash::_set_FltCompareResolution(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("_set_FltCompareResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "VectorHash", "FltCompareResolution", value));
}
// Autogenerated method: UnityEngine.ProBuilder.VectorHash.HashFloat
int UnityEngine::ProBuilder::VectorHash::HashFloat(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("HashFloat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "VectorHash", il2cpp_utils::NoArgClass<int>(), "HashFloat", {}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.ProBuilder.VectorHash.GetHashCode
int UnityEngine::ProBuilder::VectorHash::GetHashCode(UnityEngine::Vector2 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "VectorHash", il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.ProBuilder.VectorHash.GetHashCode
int UnityEngine::ProBuilder::VectorHash::GetHashCode(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "VectorHash", il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.ProBuilder.VectorHash.GetHashCode
int UnityEngine::ProBuilder::VectorHash::GetHashCode(UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("VectorHash").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "VectorHash", il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
