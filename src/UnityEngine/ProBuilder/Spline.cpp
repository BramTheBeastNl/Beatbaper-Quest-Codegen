// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Spline
#include "UnityEngine/ProBuilder/Spline.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine/ProBuilder/ProBuilderMesh.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ProBuilder.Spline.Extrude
UnityEngine::ProBuilder::ProBuilderMesh* UnityEngine::ProBuilder::Spline::Extrude(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>* points, float radius, int columns, int rows, bool closeLoop, bool smooth) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ProBuilderMesh*>("UnityEngine.ProBuilder", "Spline", "Extrude", points, radius, columns, rows, closeLoop, smooth));
}
// Autogenerated method: UnityEngine.ProBuilder.Spline.Extrude
void UnityEngine::ProBuilder::Spline::Extrude(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>* bezierPoints, float radius, int columns, int rows, bool closeLoop, bool smooth, UnityEngine::ProBuilder::ProBuilderMesh*& target) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Spline", "Extrude", bezierPoints, radius, columns, rows, closeLoop, smooth, target));
}
// Autogenerated method: UnityEngine.ProBuilder.Spline.GetControlPoints
System::Collections::Generic::List_1<UnityEngine::Vector3>* UnityEngine::ProBuilder::Spline::GetControlPoints(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::BezierPoint>* bezierPoints, int subdivisionsPerSegment, bool closeLoop, System::Collections::Generic::List_1<UnityEngine::Quaternion>* rotations) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::Vector3>*>("UnityEngine.ProBuilder", "Spline", "GetControlPoints", bezierPoints, subdivisionsPerSegment, closeLoop, rotations));
}
// Autogenerated method: UnityEngine.ProBuilder.Spline.Extrude
void UnityEngine::ProBuilder::Spline::Extrude(System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, float radius, int radiusRows, bool closeLoop, bool smooth, UnityEngine::ProBuilder::ProBuilderMesh*& target, System::Collections::Generic::IList_1<UnityEngine::Quaternion>* pointRotations) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Spline", "Extrude", points, radius, radiusRows, closeLoop, smooth, target, pointRotations));
}
// Autogenerated method: UnityEngine.ProBuilder.Spline.GetRingRotation
UnityEngine::Quaternion UnityEngine::ProBuilder::Spline::GetRingRotation(System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, int i, bool closeLoop, float& secant) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>("UnityEngine.ProBuilder", "Spline", "GetRingRotation", points, i, closeLoop, secant));
}
// Autogenerated method: UnityEngine.ProBuilder.Spline.VertexRing
::Array<UnityEngine::Vector3>* UnityEngine::ProBuilder::Spline::VertexRing(UnityEngine::Quaternion orientation, UnityEngine::Vector3 offset, float radius, int segments) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector3>*>("UnityEngine.ProBuilder", "Spline", "VertexRing", orientation, offset, radius, segments));
}
