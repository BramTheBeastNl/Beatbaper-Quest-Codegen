// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Vector3Mask
#include "UnityEngine/ProBuilder/Vector3Mask.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte X
uint8_t UnityEngine::ProBuilder::Vector3Mask::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine.ProBuilder", "Vector3Mask", "X"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte X
void UnityEngine::ProBuilder::Vector3Mask::_set_X(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Vector3Mask", "X", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte Y
uint8_t UnityEngine::ProBuilder::Vector3Mask::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine.ProBuilder", "Vector3Mask", "Y"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte Y
void UnityEngine::ProBuilder::Vector3Mask::_set_Y(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Vector3Mask", "Y", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte Z
uint8_t UnityEngine::ProBuilder::Vector3Mask::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("UnityEngine.ProBuilder", "Vector3Mask", "Z"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte Z
void UnityEngine::ProBuilder::Vector3Mask::_set_Z(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Vector3Mask", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.ProBuilder.Vector3Mask XYZ
UnityEngine::ProBuilder::Vector3Mask UnityEngine::ProBuilder::Vector3Mask::_get_XYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_get_XYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ProBuilder::Vector3Mask>("UnityEngine.ProBuilder", "Vector3Mask", "XYZ"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.ProBuilder.Vector3Mask XYZ
void UnityEngine::ProBuilder::Vector3Mask::_set_XYZ(UnityEngine::ProBuilder::Vector3Mask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("_set_XYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Vector3Mask", "XYZ", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.get_x
float UnityEngine::ProBuilder::Vector3Mask::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("get_x");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.get_y
float UnityEngine::ProBuilder::Vector3Mask::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("get_y");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.get_z
float UnityEngine::ProBuilder::Vector3Mask::get_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("get_z");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_z", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.get_active
int UnityEngine::ProBuilder::Vector3Mask::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("get_active");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_active", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Explicit
UnityEngine::ProBuilder::Vector3Mask::Vector3Mask(UnityEngine::Vector3& v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Vector3Mask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.get_Item
float UnityEngine::ProBuilder::Vector3Mask::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, i);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.set_Item
void UnityEngine::ProBuilder::Vector3Mask::set_Item(int i, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, i, value);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask..cctor
void UnityEngine::ProBuilder::Vector3Mask::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.ToString
::Il2CppString* UnityEngine::ProBuilder::Vector3Mask::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.Equals
bool UnityEngine::ProBuilder::Vector3Mask::Equals(UnityEngine::ProBuilder::Vector3Mask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.Equals
bool UnityEngine::ProBuilder::Vector3Mask::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.GetHashCode
int UnityEngine::ProBuilder::Vector3Mask::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_BitwiseOr
UnityEngine::ProBuilder::Vector3Mask UnityEngine::ProBuilder::operator|(const UnityEngine::ProBuilder::Vector3Mask& left, const UnityEngine::ProBuilder::Vector3Mask& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Vector3Mask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_BitwiseAnd
UnityEngine::ProBuilder::Vector3Mask UnityEngine::ProBuilder::operator&(const UnityEngine::ProBuilder::Vector3Mask& left, const UnityEngine::ProBuilder::Vector3Mask& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Vector3Mask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_ExclusiveOr
UnityEngine::ProBuilder::Vector3Mask UnityEngine::ProBuilder::operator^(const UnityEngine::ProBuilder::Vector3Mask& left, const UnityEngine::ProBuilder::Vector3Mask& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_ExclusiveOr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_ExclusiveOr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ProBuilder::Vector3Mask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Multiply
UnityEngine::Vector3 UnityEngine::ProBuilder::operator*(const UnityEngine::ProBuilder::Vector3Mask& mask, const float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mask, value)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, value);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Multiply
UnityEngine::Vector3 UnityEngine::ProBuilder::operator*(const UnityEngine::ProBuilder::Vector3Mask& mask, const UnityEngine::Vector3& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mask, value)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, value);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Multiply
UnityEngine::Vector3 UnityEngine::ProBuilder::operator*(const UnityEngine::Quaternion& rotation, const UnityEngine::ProBuilder::Vector3Mask& mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation, mask)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation, mask);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Equality
bool UnityEngine::ProBuilder::operator ==(const UnityEngine::ProBuilder::Vector3Mask& left, const UnityEngine::ProBuilder::Vector3Mask& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.ProBuilder.Vector3Mask.op_Inequality
bool UnityEngine::ProBuilder::operator !=(const UnityEngine::ProBuilder::Vector3Mask& left, const UnityEngine::ProBuilder::Vector3Mask& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Vector3Mask").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Vector3Mask", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
