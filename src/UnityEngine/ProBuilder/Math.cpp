// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Math
#include "UnityEngine/ProBuilder/Math.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.ProBuilder.Bounds2D
#include "UnityEngine/ProBuilder/Bounds2D.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.ProBuilder.Vertex
#include "UnityEngine/ProBuilder/Vertex.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine/ProBuilder/ProBuilderMesh.hpp"
// Including type: UnityEngine.ProBuilder.Face
#include "UnityEngine/ProBuilder/Face.hpp"
// Including type: UnityEngine.ProBuilder.Normal
#include "UnityEngine/ProBuilder/Normal.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single phi
float UnityEngine::ProBuilder::Math::_get_phi() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.ProBuilder", "Math", "phi"));
}
// Autogenerated static field setter
// Set static field: static public System.Single phi
void UnityEngine::ProBuilder::Math::_set_phi(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "phi", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_FltEpsilon
float UnityEngine::ProBuilder::Math::_get_k_FltEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.ProBuilder", "Math", "k_FltEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_FltEpsilon
void UnityEngine::ProBuilder::Math::_set_k_FltEpsilon(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "k_FltEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single k_FltCompareEpsilon
float UnityEngine::ProBuilder::Math::_get_k_FltCompareEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.ProBuilder", "Math", "k_FltCompareEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_FltCompareEpsilon
void UnityEngine::ProBuilder::Math::_set_k_FltCompareEpsilon(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "k_FltCompareEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static System.Single handleEpsilon
float UnityEngine::ProBuilder::Math::_get_handleEpsilon() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.ProBuilder", "Math", "handleEpsilon"));
}
// Autogenerated static field setter
// Set static field: static System.Single handleEpsilon
void UnityEngine::ProBuilder::Math::_set_handleEpsilon(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "handleEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 tv1
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::_get_tv1() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "tv1"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 tv1
void UnityEngine::ProBuilder::Math::_set_tv1(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "tv1", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 tv2
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::_get_tv2() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "tv2"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 tv2
void UnityEngine::ProBuilder::Math::_set_tv2(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "tv2", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 tv3
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::_get_tv3() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "tv3"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 tv3
void UnityEngine::ProBuilder::Math::_set_tv3(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "tv3", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 tv4
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::_get_tv4() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "tv4"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 tv4
void UnityEngine::ProBuilder::Math::_set_tv4(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Math", "tv4", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PointInCircumference
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::PointInCircumference(float radius, float angleInDegrees, UnityEngine::Vector2 origin) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "PointInCircumference", radius, angleInDegrees, origin));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PointInSphere
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::PointInSphere(float radius, float latitudeAngle, float longitudeAngle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "PointInSphere", radius, latitudeAngle, longitudeAngle));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SignedAngle
float UnityEngine::ProBuilder::Math::SignedAngle(UnityEngine::Vector2 a, UnityEngine::Vector2 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "SignedAngle", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SqrDistance
float UnityEngine::ProBuilder::Math::SqrDistance(UnityEngine::Vector3 a, UnityEngine::Vector3 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "SqrDistance", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.TriangleArea
float UnityEngine::ProBuilder::Math::TriangleArea(UnityEngine::Vector3 x, UnityEngine::Vector3 y, UnityEngine::Vector3 z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "TriangleArea", x, y, z));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PolygonArea
float UnityEngine::ProBuilder::Math::PolygonArea(::Array<UnityEngine::Vector3>* vertices, ::Array<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "PolygonArea", vertices, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.RotateAroundPoint
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::RotateAroundPoint(UnityEngine::Vector2 v, UnityEngine::Vector2 origin, float theta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "RotateAroundPoint", v, origin, theta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ScaleAroundPoint
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::ScaleAroundPoint(UnityEngine::Vector2 v, UnityEngine::Vector2 origin, UnityEngine::Vector2 scale) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "ScaleAroundPoint", v, origin, scale));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Perpendicular
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::Perpendicular(UnityEngine::Vector2 value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "Perpendicular", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ReflectPoint
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::ReflectPoint(UnityEngine::Vector2 point, UnityEngine::Vector2 lineStart, UnityEngine::Vector2 lineEnd) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "ReflectPoint", point, lineStart, lineEnd));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SqrDistanceRayPoint
float UnityEngine::ProBuilder::Math::SqrDistanceRayPoint(UnityEngine::Ray ray, UnityEngine::Vector3 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "SqrDistanceRayPoint", ray, point));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.DistancePointLineSegment
float UnityEngine::ProBuilder::Math::DistancePointLineSegment(UnityEngine::Vector2 point, UnityEngine::Vector2 lineStart, UnityEngine::Vector2 lineEnd) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "DistancePointLineSegment", point, lineStart, lineEnd));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.DistancePointLineSegment
float UnityEngine::ProBuilder::Math::DistancePointLineSegment(UnityEngine::Vector3 point, UnityEngine::Vector3 lineStart, UnityEngine::Vector3 lineEnd) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "DistancePointLineSegment", point, lineStart, lineEnd));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetNearestPointRayRay
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::GetNearestPointRayRay(UnityEngine::Ray a, UnityEngine::Ray b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "GetNearestPointRayRay", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetNearestPointRayRay
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::GetNearestPointRayRay(UnityEngine::Vector3 ao, UnityEngine::Vector3 ad, UnityEngine::Vector3 bo, UnityEngine::Vector3 bd) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "GetNearestPointRayRay", ao, ad, bo, bd));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetLineSegmentIntersect
bool UnityEngine::ProBuilder::Math::GetLineSegmentIntersect(UnityEngine::Vector2 p0, UnityEngine::Vector2 p1, UnityEngine::Vector2 p2, UnityEngine::Vector2 p3, UnityEngine::Vector2& intersect) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "GetLineSegmentIntersect", p0, p1, p2, p3, intersect));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetLineSegmentIntersect
bool UnityEngine::ProBuilder::Math::GetLineSegmentIntersect(UnityEngine::Vector2 p0, UnityEngine::Vector2 p1, UnityEngine::Vector2 p2, UnityEngine::Vector2 p3) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "GetLineSegmentIntersect", p0, p1, p2, p3));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PointInPolygon
bool UnityEngine::ProBuilder::Math::PointInPolygon(::Array<UnityEngine::Vector2>* polygon, UnityEngine::Vector2 point, ::Array<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "PointInPolygon", polygon, point, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PointInPolygon
bool UnityEngine::ProBuilder::Math::PointInPolygon(::Array<UnityEngine::Vector2>* positions, UnityEngine::ProBuilder::Bounds2D* polyBounds, ::Array<UnityEngine::ProBuilder::Edge>* edges, UnityEngine::Vector2 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "PointInPolygon", positions, polyBounds, edges, point));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.PointInPolygon
bool UnityEngine::ProBuilder::Math::PointInPolygon(::Array<UnityEngine::Vector3>* positions, UnityEngine::ProBuilder::Bounds2D* polyBounds, ::Array<UnityEngine::ProBuilder::Edge>* edges, UnityEngine::Vector2 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "PointInPolygon", positions, polyBounds, edges, point));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.RectIntersectsLineSegment
bool UnityEngine::ProBuilder::Math::RectIntersectsLineSegment(UnityEngine::Rect rect, UnityEngine::Vector2 a, UnityEngine::Vector2 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "RectIntersectsLineSegment", rect, a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.RectIntersectsLineSegment
bool UnityEngine::ProBuilder::Math::RectIntersectsLineSegment(UnityEngine::Rect rect, UnityEngine::Vector3 a, UnityEngine::Vector3 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "RectIntersectsLineSegment", rect, a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.RayIntersectsTriangle
bool UnityEngine::ProBuilder::Math::RayIntersectsTriangle(UnityEngine::Ray InRay, UnityEngine::Vector3 InTriangleA, UnityEngine::Vector3 InTriangleB, UnityEngine::Vector3 InTriangleC, float& OutDistance, UnityEngine::Vector3& OutPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "RayIntersectsTriangle", InRay, InTriangleA, InTriangleB, InTriangleC, OutDistance, OutPoint));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.RayIntersectsTriangle2
bool UnityEngine::ProBuilder::Math::RayIntersectsTriangle2(UnityEngine::Vector3 origin, UnityEngine::Vector3 dir, UnityEngine::Vector3 vert0, UnityEngine::Vector3 vert1, UnityEngine::Vector3 vert2, float& distance, UnityEngine::Vector3& normal) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "RayIntersectsTriangle2", origin, dir, vert0, vert1, vert2, distance, normal));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Secant
float UnityEngine::ProBuilder::Math::Secant(float x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "Secant", x));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Normal
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Normal(UnityEngine::Vector3 p0, UnityEngine::Vector3 p1, UnityEngine::Vector3 p2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Normal", p0, p1, p2));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Normal
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Normal(System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Vertex*>* vertices, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Normal", vertices, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Normal
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Normal(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Face* face) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Normal", mesh, face));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Normal
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Normal(System::Collections::Generic::IList_1<UnityEngine::Vector3>* p) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Normal", p));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.NormalTangentBitangent
UnityEngine::ProBuilder::Normal UnityEngine::ProBuilder::Math::NormalTangentBitangent(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Face* face) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Normal>("UnityEngine.ProBuilder", "Math", "NormalTangentBitangent", mesh, face));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IsCardinalAxis
bool UnityEngine::ProBuilder::Math::IsCardinalAxis(UnityEngine::Vector3 v, float epsilon) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "IsCardinalAxis", v, epsilon));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.DivideBy
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::DivideBy(UnityEngine::Vector2 v, UnityEngine::Vector2 o) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "DivideBy", v, o));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.DivideBy
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::DivideBy(UnityEngine::Vector3 v, UnityEngine::Vector3 o) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "DivideBy", v, o));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.LargestValue
float UnityEngine::ProBuilder::Math::LargestValue(UnityEngine::Vector3 v) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "LargestValue", v));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.LargestValue
float UnityEngine::ProBuilder::Math::LargestValue(UnityEngine::Vector2 v) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "LargestValue", v));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SmallestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::SmallestVector2(::Array<UnityEngine::Vector2>* v) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "SmallestVector2", v));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SmallestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::SmallestVector2(::Array<UnityEngine::Vector2>* v, ::Array<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "SmallestVector2", v, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.SmallestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::SmallestVector2(::Array<UnityEngine::Vector2>* v, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "SmallestVector2", v, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.LargestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::LargestVector2(::Array<UnityEngine::Vector2>* v) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "LargestVector2", v));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.LargestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::LargestVector2(::Array<UnityEngine::Vector2>* v, ::Array<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "LargestVector2", v, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.LargestVector2
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::LargestVector2(::Array<UnityEngine::Vector2>* v, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "LargestVector2", v, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetBounds
UnityEngine::Bounds UnityEngine::ProBuilder::Math::GetBounds(::Array<UnityEngine::Vector3>* positions, System::Collections::Generic::IList_1<int>* indices) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Bounds>("UnityEngine.ProBuilder", "Math", "GetBounds", positions, indices));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetBounds
UnityEngine::Bounds UnityEngine::ProBuilder::Math::GetBounds(::Array<UnityEngine::Vector3>* positions, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Face*>* faces) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Bounds>("UnityEngine.ProBuilder", "Math", "GetBounds", positions, faces));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ComponentMin
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::ComponentMin(UnityEngine::Vector3 a, UnityEngine::Vector3 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "ComponentMin", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ComponentMax
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::ComponentMax(UnityEngine::Vector3 a, UnityEngine::Vector3 b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "ComponentMax", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.GetBounds
UnityEngine::Bounds UnityEngine::ProBuilder::Math::GetBounds(::Array<UnityEngine::Vector3>* positions, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Edge>* edges) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Bounds>("UnityEngine.ProBuilder", "Math", "GetBounds", positions, edges));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Average
UnityEngine::Vector2 UnityEngine::ProBuilder::Math::Average(System::Collections::Generic::IList_1<UnityEngine::Vector2>* array, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>("UnityEngine.ProBuilder", "Math", "Average", array, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Average
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Average(System::Collections::Generic::IList_1<UnityEngine::Vector3>* array, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Average", array, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Average
UnityEngine::Vector4 UnityEngine::ProBuilder::Math::Average(System::Collections::Generic::IList_1<UnityEngine::Vector4>* v, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector4>("UnityEngine.ProBuilder", "Math", "Average", v, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Average
UnityEngine::Color UnityEngine::ProBuilder::Math::Average(System::Collections::Generic::IList_1<UnityEngine::Color>* c, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("UnityEngine.ProBuilder", "Math", "Average", c, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Approx2
bool UnityEngine::ProBuilder::Math::Approx2(UnityEngine::Vector2 a, UnityEngine::Vector2 b, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "Approx2", a, b, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Approx3
bool UnityEngine::ProBuilder::Math::Approx3(UnityEngine::Vector3 a, UnityEngine::Vector3 b, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "Approx3", a, b, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Approx4
bool UnityEngine::ProBuilder::Math::Approx4(UnityEngine::Vector4 a, UnityEngine::Vector4 b, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "Approx4", a, b, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ApproxC
bool UnityEngine::ProBuilder::Math::ApproxC(UnityEngine::Color a, UnityEngine::Color b, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "ApproxC", a, b, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Approx
bool UnityEngine::ProBuilder::Math::Approx(float a, float b, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "Approx", a, b, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Wrap
int UnityEngine::ProBuilder::Math::Wrap(int value, int lowerBound, int upperBound) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.ProBuilder", "Math", "Wrap", value, lowerBound, upperBound));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Clamp
int UnityEngine::ProBuilder::Math::Clamp(int value, int lowerBound, int upperBound) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.ProBuilder", "Math", "Clamp", value, lowerBound, upperBound));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.ToSignedMask
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::ToSignedMask(UnityEngine::Vector3 vec, float delta) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "ToSignedMask", vec, delta));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Abs
UnityEngine::Vector3 UnityEngine::ProBuilder::Math::Abs(UnityEngine::Vector3 v) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Math", "Abs", v));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IntSum
int UnityEngine::ProBuilder::Math::IntSum(UnityEngine::Vector3 mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.ProBuilder", "Math", "IntSum", mask));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Cross
void UnityEngine::ProBuilder::Math::Cross(UnityEngine::Vector3 a, UnityEngine::Vector3 b, float& x, float& y, float& z) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Math", "Cross", a, b, x, y, z));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Cross
void UnityEngine::ProBuilder::Math::Cross(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3& res) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Math", "Cross", a, b, res));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Cross
void UnityEngine::ProBuilder::Math::Cross(float ax, float ay, float az, float bx, float by, float bz, float& x, float& y, float& z) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Math", "Cross", ax, ay, az, bx, by, bz, x, y, z));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Subtract
void UnityEngine::ProBuilder::Math::Subtract(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3& res) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Math", "Subtract", a, b, res));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Min
int UnityEngine::ProBuilder::Math::Min(int a, int b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.ProBuilder", "Math", "Min", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.Max
int UnityEngine::ProBuilder::Math::Max(int a, int b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("UnityEngine.ProBuilder", "Math", "Max", a, b));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IsNumber
bool UnityEngine::ProBuilder::Math::IsNumber(float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "IsNumber", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IsNumber
bool UnityEngine::ProBuilder::Math::IsNumber(UnityEngine::Vector2 value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "IsNumber", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IsNumber
bool UnityEngine::ProBuilder::Math::IsNumber(UnityEngine::Vector3 value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "IsNumber", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.IsNumber
bool UnityEngine::ProBuilder::Math::IsNumber(UnityEngine::Vector4 value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.ProBuilder", "Math", "IsNumber", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Math.MakeNonZero
float UnityEngine::ProBuilder::Math::MakeNonZero(float value, float min) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("UnityEngine.ProBuilder", "Math", "MakeNonZero", value, min));
}
