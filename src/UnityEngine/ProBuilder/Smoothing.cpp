// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Smoothing
#include "UnityEngine/ProBuilder/Smoothing.hpp"
// Including type: UnityEngine.ProBuilder.Smoothing/<>c
#include "UnityEngine/ProBuilder/Smoothing_--c.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine/ProBuilder/ProBuilderMesh.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.ProBuilder.Face
#include "UnityEngine/ProBuilder/Face.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.ProBuilder.WingedEdge
#include "UnityEngine/ProBuilder/WingedEdge.hpp"
// Including type: UnityEngine.ProBuilder.EdgeLookup
#include "UnityEngine/ProBuilder/EdgeLookup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 smoothingGroupNone
int UnityEngine::ProBuilder::Smoothing::_get_smoothingGroupNone() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_get_smoothingGroupNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ProBuilder", "Smoothing", "smoothingGroupNone"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 smoothingGroupNone
void UnityEngine::ProBuilder::Smoothing::_set_smoothingGroupNone(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_set_smoothingGroupNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Smoothing", "smoothingGroupNone", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 smoothRangeMin
int UnityEngine::ProBuilder::Smoothing::_get_smoothRangeMin() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_get_smoothRangeMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ProBuilder", "Smoothing", "smoothRangeMin"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 smoothRangeMin
void UnityEngine::ProBuilder::Smoothing::_set_smoothRangeMin(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_set_smoothRangeMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Smoothing", "smoothRangeMin", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 smoothRangeMax
int UnityEngine::ProBuilder::Smoothing::_get_smoothRangeMax() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_get_smoothRangeMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ProBuilder", "Smoothing", "smoothRangeMax"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 smoothRangeMax
void UnityEngine::ProBuilder::Smoothing::_set_smoothRangeMax(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_set_smoothRangeMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Smoothing", "smoothRangeMax", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 hardRangeMin
int UnityEngine::ProBuilder::Smoothing::_get_hardRangeMin() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_get_hardRangeMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ProBuilder", "Smoothing", "hardRangeMin"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 hardRangeMin
void UnityEngine::ProBuilder::Smoothing::_set_hardRangeMin(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_set_hardRangeMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Smoothing", "hardRangeMin", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 hardRangeMax
int UnityEngine::ProBuilder::Smoothing::_get_hardRangeMax() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_get_hardRangeMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ProBuilder", "Smoothing", "hardRangeMax"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 hardRangeMax
void UnityEngine::ProBuilder::Smoothing::_set_hardRangeMax(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("_set_hardRangeMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ProBuilder", "Smoothing", "hardRangeMax", value));
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.GetUnusedSmoothingGroup
int UnityEngine::ProBuilder::Smoothing::GetUnusedSmoothingGroup(UnityEngine::ProBuilder::ProBuilderMesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("GetUnusedSmoothingGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<int>(), "GetUnusedSmoothingGroup", {}, ::il2cpp_utils::ExtractTypes(mesh)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.GetNextUnusedSmoothingGroup
int UnityEngine::ProBuilder::Smoothing::GetNextUnusedSmoothingGroup(int start, System::Collections::Generic::HashSet_1<int>* used) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("GetNextUnusedSmoothingGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<int>(), "GetNextUnusedSmoothingGroup", {}, ::il2cpp_utils::ExtractTypes(start, used)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, used);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.IsSmooth
bool UnityEngine::ProBuilder::Smoothing::IsSmooth(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("IsSmooth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<bool>(), "IsSmooth", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, index);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.ApplySmoothingGroups
void UnityEngine::ProBuilder::Smoothing::ApplySmoothingGroups(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Face*>* faces, float angleThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("ApplySmoothingGroups");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<void>(), "ApplySmoothingGroups", {}, ::il2cpp_utils::ExtractTypes(mesh, faces, angleThreshold)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, faces, angleThreshold);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.ApplySmoothingGroups
void UnityEngine::ProBuilder::Smoothing::ApplySmoothingGroups(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IEnumerable_1<UnityEngine::ProBuilder::Face*>* faces, float angleThreshold, ::Array<UnityEngine::Vector3>* normals) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("ApplySmoothingGroups");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<void>(), "ApplySmoothingGroups", {}, ::il2cpp_utils::ExtractTypes(mesh, faces, angleThreshold, normals)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mesh, faces, angleThreshold, normals);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.FindSoftEdgesRecursive
bool UnityEngine::ProBuilder::Smoothing::FindSoftEdgesRecursive(::Array<UnityEngine::Vector3>* normals, UnityEngine::ProBuilder::WingedEdge* wing, float angleThreshold, System::Collections::Generic::HashSet_1<UnityEngine::ProBuilder::Face*>* processed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("FindSoftEdgesRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<bool>(), "FindSoftEdgesRecursive", {}, ::il2cpp_utils::ExtractTypes(normals, wing, angleThreshold, processed)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normals, wing, angleThreshold, processed);
}
// Autogenerated method: UnityEngine.ProBuilder.Smoothing.IsSoftEdge
bool UnityEngine::ProBuilder::Smoothing::IsSoftEdge(::Array<UnityEngine::Vector3>* normals, UnityEngine::ProBuilder::EdgeLookup left, UnityEngine::ProBuilder::EdgeLookup right, float threshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::ProBuilder").WithContext("Smoothing").WithContext("IsSoftEdge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.ProBuilder", "Smoothing", il2cpp_utils::NoArgClass<bool>(), "IsSoftEdge", {}, ::il2cpp_utils::ExtractTypes(normals, left, right, threshold)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normals, left, right, threshold);
}
