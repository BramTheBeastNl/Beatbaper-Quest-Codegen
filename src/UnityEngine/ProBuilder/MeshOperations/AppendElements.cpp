// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.MeshOperations.AppendElements
#include "UnityEngine\ProBuilder\MeshOperations\AppendElements.hpp"
// Including type: UnityEngine.ProBuilder.MeshOperations.AppendElements/<>c
#include "UnityEngine\ProBuilder\MeshOperations\AppendElements_--c.hpp"
// Including type: UnityEngine.ProBuilder.MeshOperations.AppendElements/<>c__DisplayClass14_0
#include "UnityEngine\ProBuilder\MeshOperations\AppendElements_--c__DisplayClass14_0.hpp"
// Including type: UnityEngine.ProBuilder.Face
#include "UnityEngine\ProBuilder\Face.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine\ProBuilder\ProBuilderMesh.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System\Collections\Generic\IList_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine\Color.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine\Vector2.hpp"
// Including type: UnityEngine.ProBuilder.ActionResult
#include "UnityEngine\ProBuilder\ActionResult.hpp"
// Including type: UnityEngine.ProBuilder.PolyShape
#include "UnityEngine\ProBuilder\PolyShape.hpp"
// Including type: UnityEngine.ProBuilder.FaceRebuildData
#include "UnityEngine\ProBuilder\FaceRebuildData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: UnityEngine.ProBuilder.Vertex
#include "UnityEngine\ProBuilder\Vertex.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.AppendFace
UnityEngine::ProBuilder::Face* UnityEngine::ProBuilder::MeshOperations::AppendElements::AppendFace(UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::Array<UnityEngine::Vector3>* positions, ::Array<UnityEngine::Color>* colors, ::Array<UnityEngine::Vector2>* uvs, UnityEngine::ProBuilder::Face* face, ::Array<int>* common) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Face*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "AppendFace", mesh, positions, colors, uvs, face, common));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.AppendFaces
::Array<UnityEngine::ProBuilder::Face*>* UnityEngine::ProBuilder::MeshOperations::AppendElements::AppendFaces(UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::Array<::Array<UnityEngine::Vector3>*>* positions, ::Array<::Array<UnityEngine::Color>*>* colors, ::Array<::Array<UnityEngine::Vector2>*>* uvs, ::Array<UnityEngine::ProBuilder::Face*>* faces, ::Array<::Array<int>*>* shared) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::ProBuilder::Face*>*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "AppendFaces", mesh, positions, colors, uvs, faces, shared));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.CreatePolygon
UnityEngine::ProBuilder::Face* UnityEngine::ProBuilder::MeshOperations::AppendElements::CreatePolygon(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<int>* indexes, bool unordered) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Face*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "CreatePolygon", mesh, indexes, unordered));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.CreateShapeFromPolygon
UnityEngine::ProBuilder::ActionResult* UnityEngine::ProBuilder::MeshOperations::AppendElements::CreateShapeFromPolygon(UnityEngine::ProBuilder::PolyShape* poly) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ActionResult*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "CreateShapeFromPolygon", poly));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.ClearAndRefreshMesh
void UnityEngine::ProBuilder::MeshOperations::AppendElements::ClearAndRefreshMesh(UnityEngine::ProBuilder::ProBuilderMesh* mesh) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "ClearAndRefreshMesh", mesh));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.CreateShapeFromPolygon
UnityEngine::ProBuilder::ActionResult* UnityEngine::ProBuilder::MeshOperations::AppendElements::CreateShapeFromPolygon(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, float extrude, bool flipNormals) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ActionResult*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "CreateShapeFromPolygon", mesh, points, extrude, flipNormals));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.CreateShapeFromPolygon
UnityEngine::ProBuilder::ActionResult* UnityEngine::ProBuilder::MeshOperations::AppendElements::CreateShapeFromPolygon(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, float extrude, bool flipNormals, UnityEngine::Vector3 cameraLookAt, System::Collections::Generic::IList_1<System::Collections::Generic::IList_1<UnityEngine::Vector3>*>* holePoints) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ActionResult*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "CreateShapeFromPolygon", mesh, points, extrude, flipNormals, cameraLookAt, holePoints));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.CreateShapeFromPolygon
UnityEngine::ProBuilder::ActionResult* UnityEngine::ProBuilder::MeshOperations::AppendElements::CreateShapeFromPolygon(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, float extrude, bool flipNormals, System::Collections::Generic::IList_1<System::Collections::Generic::IList_1<UnityEngine::Vector3>*>* holePoints) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ActionResult*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "CreateShapeFromPolygon", mesh, points, extrude, flipNormals, holePoints));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.FaceWithVertices
UnityEngine::ProBuilder::FaceRebuildData* UnityEngine::ProBuilder::MeshOperations::AppendElements::FaceWithVertices(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Vertex*>* vertices, bool unordered) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::FaceRebuildData*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "FaceWithVertices", vertices, unordered));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.TentCapWithVertices
System::Collections::Generic::List_1<UnityEngine::ProBuilder::FaceRebuildData*>* UnityEngine::ProBuilder::MeshOperations::AppendElements::TentCapWithVertices(System::Collections::Generic::List_1<UnityEngine::ProBuilder::Vertex*>* path) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::ProBuilder::FaceRebuildData*>*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "TentCapWithVertices", path));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.DuplicateAndFlip
void UnityEngine::ProBuilder::MeshOperations::AppendElements::DuplicateAndFlip(UnityEngine::ProBuilder::ProBuilderMesh* mesh, ::Array<UnityEngine::ProBuilder::Face*>* faces) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "DuplicateAndFlip", mesh, faces));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.Bridge
UnityEngine::ProBuilder::Face* UnityEngine::ProBuilder::MeshOperations::AppendElements::Bridge(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge a, UnityEngine::ProBuilder::Edge b, bool allowNonManifoldGeometry) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Face*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "Bridge", mesh, a, b, allowNonManifoldGeometry));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.AppendVerticesToFace
UnityEngine::ProBuilder::Face* UnityEngine::ProBuilder::MeshOperations::AppendElements::AppendVerticesToFace(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Face* face, ::Array<UnityEngine::Vector3>* points) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::Face*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "AppendVerticesToFace", mesh, face, points));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.AppendVerticesToEdge
System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge>* UnityEngine::ProBuilder::MeshOperations::AppendElements::AppendVerticesToEdge(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Edge edge, int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge>*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "AppendVerticesToEdge", mesh, edge, count));
}
// Autogenerated method: UnityEngine.ProBuilder.MeshOperations.AppendElements.AppendVerticesToEdge
System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge>* UnityEngine::ProBuilder::MeshOperations::AppendElements::AppendVerticesToEdge(UnityEngine::ProBuilder::ProBuilderMesh* mesh, System::Collections::Generic::IList_1<UnityEngine::ProBuilder::Edge>* edges, int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<UnityEngine::ProBuilder::Edge>*>("UnityEngine.ProBuilder.MeshOperations", "AppendElements", "AppendVerticesToEdge", mesh, edges, count));
}
