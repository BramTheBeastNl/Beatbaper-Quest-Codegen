// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ProBuilder.Projection
#include "UnityEngine\ProBuilder\Projection.hpp"
// Including type: UnityEngine.ProBuilder.Projection/<>c
#include "UnityEngine\ProBuilder\Projection_--c.hpp"
// Including type: UnityEngine.ProBuilder.ProBuilderMesh
#include "UnityEngine\ProBuilder\ProBuilderMesh.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System\Collections\Generic\IList_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: UnityEngine.ProBuilder.AutoUnwrapSettings
#include "UnityEngine\ProBuilder\AutoUnwrapSettings.hpp"
// Including type: UnityEngine.ProBuilder.Face
#include "UnityEngine\ProBuilder\Face.hpp"
// Including type: UnityEngine.ProBuilder.SortMethod
#include "UnityEngine\ProBuilder\SortMethod.hpp"
// Including type: UnityEngine.ProBuilder.ProjectionAxis
#include "UnityEngine\ProBuilder\ProjectionAxis.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine\Plane.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ProBuilder.Projection.PlanarProject
::Array<UnityEngine::Vector2>* UnityEngine::ProBuilder::Projection::PlanarProject(System::Collections::Generic::IList_1<UnityEngine::Vector3>* positions, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>("UnityEngine.ProBuilder", "Projection", "PlanarProject", positions, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.PlanarProject
::Array<UnityEngine::Vector2>* UnityEngine::ProBuilder::Projection::PlanarProject(System::Collections::Generic::IList_1<UnityEngine::Vector3>* positions, System::Collections::Generic::IList_1<int>* indexes, UnityEngine::Vector3 direction) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>("UnityEngine.ProBuilder", "Projection", "PlanarProject", positions, indexes, direction));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.PlanarProject
void UnityEngine::ProBuilder::Projection::PlanarProject(System::Collections::Generic::IList_1<UnityEngine::Vector3>* positions, System::Collections::Generic::IList_1<int>* indexes, UnityEngine::Vector3 direction, System::Collections::Generic::List_1<UnityEngine::Vector2>* results) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Projection", "PlanarProject", positions, indexes, direction, results));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.PlanarProject
void UnityEngine::ProBuilder::Projection::PlanarProject(UnityEngine::ProBuilder::ProBuilderMesh* mesh, int textureGroup, UnityEngine::ProBuilder::AutoUnwrapSettings unwrapSettings) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Projection", "PlanarProject", mesh, textureGroup, unwrapSettings));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.PlanarProject
void UnityEngine::ProBuilder::Projection::PlanarProject(UnityEngine::ProBuilder::ProBuilderMesh* mesh, UnityEngine::ProBuilder::Face* face, UnityEngine::Vector3 projection) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.ProBuilder", "Projection", "PlanarProject", mesh, face, projection));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.SphericalProject
::Array<UnityEngine::Vector2>* UnityEngine::ProBuilder::Projection::SphericalProject(System::Collections::Generic::IList_1<UnityEngine::Vector3>* vertices, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Vector2>*>("UnityEngine.ProBuilder", "Projection", "SphericalProject", vertices, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.Sort
System::Collections::Generic::IList_1<UnityEngine::Vector2>* UnityEngine::ProBuilder::Projection::Sort(System::Collections::Generic::IList_1<UnityEngine::Vector2>* verts, UnityEngine::ProBuilder::SortMethod method) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IList_1<UnityEngine::Vector2>*>("UnityEngine.ProBuilder", "Projection", "Sort", verts, method));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.GetTangentToAxis
UnityEngine::Vector3 UnityEngine::ProBuilder::Projection::GetTangentToAxis(UnityEngine::ProBuilder::ProjectionAxis axis) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Projection", "GetTangentToAxis", axis));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.ProjectionAxisToVector
UnityEngine::Vector3 UnityEngine::ProBuilder::Projection::ProjectionAxisToVector(UnityEngine::ProBuilder::ProjectionAxis axis) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>("UnityEngine.ProBuilder", "Projection", "ProjectionAxisToVector", axis));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.VectorToProjectionAxis
UnityEngine::ProBuilder::ProjectionAxis UnityEngine::ProBuilder::Projection::VectorToProjectionAxis(UnityEngine::Vector3 direction) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::ProBuilder::ProjectionAxis>("UnityEngine.ProBuilder", "Projection", "VectorToProjectionAxis", direction));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.FindBestPlane
UnityEngine::Plane UnityEngine::ProBuilder::Projection::FindBestPlane(System::Collections::Generic::IList_1<UnityEngine::Vector3>* points, System::Collections::Generic::IList_1<int>* indexes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Plane>("UnityEngine.ProBuilder", "Projection", "FindBestPlane", points, indexes));
}
// Autogenerated method: UnityEngine.ProBuilder.Projection.FindBestPlane
UnityEngine::Plane UnityEngine::ProBuilder::Projection::FindBestPlane(UnityEngine::ProBuilder::ProBuilderMesh* mesh, int textureGroup) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Plane>("UnityEngine.ProBuilder", "Projection", "FindBestPlane", mesh, textureGroup));
}
