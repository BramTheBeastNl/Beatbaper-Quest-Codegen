// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Bounds..ctor
UnityEngine::Bounds* UnityEngine::Bounds::New_ctor(UnityEngine::Vector3 center, UnityEngine::Vector3 size) {
  return (Bounds*)THROW_UNLESS(il2cpp_utils::New("UnityEngine", "Bounds", center, size));
}
// Autogenerated method: UnityEngine.Bounds.get_center
UnityEngine::Vector3 UnityEngine::Bounds::get_center() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(*this, "get_center"));
}
// Autogenerated method: UnityEngine.Bounds.set_center
void UnityEngine::Bounds::set_center(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_center", value));
}
// Autogenerated method: UnityEngine.Bounds.get_size
UnityEngine::Vector3 UnityEngine::Bounds::get_size() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(*this, "get_size"));
}
// Autogenerated method: UnityEngine.Bounds.set_size
void UnityEngine::Bounds::set_size(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_size", value));
}
// Autogenerated method: UnityEngine.Bounds.get_extents
UnityEngine::Vector3 UnityEngine::Bounds::get_extents() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(*this, "get_extents"));
}
// Autogenerated method: UnityEngine.Bounds.set_extents
void UnityEngine::Bounds::set_extents(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "set_extents", value));
}
// Autogenerated method: UnityEngine.Bounds.get_min
UnityEngine::Vector3 UnityEngine::Bounds::get_min() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(*this, "get_min"));
}
// Autogenerated method: UnityEngine.Bounds.get_max
UnityEngine::Vector3 UnityEngine::Bounds::get_max() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(*this, "get_max"));
}
// Autogenerated method: UnityEngine.Bounds.SetMinMax
void UnityEngine::Bounds::SetMinMax(UnityEngine::Vector3 min, UnityEngine::Vector3 max) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetMinMax", min, max));
}
// Autogenerated method: UnityEngine.Bounds.Encapsulate
void UnityEngine::Bounds::Encapsulate(UnityEngine::Vector3 point) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Encapsulate", point));
}
// Autogenerated method: UnityEngine.Bounds.IntersectRay
bool UnityEngine::Bounds::IntersectRay(UnityEngine::Ray ray, float& distance) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "IntersectRay", ray, distance));
}
// Autogenerated method: UnityEngine.Bounds.Contains
bool UnityEngine::Bounds::Contains(UnityEngine::Vector3 point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Contains", point));
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB
bool UnityEngine::Bounds::IntersectRayAABB(UnityEngine::Ray ray, UnityEngine::Bounds bounds, float& dist) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Bounds", "IntersectRayAABB", ray, bounds, dist));
}
// Autogenerated method: UnityEngine.Bounds.Contains_Injected
bool UnityEngine::Bounds::Contains_Injected(UnityEngine::Bounds& _unity_self, UnityEngine::Vector3& point) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Bounds", "Contains_Injected", _unity_self, point));
}
// Autogenerated method: UnityEngine.Bounds.IntersectRayAABB_Injected
bool UnityEngine::Bounds::IntersectRayAABB_Injected(UnityEngine::Ray& ray, UnityEngine::Bounds& bounds, float& dist) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Bounds", "IntersectRayAABB_Injected", ray, bounds, dist));
}
// Autogenerated method: UnityEngine.Bounds.GetHashCode
int UnityEngine::Bounds::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(::CsObject* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.Bounds.Equals
bool UnityEngine::Bounds::Equals(UnityEngine::Bounds other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: UnityEngine.Bounds.ToString
::CsString* UnityEngine::Bounds::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(*this, "ToString"));
}
// Autogenerated method: UnityEngine.Bounds.op_Equality
bool UnityEngine::operator ==(const UnityEngine::Bounds& lhs, const UnityEngine::Bounds& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Bounds", "op_Equality", lhs, rhs));
}
// Autogenerated method: UnityEngine.Bounds.op_Inequality
bool UnityEngine::operator !=(const UnityEngine::Bounds& lhs, const UnityEngine::Bounds& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine", "Bounds", "op_Inequality", lhs, rhs));
}
