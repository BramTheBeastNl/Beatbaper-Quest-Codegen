// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Audio.AudioPlayableOutput
#include "UnityEngine/Audio/AudioPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.Create
UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::Create(UnityEngine::Playables::PlayableGraph graph, ::Il2CppString* name, UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, name, target)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.get_Null
UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("get_Null");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.op_Explicit
UnityEngine::Audio::AudioPlayableOutput::AudioPlayableOutput(UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(output)));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetTarget
void UnityEngine::Audio::AudioPlayableOutput::SetTarget(UnityEngine::AudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("SetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::SetEvaluateOnSeek(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("SetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetTarget
void UnityEngine::Audio::AudioPlayableOutput::InternalSetTarget(UnityEngine::Playables::PlayableOutputHandle& output, UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(output, target)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::InternalSetEvaluateOnSeek(UnityEngine::Playables::PlayableOutputHandle& output, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("InternalSetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(output, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.GetHandle
UnityEngine::Playables::PlayableOutputHandle UnityEngine::Audio::AudioPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::Audio").WithContext("AudioPlayableOutput").WithContext("GetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableOutputHandle, false>(*this, ___internal__method);
}
