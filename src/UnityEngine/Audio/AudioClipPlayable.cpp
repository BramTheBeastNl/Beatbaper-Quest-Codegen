// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioClipPlayable
#include "UnityEngine/Audio/AudioClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Create
UnityEngine::Audio::AudioClipPlayable UnityEngine::Audio::AudioClipPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AudioClip* clip, bool looping) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Audio::AudioClipPlayable>("UnityEngine.Audio", "AudioClipPlayable", "Create", graph, clip, looping));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AudioClip* clip, bool looping) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::PlayableHandle>("UnityEngine.Audio", "AudioClipPlayable", "CreateHandle", graph, clip, looping));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable..ctor
UnityEngine::Audio::AudioClipPlayable* UnityEngine::Audio::AudioClipPlayable::New_ctor(UnityEngine::Playables::PlayableHandle handle) {
  return (AudioClipPlayable*)THROW_UNLESS(il2cpp_utils::New("UnityEngine.Audio", "AudioClipPlayable", handle));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolume
void UnityEngine::Audio::AudioClipPlayable::SetVolume(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetVolume", value));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPan
void UnityEngine::Audio::AudioClipPlayable::SetStereoPan(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetStereoPan", value));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlend
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlend(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "SetSpatialBlend", value));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Seek
void UnityEngine::Audio::AudioClipPlayable::Seek(double startTime, double startDelay, double duration) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Seek", startTime, startDelay, duration));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolumeInternal
void UnityEngine::Audio::AudioClipPlayable::SetVolumeInternal(UnityEngine::Playables::PlayableHandle& hdl, float volume) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Audio", "AudioClipPlayable", "SetVolumeInternal", hdl, volume));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPanInternal
void UnityEngine::Audio::AudioClipPlayable::SetStereoPanInternal(UnityEngine::Playables::PlayableHandle& hdl, float stereoPan) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStereoPanInternal", hdl, stereoPan));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlendInternal
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlendInternal(UnityEngine::Playables::PlayableHandle& hdl, float spatialBlend) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Audio", "AudioClipPlayable", "SetSpatialBlendInternal", hdl, spatialBlend));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStartDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetStartDelayInternal(UnityEngine::Playables::PlayableHandle& hdl, double delay) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStartDelayInternal", hdl, delay));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetPauseDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetPauseDelayInternal(UnityEngine::Playables::PlayableHandle& hdl, double delay) {
  THROW_UNLESS(il2cpp_utils::RunMethod("UnityEngine.Audio", "AudioClipPlayable", "SetPauseDelayInternal", hdl, delay));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.InternalCreateAudioClipPlayable
bool UnityEngine::Audio::AudioClipPlayable::InternalCreateAudioClipPlayable(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::AudioClip* clip, bool looping, UnityEngine::Playables::PlayableHandle& handle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("UnityEngine.Audio", "AudioClipPlayable", "InternalCreateAudioClipPlayable", graph, clip, looping, handle));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::GetHandle() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Playables::PlayableHandle>(*this, "GetHandle"));
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Equals
bool UnityEngine::Audio::AudioClipPlayable::Equals(UnityEngine::Audio::AudioClipPlayable other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
