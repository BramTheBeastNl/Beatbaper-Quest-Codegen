// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody.set_velocity
void UnityEngine::Rigidbody::set_velocity(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_velocity", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity
void UnityEngine::Rigidbody::set_angularVelocity(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_angularVelocity", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_mass
void UnityEngine::Rigidbody::set_mass(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_mass", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_useGravity
void UnityEngine::Rigidbody::set_useGravity(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_useGravity", value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_isKinematic
bool UnityEngine::Rigidbody::get_isKinematic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isKinematic"));
}
// Autogenerated method: UnityEngine.Rigidbody.set_isKinematic
void UnityEngine::Rigidbody::set_isKinematic(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_isKinematic", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_collisionDetectionMode
void UnityEngine::Rigidbody::set_collisionDetectionMode(UnityEngine::CollisionDetectionMode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_collisionDetectionMode", value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass
UnityEngine::Vector3 UnityEngine::Rigidbody::get_worldCenterOfMass() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_worldCenterOfMass"));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position
UnityEngine::Vector3 UnityEngine::Rigidbody::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_position"));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position
void UnityEngine::Rigidbody::set_position(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation
void UnityEngine::Rigidbody::set_rotation(UnityEngine::Quaternion value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rotation", value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxAngularVelocity
float UnityEngine::Rigidbody::get_maxAngularVelocity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_maxAngularVelocity"));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition
void UnityEngine::Rigidbody::MovePosition(UnityEngine::Vector3 position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MovePosition", position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation
void UnityEngine::Rigidbody::MoveRotation(UnityEngine::Quaternion rot) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MoveRotation", rot));
}
// Autogenerated method: UnityEngine.Rigidbody.WakeUp
void UnityEngine::Rigidbody::WakeUp() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "WakeUp"));
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(UnityEngine::Vector3 force, UnityEngine::ForceMode mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddForce", force, mode));
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque
void UnityEngine::Rigidbody::AddTorque(UnityEngine::Vector3 torque, UnityEngine::ForceMode mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddTorque", torque, mode));
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity_Injected
void UnityEngine::Rigidbody::set_velocity_Injected(UnityEngine::Vector3& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_velocity_Injected", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity_Injected
void UnityEngine::Rigidbody::set_angularVelocity_Injected(UnityEngine::Vector3& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_angularVelocity_Injected", value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass_Injected
void UnityEngine::Rigidbody::get_worldCenterOfMass_Injected(UnityEngine::Vector3& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "get_worldCenterOfMass_Injected", ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position_Injected
void UnityEngine::Rigidbody::get_position_Injected(UnityEngine::Vector3& ret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "get_position_Injected", ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position_Injected
void UnityEngine::Rigidbody::set_position_Injected(UnityEngine::Vector3& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_position_Injected", value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation_Injected
void UnityEngine::Rigidbody::set_rotation_Injected(UnityEngine::Quaternion& value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rotation_Injected", value));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition_Injected
void UnityEngine::Rigidbody::MovePosition_Injected(UnityEngine::Vector3& position) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MovePosition_Injected", position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation_Injected
void UnityEngine::Rigidbody::MoveRotation_Injected(UnityEngine::Quaternion& rot) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MoveRotation_Injected", rot));
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce_Injected
void UnityEngine::Rigidbody::AddForce_Injected(UnityEngine::Vector3& force, UnityEngine::ForceMode mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddForce_Injected", force, mode));
}
// Autogenerated method: UnityEngine.Rigidbody.AddTorque_Injected
void UnityEngine::Rigidbody::AddTorque_Injected(UnityEngine::Vector3& torque, UnityEngine::ForceMode mode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddTorque_Injected", torque, mode));
}
// Autogenerated method: UnityEngine.Rigidbody..ctor
UnityEngine::Rigidbody* UnityEngine::Rigidbody::New_ctor() {
  return (Rigidbody*)THROW_UNLESS(il2cpp_utils::New("UnityEngine", "Rigidbody"));
}
