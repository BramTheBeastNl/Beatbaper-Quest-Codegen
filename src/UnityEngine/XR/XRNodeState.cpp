// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRNodeState
#include "UnityEngine/XR/XRNodeState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.XRNodeState.set_uniqueID
void UnityEngine::XR::XRNodeState::set_uniqueID(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("set_uniqueID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_uniqueID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.get_nodeType
UnityEngine::XR::XRNode UnityEngine::XR::XRNodeState::get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("get_nodeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_nodeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::XRNode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_nodeType
void UnityEngine::XR::XRNodeState::set_nodeType(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("set_nodeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_nodeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.set_tracked
void UnityEngine::XR::XRNodeState::set_tracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("set_tracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_tracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetPosition
bool UnityEngine::XR::XRNodeState::TryGetPosition(UnityEngine::Vector3& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetRotation
bool UnityEngine::XR::XRNodeState::TryGetRotation(UnityEngine::Quaternion& rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rotation)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetVelocity
bool UnityEngine::XR::XRNodeState::TryGetVelocity(UnityEngine::Vector3& velocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(velocity)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, velocity);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularVelocity
bool UnityEngine::XR::XRNodeState::TryGetAngularVelocity(UnityEngine::Vector3& angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angularVelocity)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, angularVelocity);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAcceleration(UnityEngine::Vector3& acceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(acceleration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, acceleration);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGetAngularAcceleration
bool UnityEngine::XR::XRNodeState::TryGetAngularAcceleration(UnityEngine::Vector3& angularAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGetAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGetAngularAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angularAcceleration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, angularAcceleration);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(UnityEngine::Vector3 inValue, UnityEngine::XR::AvailableTrackingData availabilityFlag, UnityEngine::Vector3& outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inValue, availabilityFlag, outValue)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inValue, availabilityFlag, outValue);
}
// Autogenerated method: UnityEngine.XR.XRNodeState.TryGet
bool UnityEngine::XR::XRNodeState::TryGet(UnityEngine::Quaternion inValue, UnityEngine::XR::AvailableTrackingData availabilityFlag, UnityEngine::Quaternion& outValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("UnityEngine::XR").WithContext("XRNodeState").WithContext("TryGet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "TryGet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inValue, availabilityFlag, outValue)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, inValue, availabilityFlag, outValue);
}
