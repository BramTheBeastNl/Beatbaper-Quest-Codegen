// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel
#include "GlobalNamespace/TestBeatmapDataAssetFileModel.hpp"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAssetsDir
::StringW GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TestBeatmapDataAssetFileModel", "kAssetsDir"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAssetsDir
void GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestBeatmapDataAssetFileModel", "kAssetsDir", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelDataAssetDownloadUpdate> levelDataAssetDownloadUpdateEvent
::System::Action_1<::GlobalNamespace::LevelDataAssetDownloadUpdate>*& GlobalNamespace::TestBeatmapDataAssetFileModel::dyn_levelDataAssetDownloadUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::dyn_levelDataAssetDownloadUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDataAssetDownloadUpdateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LevelDataAssetDownloadUpdate>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(::System::Action_1<::GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(::System::Action_1<::GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<GetAssetBundleFileResult> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::GetAssetBundleFileResult>& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestBeatmapDataAssetFileModel <>4__this
::GlobalNamespace::TestBeatmapDataAssetFileModel*& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestBeatmapDataAssetFileModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
::System::Threading::CancellationToken& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <path>5__2
::StringW& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$path$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$path$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<path>5__2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <i>5__3
uint& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$i$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$i$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<GetAssetBundleFileResult> <>u__2
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::GetAssetBundleFileResult>& GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::GetAssetBundleFileResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PerceivedLoudnessPerLevelModel
#include "GlobalNamespace/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PerceivedLoudnessPerLevelSO
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultLoudness
float GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kDefaultLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kDefaultLoudness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PerceivedLoudnessPerLevelModel", "kDefaultLoudness"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultLoudness
void GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kDefaultLoudness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kDefaultLoudness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerceivedLoudnessPerLevelModel", "kDefaultLoudness", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPerceivedLoudnessTarget
float GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessTarget"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPerceivedLoudnessTarget
void GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessTarget(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessTarget", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPerceivedLoudnessToMaxSfxLevelDifference
float GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessToMaxSfxLevelDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_get_kPerceivedLoudnessToMaxSfxLevelDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessToMaxSfxLevelDifference"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPerceivedLoudnessToMaxSfxLevelDifference
void GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessToMaxSfxLevelDifference(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::_set_kPerceivedLoudnessToMaxSfxLevelDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerceivedLoudnessPerLevelModel", "kPerceivedLoudnessToMaxSfxLevelDifference", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Single> _loudnessLevelPerLevelId
::System::Collections::Generic::Dictionary_2<::StringW, float>*& GlobalNamespace::PerceivedLoudnessPerLevelModel::dyn__loudnessLevelPerLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::dyn__loudnessLevelPerLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loudnessLevelPerLevelId"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PerceivedLoudnessPerLevelModel.ContainsLevelId
bool GlobalNamespace::PerceivedLoudnessPerLevelModel::ContainsLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::ContainsLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: PerceivedLoudnessPerLevelModel.GetLoudnessCorrectionByLevelId
float GlobalNamespace::PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::GetLoudnessCorrectionByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoudnessCorrectionByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated method: PerceivedLoudnessPerLevelModel.GetMaxSfxVolumeByLevelId
float GlobalNamespace::PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::GetMaxSfxVolumeByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxSfxVolumeByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated method: PerceivedLoudnessPerLevelModel.GetLoudnessByLevelId
float GlobalNamespace::PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PerceivedLoudnessPerLevelModel::GetLoudnessByLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLoudnessByLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_collectionName
::StringW GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_coverImage
::UnityEngine::Sprite* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_smallCoverImage
::UnityEngine::Sprite* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_smallCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_smallCoverImage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smallCoverImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_beatmapLevelCollection
::GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeSfxVolumePerLevelModel
#include "GlobalNamespace/RelativeSfxVolumePerLevelModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: RelativeSfxVolumePerLevelSO
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultSfxVolume
float GlobalNamespace::RelativeSfxVolumePerLevelModel::_get_kDefaultSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelModel::_get_kDefaultSfxVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RelativeSfxVolumePerLevelModel", "kDefaultSfxVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultSfxVolume
void GlobalNamespace::RelativeSfxVolumePerLevelModel::_set_kDefaultSfxVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelModel::_set_kDefaultSfxVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RelativeSfxVolumePerLevelModel", "kDefaultSfxVolume", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Single> _relativeSfxVolumePerLevelId
::System::Collections::Generic::Dictionary_2<::StringW, float>*& GlobalNamespace::RelativeSfxVolumePerLevelModel::dyn__relativeSfxVolumePerLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelModel::dyn__relativeSfxVolumePerLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevelId"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RelativeSfxVolumePerLevelModel.GetRelativeSfxVolume
float GlobalNamespace::RelativeSfxVolumePerLevelModel::GetRelativeSfxVolume(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelModel::GetRelativeSfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativeSfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, levelId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "StandardLevelInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultBeatmapCharacteristicName
::StringW GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultBeatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float& GlobalNamespace::StandardLevelInfoSaveData::dyn__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _coverImageFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _allDirectionsEnvironmentName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::dyn__allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__allDirectionsEnvironmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allDirectionsEnvironmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData/DifficultyBeatmapSet[] _difficultyBeatmapSets
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>& GlobalNamespace::StandardLevelInfoSaveData::dyn__difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::dyn__difficultyBeatmapSets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmapSets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData.get_version
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_songName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songSubName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songAuthorName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_levelAuthorName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_coverImageFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_environmentName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_allDirectionsEnvironmentName
::StringW GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_difficultyBeatmapSets
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*> GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename(::StringW songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songFilename)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData.SerializeToJSONString
::StringW GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.DeserializeFromJSONString
::GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapCharacteristicName
::StringW& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::dyn__beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::dyn__beatmapCharacteristicName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData/DifficultyBeatmap[] _difficultyBeatmaps
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_beatmapCharacteristicName
::StringW GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_difficultyBeatmaps
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*> GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _difficulty
::StringW& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
int& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
float& GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::dyn__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficulty
::StringW GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_beatmapFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _version
::StringW& GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData/VersionCheck.get_version
::StringW GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData_V100
#include "GlobalNamespace/StandardLevelInfoSaveData_V100.hpp"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "StandardLevelInfoSaveData_V100", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData_V100", "kCurrentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songName
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songSubName
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSubName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songAuthorName
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAuthorName
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__levelAuthorName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAuthorName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatsPerMinute
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTimeOffset
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shuffle
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__shuffle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shuffle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shufflePeriod
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__shufflePeriod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shufflePeriod"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewStartTime
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__previewStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _previewDuration
float& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__previewDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _songFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__songFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _coverImageFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__coverImageFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImageFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentName
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelInfoSaveData_V100/DifficultyBeatmap[] _difficultyBeatmaps
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>& GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_version
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songName
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songSubName
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songAuthorName
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_levelAuthorName
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_coverImageFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_environmentName
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_difficultyBeatmaps
::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*> GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename(::StringW songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songFilename)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SerializeToJSONString
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.DeserializeFromJSONString
::GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData_V100", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _difficulty
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _difficultyRank
int& GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__difficultyRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyRank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _beatmapFilename
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__beatmapFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float& GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _noteJumpStartBeatOffset
int& GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::dyn__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficulty
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_beatmapFilename
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _version
::StringW& GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/VersionCheck.get_version
::StringW GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO/Preset[] _presets
::ArrayW<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>& GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::dyn__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::dyn__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_presets
::ArrayW<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*> GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_namedPresets
::ArrayW<::GlobalNamespace::NamedPreset*> GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedPreset*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomPrePassEffectSO bloomPrePassEffect
::GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::dyn_bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset::dyn_bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO/Preset[] _presets
::ArrayW<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>& GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::dyn__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::dyn__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_presets
::ArrayW<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*> GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_namedPresets
::ArrayW<::GlobalNamespace::NamedPreset*> GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedPreset*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MainEffectSO mainEffect
::GlobalNamespace::MainEffectSO*& GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::dyn_mainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset::dyn_mainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsBestGraphicsValues
#include "GlobalNamespace/MainSettingsBestGraphicsValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSettingsBestGraphicsValues.ApplyValues
void GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues(::GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainSettingsBestGraphicsValues", "ApplyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainSettingsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsDefaultValues
#include "GlobalNamespace/MainSettingsDefaultValues.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerPositionZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerPositionZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultControllerRotationZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultControllerRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultControllerRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultControllerRotationZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultControllerRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultControllerRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionWidth
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionWidth
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionHeight
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionHeight
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B28A8
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultVrResolutionScale
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultVrResolutionScale
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultAudioLatency
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultAudioLatency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultAudioLatency
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAudioLatency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxShockwaveParticles
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxShockwaveParticles"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxShockwaveParticles
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxShockwaveParticles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
void GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kSystemLanguageSerializedName
::StringW GlobalNamespace::MainSettingsDefaultValues::_get_kSystemLanguageSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kSystemLanguageSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainSettingsDefaultValues", "kSystemLanguageSerializedName"));
}
// Autogenerated static field setter
// Set static field: static public System.String kSystemLanguageSerializedName
void GlobalNamespace::MainSettingsDefaultValues::_set_kSystemLanguageSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kSystemLanguageSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kSystemLanguageSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel", value));
}
// Autogenerated method: MainSettingsDefaultValues..cctor
void GlobalNamespace::MainSettingsDefaultValues::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainSettingsDefaultValues", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MainSettingsDefaultValues.SetFixedDefaultValues
void GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues(::GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MainSettingsDefaultValues", "SetFixedDefaultValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainSettingsModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultPlayerHeight
float GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kDefaultPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultPlayerHeight
void GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kDefaultPlayerHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kHeadPosToPlayerHeightOffset
float GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kHeadPosToPlayerHeightOffset
void GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFileName
::StringW GlobalNamespace::MainSettingsModelSO::_get_kFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainSettingsModelSO", "kFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFileName
void GlobalNamespace::MainSettingsModelSO::_set_kFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::StringW GlobalNamespace::MainSettingsModelSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainSettingsModelSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::MainSettingsModelSO::_set_kTempFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::StringW GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainSettingsModelSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kBackupFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MainSettingsModelSO", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersPositionOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersPositionOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersPositionOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersPositionOffsetLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersRotationOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersRotationOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersRotationOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersRotationOffsetLimit", value));
}
// Autogenerated instance field getter
// Get instance field: public FloatSO vrResolutionScale
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_vrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO menuVRResolutionScaleMultiplier
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_menuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO useFixedFoveatedRenderingDuringGameplay
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_useFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector2IntSO windowResolution
::GlobalNamespace::Vector2IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_windowResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_windowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector2IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector2IntSO editorWindowResolution
::GlobalNamespace::Vector2IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_editorWindowResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_editorWindowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorWindowResolution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector2IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO fullscreen
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_fullscreen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullscreen"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO antiAliasingLevel
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_antiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO volume
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO ambientVolumeScale
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO controllersRumbleEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_controllersRumbleEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO roomCenter
::GlobalNamespace::Vector3SO*& GlobalNamespace::MainSettingsModelSO::dyn_roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO roomRotation
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO controllerPosition
::GlobalNamespace::Vector3SO*& GlobalNamespace::MainSettingsModelSO::dyn_controllerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_controllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO controllerRotation
::GlobalNamespace::Vector3SO*& GlobalNamespace::MainSettingsModelSO::dyn_controllerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_controllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO mirrorGraphicsSettings
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO mainEffectGraphicsSettings
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_mainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO bloomPrePassGraphicsSettings
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_bloomPrePassGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_bloomPrePassGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassGraphicsSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smokeGraphicsSettings
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_smokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO enableAlphaFeatures
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_enableAlphaFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO pauseButtonPressDurationLevel
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_pauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO burnMarkTrailsEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_burnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO screenDisplacementEffectsEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_screenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smoothCameraEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraFieldOfView
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO smoothCameraThirdPersonPosition
::GlobalNamespace::Vector3SO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3SO smoothCameraThirdPersonEulerAngles
::GlobalNamespace::Vector3SO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAngles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO smoothCameraThirdPersonEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraRotationSmooth
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraRotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO smoothCameraPositionSmooth
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraPositionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO overrideAudioLatency
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_overrideAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FloatSO audioLatency
::GlobalNamespace::FloatSO*& GlobalNamespace::MainSettingsModelSO::dyn_audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO maxShockwaveParticles
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_maxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntSO maxNumberOfCutSoundEffects
::GlobalNamespace::IntSO*& GlobalNamespace::MainSettingsModelSO::dyn_maxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO onlineServicesEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_onlineServicesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO openVrThreadedHaptics
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_openVrThreadedHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LanguageSO language
::GlobalNamespace::LanguageSO*& GlobalNamespace::MainSettingsModelSO::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LanguageSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO useCustomServerEnvironment
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_useCustomServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO forceGameLiftServerEnvironment
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_forceGameLiftServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_forceGameLiftServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceGameLiftServerEnvironment"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StringSO customServerHostName
::GlobalNamespace::StringSO*& GlobalNamespace::MainSettingsModelSO::dyn_customServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StringSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BoolSO depthTextureEnabled
::GlobalNamespace::BoolSO*& GlobalNamespace::MainSettingsModelSO::dyn_depthTextureEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_depthTextureEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depthTextureEnabled"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <createScreenshotDuringTheGame>k__BackingField
bool& GlobalNamespace::MainSettingsModelSO::dyn_$createScreenshotDuringTheGame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_$createScreenshotDuringTheGame$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<createScreenshotDuringTheGame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <playingForTheFirstTime>k__BackingField
bool& GlobalNamespace::MainSettingsModelSO::dyn_$playingForTheFirstTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn_$playingForTheFirstTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playingForTheFirstTime>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playingForTheFirstTimeChecked
bool& GlobalNamespace::MainSettingsModelSO::dyn__playingForTheFirstTimeChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn__playingForTheFirstTimeChecked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingForTheFirstTimeChecked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isLoaded
bool& GlobalNamespace::MainSettingsModelSO::dyn__isLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::dyn__isLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainSettingsModelSO.get_createScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_createScreenshotDuringTheGame
void GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.get_playingForTheFirstTime
bool GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_playingForTheFirstTime
void GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.Save
void GlobalNamespace::MainSettingsModelSO::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.Load
void GlobalNamespace::MainSettingsModelSO::Load(bool forced) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forced)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forced);
}
// Autogenerated method: MainSettingsModelSO.__DeleteSettingsFiles
void GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__DeleteSettingsFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnDisable
void GlobalNamespace::MainSettingsModelSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnEnable
void GlobalNamespace::MainSettingsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Windowed
::GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Windowed"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Windowed
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed(::GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Windowed", value));
}
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Fullscreen
::GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Fullscreen"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Fullscreen
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen(::GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Fullscreen", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MainSettingsModelSO::WindowMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::WindowMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String version
::StringW& GlobalNamespace::MainSettingsModelSO::Config::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 windowResolutionWidth
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_windowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_windowResolutionWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 windowResolutionHeight
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_windowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_windowResolutionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowResolutionHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 editorResolutionWidth
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_editorResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_editorResolutionWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorResolutionWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 editorResolutionHeight
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_editorResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_editorResolutionHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorResolutionHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MainSettingsModelSO/WindowMode windowMode
::GlobalNamespace::MainSettingsModelSO::WindowMode& GlobalNamespace::MainSettingsModelSO::Config::dyn_windowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_windowMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO::WindowMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vrResolutionScale
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_vrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_vrResolutionScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrResolutionScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single menuVRResolutionScaleMultiplier
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_menuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_menuVRResolutionScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuVRResolutionScaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFixedFoveatedRenderingDuringGameplay
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_useFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_useFixedFoveatedRenderingDuringGameplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFixedFoveatedRenderingDuringGameplay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 antiAliasingLevel
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_antiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_antiAliasingLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "antiAliasingLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mirrorGraphicsSettings
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 mainEffectGraphicsSettings
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_mainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_mainEffectGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainEffectGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bloomGraphicsSettings
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_bloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_bloomGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smokeGraphicsSettings
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_smokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smokeGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smokeGraphicsSettings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean burnMarkTrailsEnabled
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_burnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_burnMarkTrailsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burnMarkTrailsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenDisplacementEffectsEnabled
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_screenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenDisplacementEffectsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterX
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterY
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomCenterZ
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_roomCenterZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomCenterZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomRotation
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionX
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionY
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerPositionZ
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerPositionZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationX
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationY
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single controllerRotationZ
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllerRotationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerRotationZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothCameraEnabled
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraEnabled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraFieldOfView
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraFieldOfView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraFieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionX
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionY
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonPositionZ
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonPositionZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonPositionZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesX
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesY
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraThirdPersonEulerAnglesZ
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEulerAnglesZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEulerAnglesZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothCameraThirdPersonEnabled
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraThirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraThirdPersonEnabled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraRotationSmooth
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraRotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraRotationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single smoothCameraPositionSmooth
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraPositionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothCameraPositionSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useCustomServerEnvironment
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_useCustomServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_useCustomServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCustomServerEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forceGameLiftServerEnvironment
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_forceGameLiftServerEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_forceGameLiftServerEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceGameLiftServerEnvironment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String customServerHostName
::StringW& GlobalNamespace::MainSettingsModelSO::Config::dyn_customServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_customServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "customServerHostName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ambientVolumeScale
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean controllersRumbleEnabled
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_controllersRumbleEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_controllersRumbleEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllersRumbleEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 enableAlphaFeatures
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_enableAlphaFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_enableAlphaFeatures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAlphaFeatures"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pauseButtonPressDurationLevel
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_pauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_pauseButtonPressDurationLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pauseButtonPressDurationLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxShockwaveParticles
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_maxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxShockwaveParticles"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideAudioLatency
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_overrideAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideAudioLatency"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioLatency
float& GlobalNamespace::MainSettingsModelSO::Config::dyn_audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLatency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxNumberOfCutSoundEffects
int& GlobalNamespace::MainSettingsModelSO::Config::dyn_maxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_maxNumberOfCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNumberOfCutSoundEffects"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean onlineServicesEnabled
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_onlineServicesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_onlineServicesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineServicesEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean openVrThreadedHaptics
bool& GlobalNamespace::MainSettingsModelSO::Config::dyn_openVrThreadedHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_openVrThreadedHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "openVrThreadedHaptics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String language
::StringW& GlobalNamespace::MainSettingsModelSO::Config::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsModelSO::Config::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets/Preset[] _presets
::ArrayW<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::dyn__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::dyn__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_presets
::ArrayW<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*> GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_namedPresets
::ArrayW<::GlobalNamespace::NamedPreset*> GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedPreset*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType mirrorType
::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_mirrorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_mirrorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask reflectLayers
::UnityEngine::LayerMask& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_reflectLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_reflectLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reflectLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stereoTextureWidth
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_stereoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_stereoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stereoTextureHeight
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_stereoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_stereoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 monoTextureWidth
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_monoTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_monoTextureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 monoTextureHeight
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_monoTextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_monoTextureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoTextureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxAntiAliasing
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_maxAntiAliasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_maxAntiAliasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAntiAliasing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableBloomPrePassFog
bool& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_enableBloomPrePassFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::dyn_enableBloomPrePassFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableBloomPrePassFog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset/MirrorType
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType None
::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType None
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_None(::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType FakeMirror
::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_FakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_FakeMirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "FakeMirror"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType FakeMirror
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_FakeMirror(::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_FakeMirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "FakeMirror", value));
}
// Autogenerated static field getter
// Get static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType RenderedMirror
::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_RenderedMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_get_RenderedMirror");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType>("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "RenderedMirror"));
}
// Autogenerated static field setter
// Set static field: static public MirrorRendererGraphicsSettingsPresets/Preset/MirrorType RenderedMirror
void GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_RenderedMirror(::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::_set_RenderedMirror");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MirrorRendererGraphicsSettingsPresets/Preset/MirrorType", "RenderedMirror", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset::MirrorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _presetNameLocalizationKey
::StringW& GlobalNamespace::NamedPreset::dyn__presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedPreset::dyn__presetNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presetNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedPreset.get_presetNameLocalizationKey
::StringW GlobalNamespace::NamedPreset::get_presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedPreset::get_presetNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_presetNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPresetsSO.get_namedPresets
::ArrayW<::GlobalNamespace::NamedPreset*> GlobalNamespace::NamedPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedPresetsSO::get_namedPresets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedPreset*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _playersPlaceNeonsColor
::GlobalNamespace::ColorSO*& GlobalNamespace::MenuLightsPresetSO::dyn__playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::dyn__playersPlaceNeonsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playersPlaceNeonsIntensity
float& GlobalNamespace::MenuLightsPresetSO::dyn__playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::dyn__playersPlaceNeonsIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPlaceNeonsIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO/LightIdColorPair[] _lightIdColorPairs
::ArrayW<::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>& GlobalNamespace::MenuLightsPresetSO::dyn__lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::dyn__lightIdColorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIdColorPairs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsColor
::GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSO*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsIntensity
float GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_lightIdColorPairs
::ArrayW<::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*> GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightIdColorPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 lightId
int& GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSO baseColor
::GlobalNamespace::ColorSO*& GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_baseColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_baseColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
float& GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuLightsPresetSO/LightIdColorPair.get_lightColor
::UnityEngine::Color GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly LevelCompletionResults levelCompletionResults
::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::MissionCompletionResults::dyn_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionCompletionResults::dyn_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly MissionObjectiveResult[] missionObjectiveResults
::ArrayW<::GlobalNamespace::MissionObjectiveResult*>& GlobalNamespace::MissionCompletionResults::dyn_missionObjectiveResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionCompletionResults::dyn_missionObjectiveResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectiveResults"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjectiveResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionCompletionResults.get_IsMissionComplete
bool GlobalNamespace::MissionCompletionResults::get_IsMissionComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionCompletionResults::get_IsMissionComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsMissionComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerDataModel _playerDataModel
::GlobalNamespace::PlayerDataModel*& GlobalNamespace::CampaignProgressModel::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _missionIds
::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::CampaignProgressModel::dyn__missionIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::dyn__missionIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _finalMissionId
::StringW& GlobalNamespace::CampaignProgressModel::dyn__finalMissionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::dyn__finalMissionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _numberOfClearedMissionsDirty
bool& GlobalNamespace::CampaignProgressModel::dyn__numberOfClearedMissionsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::dyn__numberOfClearedMissionsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissionsDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfClearedMissions
int& GlobalNamespace::CampaignProgressModel::dyn__numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::dyn__numberOfClearedMissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClearedMissions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignProgressModel.get_numberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfClearedMissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.Awake
void GlobalNamespace::CampaignProgressModel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.IsMissionRegistered
bool GlobalNamespace::CampaignProgressModel::IsMissionRegistered(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::IsMissionRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.RegisterMissionId
void GlobalNamespace::CampaignProgressModel::RegisterMissionId(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::RegisterMissionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterMissionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionCleared
bool GlobalNamespace::CampaignProgressModel::IsMissionCleared(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::IsMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionFinal
bool GlobalNamespace::CampaignProgressModel::IsMissionFinal(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::IsMissionFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMissionFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetFinalMissionId
void GlobalNamespace::CampaignProgressModel::SetFinalMissionId(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::SetFinalMissionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinalMissionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.WillFinishGameAfterThisMission
bool GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillFinishGameAfterThisMission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetMissionCleared
void GlobalNamespace::CampaignProgressModel::SetMissionCleared(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.__SetMissionCleared
void GlobalNamespace::CampaignProgressModel::__SetMissionCleared(::StringW missionId, bool cleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::__SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(cleared)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId, cleared);
}
// Autogenerated method: CampaignProgressModel.UpdateNumberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNumberOfClearedMissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DistanceObjectiveValueFormatterSO
#include "GlobalNamespace/DistanceObjectiveValueFormatterSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DistanceObjectiveValueFormatterSO.FormatValue
::StringW GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _level
::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::MissionDataSO::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::MissionDataSO::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::MissionDataSO::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective[] _missionObjectives
::ArrayW<::GlobalNamespace::MissionObjective*>& GlobalNamespace::MissionDataSO::dyn__missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjective*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::MissionDataSO::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionHelpSO _missionHelp
::GlobalNamespace::MissionHelpSO*& GlobalNamespace::MissionDataSO::dyn__missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::dyn__missionHelp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionHelpSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionDataSO.get_missionObjectives
::ArrayW<::GlobalNamespace::MissionObjective*> GlobalNamespace::MissionDataSO::get_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_missionObjectives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionObjectives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionObjective*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_level
::GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionDataSO::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionDataSO::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_missionHelp
::GlobalNamespace::MissionHelpSO* GlobalNamespace::MissionDataSO::get_missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::get_missionHelp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionHelp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionHelpSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.OnValidate
void GlobalNamespace::MissionDataSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _missionHelpId
::StringW& GlobalNamespace::MissionHelpSO::dyn__missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpSO::dyn__missionHelpId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionHelpSO.get_missionHelpId
::StringW GlobalNamespace::MissionHelpSO::get_missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionHelpSO::get_missionHelpId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionHelpId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveTypeSO _type
::GlobalNamespace::MissionObjectiveTypeSO*& GlobalNamespace::MissionObjective::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionObjectiveTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective/ReferenceValueComparisonType _referenceValueComparisonType
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType& GlobalNamespace::MissionObjective::dyn__referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::dyn__referenceValueComparisonType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValueComparisonType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _referenceValue
int& GlobalNamespace::MissionObjective::dyn__referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::dyn__referenceValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionObjective.get_type
::GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionObjectiveTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValueComparisonType
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::get_referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::get_referenceValueComparisonType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceValueComparisonType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValue
int GlobalNamespace::MissionObjective::get_referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::get_referenceValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_referenceValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.Equals
bool GlobalNamespace::MissionObjective::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MissionObjective.GetHashCode
int GlobalNamespace::MissionObjective::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.op_Equality
bool GlobalNamespace::operator ==(::GlobalNamespace::MissionObjective* obj1, ::GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionObjective", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(&obj2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated method: MissionObjective.op_Inequality
bool GlobalNamespace::operator !=(::GlobalNamespace::MissionObjective* obj1, ::GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionObjective", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(&obj2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjective/ReferenceValueComparisonType
#include "GlobalNamespace/MissionObjective.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType None
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType None
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None(::GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Equal
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Equal
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal(::GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Max
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Max"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Max
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max(::GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Min
::GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Min"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Min
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min(::GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Min", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MissionObjective::ReferenceValueComparisonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjective::ReferenceValueComparisonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionDataExtensions
#include "GlobalNamespace/MissionDataExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionDataExtensions.Name
::StringW GlobalNamespace::MissionDataExtensions::Name(::GlobalNamespace::MissionObjective::ReferenceValueComparisonType comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionDataExtensions::Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionDataExtensions", "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparisonType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparisonType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjective <missionObjective>k__BackingField
::GlobalNamespace::MissionObjective*& GlobalNamespace::MissionObjectiveResult::dyn_$missionObjective$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::dyn_$missionObjective$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionObjective>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionObjective**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <cleared>k__BackingField
bool& GlobalNamespace::MissionObjectiveResult::dyn_$cleared$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::dyn_$cleared$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cleared>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <value>k__BackingField
int& GlobalNamespace::MissionObjectiveResult::dyn_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::dyn_$value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionObjectiveResult.get_missionObjective
::GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjectiveResult::get_missionObjective() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::get_missionObjective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionObjective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionObjective*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_missionObjective
void GlobalNamespace::MissionObjectiveResult::set_missionObjective(::GlobalNamespace::MissionObjective* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::set_missionObjective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionObjective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_cleared
bool GlobalNamespace::MissionObjectiveResult::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_cleared
void GlobalNamespace::MissionObjectiveResult::set_cleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::set_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_value
int GlobalNamespace::MissionObjectiveResult::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_value
void GlobalNamespace::MissionObjectiveResult::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveResult::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _objectiveName
::StringW& GlobalNamespace::MissionObjectiveTypeSO::dyn__objectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::dyn__objectiveName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noConditionValue
bool& GlobalNamespace::MissionObjectiveTypeSO::dyn__noConditionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::dyn__noConditionValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noConditionValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectiveValueFormatterSO _objectiveValueFormater
::GlobalNamespace::ObjectiveValueFormatterSO*& GlobalNamespace::MissionObjectiveTypeSO::dyn__objectiveValueFormater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::dyn__objectiveValueFormater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectiveValueFormater"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectiveValueFormatterSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveName
::StringW GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveNameLocalized
::StringW GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveNameLocalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_noConditionValue
bool GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noConditionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveValueFormater
::GlobalNamespace::ObjectiveValueFormatterSO* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectiveValueFormater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectiveValueFormatterSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minimumMissionsToUnlock
int& GlobalNamespace::MissionStage::dyn__minimumMissionsToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStage::dyn__minimumMissionsToUnlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumMissionsToUnlock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
::UnityEngine::RectTransform*& GlobalNamespace::MissionStage::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStage::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionStage.get_minimumMissionsToUnlock
int GlobalNamespace::MissionStage::get_minimumMissionsToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStage::get_minimumMissionsToUnlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minimumMissionsToUnlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionStage.get_position
::UnityEngine::Vector2 GlobalNamespace::MissionStage::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStage::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectiveValueFormatterSO.FormatValue
::StringW GlobalNamespace::ObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreObjectiveValueFormatterSO
#include "GlobalNamespace/ScoreObjectiveValueFormatterSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreObjectiveValueFormatterSO.FormatValue
::StringW GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMultiplayerStatusModel
#include "GlobalNamespace/IMultiplayerStatusModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerStatusModel.GetMultiplayerStatusAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>* GlobalNamespace::IMultiplayerStatusModel::GetMultiplayerStatusAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerStatusModel::GetMultiplayerStatusAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IQuickPlaySetupModel
#include "GlobalNamespace/IQuickPlaySetupModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IQuickPlaySetupModel.GetQuickPlaySetupAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>* GlobalNamespace::IQuickPlaySetupModel::GetQuickPlaySetupAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IQuickPlaySetupModel::GetQuickPlaySetupAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: MultiplayerStatusData/UserMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String minimumAppVersion
::StringW& GlobalNamespace::MultiplayerStatusData::dyn_minimumAppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_minimumAppVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumAppVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData/AvailabilityStatus status
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus& GlobalNamespace::MultiplayerStatusData::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maintenanceStartTime
int64_t& GlobalNamespace::MultiplayerStatusData::dyn_maintenanceStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_maintenanceStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceStartTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 maintenanceEndTime
int64_t& GlobalNamespace::MultiplayerStatusData::dyn_maintenanceEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_maintenanceEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maintenanceEndTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData/UserMessage userMessage
::GlobalNamespace::MultiplayerStatusData::UserMessage*& GlobalNamespace::MultiplayerStatusData::dyn_userMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_userMessage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userMessage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerStatusData::UserMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useGamelift
bool& GlobalNamespace::MultiplayerStatusData::dyn_useGamelift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::dyn_useGamelift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useGamelift"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerStatusData.get__minimumAppVersion
::StringW GlobalNamespace::MultiplayerStatusData::get__minimumAppVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::get__minimumAppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__minimumAppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusData.set__minimumAppVersion
void GlobalNamespace::MultiplayerStatusData::set__minimumAppVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::set__minimumAppVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__minimumAppVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerStatusData.get__maintenanceStartTime
int64_t GlobalNamespace::MultiplayerStatusData::get__maintenanceStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::get__maintenanceStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__maintenanceStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusData.set__maintenanceStartTime
void GlobalNamespace::MultiplayerStatusData::set__maintenanceStartTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::set__maintenanceStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__maintenanceStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerStatusData.get__userMessage
::GlobalNamespace::MultiplayerStatusData::UserMessage* GlobalNamespace::MultiplayerStatusData::get__userMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::get__userMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__userMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerStatusData::UserMessage*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusData.set__userMessage
void GlobalNamespace::MultiplayerStatusData::set__userMessage(::GlobalNamespace::MultiplayerStatusData::UserMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::set__userMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__userMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerStatusData.get__useGamelift
bool GlobalNamespace::MultiplayerStatusData::get__useGamelift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::get__useGamelift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__useGamelift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusData.set__useGamelift
void GlobalNamespace::MultiplayerStatusData::set__useGamelift(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::set__useGamelift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set__useGamelift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/AvailabilityStatus
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus Online
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus Online
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Online(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus MaintenanceUpcoming
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_MaintenanceUpcoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_MaintenanceUpcoming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "MaintenanceUpcoming"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus MaintenanceUpcoming
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_MaintenanceUpcoming(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_MaintenanceUpcoming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "MaintenanceUpcoming", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus Offline
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus Offline
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Offline(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/UserMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage.hpp"
// Including type: MultiplayerStatusData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage_LocalizedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData/UserMessage/LocalizedMessage[] localizations
::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>& GlobalNamespace::MultiplayerStatusData::UserMessage::dyn_localizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::dyn_localizations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage_LocalizedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
::StringW& GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
::StringW& GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel
#include "GlobalNamespace/MultiplayerStatusModel.hpp"
// Including type: MultiplayerStatusModel/MultiplayerStatusDataFB
#include "GlobalNamespace/MultiplayerStatusModel_MultiplayerStatusDataFB.hpp"
// Including type: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9
#include "GlobalNamespace/MultiplayerStatusModel_-GetMultiplayerStatusAsyncInternal-d__9.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::MultiplayerStatusModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MultiplayerStatusModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::MultiplayerStatusModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
::GlobalNamespace::INetworkConfig*& GlobalNamespace::MultiplayerStatusModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpClient _client
::System::Net::Http::HttpClient*& GlobalNamespace::MultiplayerStatusModel::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MultiplayerStatusData> _request
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*& GlobalNamespace::MultiplayerStatusModel::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerStatusModel.Init
void GlobalNamespace::MultiplayerStatusModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.GetMultiplayerStatusAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>* GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: MultiplayerStatusModel.IsAvailabilityTaskValid
bool GlobalNamespace::MultiplayerStatusModel::IsAvailabilityTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::IsAvailabilityTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvailabilityTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.StartRequest
void GlobalNamespace::MultiplayerStatusModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.GetMultiplayerStatusAsyncInternal
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>* GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerStatusAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel/MultiplayerStatusDataFB
#include "GlobalNamespace/MultiplayerStatusModel_MultiplayerStatusDataFB.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData[] data
::ArrayW<::GlobalNamespace::MultiplayerStatusData*>& GlobalNamespace::MultiplayerStatusModel::MultiplayerStatusDataFB::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::MultiplayerStatusDataFB::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MultiplayerStatusData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9
#include "GlobalNamespace/MultiplayerStatusModel_-GetMultiplayerStatusAsyncInternal-d__9.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MultiplayerStatusData> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::MultiplayerStatusData*>& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::MultiplayerStatusData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusModel <>4__this
::GlobalNamespace::MultiplayerStatusModel*& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerStatusModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9.MoveNext
void GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9.SetStateMachine
void GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData/QuickPlaySongPacksOverride quickPlayAvailablePacksOverride
::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride*& GlobalNamespace::QuickPlaySetupData::dyn_quickPlayAvailablePacksOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::dyn_quickPlayAvailablePacksOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayAvailablePacksOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupData.get_hasOverride
bool GlobalNamespace::QuickPlaySetupData::get_hasOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::get_hasOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack> predefinedPackIds
::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_predefinedPackIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_predefinedPackIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predefinedPackIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack> localizedCustomPacks
::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_localizedCustomPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_localizedCustomPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedCustomPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packName
::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serializedName
::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
int& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName[] localizedNames
::ArrayW<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_localizedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_localizedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedNames"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> packIds
::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_packIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_packIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
int& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_packId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel
#include "GlobalNamespace/QuickPlaySetupModel.hpp"
// Including type: QuickPlaySetupModel/QuickPlaySetupDataFB
#include "GlobalNamespace/QuickPlaySetupModel_QuickPlaySetupDataFB.hpp"
// Including type: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/QuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestCacheTimeoutMinutes
int GlobalNamespace::QuickPlaySetupModel::_get_kRequestCacheTimeoutMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_get_kRequestCacheTimeoutMinutes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuickPlaySetupModel", "kRequestCacheTimeoutMinutes"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestCacheTimeoutMinutes
void GlobalNamespace::QuickPlaySetupModel::_set_kRequestCacheTimeoutMinutes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_set_kRequestCacheTimeoutMinutes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuickPlaySetupModel", "kRequestCacheTimeoutMinutes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::QuickPlaySetupModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuickPlaySetupModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::QuickPlaySetupModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuickPlaySetupModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
::GlobalNamespace::INetworkConfig*& GlobalNamespace::QuickPlaySetupModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpClient _client
::System::Net::Http::HttpClient*& GlobalNamespace::QuickPlaySetupModel::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<QuickPlaySetupData> _request
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*& GlobalNamespace::QuickPlaySetupModel::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _lastRequestTime
::System::DateTime& GlobalNamespace::QuickPlaySetupModel::dyn__lastRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupModel.GetQuickPlaySetupAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>* GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: QuickPlaySetupModel.Init
void GlobalNamespace::QuickPlaySetupModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.StartRequest
void GlobalNamespace::QuickPlaySetupModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.GetQuickPlaySetupInternal
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>* GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.IsQuickPlaySetupTaskValid
bool GlobalNamespace::QuickPlaySetupModel::IsQuickPlaySetupTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::IsQuickPlaySetupTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQuickPlaySetupTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.IsUrlValid
bool GlobalNamespace::QuickPlaySetupModel::IsUrlValid(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::IsUrlValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUrlValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel/QuickPlaySetupDataFB
#include "GlobalNamespace/QuickPlaySetupModel_QuickPlaySetupDataFB.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData[] data
::ArrayW<::GlobalNamespace::QuickPlaySetupData*>& GlobalNamespace::QuickPlaySetupModel::QuickPlaySetupDataFB::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::QuickPlaySetupDataFB::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::QuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/QuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<QuickPlaySetupData> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::QuickPlaySetupData*>& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::QuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupModel <>4__this
::GlobalNamespace::QuickPlaySetupModel*& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.MoveNext
void GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.SetStateMachine
void GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CannotStartGameReasonMethods
#include "GlobalNamespace/CannotStartGameReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B2DB0
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersSpectating
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kAllPlayersSpectating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersSpectating
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersSpectating", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2DC0
// Autogenerated static field getter
// Get static field: static private System.String kNoSongSelected
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kNoSongSelected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoSongSelected
void GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kNoSongSelected", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2DD0
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersNotInLobby
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersNotInLobby
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2DE0
// Autogenerated static field getter
// Get static field: static private System.String kDoNotOwnSong
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kDoNotOwnSong"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDoNotOwnSong
void GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kDoNotOwnSong", value));
}
// Autogenerated method: CannotStartGameReasonMethods.LocalizedKey
::StringW GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey(::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CannotStartGameReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cannotStartGameReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionFailedReasonMethods
#include "GlobalNamespace/ConnectionFailedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B2DF0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedUnknown
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedUnknown
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E00
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedConnectionCanceled
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedConnectionCanceled
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E10
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerUnreachable
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E20
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerDoesNotExist
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerDoesNotExist
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E30
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerAtCapacity
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerAtCapacity
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E40
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedVersionMismatch
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedVersionMismatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E50
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedInvalidPassword
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedInvalidPassword
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E60
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerUnreachable
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E70
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E80
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedNetworkNotConnected
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedNetworkNotConnected
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2E90
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2EA0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerIsTerminating
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerIsTerminating
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2EB0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedTimeout
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedTimeout
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedTimeout(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2EC0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedFailedToFindMatch
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedFailedToFindMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedFailedToFindMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedFailedToFindMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedFailedToFindMatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedFailedToFindMatch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedFailedToFindMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedFailedToFindMatch", value));
}
// Autogenerated method: ConnectionFailedReasonMethods.LocalizedKey
::StringW GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey(::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: ConnectionFailedReasonMethods.ErrorCode
::StringW GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode(::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectedReasonMethods
#include "GlobalNamespace/DisconnectedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B2ED0
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUnknown
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUnknown
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2EE0
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUserInitiated
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUserInitiated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2EF0
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedTimeout
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedTimeout
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2F00
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedKicked
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedKicked"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedKicked
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedKicked", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2F10
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerAtCapacity
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerAtCapacity
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2F20
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerConnectionClosed
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerConnectionClosed
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2F30
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedMasterServerUnreachable
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedMasterServerUnreachable
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B2F40
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerTerminated
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerTerminated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated", value));
}
// Autogenerated method: DisconnectedReasonMethods.LocalizedKey
::StringW GlobalNamespace::DisconnectedReasonMethods::LocalizedKey(::GlobalNamespace::DisconnectedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: DisconnectedReasonMethods.ErrorCode
::StringW GlobalNamespace::DisconnectedReasonMethods::ErrorCode(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListItem
#include "GlobalNamespace/GameServerListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String serverName
::StringW& GlobalNamespace::GameServerListItem::dyn_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 capacity
int& GlobalNamespace::GameServerListItem::dyn_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 occupied
int& GlobalNamespace::GameServerListItem::dyn_occupied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_occupied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupied"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean password
bool& GlobalNamespace::GameServerListItem::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableItem
#include "GlobalNamespace/GameServerPlayerTableItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerName
::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedLevel
::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suggestedLevel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedModifiers
::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suggestedModifiers"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isReady
bool& GlobalNamespace::GameServerPlayerTableItem::dyn_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_isReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelGameplaySetupData.get_beatmapLevel
::GlobalNamespace::PreviewDifficultyBeatmap* GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PreviewDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyGameStateController.get_state
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::ILobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.set_state
void GlobalNamespace::ILobbyGameStateController::set_state(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.get_cannotStartGameReason
::GlobalNamespace::CannotStartGameReason GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_selectedLevelGameplaySetupData
::GlobalNamespace::ILevelGameplaySetupData* GlobalNamespace::ILobbyGameStateController::get_selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_selectedLevelGameplaySetupData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILevelGameplaySetupData*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownStarted
bool GlobalNamespace::ILobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startTime
float GlobalNamespace::ILobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_isDisconnected
bool GlobalNamespace::ILobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::ILobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.add_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.Activate
void GlobalNamespace::ILobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.Deactivate
void GlobalNamespace::ILobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetGameStateAndConfigurationAsync
::System::Threading::Tasks::Task* GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: ILobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::ILobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isPartyOwner
void GlobalNamespace::ILobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isActive
bool GlobalNamespace::ILobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isActive
void GlobalNamespace::ILobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isReady
bool GlobalNamespace::ILobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isReady
void GlobalNamespace::ILobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isInLobby
bool GlobalNamespace::ILobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isInLobby
void GlobalNamespace::ILobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayersDataModel.get_localUserId
::StringW GlobalNamespace::ILobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_partyOwnerId
::StringW GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: ILobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer(::StringW kickedUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedUserId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kickedUserId);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearData
void GlobalNamespace::ILobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Activate
void GlobalNamespace::ILobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Deactivate
void GlobalNamespace::ILobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyStateDataModel.get_isConnected
bool GlobalNamespace::ILobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_connectedPlayers
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_rawConnectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::ILobbyStateDataModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.Activate
void GlobalNamespace::ILobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.Deactivate
void GlobalNamespace::ILobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.GetPlayerById
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::GetPlayerById(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IInvitePlatformHandler
#include "GlobalNamespace/IInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IInvitePlatformHandler.get_isSupported
bool GlobalNamespace::IInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoInvitePlatformHandler
#include "GlobalNamespace/NoInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoInvitePlatformHandler.get_isSupported
bool GlobalNamespace::NoInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::NoInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusInvitePlatformHandler
#include "GlobalNamespace/OculusInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusInvitePlatformHandler.get_isSupported
bool GlobalNamespace::OculusInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::OculusInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestInvitePlatformHandler
#include "GlobalNamespace/TestInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestInvitePlatformHandler.get_isSupported
bool GlobalNamespace::TestInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TestInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::TestInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewDifficultyBeatmap _beatmapLevel
::GlobalNamespace::PreviewDifficultyBeatmap*& GlobalNamespace::LevelGameplaySetupData::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::LevelGameplaySetupData::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapLevel
::GlobalNamespace::PreviewDifficultyBeatmap* GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PreviewDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.ClearGameplaySetupData
void GlobalNamespace::LevelGameplaySetupData::ClearGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::ClearGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.SetBeatmapLevel
void GlobalNamespace::LevelGameplaySetupData::SetBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::SetBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LevelGameplaySetupData.SetGameplayModifiers
void GlobalNamespace::LevelGameplaySetupData::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::SetGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
::GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::LobbyDataModelsManager::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyDataModelsManager.Activate
void GlobalNamespace::LobbyDataModelsManager::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyDataModelsManager.Deactivate
void GlobalNamespace::LobbyDataModelsManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController
#include "GlobalNamespace/LobbyGameStateController.hpp"
// Including type: LobbyGameStateController/<>c__DisplayClass98_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass98_0.hpp"
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kShortTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kShortTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kShortTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kShortTimerSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kLongTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kLongTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kLongTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kLongTimerSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
::GlobalNamespace::PlayerDataModel*& GlobalNamespace::LobbyGameStateController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyGameStateController::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyGameStateController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelLoader _multiplayerLevelLoader
::GlobalNamespace::MultiplayerLevelLoader*& GlobalNamespace::LobbyGameStateController::dyn__multiplayerLevelLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__multiplayerLevelLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::LobbyGameStateController::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
::GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::LobbyGameStateController::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::LobbyGameStateController::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ILevelGameplaySetupData> selectedLevelGameplaySetupDataChangedEvent
::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>*& GlobalNamespace::LobbyGameStateController::dyn_selectedLevelGameplaySetupDataChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_selectedLevelGameplaySetupDataChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLevelGameplaySetupDataChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ILevelGameplaySetupData> gameStartedEvent
::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>*& GlobalNamespace::LobbyGameStateController::dyn_gameStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_gameStartedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStartedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action gameStartCancelledEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_gameStartCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_gameStartCancelledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStartCancelledEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownStartedEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_countdownStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_countdownStartedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownStartedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownCancelledEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_countdownCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_countdownCancelledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownCancelledEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action songStillDownloadingEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_songStillDownloadingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_songStillDownloadingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songStillDownloadingEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action startTimeChangedEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_startTimeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_startTimeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTimeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> levelFinishedEvent
::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>*& GlobalNamespace::LobbyGameStateController::dyn_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> levelDidGetDisconnectedEvent
::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LobbyGameStateController::dyn_levelDidGetDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_levelDidGetDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDidGetDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action lobbyDisconnectedEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_lobbyDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_lobbyDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action beforeSceneSwitchCallbackEvent
::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_beforeSceneSwitchCallbackEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_beforeSceneSwitchCallbackEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beforeSceneSwitchCallbackEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerLobbyState> lobbyStateChangedEvent
::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>*& GlobalNamespace::LobbyGameStateController::dyn_lobbyStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_lobbyStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CannotStartGameReason> startButtonEnabledEvent
::System::Action_1<::GlobalNamespace::CannotStartGameReason>*& GlobalNamespace::LobbyGameStateController::dyn_startButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_startButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startButtonEnabledEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::CannotStartGameReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PlayersMissingEntitlementsNetSerializable> playerMissingEntitlementsChangedEvent
::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& GlobalNamespace::LobbyGameStateController::dyn_playerMissingEntitlementsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_playerMissingEntitlementsChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMissingEntitlementsChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <levelStartInitiated>k__BackingField
bool& GlobalNamespace::LobbyGameStateController::dyn_$levelStartInitiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$levelStartInitiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelStartInitiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <countdownStarted>k__BackingField
bool& GlobalNamespace::LobbyGameStateController::dyn_$countdownStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$countdownStarted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<countdownStarted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <countdownEndTime>k__BackingField
float& GlobalNamespace::LobbyGameStateController::dyn_$countdownEndTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$countdownEndTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<countdownEndTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDisconnected>k__BackingField
bool& GlobalNamespace::LobbyGameStateController::dyn_$isDisconnected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$isDisconnected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDisconnected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DisconnectedReason <disconnectedReason>k__BackingField
::GlobalNamespace::DisconnectedReason& GlobalNamespace::LobbyGameStateController::dyn_$disconnectedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$disconnectedReason$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disconnectedReason>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _predictedStartTime
float& GlobalNamespace::LobbyGameStateController::dyn__predictedStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__predictedStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_predictedStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float& GlobalNamespace::LobbyGameStateController::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _levelStartedOnTime
bool& GlobalNamespace::LobbyGameStateController::dyn__levelStartedOnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__levelStartedOnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelStartedOnTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyState _state
::GlobalNamespace::MultiplayerLobbyState& GlobalNamespace::LobbyGameStateController::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CannotStartGameReason _cannotStartGameReason
::GlobalNamespace::CannotStartGameReason& GlobalNamespace::LobbyGameStateController::dyn__cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__cannotStartGameReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cannotStartGameReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CannotStartGameReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelGameplaySetupData _selectedLevelGameplaySetupData
::GlobalNamespace::LevelGameplaySetupData*& GlobalNamespace::LobbyGameStateController::dyn__selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__selectedLevelGameplaySetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedLevelGameplaySetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelGameplaySetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_startTime
float GlobalNamespace::LobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_startTime
void GlobalNamespace::LobbyGameStateController::set_startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::LobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_levelStartInitiated
void GlobalNamespace::LobbyGameStateController::set_levelStartInitiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_selectedLevelGameplaySetupData
::GlobalNamespace::ILevelGameplaySetupData* GlobalNamespace::LobbyGameStateController::get_selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_selectedLevelGameplaySetupData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILevelGameplaySetupData*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_countdownStarted
bool GlobalNamespace::LobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownStarted
void GlobalNamespace::LobbyGameStateController::set_countdownStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_countdownEndTime
float GlobalNamespace::LobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownEndTime
void GlobalNamespace::LobbyGameStateController::set_countdownEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_state
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_state
void GlobalNamespace::LobbyGameStateController::set_state(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_cannotStartGameReason
::GlobalNamespace::CannotStartGameReason GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_isDisconnected
bool GlobalNamespace::LobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_isDisconnected
void GlobalNamespace::LobbyGameStateController::set_isDisconnected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_disconnectedReason
void GlobalNamespace::LobbyGameStateController::set_disconnectedReason(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::LobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.Activate
void GlobalNamespace::LobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Deactivate
void GlobalNamespace::LobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Dispose
void GlobalNamespace::LobbyGameStateController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::LobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetGameStateAndConfigurationAsync
::System::Threading::Tasks::Task* GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: LobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::LobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerDisconnected
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerConnectionOwnerStateChanged
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionOwnerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyGameStateController.StopListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StopListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StopListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelledLevelStart
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelledLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetCountdownEndTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime(::StringW userId, float countdownTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(countdownTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, countdownTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelCountdown
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetStartGameTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime(::StringW userId, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleSetIsStartButtonEnabled
void GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled(::StringW userId, ::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, cannotStartGameReason);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel(::StringW userId, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersMissingEntitlements);
}
// Autogenerated method: LobbyGameStateController.HandleStartTimeChanged
void GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderStillDownloadingSong
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderStillDownloadingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetSelectedBeatmap
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetSelectedGameplayModifiers
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerClearSelectedBeatmap
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerClearSelectedGameplayModifiers
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderCountdownFinished
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished(::GlobalNamespace::ILevelGameplaySetupData* gameplaySetupData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderCountdownFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplaySetupData), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplaySetupData, difficultyBeatmap);
}
// Autogenerated method: LobbyGameStateController.StartMultiplayerLevel
void GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel(::GlobalNamespace::ILevelGameplaySetupData* gameplaySetupData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplaySetupData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplaySetupData, difficultyBeatmap, beforeSceneSwitchCallback);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidFinish
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.StopLoading
void GlobalNamespace::LobbyGameStateController::StopLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StopLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController/<>c__DisplayClass98_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass98_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: PlayerLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayerLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LobbyGameStateController <>4__this
::GlobalNamespace::LobbyGameStateController*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<MultiplayerGameState> getGameStateAsyncTcs
::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getGameStateAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getGameStateAsyncTcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getGameStateAsyncTcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<PlayersLobbyPermissionConfigurationNetSerializable> getPlayerPermissionAsyncTcs
::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getPlayerPermissionAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getPlayerPermissionAsyncTcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getPlayerPermissionAsyncTcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$g__HandleSetMultiplayerGameState_0(::StringW userId, ::GlobalNamespace::MultiplayerGameState newMultiplayerGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newMultiplayerGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, newMultiplayerGameState);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$g__HandleSetPlayerPermissionConfiguration_1(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>b__2
bool GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$b__2(::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyGameStateController/<>c <>9
::GlobalNamespace::LobbyGameStateController::$$c* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LobbyGameStateController::$$c*>("", "LobbyGameStateController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyGameStateController/<>c <>9
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9(::GlobalNamespace::LobbyGameStateController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__99_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__99_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__99_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>*>("", "LobbyGameStateController/<>c", "<>9__99_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__99_0
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__99_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__99_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9__99_0", value)));
}
// Autogenerated method: LobbyGameStateController/<>c..cctor
void GlobalNamespace::LobbyGameStateController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyGameStateController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyGameStateController/<>c.<PredictCountdownEndTime>b__99_0
bool GlobalNamespace::LobbyGameStateController::$$c::$PredictCountdownEndTime$b__99_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*> pair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::<PredictCountdownEndTime>b__99_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PredictCountdownEndTime>b__99_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pair)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pair);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeEvent
::System::Action_1<::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeAlwaysSentEvent
::System::Action_1<::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeAlwaysSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeAlwaysSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStateDidChangeAlwaysSentEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerGameState _gameState
::GlobalNamespace::MultiplayerGameState& GlobalNamespace::LobbyGameStateModel::dyn__gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerGameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateModel.get_gameState
::GlobalNamespace::MultiplayerGameState GlobalNamespace::LobbyGameStateModel::get_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::get_gameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerGameState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameStateWithoutNotification
void GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameStateWithoutNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(::GlobalNamespace::MultiplayerGameState newGameState, bool sendNotification) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState), ::il2cpp_utils::ExtractType(sendNotification)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState, sendNotification);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
bool& GlobalNamespace::LobbyPlayerData::dyn_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isPartyOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPartyOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isActive>k__BackingField
bool& GlobalNamespace::LobbyPlayerData::dyn_$isActive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isActive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isActive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isReady>k__BackingField
bool& GlobalNamespace::LobbyPlayerData::dyn_$isReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInLobby>k__BackingField
bool& GlobalNamespace::LobbyPlayerData::dyn_$isInLobby$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isInLobby$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInLobby>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isPartyOwner
void GlobalNamespace::LobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isActive
bool GlobalNamespace::LobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isActive
void GlobalNamespace::LobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isReady
bool GlobalNamespace::LobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isReady
void GlobalNamespace::LobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isInLobby
bool GlobalNamespace::LobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isInLobby
void GlobalNamespace::LobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$isPartyOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPartyOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendBeatmapPermission>k__BackingField
bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendBeatmapPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendBeatmapPermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasRecommendBeatmapPermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendModifiersPermission>k__BackingField
bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendModifiersPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendModifiersPermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasRecommendModifiersPermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasKickVotePermission>k__BackingField
bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasKickVotePermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasKickVotePermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasKickVotePermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasInvitePermission>k__BackingField
bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasInvitePermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasInvitePermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasInvitePermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action permissionsChangedEvent
::System::Action*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_permissionsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_permissionsChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionsChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_isPartyOwner
void GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendBeatmapPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendBeatmapPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendModifiersPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendModifiersPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasKickVotePermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasKickVotePermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasInvitePermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasInvitePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasInvitePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasInvitePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasInvitePermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasInvitePermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasInvitePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasInvitePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.add_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.remove_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Activate
void GlobalNamespace::LobbyPlayerPermissionsModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Deactivate
void GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.SetPlayerPermissions
void GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions(bool isPartyOwner, bool hasRecommendBeatmapPermission, bool hasRecommendModifiersPermission, bool hasKickVotePermission, bool hasInvitePermission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(hasRecommendBeatmapPermission), ::il2cpp_utils::ExtractType(hasRecommendModifiersPermission), ::il2cpp_utils::ExtractType(hasKickVotePermission), ::il2cpp_utils::ExtractType(hasInvitePermission)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, hasRecommendBeatmapPermission, hasRecommendModifiersPermission, hasKickVotePermission, hasInvitePermission);
}
// Autogenerated method: LobbyPlayerPermissionsModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel
#include "GlobalNamespace/LobbyPlayersDataModel.hpp"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__43.hpp"
// Including type: LobbyPlayersDataModel/<GetEnumerator>d__60
#include "GlobalNamespace/LobbyPlayersDataModel_-GetEnumerator-d__60.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyPlayersDataModel::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyPlayersDataModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerData _emptyLobbyPlayerData
::GlobalNamespace::LobbyPlayerData*& GlobalNamespace::LobbyPlayersDataModel::dyn__emptyLobbyPlayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__emptyLobbyPlayerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyLobbyPlayerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,LobbyPlayerData> _playersData
::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>*& GlobalNamespace::LobbyPlayersDataModel::dyn__playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__playersData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenSource _cancellationTokenSource
::System::Threading::CancellationTokenSource*& GlobalNamespace::LobbyPlayersDataModel::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <partyOwnerId>k__BackingField
::StringW& GlobalNamespace::LobbyPlayersDataModel::dyn_$partyOwnerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn_$partyOwnerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<partyOwnerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> didChangeEvent
::System::Action_1<::StringW>*& GlobalNamespace::LobbyPlayersDataModel::dyn_didChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn_didChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel.get_localUserId
::StringW GlobalNamespace::LobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_partyOwnerId
::StringW GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.set_partyOwnerId
void GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.get_Item
::GlobalNamespace::ILobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::get_Item(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILobbyPlayerData*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.get_Count
int GlobalNamespace::LobbyPlayersDataModel::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_Keys
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::LobbyPlayersDataModel::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_Values
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::ILobbyPlayerData*>* GlobalNamespace::LobbyPlayersDataModel::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::ILobbyPlayerData*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.GetOrCreateLobbyPlayerDataModel
::GlobalNamespace::LobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel(::StringW userId, ByRef<bool> alreadyExists) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LobbyPlayerData*, false>(this, ___internal__method, userId, byref(alreadyExists));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel(::StringW userId, ::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapLevel);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive(::StringW userId, bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady(::StringW userId, bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby(::StringW userId, bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsPartyOwner
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner(::StringW userId, bool isPartyOwner, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isPartyOwner, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.ClearData
void GlobalNamespace::LobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Activate
void GlobalNamespace::LobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Deactivate
void GlobalNamespace::LobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Dispose
void GlobalNamespace::LobbyPlayersDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady(::StringW userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby(::StringW userId, bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerStateChanged
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.NotifyModelChange
void GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyModelChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated method: LobbyPlayersDataModel.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>>* GlobalNamespace::LobbyPlayersDataModel::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::LobbyPlayersDataModel::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ContainsKey
bool GlobalNamespace::LobbyPlayersDataModel::ContainsKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: LobbyPlayersDataModel.TryGetValue
bool GlobalNamespace::LobbyPlayersDataModel::TryGetValue(::StringW key, ByRef<::GlobalNamespace::ILobbyPlayerData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::TryGetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ILobbyPlayerData*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyPlayersDataModel/<>c <>9
::GlobalNamespace::LobbyPlayersDataModel::$$c* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LobbyPlayersDataModel::$$c*>("", "LobbyPlayersDataModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyPlayersDataModel/<>c <>9
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9(::GlobalNamespace::LobbyPlayersDataModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__43_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "LobbyPlayersDataModel/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__43_0
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__43_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9__43_0", value)));
}
// Autogenerated method: LobbyPlayersDataModel/<>c..cctor
void GlobalNamespace::LobbyPlayersDataModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyPlayersDataModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<>c.<SetOwnedSongPacks>b__43_0
::StringW GlobalNamespace::LobbyPlayersDataModel::$$c::$SetOwnedSongPacks$b__43_0(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::<SetOwnedSongPacks>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetOwnedSongPacks>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__43.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LobbyPlayersDataModel <>4__this
::GlobalNamespace::LobbyPlayersDataModel*& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask <songPackMask>5__2
::GlobalNamespace::SongPackMask& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$songPackMask$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$songPackMask$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songPackMask>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] <>7__wrap2
::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
int& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack <dlcSongPack>5__5
::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$dlcSongPack$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$dlcSongPack$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dlcSongPack>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43.MoveNext
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43.SetStateMachine
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<GetEnumerator>d__60
#include "GlobalNamespace/LobbyPlayersDataModel_-GetEnumerator-d__60.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData> <>2__current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LobbyPlayersDataModel <>4__this
::GlobalNamespace::LobbyPlayersDataModel*& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,LobbyPlayerData> <>7__wrap1
typename ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>::Enumerator& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*> GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_ILobbyPlayerData$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.IDisposable.Dispose
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.MoveNext
bool GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.<>m__Finally1
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.IEnumerator.Reset
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyStateDataModel
#include "GlobalNamespace/LobbyStateDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyStateDataModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::LobbyStateDataModel::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,IConnectedPlayer> _connectedPlayersById
::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayersById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayersById");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayersById"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LobbyStateDataModel::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn_playerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn_playerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyStateDataModel.get_isConnected
bool GlobalNamespace::LobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_connectedPlayers
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_rawConnectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LobbyStateDataModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.Activate
void GlobalNamespace::LobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Deactivate
void GlobalNamespace::LobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Dispose
void GlobalNamespace::LobbyStateDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.GetPlayerById
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::GetPlayerById(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectionSuccessEvent
::System::Action*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionSuccessEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLobbyConnectionController/LobbyConnectionType,ConnectionFailedReason> connectionFailedEvent
::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionState <connectionState>k__BackingField
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionType <connectionType>k__BackingField
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConnectionFailedReason <connectionFailedReason>k__BackingField
::GlobalNamespace::ConnectionFailedReason& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionFailedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionFailedReason$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionFailedReason>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectionFailedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig _partyConfig
::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__partyConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__partyConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _retryAttemptsLeft
int& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__retryAttemptsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__retryAttemptsLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryAttemptsLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionState
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionState
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionType
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionType
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionFailedReason
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionFailedReason
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty(::GlobalNamespace::CreateServerFormData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToParty
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty(::StringW serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateOrConnectToDestinationParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty(::GlobalNamespace::SelectMultiplayerLobbyDestination* lobbyDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrConnectToDestinationParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyDestination);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToServer
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer(::GlobalNamespace::INetworkPlayer* server, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, server, password);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToMatchmaking
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, ::GlobalNamespace::SongPackMask songPackMask, bool allowSongSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowSongSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask, allowSongSelection);
}
// Autogenerated method: MultiplayerLobbyConnectionController.LeaveLobby
void GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ClearCurrentConnection
void GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCurrentConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnected
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailedWithRetry
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailedWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionState
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 createServerPlayersCount
int& GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createServerPlayersCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficultyMask quickPlayBeatmapDifficulty
::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayBeatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlaySongPackMaskSerializedName
::StringW& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlaySongPackMaskSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean quickPlayEnableLevelSelection
bool& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayEnableLevelSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason NetworkUnreachable
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason NetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason UpdateRequired
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason UpdateRequired
void GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "UpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason ServerOffline
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "ServerOffline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason ServerOffline
void GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "ServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason MaintenanceMode
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "MaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason MaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "MaintenanceMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerUnavailableReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B3380
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B3390
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B33A0
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// [LocalizationKeyAttribute] Offset: 0x10B33B0
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableTryAgain
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableTryAgain
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(::GlobalNamespace::MultiplayerStatusData* data, ByRef<::GlobalNamespace::MultiplayerUnavailableReason> reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::MultiplayerUnavailableReason&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(reason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(::GlobalNamespace::MultiplayerStatusData* data, ::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::StringW currentVersion, ::StringW minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentVersion), ::il2cpp_utils::ExtractType(minVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentVersion, minVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSongPackMaskItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>& GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customSongPackMaskItems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language _currentLocalizedLanguage
::Polyglot::Language& GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLocalizedLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToLocalizedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToMaskDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskToSerializedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO.get_defaultSongPackMaskItems
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_customSongPackMaskItems
::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*> GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_ostAndExtrasCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_dlcCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_dlcCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName, byref(plural));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
bool GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName, ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::SongPackMask&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serializedName, byref(songPackMask));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
bool GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask, ByRef<::StringW> serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, songPackMask, byref(serializedName));
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPackMaskModelSO.LazyInit
void GlobalNamespace::SongPackMaskModelSO::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SongPackMaskModelSO/SongPackDataType _type
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackSO _beatmapLevelPack
::GlobalNamespace::BeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelPackSO _previewBeatmapLevelPack
::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _serializedName
::StringW& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackCollectionSO _levelPackCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackSO> _beatmapLevelPacks
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _previewBeatmapLevelPacks
::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackCollectionSO> _levelPackCollections
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_serializedName
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_songPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_containsMultiplePacks
bool GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsMultiplePacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9(::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1(::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3(::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3", value)));
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c..cctor
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMaskModelSO/SongPackMaskItem/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_0
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_0(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_1
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_1(::GlobalNamespace::BeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_2
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_2(::GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_3
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_3(::GlobalNamespace::BeatmapLevelPackCollectionSO* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_4
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_4(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMaskModelSO _songPackMaskModel
::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMask _allSongPackMask
::GlobalNamespace::SongPackMask& GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allSongPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMasksModel.GetAllSongsMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::GetAllSongsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetAllSongsMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllSongsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask));
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask), byref(plural));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationTokenPlatformExtensions
#include "GlobalNamespace/AuthenticationTokenPlatformExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToAuthenticationTokenPlatform
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform(::GlobalNamespace::UserInfo::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToAuthenticationTokenPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AuthenticationToken::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToUserInfoPlatform
::GlobalNamespace::UserInfo::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform(::GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToUserInfoPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UserInfo::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel
#include "GlobalNamespace/BaseNetworkPlayerModel.hpp"
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <discoveryEnabled>k__BackingField
bool& GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<discoveryEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerCreatedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerDestroyedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyManager
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectedOrConnecting
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectionOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.INetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel_get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel.get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayerModel.get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isServer
bool GlobalNamespace::BaseNetworkPlayerModel::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isClient
bool GlobalNamespace::BaseNetworkPlayerModel::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerConnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: BaseNetworkPlayerModel.Connected
void GlobalNamespace::BaseNetworkPlayerModel::Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Connected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnected
void GlobalNamespace::BaseNetworkPlayerModel::Disconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Disconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyConnectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyConnectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Log
void GlobalNamespace::BaseNetworkPlayerModel::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BaseNetworkPlayerModel.OnDestroy
void GlobalNamespace::BaseNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Update
void GlobalNamespace::BaseNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public INetworkPlayerModel partyManager
::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
