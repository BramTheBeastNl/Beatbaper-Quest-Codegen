// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.MeansImplicitUseAttribute
#include "JetBrains/Annotations/MeansImplicitUseAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: JetBrains.Annotations.MeansImplicitUseAttribute.get_UseKindFlags
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::MeansImplicitUseAttribute::get_UseKindFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("MeansImplicitUseAttribute").WithContext("get_UseKindFlags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseKindFlags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<JetBrains::Annotations::ImplicitUseKindFlags, false>(this, ___internal__method);
}
// Autogenerated method: JetBrains.Annotations.MeansImplicitUseAttribute.set_UseKindFlags
void JetBrains::Annotations::MeansImplicitUseAttribute::set_UseKindFlags(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("MeansImplicitUseAttribute").WithContext("set_UseKindFlags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_UseKindFlags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JetBrains.Annotations.MeansImplicitUseAttribute.get_TargetFlags
JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::MeansImplicitUseAttribute::get_TargetFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("MeansImplicitUseAttribute").WithContext("get_TargetFlags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TargetFlags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<JetBrains::Annotations::ImplicitUseTargetFlags, false>(this, ___internal__method);
}
// Autogenerated method: JetBrains.Annotations.MeansImplicitUseAttribute.set_TargetFlags
void JetBrains::Annotations::MeansImplicitUseAttribute::set_TargetFlags(JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("JetBrains::Annotations").WithContext("MeansImplicitUseAttribute").WithContext("set_TargetFlags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_TargetFlags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
