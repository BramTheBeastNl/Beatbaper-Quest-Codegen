// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionMapAnimationController/<>c
#include "GlobalNamespace/MissionMapAnimationController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionMapAnimationController/<>c <>9
::GlobalNamespace::MissionMapAnimationController::$$c* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionMapAnimationController::$$c*>("", "MissionMapAnimationController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionMapAnimationController/<>c <>9
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9(::GlobalNamespace::MissionMapAnimationController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0(::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1(::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_1", value)));
}
// Autogenerated method: MissionMapAnimationController/<>c..cctor
void GlobalNamespace::MissionMapAnimationController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionMapAnimationController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_0
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_0(::GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_1
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_1(::GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15
#include "GlobalNamespace/MissionMapAnimationController_-UpdateNodesAndConnectionCoroutine-d__15.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionMapAnimationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] <newEnabledConnection>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$newEnabledConnection$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$newEnabledConnection$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newEnabledConnection>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] <>7__wrap2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionDataSO _missionDataSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionDataSO*& GlobalNamespace::MissionNode::dyn__missionDataSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__missionDataSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionDataSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _letterPartName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MissionNode::dyn__letterPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__letterPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_letterPartName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberPartName
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionNode::dyn__numberPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__numberPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberPartName"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionNode::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _missionNodeVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNode::dyn__missionNodeVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__missionNodeVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodeVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _childNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNode::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNode.get_missionData
::GlobalNamespace::MissionDataSO* GlobalNamespace::MissionNode::get_missionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_childNodes
::ArrayW<::GlobalNamespace::MissionNode*> GlobalNamespace::MissionNode::get_childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_childNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNode*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionNodeVisualController
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNode::get_missionNodeVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionNodeVisualController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNodeVisualController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_letterPartName
::StringW GlobalNamespace::MissionNode::get_letterPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_letterPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_letterPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_numberPartName
int GlobalNamespace::MissionNode::get_numberPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_numberPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionId
::StringW GlobalNamespace::MissionNode::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_formattedMissionNodeName
::StringW GlobalNamespace::MissionNode::get_formattedMissionNodeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_formattedMissionNodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_formattedMissionNodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_position
::UnityEngine::Vector2 GlobalNamespace::MissionNode::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_radius
float GlobalNamespace::MissionNode::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _separator
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionNodeConnection::dyn__separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__separator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _width
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionNodeConnection::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionNodeConnection::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionNodeConnection::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _parentMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeConnection::dyn__parentMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__parentMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _childMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeConnection::dyn__childMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__childMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::MissionNodeConnection::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _parentMissionNodePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::MissionNodeConnection::dyn__parentMissionNodePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__parentMissionNodePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentMissionNodePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _childMissionNodePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::MissionNodeConnection::dyn__childMissionNodePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__childMissionNodePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childMissionNodePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeConnection::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeConnection.get_parentMissionNode
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_parentMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_parentMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_childMissionNode
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_childMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_childMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_isActive
bool GlobalNamespace::MissionNodeConnection::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_isActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.Setup
void GlobalNamespace::MissionNodeConnection::Setup(::GlobalNamespace::MissionNodeVisualController* parentMissionNode, ::GlobalNamespace::MissionNodeVisualController* childMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentMissionNode), ::il2cpp_utils::ExtractType(childMissionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentMissionNode, childMissionNode);
}
// Autogenerated method: MissionNodeConnection.UpdateConnectionRectTransform
void GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConnectionRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.SetActive
void GlobalNamespace::MissionNodeConnection::SetActive(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: MissionNodeConnection.MissionConnectionEnabledDidFinish
void GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionConnectionEnabledDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeGizmos
#include "GlobalNamespace/MissionNodeGizmos.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodeGizmos::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::MissionNodeGizmos::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CampaignProgressModel _missionProgressModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::MissionNodeGizmos::dyn__missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__missionProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionProgressModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeNameGenerator
#include "GlobalNamespace/MissionNodeNameGenerator.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionNodeNameGenerator::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeNameGenerator::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeSelectionManager
#include "GlobalNamespace/MissionNodeSelectionManager.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> didSelectMissionNodeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeSelectionManager::dyn_didSelectMissionNodeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn_didSelectMissionNodeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectMissionNodeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _missionNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _selectedNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeSelectionManager::dyn__selectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__selectedNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeSelectionManager.add_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.remove_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.DeselectSelectedNode
void GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeselectSelectedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.Start
void GlobalNamespace::MissionNodeSelectionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.OnDestroy
void GlobalNamespace::MissionNodeSelectionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasSelect
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect(::GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNodeWasSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasDisplayed
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed(::GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNodeWasDisplayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeUpdatePositionInEditMode
#include "GlobalNamespace/MissionNodeUpdatePositionInEditMode.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection _missionNodeConnection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeConnection*& GlobalNamespace::MissionNodeUpdatePositionInEditMode::dyn__missionNodeConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeUpdatePositionInEditMode::dyn__missionNodeConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodeConnection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionToggle _missionToggle
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionToggle*& GlobalNamespace::MissionNodeVisualController::dyn__missionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__missionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionToggle"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodeVisualController::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> nodeWasSelectEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeVisualController::dyn_nodeWasSelectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn_nodeWasSelectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeWasSelectEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> nodeWasDisplayedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeVisualController::dyn_nodeWasDisplayedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn_nodeWasDisplayedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeWasDisplayedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__cleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeVisualController.get_missionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodeVisualController::get_missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_missionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_selected
bool GlobalNamespace::MissionNodeVisualController::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_isInitialized
bool GlobalNamespace::MissionNodeVisualController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_cleared
bool GlobalNamespace::MissionNodeVisualController::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_interactable
bool GlobalNamespace::MissionNodeVisualController::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.add_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.add_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.SetSelected
void GlobalNamespace::MissionNodeVisualController::SetSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.OnEnable
void GlobalNamespace::MissionNodeVisualController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Awake
void GlobalNamespace::MissionNodeVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Start
void GlobalNamespace::MissionNodeVisualController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Reset
void GlobalNamespace::MissionNodeVisualController::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.OnDestroy
void GlobalNamespace::MissionNodeVisualController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Init
void GlobalNamespace::MissionNodeVisualController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Setup
void GlobalNamespace::MissionNodeVisualController::Setup(bool cleared, bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cleared), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cleared, interactable);
}
// Autogenerated method: MissionNodeVisualController.SetupToggle
void GlobalNamespace::MissionNodeVisualController::SetupToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetupToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetMissionCleared
void GlobalNamespace::MissionNodeVisualController::SetMissionCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetInteractable
void GlobalNamespace::MissionNodeVisualController::SetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.ChangeNodeSelection
void GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeNodeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: MissionNodeVisualController.HandleMissionToggleSelectionDidChange
void GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange(::GlobalNamespace::MissionToggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionToggleSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodesHelper
#include "GlobalNamespace/MissionNodesHelper.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodesHelper.GetAllNodesFromRoot
::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot(::GlobalNamespace::MissionNode* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "GetAllNodesFromRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: MissionNodesHelper.VisitAllTree
void GlobalNamespace::MissionNodesHelper::VisitAllTree(::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::VisitAllTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "VisitAllTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visitedNodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, visitedNodes);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(::GlobalNamespace::MissionNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(::GlobalNamespace::MissionNode* node, int layer, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MissionNode*, int>* layers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(layers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, layer, layers);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(::GlobalNamespace::MissionNode* finalNode, ::GlobalNamespace::MissionNode* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finalNode), ::il2cpp_utils::ExtractType(rootNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finalNode, rootNode);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(::GlobalNamespace::MissionNode* finalNode, ::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finalNode), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visitedNodes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finalNode, node, visitedNodes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNode _rootMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodesManager::dyn__rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__rootMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _finalMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodesManager::dyn__finalMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__finalMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStagesManager _missionStagesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStagesManager*& GlobalNamespace::MissionNodesManager::dyn__missionStagesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionStagesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStagesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStagesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectionsParentObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionNodesManager::dyn__connectionsParentObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__connectionsParentObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionsParentObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _missionNodesParentObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionNodesManager::dyn__missionNodesParentObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionNodesParentObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesParentObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CampaignProgressModel _missionProgressModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::MissionNodesManager::dyn__missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionProgressModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] _allMissionNodeConnections
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionNodesManager::dyn__allMissionNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__allMissionNodeConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionNodeConnections"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _allMissionNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNodesManager::dyn__allMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__allMissionNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodesManager::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodesManager.get_rootMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_rootMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_finalMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_finalMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_finalMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionStagesManager
::GlobalNamespace::MissionStagesManager* GlobalNamespace::MissionNodesManager::get_missionStagesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_missionStagesManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionStagesManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionStagesManager*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionProgressModel
::GlobalNamespace::CampaignProgressModel* GlobalNamespace::MissionNodesManager::get_missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_missionProgressModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionProgressModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CampaignProgressModel*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_allMissionNodes
::ArrayW<::GlobalNamespace::MissionNode*> GlobalNamespace::MissionNodesManager::get_allMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_allMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNode*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_IsInitialized
bool GlobalNamespace::MissionNodesManager::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.Awake
void GlobalNamespace::MissionNodesManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeMap
void GlobalNamespace::MissionNodesManager::SetupNodeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.MissionWasCleared
bool GlobalNamespace::MissionNodesManager::MissionWasCleared(::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::MissionWasCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionWasCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodesManager.GetMissionNodeWithModelClearedStateInconsistency
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMissionNodeWithModelClearedStateInconsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.DidFirstLockedMissionStageChange
bool GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidFirstLockedMissionStageChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.UpdateStageLockText
void GlobalNamespace::MissionNodesManager::UpdateStageLockText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetTopMostNotClearedMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopMostNotClearedMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
void GlobalNamespace::MissionNodesManager::GetAllMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesManager::GetAllMissionNodes(::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visited)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>*, false>(this, ___internal__method, node, visited);
}
// Autogenerated method: MissionNodesManager.GetNewEnabledConnection
::ArrayW<::GlobalNamespace::MissionNodeConnection*> GlobalNamespace::MissionNodesManager::GetNewEnabledConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetNewEnabledConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewEnabledConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNodeConnection*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.ResetAllNodes
void GlobalNamespace::MissionNodesManager::ResetAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::ResetAllNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAllNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupStages
void GlobalNamespace::MissionNodesManager::SetupStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupStages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupStages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.RegisterAllNodes
void GlobalNamespace::MissionNodesManager::RegisterAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::RegisterAllNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterAllNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeTree
void GlobalNamespace::MissionNodesManager::SetupNodeTree(::GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(parentCleared)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.IsNodeInteractable
bool GlobalNamespace::MissionNodesManager::IsNodeInteractable(::GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::IsNodeInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNodeInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(parentCleared)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.SetupNodeConnections
void GlobalNamespace::MissionNodesManager::SetupNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _text
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& GlobalNamespace::MissionStageLockView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionStageLockView::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dstPosY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__dstPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__dstPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dstPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__animationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startAnimationTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__startAnimationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__startAnimationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAnimationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionStageLockView.UpdateLocalPositionY
void GlobalNamespace::MissionStageLockView::UpdateLocalPositionY(float dstPosY, bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::UpdateLocalPositionY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalPositionY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dstPosY), ::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(animationDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dstPosY, animated, animationDuration);
}
// Autogenerated method: MissionStageLockView.Update
void GlobalNamespace::MissionStageLockView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStageLockView.UpdateStageLockText
void GlobalNamespace::MissionStageLockView::UpdateStageLockText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionStageLockView _missionStageLockView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStageLockView*& GlobalNamespace::MissionStagesManager::dyn__missionStageLockView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__missionStageLockView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStageLockView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStageLockView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStage[] _missionStages
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionStage*>& GlobalNamespace::MissionStagesManager::dyn__missionStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__missionStages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStages"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionStage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStage _firstLockedMissionStage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStage*& GlobalNamespace::MissionStagesManager::dyn__firstLockedMissionStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__firstLockedMissionStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstLockedMissionStage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionStagesManager.get_firstLockedMissionStage
::GlobalNamespace::MissionStage* GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstLockedMissionStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionStage*, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateFirtsLockedMissionStage
void GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFirtsLockedMissionStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfClearedMissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated method: MissionStagesManager.InitStages
void GlobalNamespace::MissionStagesManager::InitStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::InitStages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPosition
void GlobalNamespace::MissionStagesManager::UpdateStageLockPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPositionAnimated
void GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated(bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockPositionAnimated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(animationDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, animationDuration);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockText
void GlobalNamespace::MissionStagesManager::UpdateStageLockText(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfClearedMissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionStagesManager/<>c <>9
::GlobalNamespace::MissionStagesManager::$$c* GlobalNamespace::MissionStagesManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionStagesManager::$$c*>("", "MissionStagesManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionStagesManager/<>c <>9
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9(::GlobalNamespace::MissionStagesManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
::System::Func_2<::GlobalNamespace::MissionStage*, int>* GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionStage*, int>*>("", "MissionStagesManager/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::MissionStage*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9__6_0", value)));
}
// Autogenerated method: MissionStagesManager/<>c..cctor
void GlobalNamespace::MissionStagesManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionStagesManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionStagesManager/<>c.<InitStages>b__6_0
int GlobalNamespace::MissionStagesManager::$$c::$InitStages$b__6_0(::GlobalNamespace::MissionStage* stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::<InitStages>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitStages>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stage)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.Interactable
#include "HMUI/Interactable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _missionToggleWasPressedSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Signal*& GlobalNamespace::MissionToggle::dyn__missionToggleWasPressedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__missionToggleWasPressedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionToggleWasPressedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MissionToggle::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _lockedImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__lockedImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__lockedImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockedImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _clearedImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__clearedImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__clearedImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _strokeImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__strokeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__strokeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strokeImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Interactable _vrInteractable
[[deprecated("Use field access instead!")]] ::HMUI::Interactable*& GlobalNamespace::MissionToggle::dyn__vrInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__vrInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInteractable"))->offset;
  return *reinterpret_cast<::HMUI::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _invertColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__invertColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__invertColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionToggle> selectionDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionToggle*>*& GlobalNamespace::MissionToggle::dyn_selectionDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn_selectionDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionToggle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _missionCleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__missionCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__missionCleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionCleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionToggle.set_missionCleared
void GlobalNamespace::MissionToggle::set_missionCleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_missionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_selected
bool GlobalNamespace::MissionToggle::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_selected
void GlobalNamespace::MissionToggle::set_selected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_interactable
bool GlobalNamespace::MissionToggle::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_interactable
void GlobalNamespace::MissionToggle::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_highlighted
bool GlobalNamespace::MissionToggle::get_highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.add_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::add_selectionDidChangeEvent(::System::Action_1<::GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::add_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.remove_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent(::System::Action_1<::GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.ChangeSelection
void GlobalNamespace::MissionToggle::ChangeSelection(bool value, bool callSelectionDidChange, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::ChangeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callSelectionDidChange), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, callSelectionDidChange, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.ChangeHighlight
void GlobalNamespace::MissionToggle::ChangeHighlight(bool value, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::ChangeHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.SetText
void GlobalNamespace::MissionToggle::SetText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: MissionToggle.InternalToggle
void GlobalNamespace::MissionToggle::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::InternalToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.RefreshUI
void GlobalNamespace::MissionToggle::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.OnPointerClick
void GlobalNamespace::MissionToggle::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnSubmit
void GlobalNamespace::MissionToggle::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerEnter
void GlobalNamespace::MissionToggle::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerExit
void GlobalNamespace::MissionToggle::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.Start
void GlobalNamespace::MissionToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupController
#include "GlobalNamespace/AutoSetupController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _closeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::AutoSetupController::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _selectBasedOnSuggestionsToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__selectBasedOnSuggestionsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__selectBasedOnSuggestionsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectBasedOnSuggestionsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _autoStartWhenAllReadyToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__autoStartWhenAllReadyToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__autoStartWhenAllReadyToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoStartWhenAllReadyToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _forceAutoStartAfterSongSelectionToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__forceAutoStartAfterSongSelectionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__forceAutoStartAfterSongSelectionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceAutoStartAfterSongSelectionToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _randomSongIfNoneSuggestedToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__randomSongIfNoneSuggestedToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__randomSongIfNoneSuggestedToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSongIfNoneSuggestedToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<AutoSetupData> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::AutoSetupData*>*& GlobalNamespace::AutoSetupController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::AutoSetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::AutoSetupController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::AutoSetupController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AutoSetupData _autoSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AutoSetupData*& GlobalNamespace::AutoSetupController::dyn__autoSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__autoSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AutoSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutoSetupController.add_didFinishEvent
void GlobalNamespace::AutoSetupController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.remove_didFinishEvent
void GlobalNamespace::AutoSetupController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.Setup
void GlobalNamespace::AutoSetupController::Setup(::GlobalNamespace::AutoSetupData* autoSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoSetupData);
}
// Autogenerated method: AutoSetupController.OnEnable
void GlobalNamespace::AutoSetupController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.OnDisable
void GlobalNamespace::AutoSetupController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_0
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_1
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_2
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_3
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_4
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean selectBasedOnSuggestions
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_selectBasedOnSuggestions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_selectBasedOnSuggestions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectBasedOnSuggestions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoStartWhenAllReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_autoStartWhenAllReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_autoStartWhenAllReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStartWhenAllReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forceAutoStartAfterSongSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_forceAutoStartAfterSongSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_forceAutoStartAfterSongSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceAutoStartAfterSongSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean randomSongIfNoneSuggested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_randomSongIfNoneSuggested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_randomSongIfNoneSuggested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomSongIfNoneSuggested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kGongTime
float GlobalNamespace::CountdownController::_get_kGongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::_get_kGongTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "CountdownController", "kGongTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kGongTime
void GlobalNamespace::CountdownController::_set_kGongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::_set_kGongTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CountdownController", "kGongTime", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CountdownController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CountdownElementController[] _countdownElementControllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CountdownElementController*>& GlobalNamespace::CountdownController::dyn__countdownElementControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownElementControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownElementControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CountdownElementController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ITimeProvider _timeProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ITimeProvider*& GlobalNamespace::CountdownController::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _countdownEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CountdownController::dyn__countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentRemainingSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CountdownController::dyn__currentRemainingSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__currentRemainingSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRemainingSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gongSounded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CountdownController::dyn__gongSounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__gongSounded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gongSounded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _countdownRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CountdownController::dyn__countdownRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<CountdownElementController> _countdownElementControllerQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::CountdownElementController*>*& GlobalNamespace::CountdownController::dyn__countdownElementControllerQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownElementControllerQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownElementControllerQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::CountdownElementController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CountdownController.Awake
void GlobalNamespace::CountdownController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.Update
void GlobalNamespace::CountdownController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.StartCountdown
void GlobalNamespace::CountdownController::StartCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.UpdateCountdown
void GlobalNamespace::CountdownController::UpdateCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::UpdateCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.StopCountdown
void GlobalNamespace::CountdownController::StopCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::CountdownElementController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _animation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& GlobalNamespace::CountdownElementController::dyn__animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::dyn__animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CountdownElementController.SetTextAndRunAnimation
void GlobalNamespace::CountdownElementController::SetTextAndRunAnimation(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::SetTextAndRunAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextAndRunAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: CountdownElementController.StopAndHide
void GlobalNamespace::CountdownElementController::StopAndHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::StopAndHide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAndHide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterScreenLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelBasePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelBasePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelBasePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelCountdownPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelCountdownPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelCountdownPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelCountdownPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::$Move$b__7_0(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenSystem
#include "GlobalNamespace/MultiplayerLobbyCenterScreenSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterStageLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelBasePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelBasePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelBasePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelCountdownPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelCountdownPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelCountdownPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelCountdownPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::$Move$b__7_0(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerObjectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerObjectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerObjectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerObjectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CenterStageScreenController _centerStageScreenController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CenterStageScreenController*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerStageScreenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerStageScreenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerStageScreenController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CenterStageScreenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.Init
void GlobalNamespace::MultiplayerLobbyCenterStageManager::Init(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.ActivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateCenterStageManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.DeactivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateCenterStageManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.RecalculateCenterPosition
void GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateCenterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateServerFormController
#include "GlobalNamespace/CreateServerFormController.hpp"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMinPlayers
int GlobalNamespace::CreateServerFormController::_get_kMinPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_get_kMinPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMinPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMinPlayers
void GlobalNamespace::CreateServerFormController::_set_kMinPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_set_kMinPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMinPlayers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPlayers
int GlobalNamespace::CreateServerFormController::_get_kMaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_get_kMaxPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMaxPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPlayers
void GlobalNamespace::CreateServerFormController::_set_kMaxPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_set_kMaxPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMaxPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private FormattedFloatListSettingsController _maxPlayersList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FormattedFloatListSettingsController*& GlobalNamespace::CreateServerFormController::dyn__maxPlayersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::dyn__maxPlayersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPlayersList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FormattedFloatListSettingsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _netDiscoverable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CreateServerFormController::dyn__netDiscoverable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::dyn__netDiscoverable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDiscoverable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreateServerFormController.get_formData
::GlobalNamespace::CreateServerFormData GlobalNamespace::CreateServerFormController::get_formData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::get_formData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_formData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CreateServerFormData, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerFormController.Setup
void GlobalNamespace::CreateServerFormController::Setup(int selectedNumberOfPlayers, bool netDiscoverable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedNumberOfPlayers), ::il2cpp_utils::ExtractType(netDiscoverable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedNumberOfPlayers, netDiscoverable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsDropdown
#include "GlobalNamespace/BeatmapCharacteristicsDropdown.hpp"
// Including type: BeatmapCharacteristicsDropdown/<>c
#include "GlobalNamespace/BeatmapCharacteristicsDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapCharacteristicSO> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.Start
void GlobalNamespace::BeatmapCharacteristicsDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.GetSelectedBeatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.SelectCellWithBeatmapCharacteristic
void GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsDropdown/<>c
#include "GlobalNamespace/BeatmapCharacteristicsDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapCharacteristicsDropdown/<>c <>9
::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c* GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c*>("", "BeatmapCharacteristicsDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapCharacteristicsDropdown/<>c <>9
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9(::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicsDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapCharacteristicSO,System.String> <>9__5_0
::System::Func_2<::GlobalNamespace::BeatmapCharacteristicSO*, ::StringW>* GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapCharacteristicSO*, ::StringW>*>("", "BeatmapCharacteristicsDropdown/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapCharacteristicSO,System.String> <>9__5_0
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9__5_0(::System::Func_2<::GlobalNamespace::BeatmapCharacteristicSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicsDropdown/<>c", "<>9__5_0", value)));
}
// Autogenerated method: BeatmapCharacteristicsDropdown/<>c..cctor
void GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapCharacteristicsDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown/<>c.<Start>b__5_0
::StringW GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::$Start$b__5_0(::GlobalNamespace::BeatmapCharacteristicSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::$$c::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: BeatmapDifficultyDropdown/<>c
#include "GlobalNamespace/BeatmapDifficultyDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::BeatmapDifficultyDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::BeatmapDifficultyDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<BeatmapDifficultyMask,System.String>> _beatmapDifficultyData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*>*& GlobalNamespace::BeatmapDifficultyDropdown::dyn__beatmapDifficultyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::dyn__beatmapDifficultyData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficultyData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <includeAllDifficulties>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDifficultyDropdown::dyn_$includeAllDifficulties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::dyn_$includeAllDifficulties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<includeAllDifficulties>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDifficultyDropdown.get_beatmapDifficultyData
::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*>* GlobalNamespace::BeatmapDifficultyDropdown::get_beatmapDifficultyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::get_beatmapDifficultyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficultyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.get_includeAllDifficulties
bool GlobalNamespace::BeatmapDifficultyDropdown::get_includeAllDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::get_includeAllDifficulties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_includeAllDifficulties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.set_includeAllDifficulties
void GlobalNamespace::BeatmapDifficultyDropdown::set_includeAllDifficulties(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::set_includeAllDifficulties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_includeAllDifficulties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapDifficultyDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapDifficultyDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultyDropdown.Start
void GlobalNamespace::BeatmapDifficultyDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.OnDestroy
void GlobalNamespace::BeatmapDifficultyDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.GetSelectedBeatmapDifficultyMask
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyDropdown::GetSelectedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::GetSelectedBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown.SelectCellWithBeatmapDifficultyMask
void GlobalNamespace::BeatmapDifficultyDropdown::SelectCellWithBeatmapDifficultyMask(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::SelectCellWithBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficultyMask);
}
// Autogenerated method: BeatmapDifficultyDropdown.GetIdxForBeatmapDifficultyMask
int GlobalNamespace::BeatmapDifficultyDropdown::GetIdxForBeatmapDifficultyMask(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::GetIdxForBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, beatmapDifficultyMask);
}
// Autogenerated method: BeatmapDifficultyDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::BeatmapDifficultyDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyDropdown/<>c
#include "GlobalNamespace/BeatmapDifficultyDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDifficultyDropdown/<>c <>9
::GlobalNamespace::BeatmapDifficultyDropdown::$$c* GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyDropdown::$$c*>("", "BeatmapDifficultyDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDifficultyDropdown/<>c <>9
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9(::GlobalNamespace::BeatmapDifficultyDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDifficultyDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<BeatmapDifficultyMask,System.String>,System.String> <>9__11_0
::System::Func_2<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*, ::StringW>* GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*, ::StringW>*>("", "BeatmapDifficultyDropdown/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<BeatmapDifficultyMask,System.String>,System.String> <>9__11_0
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9__11_0(::System::Func_2<::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDifficultyDropdown/<>c", "<>9__11_0", value)));
}
// Autogenerated method: BeatmapDifficultyDropdown/<>c..cctor
void GlobalNamespace::BeatmapDifficultyDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDifficultyDropdown/<>c.<Start>b__11_0
::StringW GlobalNamespace::BeatmapDifficultyDropdown::$$c::$Start$b__11_0(::System::Tuple_2<::GlobalNamespace::BeatmapDifficultyMask, ::StringW>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyDropdown::$$c::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean filterByDifficulty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_filterByDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filterByDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterByDifficulty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficultyMask filteredDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::GameServersFilter::dyn_filteredDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filteredDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filteredDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean filterByModifiers
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_filterByModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filterByModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterByModifiers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayModifierMask filteredModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierMask& GlobalNamespace::GameServersFilter::dyn_filteredModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filteredModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filteredModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean filterBySongPacks
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_filterBySongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filterBySongPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterBySongPacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongPackMask filteredSongPacks
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::GameServersFilter::dyn_filteredSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_filteredSongPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filteredSongPacks"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showFull
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_showFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_showFull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showFull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showProtected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_showProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_showProtected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showProtected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showInternetGames
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersFilter::dyn_showInternetGames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilter::dyn_showInternetGames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showInternetGames"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersDropdown
#include "GlobalNamespace/GameplayModifiersDropdown.hpp"
// Including type: GameplayModifiersDropdown/<>c
#include "GlobalNamespace/GameplayModifiersDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::GameplayModifiersDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::GameplayModifiersDropdown::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::GameplayModifiersDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Tuple`2<GameplayModifierMask,System.String>> _gameplayModifiersData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*>*& GlobalNamespace::GameplayModifiersDropdown::dyn__gameplayModifiersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::dyn__gameplayModifiersData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifiersDropdown.get_gameplayModifiersData
::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*>* GlobalNamespace::GameplayModifiersDropdown::get_gameplayModifiersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::get_gameplayModifiersData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiersData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*>*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::GameplayModifiersDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::GameplayModifiersDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayModifiersDropdown.Start
void GlobalNamespace::GameplayModifiersDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.OnDestroy
void GlobalNamespace::GameplayModifiersDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.GetSelectedGameplayModifierMask
::GlobalNamespace::GameplayModifierMask GlobalNamespace::GameplayModifiersDropdown::GetSelectedGameplayModifierMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::GetSelectedGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifierMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifierMask, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown.SelectCellWithGameplayModifierMask
void GlobalNamespace::GameplayModifiersDropdown::SelectCellWithGameplayModifierMask(::GlobalNamespace::GameplayModifierMask gameplayModifierMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::SelectCellWithGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithGameplayModifierMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifierMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifierMask);
}
// Autogenerated method: GameplayModifiersDropdown.GetIdxForGameplayModifierMask
int GlobalNamespace::GameplayModifiersDropdown::GetIdxForGameplayModifierMask(::GlobalNamespace::GameplayModifierMask gameplayModifierMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::GetIdxForGameplayModifierMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForGameplayModifierMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifierMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, gameplayModifierMask);
}
// Autogenerated method: GameplayModifiersDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::GameplayModifiersDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: GameplayModifiersDropdown.<get_gameplayModifiersData>b__7_0
::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>* GlobalNamespace::GameplayModifiersDropdown::$get_gameplayModifiersData$b__7_0(::GlobalNamespace::GameplayModifierMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::<get_gameplayModifiersData>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_gameplayModifiersData>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersDropdown/<>c
#include "GlobalNamespace/GameplayModifiersDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GameplayModifiersDropdown/<>c <>9
::GlobalNamespace::GameplayModifiersDropdown::$$c* GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiersDropdown::$$c*>("", "GameplayModifiersDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GameplayModifiersDropdown/<>c <>9
void GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9(::GlobalNamespace::GameplayModifiersDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Tuple`2<GameplayModifierMask,System.String>,System.String> <>9__8_0
::System::Func_2<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*, ::StringW>* GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*, ::StringW>*>("", "GameplayModifiersDropdown/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Tuple`2<GameplayModifierMask,System.String>,System.String> <>9__8_0
void GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9__8_0(::System::Func_2<::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersDropdown/<>c", "<>9__8_0", value)));
}
// Autogenerated method: GameplayModifiersDropdown/<>c..cctor
void GlobalNamespace::GameplayModifiersDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GameplayModifiersDropdown/<>c.<Start>b__8_0
::StringW GlobalNamespace::GameplayModifiersDropdown::$$c::$Start$b__8_0(::System::Tuple_2<::GlobalNamespace::GameplayModifierMask, ::StringW>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersDropdown::$$c::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySongPacksDropdown
#include "GlobalNamespace/QuickPlaySongPacksDropdown.hpp"
// Including type: QuickPlaySongPacksDropdown/SongPackMaskItem
#include "GlobalNamespace/QuickPlaySongPacksDropdown_SongPackMaskItem.hpp"
// Including type: QuickPlaySongPacksDropdown/<>c__DisplayClass13_0
#include "GlobalNamespace/QuickPlaySongPacksDropdown_--c__DisplayClass13_0.hpp"
// Including type: QuickPlaySongPacksDropdown/<>c
#include "GlobalNamespace/QuickPlaySongPacksDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::QuickPlaySongPacksDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::QuickPlaySongPacksDropdown::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::QuickPlaySongPacksDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::QuickPlaySongPacksDropdown::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private QuickPlaySetupData/QuickPlaySongPacksOverride _quickPlaySongPacksOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride*& GlobalNamespace::QuickPlaySongPacksDropdown::dyn__quickPlaySongPacksOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn__quickPlaySongPacksOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlaySongPacksOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<QuickPlaySongPacksDropdown/SongPackMaskItem> _data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*>*& GlobalNamespace::QuickPlaySongPacksDropdown::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySongPacksDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::QuickPlaySongPacksDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySongPacksDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::QuickPlaySongPacksDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySongPacksDropdown.Start
void GlobalNamespace::QuickPlaySongPacksDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySongPacksDropdown.OnDestroy
void GlobalNamespace::QuickPlaySongPacksDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySongPacksDropdown.SetOverrideSongPacks
void GlobalNamespace::QuickPlaySongPacksDropdown::SetOverrideSongPacks(::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride* quickPlaySongPacksOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SetOverrideSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quickPlaySongPacksOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, quickPlaySongPacksOverride);
}
// Autogenerated method: QuickPlaySongPacksDropdown.GetSelectedSerializedName
::StringW GlobalNamespace::QuickPlaySongPacksDropdown::GetSelectedSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::GetSelectedSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySongPacksDropdown.SelectCellWithSerializedName
void GlobalNamespace::QuickPlaySongPacksDropdown::SelectCellWithSerializedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SelectCellWithSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: QuickPlaySongPacksDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::QuickPlaySongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: QuickPlaySongPacksDropdown.LazyInit
void GlobalNamespace::QuickPlaySongPacksDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySongPacksDropdown.<LazyInit>b__15_0
::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem* GlobalNamespace::QuickPlaySongPacksDropdown::$LazyInit$b__15_0(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::<LazyInit>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: QuickPlaySongPacksDropdown.<LazyInit>b__15_1
::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem* GlobalNamespace::QuickPlaySongPacksDropdown::$LazyInit$b__15_1(::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::<LazyInit>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySongPacksDropdown/SongPackMaskItem
#include "GlobalNamespace/QuickPlaySongPacksDropdown_SongPackMaskItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String localizedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_localizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_localizedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongPackMask songPackMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem::dyn_songPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySongPacksDropdown/<>c__DisplayClass13_0
#include "GlobalNamespace/QuickPlaySongPacksDropdown_--c__DisplayClass13_0.hpp"
// Including type: QuickPlaySongPacksDropdown/SongPackMaskItem
#include "GlobalNamespace/QuickPlaySongPacksDropdown_SongPackMaskItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySongPacksDropdown::$$c__DisplayClass13_0::dyn_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c__DisplayClass13_0::dyn_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySongPacksDropdown/<>c__DisplayClass13_0.<SelectCellWithSerializedName>b__0
bool GlobalNamespace::QuickPlaySongPacksDropdown::$$c__DisplayClass13_0::$SelectCellWithSerializedName$b__0(::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c__DisplayClass13_0::<SelectCellWithSerializedName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SelectCellWithSerializedName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySongPacksDropdown/<>c
#include "GlobalNamespace/QuickPlaySongPacksDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: QuickPlaySongPacksDropdown/SongPackMaskItem
#include "GlobalNamespace/QuickPlaySongPacksDropdown_SongPackMaskItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly QuickPlaySongPacksDropdown/<>c <>9
::GlobalNamespace::QuickPlaySongPacksDropdown::$$c* GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::QuickPlaySongPacksDropdown::$$c*>("", "QuickPlaySongPacksDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly QuickPlaySongPacksDropdown/<>c <>9
void GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9(::GlobalNamespace::QuickPlaySongPacksDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickPlaySongPacksDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName,System.Boolean> <>9__15_4
::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*, bool>* GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*, bool>*>("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName,System.Boolean> <>9__15_4
void GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_4(::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack,QuickPlaySongPacksDropdown/SongPackMaskItem> <>9__15_2
::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*, ::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*>* GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*, ::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*>*>("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack,QuickPlaySongPacksDropdown/SongPackMaskItem> <>9__15_2
void GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_2(::System::Func_2<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*, ::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<QuickPlaySongPacksDropdown/SongPackMaskItem,System.String> <>9__15_3
::System::Func_2<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, ::StringW>* GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_get_$$9__15_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, ::StringW>*>("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<QuickPlaySongPacksDropdown/SongPackMaskItem,System.String> <>9__15_3
void GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_3(::System::Func_2<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_set_$$9__15_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "QuickPlaySongPacksDropdown/<>c", "<>9__15_3", value)));
}
// Autogenerated method: QuickPlaySongPacksDropdown/<>c..cctor
void GlobalNamespace::QuickPlaySongPacksDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuickPlaySongPacksDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: QuickPlaySongPacksDropdown/<>c.<LazyInit>b__15_2
::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem* GlobalNamespace::QuickPlaySongPacksDropdown::$$c::$LazyInit$b__15_2(::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack* localizedPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::<LazyInit>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localizedPack)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem*, false>(this, ___internal__method, localizedPack);
}
// Autogenerated method: QuickPlaySongPacksDropdown/<>c.<LazyInit>b__15_4
bool GlobalNamespace::QuickPlaySongPacksDropdown::$$c::$LazyInit$b__15_4(::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName* packName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::<LazyInit>b__15_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__15_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packName);
}
// Autogenerated method: QuickPlaySongPacksDropdown/<>c.<LazyInit>b__15_3
::StringW GlobalNamespace::QuickPlaySongPacksDropdown::$$c::$LazyInit$b__15_3(::GlobalNamespace::QuickPlaySongPacksDropdown::SongPackMaskItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySongPacksDropdown::$$c::<LazyInit>b__15_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__15_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::SongPacksDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::SongPacksDropdown::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::SongPacksDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SongPacksDropdown::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _songPackSerializedNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::SongPacksDropdown::dyn__songPackSerializedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::dyn__songPackSerializedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPacksDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongPacksDropdown.LazyInit
void GlobalNamespace::SongPacksDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.Start
void GlobalNamespace::SongPacksDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.OnDestroy
void GlobalNamespace::SongPacksDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.SetOverrideSongPacks
void GlobalNamespace::SongPacksDropdown::SetOverrideSongPacks(::System::Collections::Generic::List_1<::StringW>* songPackSerializedNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::SetOverrideSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverrideSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackSerializedNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songPackSerializedNames);
}
// Autogenerated method: SongPacksDropdown.GetSelectedSongPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::GetSelectedSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPacksDropdown.SelectCellWithSongPackMask
void GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::SelectCellWithSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.GetIdxForSongPackMask
int GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::GetIdxForSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIdxForSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPacksDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPacksDropdown/<>c
#include "GlobalNamespace/SongPacksDropdown_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPacksDropdown/<>c <>9
::GlobalNamespace::SongPacksDropdown::$$c* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPacksDropdown::$$c*>("", "SongPacksDropdown/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPacksDropdown/<>c <>9
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9(::GlobalNamespace::SongPacksDropdown::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.String> <>9__7_0
::System::Func_2<::StringW, ::StringW>* GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, ::StringW>*>("", "SongPacksDropdown/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.String> <>9__7_0
void GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0(::System::Func_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPacksDropdown/<>c", "<>9__7_0", value)));
}
// Autogenerated method: SongPacksDropdown/<>c..cctor
void GlobalNamespace::SongPacksDropdown::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPacksDropdown/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPacksDropdown/<>c.<LazyInit>b__7_0
::StringW GlobalNamespace::SongPacksDropdown::$$c::$LazyInit$b__7_0(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPacksDropdown::$$c::<LazyInit>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LazyInit>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerLevelLoader::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::MultiplayerLevelLoader::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action stillDownloadingSongEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MultiplayerLevelLoader::dyn_stillDownloadingSongEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn_stillDownloadingSongEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stillDownloadingSongEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<ILevelGameplaySetupData,IDifficultyBeatmap> countdownFinishedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::ILevelGameplaySetupData*, ::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::MultiplayerLevelLoader::dyn_countdownFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn_countdownFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::ILevelGameplaySetupData*, ::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelLoader/MultiplayerBeatmapLoaderState _loaderState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState& GlobalNamespace::MultiplayerLevelLoader::dyn__loaderState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__loaderState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loaderState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _getBeatmapCancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::MultiplayerLevelLoader::dyn__getBeatmapCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__getBeatmapCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getBeatmapCancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<BeatmapLevelsModel/GetBeatmapLevelResult> _getBeatmapLevelResultTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*& GlobalNamespace::MultiplayerLevelLoader::dyn__getBeatmapLevelResultTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__getBeatmapLevelResultTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getBeatmapLevelResultTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ILevelGameplaySetupData _gameplaySetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILevelGameplaySetupData*& GlobalNamespace::MultiplayerLevelLoader::dyn__gameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__gameplaySetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILevelGameplaySetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::MultiplayerLevelLoader::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLevelLoader::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _stillDownloadingCalled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MultiplayerLevelLoader::dyn__stillDownloadingCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::dyn__stillDownloadingCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stillDownloadingCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelLoader.add_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::add_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_stillDownloadingSongEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::remove_stillDownloadingSongEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stillDownloadingSongEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.add_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent(::System::Action_2<::GlobalNamespace::ILevelGameplaySetupData*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::add_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.remove_countdownFinishedEvent
void GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent(::System::Action_2<::GlobalNamespace::ILevelGameplaySetupData*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::remove_countdownFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelLoader.LoadLevel
void GlobalNamespace::MultiplayerLevelLoader::LoadLevel(::GlobalNamespace::ILevelGameplaySetupData* gameplaySetupData, float initialStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::LoadLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplaySetupData), ::il2cpp_utils::ExtractType(initialStartTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplaySetupData, initialStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.SetNewStartTime
void GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime(float newStartTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::SetNewStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newStartTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newStartTime);
}
// Autogenerated method: MultiplayerLevelLoader.ClearLoading
void GlobalNamespace::MultiplayerLevelLoader::ClearLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::ClearLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelLoader.Tick
void GlobalNamespace::MultiplayerLevelLoader::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::Tick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader/MultiplayerBeatmapLoaderState
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading(::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap(::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown(::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: MultiplayerLobbyAvatarManager
#include "GlobalNamespace/MultiplayerLobbyAvatarManager.hpp"
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: MultiplayerLobbyAvatarPlaceManager
#include "GlobalNamespace/MultiplayerLobbyAvatarPlaceManager.hpp"
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyController::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyController::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarManager _multiplayerLobbyAvatarManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarManager*& GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyAvatarManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyAvatarManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyCenterStageManager _multiplayerLobbyCenterStageManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyCenterStageManager*& GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyCenterStageManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyCenterStageManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyCenterStageManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarPlaceManager _multiplayerLobbyAvatarPlaceManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager*& GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyAvatarPlaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__multiplayerLobbyAvatarPlaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyAvatarPlaceManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarPlaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuEnvironmentManager _menuEnvironmentManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuEnvironmentManager*& GlobalNamespace::MultiplayerLobbyController::dyn__menuEnvironmentManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn__menuEnvironmentManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuEnvironmentManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuEnvironmentManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <lobbyActivated>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MultiplayerLobbyController::dyn_$lobbyActivated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::dyn_$lobbyActivated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lobbyActivated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyController.get_lobbyActivated
bool GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::get_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lobbyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.set_lobbyActivated
void GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::set_lobbyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lobbyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyController.ActivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::ActivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyController.DeactivateMultiplayerLobby
void GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyController::DeactivateMultiplayerLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateMultiplayerLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuClient
#include "GlobalNamespace/MultiplayerMenuClient.hpp"
// Including type: MenuPlayerController
#include "GlobalNamespace/MenuPlayerController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MenuPlayerController _menuPlayerController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuPlayerController*& GlobalNamespace::MultiplayerMenuClient::dyn__menuPlayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerMenuClient::dyn__menuPlayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuPlayerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuPlayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::MultiplayerMenuClient::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerMenuClient::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerMenuClient.LateUpdate
void GlobalNamespace::MultiplayerMenuClient::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerMenuClient::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button[] _buttons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Button*>& GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Button*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI[] _buttonTexts
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttonTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttonTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonTexts"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer _player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::dyn__player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.get_player
::GlobalNamespace::INetworkPlayer* GlobalNamespace::NetworkPlayerOptionsTableCell::get_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::get_player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.set_player
void GlobalNamespace::NetworkPlayerOptionsTableCell::set_player(::GlobalNamespace::INetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::set_player");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_player", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Refresh
void GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Block
void GlobalNamespace::NetworkPlayerOptionsTableCell::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Unblock
void GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Unblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Join
void GlobalNamespace::NetworkPlayerOptionsTableCell::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Invite
void GlobalNamespace::NetworkPlayerOptionsTableCell::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Kick
void GlobalNamespace::NetworkPlayerOptionsTableCell::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Kick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerOptionsTableCell.Leave
void GlobalNamespace::NetworkPlayerOptionsTableCell::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerOptionsTableCell::Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::NetworkPlayerTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _separator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::NetworkPlayerTableCell::dyn__separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__separator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _privateIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::NetworkPlayerTableCell::dyn__privateIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__privateIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_privateIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _spectateIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::NetworkPlayerTableCell::dyn__spectateIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__spectateIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectateIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _partyLeaderIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::NetworkPlayerTableCell::dyn__partyLeaderIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__partyLeaderIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyLeaderIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::NetworkPlayerTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::NetworkPlayerTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _textColorNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::NetworkPlayerTableCell::dyn__textColorNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__textColorNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textColorNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _textColorMe
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::NetworkPlayerTableCell::dyn__textColorMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__textColorMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textColorMe"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _textColorSelected
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::NetworkPlayerTableCell::dyn__textColorSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__textColorSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textColorSelected"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkPlayerTableCell::dyn__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::dyn__isMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerTableCell.get_showSeparator
bool GlobalNamespace::NetworkPlayerTableCell::get_showSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::get_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.set_showSeparator
void GlobalNamespace::NetworkPlayerTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayerTableCell.get_activeColor
::UnityEngine::Color GlobalNamespace::NetworkPlayerTableCell::get_activeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::get_activeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.SetData
void GlobalNamespace::NetworkPlayerTableCell::SetData(::StringW userName, bool isOpenParty, bool wantsToPlayNextLevel, bool isMyPartyOwner, bool isMe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isOpenParty), ::il2cpp_utils::ExtractType(wantsToPlayNextLevel), ::il2cpp_utils::ExtractType(isMyPartyOwner), ::il2cpp_utils::ExtractType(isMe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userName, isOpenParty, wantsToPlayNextLevel, isMyPartyOwner, isMe);
}
// Autogenerated method: NetworkPlayerTableCell.RefreshVisuals
void GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerTableCell.SelectionDidChange
void GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: NetworkPlayerTableCell.HighlightDidChange
void GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersTableView
#include "GlobalNamespace/NetworkPlayersTableView.hpp"
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: NetworkPlayerTableCell
#include "GlobalNamespace/NetworkPlayerTableCell.hpp"
// Including type: NetworkPlayerOptionsTableCell
#include "GlobalNamespace/NetworkPlayerOptionsTableCell.hpp"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayerCellIdentifier
::StringW GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_get_kPlayerCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkPlayersTableView", "kPlayerCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayerCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_set_kPlayerCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kPlayerCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kHeaderCellIdentifier
::StringW GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_get_kHeaderCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkPlayersTableView", "kHeaderCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHeaderCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_set_kHeaderCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kHeaderCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kOptionsCellIdentifier
::StringW GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_get_kOptionsCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "NetworkPlayersTableView", "kOptionsCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kOptionsCellIdentifier
void GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::_set_kOptionsCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView", "kOptionsCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::NetworkPlayersTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkPlayerTableCell _playerCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerTableCell*& GlobalNamespace::NetworkPlayersTableView::dyn__playerCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__playerCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkPlayerOptionsTableCell _optionsCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerOptionsTableCell*& GlobalNamespace::NetworkPlayersTableView::dyn__optionsCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__optionsCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerOptionsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelPackHeaderTableCell _headerCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelPackHeaderTableCell*& GlobalNamespace::NetworkPlayersTableView::dyn__headerCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__headerCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelPackHeaderTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NetworkPlayersTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NetworkPlayersTableView/CellInfo> _cellInfo
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::NetworkPlayersTableView::CellInfo*>*& GlobalNamespace::NetworkPlayersTableView::dyn__cellInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__cellInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellInfo"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::NetworkPlayersTableView::CellInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedCellIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayersTableView::dyn__selectedCellIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__selectedCellIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _selectedPlayerID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayersTableView::dyn__selectedPlayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__selectedPlayerID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPlayerID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectedCellHasOptions
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkPlayersTableView::dyn__selectedCellHasOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::dyn__selectedCellHasOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellHasOptions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayersTableView.CellSize
float GlobalNamespace::NetworkPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.NumberOfCells
int GlobalNamespace::NetworkPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::NetworkPlayersTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: NetworkPlayersTableView.AddPlayers
void GlobalNamespace::NetworkPlayersTableView::AddPlayers(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* players, ::StringW title) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::AddPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(players), ::il2cpp_utils::ExtractType(title)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, players, title);
}
// Autogenerated method: NetworkPlayersTableView.SetParties
void GlobalNamespace::NetworkPlayersTableView::SetParties(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* partyPlayers, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* otherPlayers, ::StringW myPartyTitle, ::StringW otherPlayersTitle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::SetParties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyPlayers), ::il2cpp_utils::ExtractType(otherPlayers), ::il2cpp_utils::ExtractType(myPartyTitle), ::il2cpp_utils::ExtractType(otherPlayersTitle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partyPlayers, otherPlayers, myPartyTitle, otherPlayersTitle);
}
// Autogenerated method: NetworkPlayersTableView.HandleCellWasPressed
void GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed(::HMUI::TableView* tableView, ::HMUI::TableCell* tableCell) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::HandleCellWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(tableCell)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, tableCell);
}
// Autogenerated method: NetworkPlayersTableView.HasVisibleOptions
bool GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::HasVisibleOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkPlayersTableView", "HasVisibleOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersTableView/CellInfo
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NetworkPlayersTableView/CellInfo/CellType type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType& GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String headerString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_headerString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_headerString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headerString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public INetworkPlayer player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lastCellInParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_lastCellInParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::dyn_lastCellInParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCellInParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayersTableView/CellInfo/CellType
#include "GlobalNamespace/NetworkPlayersTableView_CellInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Header
::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Header"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Header
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header(::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Header", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Player
::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Player
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player(::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public NetworkPlayersTableView/CellInfo/CellType Options
::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_get_Options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType>("", "NetworkPlayersTableView/CellInfo/CellType", "Options"));
}
// Autogenerated static field setter
// Set static field: static public NetworkPlayersTableView/CellInfo/CellType Options
void GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options(::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::_set_Options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkPlayersTableView/CellInfo/CellType", "Options", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayersTableView::CellInfo::CellType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoolSettingsController
#include "GlobalNamespace/BoolSettingsController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::BoolSettingsController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoolSettingsController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoolSettingsController.GetInitValue
bool GlobalNamespace::BoolSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoolSettingsController::GetInitValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BoolSettingsController.ApplyValue
void GlobalNamespace::BoolSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BoolSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DropdownSettingsController
#include "GlobalNamespace/DropdownSettingsController.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _dropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::DropdownSettingsController::dyn__dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::dyn__dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action dropDownValueDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::DropdownSettingsController::dyn_dropDownValueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::dyn_dropDownValueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dropDownValueDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _idx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DropdownSettingsController::dyn__idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::dyn__idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DropdownSettingsController::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DropdownSettingsController.add_dropDownValueDidChangeEvent
void GlobalNamespace::DropdownSettingsController::add_dropDownValueDidChangeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::add_dropDownValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DropdownSettingsController.remove_dropDownValueDidChangeEvent
void GlobalNamespace::DropdownSettingsController::remove_dropDownValueDidChangeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::remove_dropDownValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_dropDownValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DropdownSettingsController.GetInitValues
bool GlobalNamespace::DropdownSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: DropdownSettingsController.ApplyValue
void GlobalNamespace::DropdownSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: DropdownSettingsController.TextForValue
::StringW GlobalNamespace::DropdownSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated method: DropdownSettingsController.OnEnable
void GlobalNamespace::DropdownSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.OnDisable
void GlobalNamespace::DropdownSettingsController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.HandleDropdownValueDidChange
void GlobalNamespace::DropdownSettingsController::HandleDropdownValueDidChange(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::HandleDropdownValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropdownValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: DropdownSettingsController.RefreshUI
void GlobalNamespace::DropdownSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DropdownSettingsController.Refresh
void GlobalNamespace::DropdownSettingsController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DropdownSettingsController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, applyValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::FormattedFloatListSettingsController::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _formattingString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FormattedFloatListSettingsController::dyn__formattingString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__formattingString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formattingString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FormattedFloatListSettingsController/ValueType valueType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FormattedFloatListSettingsController::ValueType& GlobalNamespace::FormattedFloatListSettingsController::dyn_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FormattedFloatListSettingsController::ValueType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<FormattedFloatListSettingsController,System.Single> valueDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::FormattedFloatListSettingsController*, float>*& GlobalNamespace::FormattedFloatListSettingsController::dyn_valueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn_valueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::FormattedFloatListSettingsController*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FormattedFloatListSettingsController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _min
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FormattedFloatListSettingsController::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _max
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FormattedFloatListSettingsController::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasValue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FormattedFloatListSettingsController::dyn__hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::dyn__hasValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FormattedFloatListSettingsController.get_value
float GlobalNamespace::FormattedFloatListSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.get_values
::ArrayW<float> GlobalNamespace::FormattedFloatListSettingsController::get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::get_values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: FormattedFloatListSettingsController.set_values
void GlobalNamespace::FormattedFloatListSettingsController::set_values(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::set_values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.add_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent(::System::Action_2<::GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent(::System::Action_2<::GlobalNamespace::FormattedFloatListSettingsController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FormattedFloatListSettingsController.SetValue
void GlobalNamespace::FormattedFloatListSettingsController::SetValue(float value, bool callCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, callCallback);
}
// Autogenerated method: FormattedFloatListSettingsController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: FormattedFloatListSettingsController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsController.TextForValue
::StringW GlobalNamespace::FormattedFloatListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normal
::GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal(::GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType Normalized
::GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized(::GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
::GlobalNamespace::FormattedFloatListSettingsController::ValueType GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsController::ValueType>("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized(::GlobalNamespace::FormattedFloatListSettingsController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsController/ValueType", "InvertedNormalized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FormattedFloatListSettingsController::ValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsController::ValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsValueController
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::FormattedFloatListSettingsValueController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::FormattedFloatListSettingsValueController::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _formattingString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FormattedFloatListSettingsValueController::dyn__formattingString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn__formattingString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formattingString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FormattedFloatListSettingsValueController/ValueType valueType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType& GlobalNamespace::FormattedFloatListSettingsValueController::dyn_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _min
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FormattedFloatListSettingsValueController::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn__min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _max
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FormattedFloatListSettingsValueController::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::dyn__max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FormattedFloatListSettingsValueController.GetInitValues
bool GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: FormattedFloatListSettingsValueController.ApplyValue
void GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: FormattedFloatListSettingsValueController.TextForValue
::StringW GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FormattedFloatListSettingsValueController/ValueType
#include "GlobalNamespace/FormattedFloatListSettingsValueController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normal
::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normal
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal(::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_Normalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "Normalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType Normalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized(::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_Normalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "Normalized", value));
}
// Autogenerated static field getter
// Get static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_get_InvertedNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType>("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized"));
}
// Autogenerated static field setter
// Set static field: static public FormattedFloatListSettingsValueController/ValueType InvertedNormalized
void GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized(::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::_set_InvertedNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FormattedFloatListSettingsValueController/ValueType", "InvertedNormalized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FormattedFloatListSettingsValueController::ValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IncDecSettingsController
#include "GlobalNamespace/IncDecSettingsController.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StepValuePicker _stepValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StepValuePicker*& GlobalNamespace::IncDecSettingsController::dyn__stepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::dyn__stepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IncDecSettingsController.set_enableDec
void GlobalNamespace::IncDecSettingsController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_enableInc
void GlobalNamespace::IncDecSettingsController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.set_text
void GlobalNamespace::IncDecSettingsController::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecSettingsController.Awake
void GlobalNamespace::IncDecSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.OnDestroy
void GlobalNamespace::IncDecSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.IncButtonPressed
void GlobalNamespace::IncDecSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecSettingsController.DecButtonPressed
void GlobalNamespace::IncDecSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IncDecSettingsController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InputFieldSettingsController
#include "GlobalNamespace/InputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _inputFieldView
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& GlobalNamespace::InputFieldSettingsController::dyn__inputFieldView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::dyn__inputFieldView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFieldView"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected StringSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StringSO*& GlobalNamespace::InputFieldSettingsController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StringSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InputFieldSettingsController.Awake
void GlobalNamespace::InputFieldSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnDestroy
void GlobalNamespace::InputFieldSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.OnEnable
void GlobalNamespace::InputFieldSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange(::HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InputFieldSettingsController::HandleInputFieldDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputFieldView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputFieldView);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntListSettingsController
#include "GlobalNamespace/IntListSettingsController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _customNumberOfElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::IntListSettingsController::dyn__customNumberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::dyn__customNumberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customNumberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _customIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::IntListSettingsController::dyn__customIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::dyn__customIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> valueChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::IntListSettingsController::dyn_valueChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::dyn_valueChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntListSettingsController.add_valueChangedEvent
void GlobalNamespace::IntListSettingsController::add_valueChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::add_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.remove_valueChangedEvent
void GlobalNamespace::IntListSettingsController::remove_valueChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::remove_valueChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntListSettingsController.InitValues
void GlobalNamespace::IntListSettingsController::InitValues(int numberOfElements, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::InitValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfElements), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfElements, index);
}
// Autogenerated method: IntListSettingsController.GetInitValues
bool GlobalNamespace::IntListSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: IntListSettingsController.ApplyValue
void GlobalNamespace::IntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: IntListSettingsController.TextForValue
::StringW GlobalNamespace::IntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListSettingsController
#include "GlobalNamespace/ListSettingsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _idx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ListSettingsController::dyn__idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::dyn__idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ListSettingsController::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListSettingsController.GetInitValues
bool GlobalNamespace::ListSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: ListSettingsController.ApplyValue
void GlobalNamespace::ListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.TextForValue
::StringW GlobalNamespace::ListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListSettingsController.OnEnable
void GlobalNamespace::ListSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.RefreshUI
void GlobalNamespace::ListSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.Refresh
void GlobalNamespace::ListSettingsController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, applyValue);
}
// Autogenerated method: ListSettingsController.IncButtonPressed
void GlobalNamespace::ListSettingsController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListSettingsController.DecButtonPressed
void GlobalNamespace::ListSettingsController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListSettingsController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedIntListSettingsController
#include "GlobalNamespace/NamedIntListSettingsController.hpp"
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IntSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IntSO*& GlobalNamespace::NamedIntListSettingsController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedIntListSettingsController/TextValuePair[] _textValuePairs
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::NamedIntListSettingsController::TextValuePair*>& GlobalNamespace::NamedIntListSettingsController::dyn__textValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::dyn__textValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textValuePairs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::NamedIntListSettingsController::TextValuePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListSettingsController.GetInitValues
bool GlobalNamespace::NamedIntListSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: NamedIntListSettingsController.ApplyValue
void GlobalNamespace::NamedIntListSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: NamedIntListSettingsController.TextForValue
::StringW GlobalNamespace::NamedIntListSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedIntListSettingsController/TextValuePair
#include "GlobalNamespace/NamedIntListSettingsController_TextValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String text
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NamedIntListSettingsController::TextValuePair::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::TextValuePair::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NamedIntListSettingsController::TextValuePair::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::TextValuePair::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListSettingsController/TextValuePair.get_localizedText
::StringW GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedIntListSettingsController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PresetsSettingsController
#include "GlobalNamespace/PresetsSettingsController.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IntSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IntSO*& GlobalNamespace::PresetsSettingsController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedPresetsSO _presets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedPresetsSO*& GlobalNamespace::PresetsSettingsController::dyn__presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::dyn__presets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _limitNumberOfElements
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PresetsSettingsController::dyn__limitNumberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::dyn__limitNumberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limitNumberOfElements"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElementsLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PresetsSettingsController::dyn__numberOfElementsLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::dyn__numberOfElementsLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElementsLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PresetsSettingsController.GetInitValues
bool GlobalNamespace::PresetsSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: PresetsSettingsController.ApplyValue
void GlobalNamespace::PresetsSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: PresetsSettingsController.TextForValue
::StringW GlobalNamespace::PresetsSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresetsSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SwitchSettingsController
#include "GlobalNamespace/SwitchSettingsController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::SwitchSettingsController::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _on
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SwitchSettingsController::dyn__on() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::dyn__on");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_on"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SwitchSettingsController.GetInitValue
bool GlobalNamespace::SwitchSettingsController::GetInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::GetInitValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.ApplyValue
void GlobalNamespace::SwitchSettingsController::ApplyValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SwitchSettingsController.Awake
void GlobalNamespace::SwitchSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnDestroy
void GlobalNamespace::SwitchSettingsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.OnEnable
void GlobalNamespace::SwitchSettingsController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.RefreshUI
void GlobalNamespace::SwitchSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SwitchSettingsController.HandleToggleValueDidChange
void GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SwitchSettingsController::HandleToggleValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleToggleValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UrlInputFieldSettingsController
#include "GlobalNamespace/UrlInputFieldSettingsController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UrlInputFieldSettingsController.HandleInputFieldDidChange
void GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange(::HMUI::InputFieldView* inputFieldView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UrlInputFieldSettingsController::HandleInputFieldDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputFieldView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputFieldView);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentEffectsFilterPresetDropdown
#include "GlobalNamespace/EnvironmentEffectsFilterPresetDropdown.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentEffectsFilterPresetDropdown.GetNamedValues
::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::EnvironmentEffectsFilterPreset, ::StringW>*>* GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetNamedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPresetDropdown::GetNamedValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::EnvironmentEffectsFilterPreset, ::StringW>*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSettingsController
#include "GlobalNamespace/LanguageSettingsController.hpp"
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LanguageSO _settingsValue
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LanguageSO*& GlobalNamespace::LanguageSettingsController::dyn__settingsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LanguageSettingsController::dyn__settingsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsValue"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LanguageSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LanguageSettingsController.GetInitValues
bool GlobalNamespace::LanguageSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LanguageSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: LanguageSettingsController.ApplyValue
void GlobalNamespace::LanguageSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LanguageSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: LanguageSettingsController.TextForValue
::StringW GlobalNamespace::LanguageSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LanguageSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteJumpDurationTypeSettingsDropdown
#include "GlobalNamespace/NoteJumpDurationTypeSettingsDropdown.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteJumpDurationTypeSettingsDropdown.GetNamedValues
::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::NoteJumpDurationTypeSettings, ::StringW>*>* GlobalNamespace::NoteJumpDurationTypeSettingsDropdown::GetNamedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettingsDropdown::GetNamedValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<::GlobalNamespace::NoteJumpDurationTypeSettings, ::StringW>*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteJumpStartBeatOffsetDropdown
#include "GlobalNamespace/NoteJumpStartBeatOffsetDropdown.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteJumpStartBeatOffsetDropdown.GetNamedValues
::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<float, ::StringW>*>* GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetNamedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpStartBeatOffsetDropdown::GetNamedValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::System::Tuple_2<float, ::StringW>*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeightSettingsController
#include "GlobalNamespace/PlayerHeightSettingsController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::PlayerHeightSettingsController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _setButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PlayerHeightSettingsController::dyn__setButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__setButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::PlayerHeightSettingsController::dyn__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::PlayerHeightSettingsController::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> valueDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& GlobalNamespace::PlayerHeightSettingsController::dyn_valueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn_valueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::PlayerHeightSettingsController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerHeightSettingsController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerHeightSettingsController.get_value
float GlobalNamespace::PlayerHeightSettingsController::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.add_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::add_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.remove_valueDidChangeEvent
void GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::remove_valueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightSettingsController.Awake
void GlobalNamespace::PlayerHeightSettingsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.Init
void GlobalNamespace::PlayerHeightSettingsController::Init(float playerHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerHeight);
}
// Autogenerated method: PlayerHeightSettingsController.AutoSetHeight
void GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::AutoSetHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightSettingsController.RefreshUI
void GlobalNamespace::PlayerHeightSettingsController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerHeightSettingsController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PresentServerSettingsAfterNClicks
#include "GlobalNamespace/PresentServerSettingsAfterNClicks.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
// Including type: SettingsFlowCoordinator
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _serverSettingsButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__serverSettingsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__serverSettingsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSettingsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _serverSettingsViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__serverSettingsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__serverSettingsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverSettingsViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfClicksRequired
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__numberOfClicksRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__numberOfClicksRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfClicksRequired"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SettingsFlowCoordinator _settingsFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SettingsFlowCoordinator*& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__settingsFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__settingsFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SettingsFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentNumberOfClicks
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__currentNumberOfClicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__currentNumberOfClicks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentNumberOfClicks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PresentServerSettingsAfterNClicks.OnEnable
void GlobalNamespace::PresentServerSettingsAfterNClicks::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PresentServerSettingsAfterNClicks.OnDisable
void GlobalNamespace::PresentServerSettingsAfterNClicks::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PresentServerSettingsAfterNClicks.<OnEnable>b__6_0
void GlobalNamespace::PresentServerSettingsAfterNClicks::$OnEnable$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PresentServerSettingsAfterNClicks::<OnEnable>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCameraSmoothnessSettingsController
#include "GlobalNamespace/SmoothCameraSmoothnessSettingsController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _smoothCameraPositionSmooth
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothCameraPositionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothCameraPositionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothCameraPositionSmooth"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _smoothCameraRotationSmooth
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothCameraRotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothCameraRotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothCameraRotationSmooth"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _smoothnesses
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothnesses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::dyn__smoothnesses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothnesses"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.GetInitValues
bool GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.ApplyValue
void GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: SmoothCameraSmoothnessSettingsController.TextForValue
::StringW GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraSmoothnessSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WindowResolutionSettingsController
#include "GlobalNamespace/WindowResolutionSettingsController.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector2IntSO _windowResolution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector2IntSO*& GlobalNamespace::WindowResolutionSettingsController::dyn__windowResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WindowResolutionSettingsController::dyn__windowResolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windowResolution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector2IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2Int[] _windowResolutions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector2Int>& GlobalNamespace::WindowResolutionSettingsController::dyn__windowResolutions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WindowResolutionSettingsController::dyn__windowResolutions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_windowResolutions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2Int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WindowResolutionSettingsController.GetInitValues
bool GlobalNamespace::WindowResolutionSettingsController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WindowResolutionSettingsController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: WindowResolutionSettingsController.ApplyValue
void GlobalNamespace::WindowResolutionSettingsController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WindowResolutionSettingsController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: WindowResolutionSettingsController.TextForValue
::StringW GlobalNamespace::WindowResolutionSettingsController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WindowResolutionSettingsController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioLatencyViewController
#include "GlobalNamespace/AudioLatencyViewController.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _audioLatency
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::AudioLatencyViewController::dyn__audioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__audioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioLatency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _overrideAudioLatency
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::AudioLatencyViewController::dyn__overrideAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__overrideAudioLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideAudioLatency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _setupCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::AudioLatencyViewController::dyn__setupCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__setupCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setupCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _overrideAudioLatencyToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AudioLatencyViewController::dyn__overrideAudioLatencyToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__overrideAudioLatencyToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideAudioLatencyToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _slider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::AudioLatencyViewController::dyn__slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_slider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VisualMetronome _visualMetronome
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VisualMetronome*& GlobalNamespace::AudioLatencyViewController::dyn__visualMetronome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__visualMetronome");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visualMetronome"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VisualMetronome**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledAlpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AudioLatencyViewController::dyn__disabledAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__disabledAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::AudioLatencyViewController::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::AudioLatencyViewController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioLatencyViewController.SliderValueDidChange
void GlobalNamespace::AudioLatencyViewController::SliderValueDidChange(::HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::SliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: AudioLatencyViewController.HandleOverrideAudioLatencyToggleValueChanged
void GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::HandleOverrideAudioLatencyToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideAudioLatencyToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AudioLatencyViewController.RefreshVisuals
void GlobalNamespace::AudioLatencyViewController::RefreshVisuals(bool overrideAudioLatencyIsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideAudioLatencyIsEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overrideAudioLatencyIsEnabled);
}
// Autogenerated method: AudioLatencyViewController.DidActivate
void GlobalNamespace::AudioLatencyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: AudioLatencyViewController.DidDeactivate
void GlobalNamespace::AudioLatencyViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: AudioLatencyViewController.OnDestroy
void GlobalNamespace::AudioLatencyViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioLatencyViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarEditHistory
#include "GlobalNamespace/AvatarEditHistory.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Menu.ViewControllers.EditAvatarHistorySnapshot
#include "Menu/ViewControllers/EditAvatarHistorySnapshot.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableNextSnapshotOverride
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AvatarEditHistory::dyn_disableNextSnapshotOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::dyn_disableNextSnapshotOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableNextSnapshotOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Menu.ViewControllers.EditAvatarHistorySnapshot> _snapShots
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Menu::ViewControllers::EditAvatarHistorySnapshot*>*& GlobalNamespace::AvatarEditHistory::dyn__snapShots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::dyn__snapShots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapShots"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Menu::ViewControllers::EditAvatarHistorySnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentDataId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AvatarEditHistory::dyn__currentDataId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::dyn__currentDataId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentDataId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarEditHistory.get_undoAvailable
bool GlobalNamespace::AvatarEditHistory::get_undoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::get_undoAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_undoAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_redoAvailable
bool GlobalNamespace::AvatarEditHistory::get_redoAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::get_redoAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_redoAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_currentSnapShot
::Menu::ViewControllers::EditAvatarHistorySnapshot* GlobalNamespace::AvatarEditHistory::get_currentSnapShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::get_currentSnapShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSnapShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Menu::ViewControllers::EditAvatarHistorySnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.get_lastEditedPart
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::AvatarEditHistory::get_lastEditedPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::get_lastEditedPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastEditedPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Clear
void GlobalNamespace::AvatarEditHistory::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Undo
void GlobalNamespace::AvatarEditHistory::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.Redo
void GlobalNamespace::AvatarEditHistory::Redo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::Redo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Redo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarEditHistory.UpdateEditHistory
void GlobalNamespace::AvatarEditHistory::UpdateEditHistory(::GlobalNamespace::AvatarData* avatarData, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarEditHistory::UpdateEditHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEditHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData), ::il2cpp_utils::ExtractType(avatarEditPart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarData, avatarEditPart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.IconSegmentedControl _segmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::IconSegmentedControl*& GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__segmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__segmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::IconSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapCharacteristicSegmentedControlController,BeatmapCharacteristicSO> didSelectBeatmapCharacteristicEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, ::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn_didSelectBeatmapCharacteristicEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn_didSelectBeatmapCharacteristicEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectBeatmapCharacteristicEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, ::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _selectedBeatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__selectedBeatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBeatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapCharacteristicSO> _beatmapCharacteristics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__beatmapCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::dyn__beatmapCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.get_selectedBeatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent(::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, ::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent(::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, ::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.Awake
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.SetData
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmapSet*>* difficultyBeatmapSets, ::GlobalNamespace::BeatmapCharacteristicSO* selectedBeatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmapSets), ::il2cpp_utils::ExtractType(selectedBeatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmapSets, selectedBeatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapCharacteristicSegmentedControlController/<>c <>9
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9(::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
::System::Comparison_1<::GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::GlobalNamespace::IDifficultyBeatmapSet*>*>("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<IDifficultyBeatmapSet> <>9__10_0
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0(::System::Comparison_1<::GlobalNamespace::IDifficultyBeatmapSet*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapCharacteristicSegmentedControlController/<>c", "<>9__10_0", value)));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c..cctor
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapCharacteristicSegmentedControlController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController/<>c.<SetData>b__10_0
int GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::$SetData$b__10_0(::GlobalNamespace::IDifficultyBeatmapSet* a, ::GlobalNamespace::IDifficultyBeatmapSet* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSegmentedControlController::$$c::<SetData>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicSelectionViewController
#include "GlobalNamespace/BeatmapCharacteristicSelectionViewController.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.IconSegmentedControl _beatmapCharacteristicSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::IconSegmentedControl*& GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__beatmapCharacteristicSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__beatmapCharacteristicSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::IconSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapCharacteristicSelectionViewController,BeatmapCharacteristicSO> didSelectBeatmapCharacteristicEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSelectionViewController*, ::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn_didSelectBeatmapCharacteristicEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn_didSelectBeatmapCharacteristicEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectBeatmapCharacteristicEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSelectionViewController*, ::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _selectedBeatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::dyn__selectedBeatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBeatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.get_selectedBeatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::get_selectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent(::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSelectionViewController*, ::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::add_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent(::System::Action_2<::GlobalNamespace::BeatmapCharacteristicSelectionViewController*, ::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::remove_didSelectBeatmapCharacteristicEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectBeatmapCharacteristicEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.Init
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.HandleBeatmapCharacteristicSegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::HandleBeatmapCharacteristicSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidActivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BeatmapCharacteristicSelectionViewController.DidDeactivate
void GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicSelectionViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _difficultySegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__difficultySegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__difficultySegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultySegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapDifficultySegmentedControlController,BeatmapDifficulty> didSelectDifficultyEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::BeatmapDifficultySegmentedControlController*, ::GlobalNamespace::BeatmapDifficulty>*& GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn_didSelectDifficultyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn_didSelectDifficultyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectDifficultyEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::BeatmapDifficultySegmentedControlController*, ::GlobalNamespace::BeatmapDifficulty>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapDifficulty> _difficulties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>*& GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__difficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__difficulties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _selectedDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__selectedDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::dyn__selectedDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.get_selectedDifficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::get_selectedDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.add_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent(::System::Action_2<::GlobalNamespace::BeatmapDifficultySegmentedControlController*, ::GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::add_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.remove_didSelectDifficultyEvent
void GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent(::System::Action_2<::GlobalNamespace::BeatmapDifficultySegmentedControlController*, ::GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::remove_didSelectDifficultyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectDifficultyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.Awake
void GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.GetClosestDifficultyIndex
int GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex(::GlobalNamespace::BeatmapDifficulty searchDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::GetClosestDifficultyIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClosestDifficultyIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchDifficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, searchDifficulty);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::HandleDifficultySegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDifficultySegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: BeatmapDifficultySegmentedControlController.SetData
void GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps, ::GlobalNamespace::BeatmapDifficulty selectedDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySegmentedControlController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps), ::il2cpp_utils::ExtractType(selectedDifficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps, selectedDifficulty);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController
#include "GlobalNamespace/CentralLeaderboardViewController.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__36
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__36.hpp"
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__37
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__37.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LeaderboardTableView _leaderboardTableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardTableView*& GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardTableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardTableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardTableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.IconSegmentedControl _scopeSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::IconSegmentedControl*& GlobalNamespace::CentralLeaderboardViewController::dyn__scopeSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__scopeSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scopeSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::IconSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LoadingControl _loadingControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LoadingControl*& GlobalNamespace::CentralLeaderboardViewController::dyn__loadingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__loadingControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LoadingControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::CentralLeaderboardViewController::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _leaderboardTypeSegmentedControl
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardTypeSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardTypeSegmentedControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardTypeSegmentedControl"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _globalLeaderboardIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CentralLeaderboardViewController::dyn__globalLeaderboardIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__globalLeaderboardIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_globalLeaderboardIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _friendsLeaderboardIcon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CentralLeaderboardViewController::dyn__friendsLeaderboardIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__friendsLeaderboardIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friendsLeaderboardIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _enableOnlineServicesButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::CentralLeaderboardViewController::dyn__enableOnlineServicesButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__enableOnlineServicesButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableOnlineServicesButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::CentralLeaderboardViewController::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _optInOnlineServicesView
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CentralLeaderboardViewController::dyn__optInOnlineServicesView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__optInOnlineServicesView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optInOnlineServicesView"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _leaderboardView
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardView"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::CentralLeaderboardViewController::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OnlineServices.ServerManager _serverManager
[[deprecated("Use field access instead!")]] ::OnlineServices::ServerManager*& GlobalNamespace::CentralLeaderboardViewController::dyn__serverManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__serverManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverManager"))->offset;
  return *reinterpret_cast<::OnlineServices::ServerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LeaderboardTableView/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>*& GlobalNamespace::CentralLeaderboardViewController::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::CentralLeaderboardViewController::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::CentralLeaderboardViewController::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CentralLeaderboardViewController/LeaderboardPanel[] _leaderboardPanels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*>& GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardPanels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__leaderboardPanels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardPanels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CentralLeaderboardViewController/ScoreScopeInfo[] _scoreScopeInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*>& GlobalNamespace::CentralLeaderboardViewController::dyn__scoreScopeInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__scoreScopeInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreScopeInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::CentralLeaderboardViewController::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CentralLeaderboardViewController.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.get_hasScoresData
bool GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::get_hasScoresData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasScoresData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPressRefreshButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandleGameplaySetupViewControllerDidChangeGameplayModifiers
void GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HandleGameplaySetupViewControllerDidChangeGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameplaySetupViewControllerDidChangeGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.HandlelatformServicesAvailabilityInfoChanged
void GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged(::OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlelatformServicesAvailabilityInfoChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(availabilityInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, availabilityInfo);
}
// Autogenerated method: CentralLeaderboardViewController.HanldeLeaderboardTypeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell(::HMUI::SegmentedControl* control, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HanldeLeaderboardTypeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(control), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, control, index);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: CentralLeaderboardViewController.HandleScoreForLeaderboardDidUpload
void GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload(::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreForLeaderboardDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: CentralLeaderboardViewController.Refresh
void GlobalNamespace::CentralLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.RefreshDelayed
::System::Collections::IEnumerator* GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: CentralLeaderboardViewController.LoadScoresAsync
void GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScoresAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.ClearContent
void GlobalNamespace::CentralLeaderboardViewController::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.<DidActivate>b__26_0
void GlobalNamespace::CentralLeaderboardViewController::$DidActivate$b__26_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::<DidActivate>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController.SetData
void GlobalNamespace::CentralLeaderboardViewController::SetData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: CentralLeaderboardViewController.DidActivate
void GlobalNamespace::CentralLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: CentralLeaderboardViewController.DidDeactivate
void GlobalNamespace::CentralLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: CentralLeaderboardViewController.OnDestroy
void GlobalNamespace::CentralLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String title
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String hint
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_hint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hint"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean mixed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel::dyn_mixed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OnlineServices.ScoresScope scoreScope
[[deprecated("Use field access instead!")]] ::OnlineServices::ScoresScope& GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_scoreScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_scoreScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreScope"))->offset;
  return *reinterpret_cast<::OnlineServices::ScoresScope*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String localizedTitle
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_localizedTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_localizedTitle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedTitle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite icon
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerScorePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_playerScorePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo::dyn_playerScorePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerScorePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: HMUI.IconSegmentedControl/HMUI.DataItem
#include "HMUI/IconSegmentedControl_DataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CentralLeaderboardViewController/<>c <>9
::GlobalNamespace::CentralLeaderboardViewController::$$c* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::CentralLeaderboardViewController::$$c*>("", "CentralLeaderboardViewController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CentralLeaderboardViewController/<>c <>9
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9(::GlobalNamespace::CentralLeaderboardViewController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<CentralLeaderboardViewController/LeaderboardPanel,System.String> <>9__26_1
::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::StringW>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::StringW>*>("", "CentralLeaderboardViewController/<>c", "<>9__26_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<CentralLeaderboardViewController/LeaderboardPanel,System.String> <>9__26_1
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_1(::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__26_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<CentralLeaderboardViewController/ScoreScopeInfo,HMUI.IconSegmentedControl/HMUI.DataItem> <>9__26_2
::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, ::HMUI::IconSegmentedControl::DataItem*>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__26_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, ::HMUI::IconSegmentedControl::DataItem*>*>("", "CentralLeaderboardViewController/<>c", "<>9__26_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<CentralLeaderboardViewController/ScoreScopeInfo,HMUI.IconSegmentedControl/HMUI.DataItem> <>9__26_2
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_2(::System::Func_2<::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo*, ::HMUI::IconSegmentedControl::DataItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__26_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__26_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<GameplayModifierParamsSO,System.String> <>9__37_0
::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, ::StringW>* GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__37_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_get_$$9__37_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, ::StringW>*>("", "CentralLeaderboardViewController/<>c", "<>9__37_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<GameplayModifierParamsSO,System.String> <>9__37_0
void GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__37_0(::System::Func_2<::GlobalNamespace::GameplayModifierParamsSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::_set_$$9__37_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CentralLeaderboardViewController/<>c", "<>9__37_0", value)));
}
// Autogenerated method: CentralLeaderboardViewController/<>c..cctor
void GlobalNamespace::CentralLeaderboardViewController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CentralLeaderboardViewController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<DidActivate>b__26_1
::StringW GlobalNamespace::CentralLeaderboardViewController::$$c::$DidActivate$b__26_1(::GlobalNamespace::CentralLeaderboardViewController::LeaderboardPanel* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::<DidActivate>b__26_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<DidActivate>b__26_2
::HMUI::IconSegmentedControl::DataItem* GlobalNamespace::CentralLeaderboardViewController::$$c::$DidActivate$b__26_2(::GlobalNamespace::CentralLeaderboardViewController::ScoreScopeInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::<DidActivate>b__26_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__26_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::IconSegmentedControl::DataItem*, false>(this, ___internal__method, x);
}
// Autogenerated method: CentralLeaderboardViewController/<>c.<LoadScoresAsync>b__37_0
::StringW GlobalNamespace::CentralLeaderboardViewController::$$c::$LoadScoresAsync$b__37_0(::GlobalNamespace::GameplayModifierParamsSO* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$$c::<LoadScoresAsync>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadScoresAsync>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__36
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__36.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clear
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_clear");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clear"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CentralLeaderboardViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CentralLeaderboardViewController*& GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CentralLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLoadingIndicator
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_showLoadingIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::dyn_showLoadingIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLoadingIndicator"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.IDisposable.Dispose
void GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.MoveNext
bool GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<RefreshDelayed>d__36.System.Collections.IEnumerator.Reset
void GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$RefreshDelayed$d__36::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__37
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__37.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CentralLeaderboardViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CentralLeaderboardViewController*& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CentralLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap <loadingFordifficultyBeatmap>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$loadingFordifficultyBeatmap$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$loadingFordifficultyBeatmap$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<loadingFordifficultyBeatmap>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__3
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$cancellationToken$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$cancellationToken$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__3"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<OnlineServices.LeaderboardEntriesResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::LeaderboardEntriesResult*>& GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::OnlineServices::LeaderboardEntriesResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CentralLeaderboardViewController/<LoadScoresAsync>d__37.MoveNext
void GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CentralLeaderboardViewController/<LoadScoresAsync>d__37.SetStateMachine
void GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CentralLeaderboardViewController::$LoadScoresAsync$d__37::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionErrorDialogViewController
#include "GlobalNamespace/ConnectionErrorDialogViewController.hpp"
// Including type: ConnectionErrorDialogViewController/<>c__DisplayClass0_0
#include "GlobalNamespace/ConnectionErrorDialogViewController_--c__DisplayClass0_0.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ConnectionErrorDialogViewController.Init
void GlobalNamespace::ConnectionErrorDialogViewController::Init(::GlobalNamespace::DisconnectedReason reason, ::System::Action* buttonAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionErrorDialogViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason), ::il2cpp_utils::ExtractType(buttonAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason, buttonAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionErrorDialogViewController/<>c__DisplayClass0_0
#include "GlobalNamespace/ConnectionErrorDialogViewController_--c__DisplayClass0_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action buttonAction
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::dyn_buttonAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::dyn_buttonAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectionErrorDialogViewController/<>c__DisplayClass0_0.<Init>b__0
void GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::$Init$b__0(int btnIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionErrorDialogViewController::$$c__DisplayClass0_0::<Init>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnIdx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ControllersTransformSettingsViewController
#include "GlobalNamespace/ControllersTransformSettingsViewController.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPositionStep
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kPositionStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPositionStep
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kPositionStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPositionMul
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_get_kPositionMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kPositionMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPositionMul
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_set_kPositionMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kPositionMul", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRotationStep
float GlobalNamespace::ControllersTransformSettingsViewController::_get_kRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_get_kRotationStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ControllersTransformSettingsViewController", "kRotationStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRotationStep
void GlobalNamespace::ControllersTransformSettingsViewController::_set_kRotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::_set_kRotationStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ControllersTransformSettingsViewController", "kRotationStep", value));
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _controllerPosition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__controllerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__controllerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _controllerRotation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__controllerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__controllerRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _posXSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__posXSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__posXSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posXSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _posYSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__posYSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__posYSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posYSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _posZSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__posZSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__posZSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posZSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _rotXSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotXSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotXSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotXSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _rotYSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotYSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotYSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotYSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.RangeValuesTextSlider _rotZSlider
[[deprecated("Use field access instead!")]] ::HMUI::RangeValuesTextSlider*& GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotZSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::dyn__rotZSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotZSlider"))->offset;
  return *reinterpret_cast<::HMUI::RangeValuesTextSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ControllersTransformSettingsViewController.HandlePositionSliderValueDidChange
void GlobalNamespace::ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange(::HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::HandlePositionSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePositionSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: ControllersTransformSettingsViewController.HandleRotationSliderValueDidChange
void GlobalNamespace::ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange(::HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::HandleRotationSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRotationSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: ControllersTransformSettingsViewController.DidActivate
void GlobalNamespace::ControllersTransformSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ControllersTransformSettingsViewController.OnDestroy
void GlobalNamespace::ControllersTransformSettingsViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ControllersTransformSettingsViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CrashInfoViewController
#include "GlobalNamespace/CrashInfoViewController.hpp"
// Including type: CrashManagerSO
#include "GlobalNamespace/CrashManagerSO.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CrashManagerSO _crashManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CrashManagerSO*& GlobalNamespace::CrashInfoViewController::dyn__crashManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashInfoViewController::dyn__crashManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crashManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CrashManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::CrashInfoViewController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashInfoViewController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CrashInfoViewController.Start
void GlobalNamespace::CrashInfoViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashInfoViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController
#include "GlobalNamespace/EditAvatarViewController.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: EditAvatarViewController/<>c__DisplayClass60_0
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass60_0.hpp"
// Including type: EditAvatarViewController/<>c__DisplayClass61_0`1
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass61_0_1.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
// Including type: AvatarPartCollection`1
#include "GlobalNamespace/AvatarPartCollection_1.hpp"
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: AvatarEditHistory
#include "GlobalNamespace/AvatarEditHistory.hpp"
// Including type: HMUI.ValueChangedBinder`1
#include "HMUI/ValueChangedBinder_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IAvatarPart
#include "GlobalNamespace/IAvatarPart.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1121BFC
// Autogenerated static field getter
// Get static field: static private System.String kEditApplyButtonLocalizationKey
::StringW GlobalNamespace::EditAvatarViewController::_get_kEditApplyButtonLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::_get_kEditApplyButtonLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "EditAvatarViewController", "kEditApplyButtonLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEditApplyButtonLocalizationKey
void GlobalNamespace::EditAvatarViewController::_set_kEditApplyButtonLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::_set_kEditApplyButtonLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController", "kEditApplyButtonLocalizationKey", value));
}
// [LocalizationKeyAttribute] Offset: 0x1121C0C
// Autogenerated static field getter
// Get static field: static private System.String kCreateApplyButtonLocalizationKey
::StringW GlobalNamespace::EditAvatarViewController::_get_kCreateApplyButtonLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::_get_kCreateApplyButtonLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "EditAvatarViewController", "kCreateApplyButtonLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCreateApplyButtonLocalizationKey
void GlobalNamespace::EditAvatarViewController::_set_kCreateApplyButtonLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::_set_kCreateApplyButtonLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController", "kCreateApplyButtonLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private NamedColorListController _skinColorValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedColorListController*& GlobalNamespace::EditAvatarViewController::dyn__skinColorValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__skinColorValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinColorValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedColorListController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedIntListController _headTopValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& GlobalNamespace::EditAvatarViewController::dyn__headTopValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__headTopValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedIntListController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedIntListController _eyesValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& GlobalNamespace::EditAvatarViewController::dyn__eyesValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__eyesValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyesValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedIntListController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedIntListController _handsValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& GlobalNamespace::EditAvatarViewController::dyn__handsValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__handsValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedIntListController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NamedIntListController _clothesValuePicker
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NamedIntListController*& GlobalNamespace::EditAvatarViewController::dyn__clothesValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__clothesValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesValuePicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NamedIntListController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _headTopPrimaryColorButtonController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__headTopPrimaryColorButtonController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__headTopPrimaryColorButtonController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopPrimaryColorButtonController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _headTopSecondaryColorButtonController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__headTopSecondaryColorButtonController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__headTopSecondaryColorButtonController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopSecondaryColorButtonController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _handsColorButtonController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__handsColorButtonController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__handsColorButtonController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsColorButtonController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _clothesColorButtonControllerPrimary
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerPrimary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerPrimary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesColorButtonControllerPrimary"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _clothesColorButtonControllerSecondary
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerSecondary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerSecondary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesColorButtonControllerSecondary"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorPickerButtonController _clothesColorButtonControllerDetail
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorPickerButtonController*& GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__clothesColorButtonControllerDetail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesColorButtonControllerDetail"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorPickerButtonController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _randomizeAllButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditAvatarViewController::dyn__randomizeAllButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__randomizeAllButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeAllButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _undoButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditAvatarViewController::dyn__undoButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__undoButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_undoButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _redoButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditAvatarViewController::dyn__redoButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__redoButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redoButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _applyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditAvatarViewController::dyn__applyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__applyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditAvatarViewController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _applyButtonText
[[deprecated("Use field access instead!")]] ::HMUI::CurvedTextMeshPro*& GlobalNamespace::EditAvatarViewController::dyn__applyButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__applyButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButtonText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _eyesPreviewImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::EditAvatarViewController::dyn__eyesPreviewImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__eyesPreviewImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyesPreviewImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModel*& GlobalNamespace::EditAvatarViewController::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& GlobalNamespace::EditAvatarViewController::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::EditAvatarViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<EditAvatarViewController/FinishAction> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>*& GlobalNamespace::EditAvatarViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.Action`1<UnityEngine.Color>,UnityEngine.Color,EditAvatarViewController/AvatarEditPart,System.Int32> didRequestColorChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>*& GlobalNamespace::EditAvatarViewController::dyn_didRequestColorChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn_didRequestColorChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didRequestColorChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action randomizeAllButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::EditAvatarViewController::dyn_randomizeAllButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn_randomizeAllButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomizeAllButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<EditAvatarViewController/AvatarEditPart> didChangedAvatarPartEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>*& GlobalNamespace::EditAvatarViewController::dyn_didChangedAvatarPartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn_didChangedAvatarPartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangedAvatarPartEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarEditHistory _avatarEditHistory
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarEditHistory*& GlobalNamespace::EditAvatarViewController::dyn__avatarEditHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__avatarEditHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarEditHistory"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarEditHistory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ValueChangedBinder`1<System.Int32> _intPickerBinder
[[deprecated("Use field access instead!")]] ::HMUI::ValueChangedBinder_1<int>*& GlobalNamespace::EditAvatarViewController::dyn__intPickerBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__intPickerBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intPickerBinder"))->offset;
  return *reinterpret_cast<::HMUI::ValueChangedBinder_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditAvatarViewController/AvatarEditPart _lastEditedPart
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController::AvatarEditPart& GlobalNamespace::EditAvatarViewController::dyn__lastEditedPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::dyn__lastEditedPart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastEditedPart"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController::AvatarEditPart*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarViewController.add_didFinishEvent
void GlobalNamespace::EditAvatarViewController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didFinishEvent
void GlobalNamespace::EditAvatarViewController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.add_didRequestColorChangeEvent
void GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::add_didRequestColorChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didRequestColorChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didRequestColorChangeEvent
void GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent(::System::Action_4<::System::Action_1<::UnityEngine::Color>*, ::UnityEngine::Color, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::remove_didRequestColorChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didRequestColorChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.add_randomizeAllButtonWasPressedEvent
void GlobalNamespace::EditAvatarViewController::add_randomizeAllButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::add_randomizeAllButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_randomizeAllButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_randomizeAllButtonWasPressedEvent
void GlobalNamespace::EditAvatarViewController::remove_randomizeAllButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::remove_randomizeAllButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_randomizeAllButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.add_didChangedAvatarPartEvent
void GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::add_didChangedAvatarPartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangedAvatarPartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.remove_didChangedAvatarPartEvent
void GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent(::System::Action_1<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::remove_didChangedAvatarPartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangedAvatarPartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.Setup
void GlobalNamespace::EditAvatarViewController::Setup(bool showAsCreateView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showAsCreateView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showAsCreateView);
}
// Autogenerated method: EditAvatarViewController.InitHistory
void GlobalNamespace::EditAvatarViewController::InitHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::InitHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.DiscardLastEdit
void GlobalNamespace::EditAvatarViewController::DiscardLastEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::DiscardLastEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardLastEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.Update
void GlobalNamespace::EditAvatarViewController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.RefreshUi
void GlobalNamespace::EditAvatarViewController::RefreshUi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::RefreshUi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.UpdateButtons
void GlobalNamespace::EditAvatarViewController::UpdateButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::UpdateButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleSkinColorDidChanged
void GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleSkinColorDidChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSkinColorDidChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarViewController.EyesValuePickerHasChanged
void GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged(::StringW eyesId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::EyesValuePickerHasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EyesValuePickerHasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eyesId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eyesId);
}
// Autogenerated method: EditAvatarViewController.HandleUndoButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleUndoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUndoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRedoButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleRedoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRedoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeAllButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleRandomizeAllButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeModelsButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleRandomizeModelsButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeModelsButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleRandomizeColorsButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleRandomizeColorsButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRandomizeColorsButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.ReportAllChangedAndUpdate
void GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::ReportAllChangedAndUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportAllChangedAndUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleApplyButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleApplyButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.SaveAvatar
void GlobalNamespace::EditAvatarViewController::SaveAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::SaveAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.HandleCancelButtonWasPressed
void GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::HandleCancelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.CreateColorValuePairsForAvatarPartCollection
::ArrayW<::GlobalNamespace::NamedColorListController::ColorValuePair*> GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection(::ArrayW<::GlobalNamespace::SkinColorSO*> colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::CreateColorValuePairsForAvatarPartCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateColorValuePairsForAvatarPartCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::NamedColorListController::ColorValuePair*>, false>(this, ___internal__method, colors);
}
// Autogenerated method: EditAvatarViewController.SetupColorButton
void GlobalNamespace::EditAvatarViewController::SetupColorButton(::UnityEngine::UI::Button* button, ::System::Action_1<::UnityEngine::Color>* colorSetter, ::System::Func_1<::UnityEngine::Color>* currentColor, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarEditPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::SetupColorButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupColorButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(colorSetter), ::il2cpp_utils::ExtractType(currentColor), ::il2cpp_utils::ExtractType(avatarEditPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, button, colorSetter, currentColor, avatarEditPart, uvSegment);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_0
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_0(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_1
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_2
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_2(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_3
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_4
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_4(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_5
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_6
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_6(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_7
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_8
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_8(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_9
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_10
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_10(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_11
::UnityEngine::Color GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_12
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_12(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_13
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_13(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.<DidActivate>b__44_14
void GlobalNamespace::EditAvatarViewController::$DidActivate$b__44_14(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::<DidActivate>b__44_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__44_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: EditAvatarViewController.DidActivate
void GlobalNamespace::EditAvatarViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController/FinishAction
#include "GlobalNamespace/EditAvatarViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/FinishAction Cancel
::GlobalNamespace::EditAvatarViewController::FinishAction GlobalNamespace::EditAvatarViewController::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::FinishAction>("", "EditAvatarViewController/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/FinishAction Cancel
void GlobalNamespace::EditAvatarViewController::FinishAction::_set_Cancel(::GlobalNamespace::EditAvatarViewController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/FinishAction Apply
::GlobalNamespace::EditAvatarViewController::FinishAction GlobalNamespace::EditAvatarViewController::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::FinishAction>("", "EditAvatarViewController/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/FinishAction Apply
void GlobalNamespace::EditAvatarViewController::FinishAction::_set_Apply(::GlobalNamespace::EditAvatarViewController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/FinishAction", "Apply", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EditAvatarViewController::FinishAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::FinishAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController/AvatarEditPart
#include "GlobalNamespace/EditAvatarViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart Unknown
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart Unknown
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_Unknown(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart All
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "All"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart All
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_All(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "All", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart SkinColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_SkinColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_SkinColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "SkinColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart SkinColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_SkinColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_SkinColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "SkinColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopPrimaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopPrimaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopPrimaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopPrimaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopPrimaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopPrimaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HeadTopSecondaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HeadTopSecondaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HeadTopSecondaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopSecondaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HeadTopSecondaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HeadTopSecondaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "GlassesModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart GlassesModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "GlassesModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_GlassesColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "GlassesColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart GlassesColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_GlassesColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "GlassesColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "FacialHairModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "FacialHairModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_FacialHairColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "FacialHairColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart FacialHairColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_FacialHairColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "FacialHairColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HandsModel
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HandsModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HandsModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HandsModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart HandsColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_HandsColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "HandsColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart HandsColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_HandsColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "HandsColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModel"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModel
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModel(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModel", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelPrimaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelPrimaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelPrimaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelPrimaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelPrimaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelPrimaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelSecondaryColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelSecondaryColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelSecondaryColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelSecondaryColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelSecondaryColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelSecondaryColor", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
::GlobalNamespace::EditAvatarViewController::AvatarEditPart GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_get_ClothesModelDetailColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarViewController::AvatarEditPart>("", "EditAvatarViewController/AvatarEditPart", "ClothesModelDetailColor"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarViewController/AvatarEditPart ClothesModelDetailColor
void GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelDetailColor(::GlobalNamespace::EditAvatarViewController::AvatarEditPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::_set_ClothesModelDetailColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarViewController/AvatarEditPart", "ClothesModelDetailColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EditAvatarViewController::AvatarEditPart::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::AvatarEditPart::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarViewController/<>c__DisplayClass60_0
#include "GlobalNamespace/EditAvatarViewController_--c__DisplayClass60_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EditAvatarViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController*& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Color> colorSetter
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_colorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_colorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSetter"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EditAvatarViewController/AvatarEditPart avatarEditPart
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController::AvatarEditPart& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_avatarEditPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_avatarEditPart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarEditPart"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController::AvatarEditPart*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<UnityEngine.Color> currentColor
[[deprecated("Use field access instead!")]] ::System::Func_1<::UnityEngine::Color>*& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_currentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_currentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentColor"))->offset;
  return *reinterpret_cast<::System::Func_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 uvSegment
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_uvSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_uvSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uvSegment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Color> <>9__1
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarViewController/<>c__DisplayClass60_0.<SetupColorButton>b__0
void GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::$SetupColorButton$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::<SetupColorButton>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupColorButton>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarViewController/<>c__DisplayClass60_0.<SetupColorButton>b__1
void GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::$SetupColorButton$b__1(::UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarViewController::$$c__DisplayClass60_0::<SetupColorButton>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetupColorButton>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: EnterPlayerGuestNameViewController/FinishDelegate
#include "GlobalNamespace/EnterPlayerGuestNameViewController_FinishDelegate.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_1.hpp"
// Including type: StringSignal
#include "GlobalNamespace/StringSignal.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: GuestNameButtonsListItemsList
#include "GlobalNamespace/GuestNameButtonsListItemsList.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPlayerNameCompoundLength
int GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxPlayerNameCompoundLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxPlayerNameCompoundLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnterPlayerGuestNameViewController", "kMaxPlayerNameCompoundLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPlayerNameCompoundLength
void GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxPlayerNameCompoundLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxPlayerNameCompoundLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnterPlayerGuestNameViewController", "kMaxPlayerNameCompoundLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxShowPlayer
int GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxShowPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::_get_kMaxShowPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnterPlayerGuestNameViewController", "kMaxShowPlayer"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxShowPlayer
void GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxShowPlayer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::_set_kMaxShowPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnterPlayerGuestNameViewController", "kMaxShowPlayer", value));
}
// Autogenerated instance field getter
// Get instance field: private StringSignal _playerNameWasEnteredSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StringSignal*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__playerNameWasEnteredSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__playerNameWasEnteredSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameWasEnteredSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StringSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
[[deprecated("Use field access instead!")]] ::HMUI::UIKeyboard*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<::HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _nameInputFieldView
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__nameInputFieldView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__nameInputFieldView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameInputFieldView"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GuestNameButtonsListItemsList _guestNameButtonsListItemsList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GuestNameButtonsListItemsList*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__guestNameButtonsListItemsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__guestNameButtonsListItemsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_guestNameButtonsListItemsList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GuestNameButtonsListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnterPlayerGuestNameViewController/FinishDelegate _didFinishCallback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate*& GlobalNamespace::EnterPlayerGuestNameViewController::dyn__didFinishCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::dyn__didFinishCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishCallback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnterPlayerGuestNameViewController.Init
void GlobalNamespace::EnterPlayerGuestNameViewController::Init(::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate* didFinishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(didFinishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, didFinishCallback);
}
// Autogenerated method: EnterPlayerGuestNameViewController.OkButtonPressed
void GlobalNamespace::EnterPlayerGuestNameViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnterPlayerGuestNameViewController.DidActivate
void GlobalNamespace::EnterPlayerGuestNameViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EnterPlayerGuestNameViewController.DidDeactivate
void GlobalNamespace::EnterPlayerGuestNameViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnterPlayerGuestNameViewController/FinishDelegate
#include "GlobalNamespace/EnterPlayerGuestNameViewController_FinishDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.Invoke
void GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::Invoke(::GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, playerName);
}
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke(::GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::StringW playerName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, viewController, playerName, callback, object);
}
// Autogenerated method: EnterPlayerGuestNameViewController/FinishDelegate.EndInvoke
void GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::FinishDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> guestPlayerNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::dyn_guestPlayerNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::dyn_guestPlayerNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guestPlayerNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnterPlayerGuestNameViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnterPlayerGuestNameViewController*& GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnterPlayerGuestNameViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0.<DidActivate>b__0
void GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::$DidActivate$b__0(int idx, ::GlobalNamespace::GuestNameButtonsListItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_1.hpp"
// Including type: EnterPlayerGuestNameViewController/<>c__DisplayClass10_0
#include "GlobalNamespace/EnterPlayerGuestNameViewController_--c__DisplayClass10_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String guestPlayerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::dyn_guestPlayerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::dyn_guestPlayerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guestPlayerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnterPlayerGuestNameViewController/<>c__DisplayClass10_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0*& GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnterPlayerGuestNameViewController/<>c__DisplayClass10_1.<DidActivate>b__1
void GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::$DidActivate$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterPlayerGuestNameViewController::$$c__DisplayClass10_1::<DidActivate>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnterTextViewController
#include "GlobalNamespace/EnterTextViewController.hpp"
// Including type: VRTextEntryController
#include "GlobalNamespace/VRTextEntryController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VRTextEntryController _textEntryController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRTextEntryController*& GlobalNamespace::EnterTextViewController::dyn__textEntryController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::dyn__textEntryController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textEntryController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRTextEntryController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::EnterTextViewController::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EnterTextViewController::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<EnterTextViewController,System.String> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::EnterTextViewController*, ::StringW>*& GlobalNamespace::EnterTextViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::EnterTextViewController*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnterTextViewController.add_didFinishEvent
void GlobalNamespace::EnterTextViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::EnterTextViewController*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnterTextViewController.remove_didFinishEvent
void GlobalNamespace::EnterTextViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::EnterTextViewController*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EnterTextViewController.Init
void GlobalNamespace::EnterTextViewController::Init(::StringW titleText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(titleText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, titleText);
}
// Autogenerated method: EnterTextViewController.OkButtonPressed
void GlobalNamespace::EnterTextViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnterTextViewController.DidActivate
void GlobalNamespace::EnterTextViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnterTextViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EulaDisplayViewController
#include "GlobalNamespace/EulaDisplayViewController.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::EulaDisplayViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaDisplayViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset _localizedTextAsset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset*& GlobalNamespace::EulaDisplayViewController::dyn__localizedTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaDisplayViewController::dyn__localizedTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedTextAsset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EulaDisplayViewController.DidActivate
void GlobalNamespace::EulaDisplayViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaDisplayViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EulaViewController
#include "GlobalNamespace/EulaViewController.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: EulaViewController/InitData
#include "GlobalNamespace/EulaViewController_InitData.hpp"
// Including type: EulaViewController/<EnableButtonsCoroutine>d__21
#include "GlobalNamespace/EulaViewController_-EnableButtonsCoroutine-d__21.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _agreeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EulaViewController::dyn__agreeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__agreeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_agreeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _doNotAgreeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EulaViewController::dyn__doNotAgreeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__doNotAgreeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doNotAgreeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EulaViewController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _disableButtonsProgress
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::EulaViewController::dyn__disableButtonsProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__disableButtonsProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableButtonsProgress"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disabledButtonDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::EulaViewController::dyn__disabledButtonDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__disabledButtonDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledButtonDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TextPageScrollView _textPageScrollView
[[deprecated("Use field access instead!")]] ::HMUI::TextPageScrollView*& GlobalNamespace::EulaViewController::dyn__textPageScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__textPageScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textPageScrollView"))->offset;
  return *reinterpret_cast<::HMUI::TextPageScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset _eulaLocalizedTextAsset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset*& GlobalNamespace::EulaViewController::dyn__eulaLocalizedTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__eulaLocalizedTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eulaLocalizedTextAsset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _defaultEulaHeaderLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EulaViewController::dyn__defaultEulaHeaderLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__defaultEulaHeaderLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultEulaHeaderLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _updateNoticeLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EulaViewController::dyn__updateNoticeLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__updateNoticeLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateNoticeLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EulaViewController/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EulaViewController::InitData*& GlobalNamespace::EulaViewController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EulaViewController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<EulaViewController/ButtonType> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EulaViewController::ButtonType>*& GlobalNamespace::EulaViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::EulaViewController::ButtonType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showUpdate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EulaViewController::dyn__showUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__showUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showOnlyContinueButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EulaViewController::dyn__showOnlyContinueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__showOnlyContinueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showOnlyContinueButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _buttonsCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::EulaViewController::dyn__buttonsCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::dyn__buttonsCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonsCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EulaViewController.add_didFinishEvent
void GlobalNamespace::EulaViewController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::EulaViewController::ButtonType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EulaViewController.remove_didFinishEvent
void GlobalNamespace::EulaViewController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::EulaViewController::ButtonType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EulaViewController.Init
void GlobalNamespace::EulaViewController::Init(bool showUpdate, bool showOnlyContinueButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showUpdate), ::il2cpp_utils::ExtractType(showOnlyContinueButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showUpdate, showOnlyContinueButton);
}
// Autogenerated method: EulaViewController.EnableButtonsCoroutine
::System::Collections::IEnumerator* GlobalNamespace::EulaViewController::EnableButtonsCoroutine(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::EnableButtonsCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableButtonsCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: EulaViewController.<DidActivate>b__18_0
void GlobalNamespace::EulaViewController::$DidActivate$b__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::<DidActivate>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EulaViewController.<DidActivate>b__18_1
void GlobalNamespace::EulaViewController::$DidActivate$b__18_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::<DidActivate>b__18_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EulaViewController.<DidActivate>b__18_2
void GlobalNamespace::EulaViewController::$DidActivate$b__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::<DidActivate>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EulaViewController.DidActivate
void GlobalNamespace::EulaViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EulaViewController.DidDeactivate
void GlobalNamespace::EulaViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EulaViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
