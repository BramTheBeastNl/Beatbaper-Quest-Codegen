// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.NativeMethods
#include "Microsoft/Win32/NativeMethods.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::SafeHandle* hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeWaitHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::HandleRef hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeProcessHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcess
System::IntPtr Microsoft::Win32::NativeMethods::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(System::IntPtr processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(System::IntPtr processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(System::IntPtr handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcessId
int Microsoft::Win32::NativeMethods::GetCurrentProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetCurrentProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcessId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.CloseProcess
bool Microsoft::Win32::NativeMethods::CloseProcess(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("CloseProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "CloseProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
