// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.KeyHandler
#include "Microsoft/Win32/KeyHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable key_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_key_to_handler() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "key_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable key_to_handler
void Microsoft::Win32::KeyHandler::_set_key_to_handler(System::Collections::Hashtable* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "key_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable dir_to_handler
System::Collections::Hashtable* Microsoft::Win32::KeyHandler::_get_dir_to_handler() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("Microsoft.Win32", "KeyHandler", "dir_to_handler"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable dir_to_handler
void Microsoft::Win32::KeyHandler::_set_dir_to_handler(System::Collections::Hashtable* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "dir_to_handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.String user_store
::CsString* Microsoft::Win32::KeyHandler::_get_user_store() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CsString*>("Microsoft.Win32", "KeyHandler", "user_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String user_store
void Microsoft::Win32::KeyHandler::_set_user_store(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "user_store", value));
}
// Autogenerated static field getter
// Get static field: static private System.String machine_store
::CsString* Microsoft::Win32::KeyHandler::_get_machine_store() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CsString*>("Microsoft.Win32", "KeyHandler", "machine_store"));
}
// Autogenerated static field setter
// Set static field: static private System.String machine_store
void Microsoft::Win32::KeyHandler::_set_machine_store(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32", "KeyHandler", "machine_store", value));
}
// Autogenerated method: Microsoft.Win32.KeyHandler..cctor
void Microsoft::Win32::KeyHandler::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Microsoft.Win32", "KeyHandler", ".cctor"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler..ctor
Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::New_ctor(Microsoft::Win32::RegistryKey* rkey, ::CsString* basedir) {
  return (KeyHandler*)THROW_UNLESS(il2cpp_utils::New("Microsoft.Win32", "KeyHandler", rkey, basedir));
}
// Autogenerated method: Microsoft.Win32.KeyHandler..ctor
Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::New_ctor(Microsoft::Win32::RegistryKey* rkey, ::CsString* basedir, bool is_volatile) {
  return (KeyHandler*)THROW_UNLESS(il2cpp_utils::New("Microsoft.Win32", "KeyHandler", rkey, basedir, is_volatile));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Load
void Microsoft::Win32::KeyHandler::Load() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Load"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.LoadKey
void Microsoft::Win32::KeyHandler::LoadKey(System::Security::SecurityElement* se) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LoadKey", se));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Ensure
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Ensure(Microsoft::Win32::RegistryKey* rkey, ::CsString* extra, bool writable, bool is_volatile) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Microsoft::Win32::RegistryKey*>(this, "Ensure", rkey, extra, writable, is_volatile));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Probe
Microsoft::Win32::RegistryKey* Microsoft::Win32::KeyHandler::Probe(Microsoft::Win32::RegistryKey* rkey, ::CsString* extra, bool writable) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Microsoft::Win32::RegistryKey*>(this, "Probe", rkey, extra, writable));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CombineName
::CsString* Microsoft::Win32::KeyHandler::CombineName(Microsoft::Win32::RegistryKey* rkey, ::CsString* extra) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("Microsoft.Win32", "KeyHandler", "CombineName", rkey, extra));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSystemBootTime
int64_t Microsoft::Win32::KeyHandler::GetSystemBootTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("Microsoft.Win32", "KeyHandler", "GetSystemBootTime"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRegisteredBootTime
int64_t Microsoft::Win32::KeyHandler::GetRegisteredBootTime(::CsString* path) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("Microsoft.Win32", "KeyHandler", "GetRegisteredBootTime", path));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.SaveRegisteredBootTime
void Microsoft::Win32::KeyHandler::SaveRegisteredBootTime(::CsString* path, int64_t btime) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Microsoft.Win32", "KeyHandler", "SaveRegisteredBootTime", path, btime));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.CleanVolatileKeys
void Microsoft::Win32::KeyHandler::CleanVolatileKeys() {
  THROW_UNLESS(il2cpp_utils::RunMethod("Microsoft.Win32", "KeyHandler", "CleanVolatileKeys"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.VolatileKeyExists
bool Microsoft::Win32::KeyHandler::VolatileKeyExists(::CsString* dir) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Microsoft.Win32", "KeyHandler", "VolatileKeyExists", dir));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetVolatileDir
::CsString* Microsoft::Win32::KeyHandler::GetVolatileDir(::CsString* dir) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("Microsoft.Win32", "KeyHandler", "GetVolatileDir", dir));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Lookup
Microsoft::Win32::KeyHandler* Microsoft::Win32::KeyHandler::Lookup(Microsoft::Win32::RegistryKey* rkey, bool createNonExisting) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Microsoft::Win32::KeyHandler*>("Microsoft.Win32", "KeyHandler", "Lookup", rkey, createNonExisting));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetRootFromDir
::CsString* Microsoft::Win32::KeyHandler::GetRootFromDir(::CsString* dir) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("Microsoft.Win32", "KeyHandler", "GetRootFromDir", dir));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Drop
void Microsoft::Win32::KeyHandler::Drop(Microsoft::Win32::RegistryKey* rkey) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Microsoft.Win32", "KeyHandler", "Drop", rkey));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetValue
::CsObject* Microsoft::Win32::KeyHandler::GetValue(::CsString* name, Microsoft::Win32::RegistryValueOptions options) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsObject*>(this, "GetValue", name, options));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.GetSubKeyNames
::Array<::CsString*>* Microsoft::Win32::KeyHandler::GetSubKeyNames() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<::CsString*>*>(this, "GetSubKeyNames"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Flush
void Microsoft::Win32::KeyHandler::Flush() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Flush"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.ValueExists
bool Microsoft::Win32::KeyHandler::ValueExists(::CsString* name) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ValueExists", name));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_IsMarkedForDeletion
bool Microsoft::Win32::KeyHandler::get_IsMarkedForDeletion() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsMarkedForDeletion"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Save
void Microsoft::Win32::KeyHandler::Save() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Save"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_UserStore
::CsString* Microsoft::Win32::KeyHandler::get_UserStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("Microsoft.Win32", "KeyHandler", "get_UserStore"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.get_MachineStore
::CsString* Microsoft::Win32::KeyHandler::get_MachineStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("Microsoft.Win32", "KeyHandler", "get_MachineStore"));
}
// Autogenerated method: Microsoft.Win32.KeyHandler.Finalize
void Microsoft::Win32::KeyHandler::Finalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Finalize"));
}
