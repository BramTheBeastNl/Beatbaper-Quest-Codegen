// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32RegistryApi
#include "Microsoft/Win32/Win32RegistryApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegCloseKey
int Microsoft::Win32::Win32RegistryApi::RegCloseKey(System::IntPtr keyHandle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegCloseKey", keyHandle));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegFlushKey
int Microsoft::Win32::Win32RegistryApi::RegFlushKey(System::IntPtr keyHandle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegFlushKey", keyHandle));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegOpenKeyEx
int Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx(System::IntPtr keyBase, ::Il2CppString* keyName, System::IntPtr reserved, int access, System::IntPtr& keyHandle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegOpenKeyEx", keyBase, keyName, reserved, access, keyHandle));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegEnumKeyEx
int Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx(System::IntPtr keyHandle, int dwIndex, ::Il2CppChar* lpName, int& lpcbName, ::Array<int>* lpReserved, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, ::Array<int64_t>* lpftLastWriteTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegEnumKeyEx", keyHandle, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, System::IntPtr zero, int& dataSize) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", keyBase, valueName, reserved, type, zero, dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, ::Array<uint8_t>*& data, int& dataSize) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", keyBase, valueName, reserved, type, data, dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int& data, int& dataSize) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", keyBase, valueName, reserved, type, data, dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int64_t& data, int& dataSize) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", keyBase, valueName, reserved, type, data, dataSize));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryInfoKey
int Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey(System::IntPtr hKey, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, System::IntPtr lpReserved_MustBeZero, int& lpcSubKeys, ::Array<int>* lpcbMaxSubKeyLen, ::Array<int>* lpcbMaxClassLen, int& lpcValues, ::Array<int>* lpcbMaxValueNameLen, ::Array<int>* lpcbMaxValueLen, ::Array<int>* lpcbSecurityDescriptor, ::Array<int>* lpftLastWriteTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("Microsoft.Win32", "Win32RegistryApi", "RegQueryInfoKey", hKey, lpClass, lpcbClass, lpReserved_MustBeZero, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.IsHandleValid
bool Microsoft::Win32::Win32RegistryApi::IsHandleValid(Microsoft::Win32::RegistryKey* key) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("Microsoft.Win32", "Win32RegistryApi", "IsHandleValid", key));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetBinaryValue
int Microsoft::Win32::Win32RegistryApi::GetBinaryValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, Microsoft::Win32::RegistryValueKind type, ::Array<uint8_t>*& data, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetBinaryValue", rkey, name, type, data, size));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.SubKeyCount
int Microsoft::Win32::Win32RegistryApi::SubKeyCount(Microsoft::Win32::RegistryKey* rkey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "SubKeyCount", rkey));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GenerateException
void Microsoft::Win32::Win32RegistryApi::GenerateException(int errorCode) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GenerateException", errorCode));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.CombineName
::Il2CppString* Microsoft::Win32::Win32RegistryApi::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* localName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("Microsoft.Win32", "Win32RegistryApi", "CombineName", rkey, localName));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetHandle
System::IntPtr Microsoft::Win32::Win32RegistryApi::GetHandle(Microsoft::Win32::RegistryKey* key) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "GetHandle", key));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::Win32RegistryApi::GetValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* defaultValue, Microsoft::Win32::RegistryValueOptions options) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(this, "GetValue", rkey, name, defaultValue, options));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::Win32RegistryApi::OpenSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyName, bool writable) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Microsoft::Win32::RegistryKey*>(this, "OpenSubKey", rkey, keyName, writable));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Flush
void Microsoft::Win32::Win32RegistryApi::Flush(Microsoft::Win32::RegistryKey* rkey) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Flush", rkey));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Close
void Microsoft::Win32::Win32RegistryApi::Close(Microsoft::Win32::RegistryKey* rkey) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Close", rkey));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::Win32RegistryApi::GetSubKeyNames(Microsoft::Win32::RegistryKey* rkey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<::Il2CppString*>*>(this, "GetSubKeyNames", rkey));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.ToString
::Il2CppString* Microsoft::Win32::Win32RegistryApi::ToString(Microsoft::Win32::RegistryKey* rkey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString", rkey));
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi..ctor
Microsoft::Win32::Win32RegistryApi* Microsoft::Win32::Win32RegistryApi::New_ctor() {
  return (Win32RegistryApi*)THROW_UNLESS(il2cpp_utils::New("Microsoft.Win32", "Win32RegistryApi"));
}
