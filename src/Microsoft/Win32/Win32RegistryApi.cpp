// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Microsoft.Win32.Win32RegistryApi
#include "Microsoft/Win32/Win32RegistryApi.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Microsoft.Win32.RegistryValueKind
#include "Microsoft/Win32/RegistryValueKind.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: Microsoft.Win32.RegistryValueOptions
#include "Microsoft/Win32/RegistryValueOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegCloseKey
int Microsoft::Win32::Win32RegistryApi::RegCloseKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegCloseKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegCloseKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegFlushKey
int Microsoft::Win32::Win32RegistryApi::RegFlushKey(System::IntPtr keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegFlushKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegFlushKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegOpenKeyEx
int Microsoft::Win32::Win32RegistryApi::RegOpenKeyEx(System::IntPtr keyBase, ::Il2CppString* keyName, System::IntPtr reserved, int access, System::IntPtr& keyHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegOpenKeyEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegOpenKeyEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, keyName, reserved, access, keyHandle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, keyName, reserved, access, keyHandle);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegEnumKeyEx
int Microsoft::Win32::Win32RegistryApi::RegEnumKeyEx(System::IntPtr keyHandle, int dwIndex, ::Il2CppChar* lpName, int& lpcbName, ::Array<int>* lpReserved, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, ::Array<int64_t>* lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegEnumKeyEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegEnumKeyEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyHandle, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyHandle, dwIndex, lpName, lpcbName, lpReserved, lpClass, lpcbClass, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, System::IntPtr zero, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, zero, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, zero, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, ::Array<uint8_t>*& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryValueEx
int Microsoft::Win32::Win32RegistryApi::RegQueryValueEx(System::IntPtr keyBase, ::Il2CppString* valueName, System::IntPtr reserved, Microsoft::Win32::RegistryValueKind& type, int64_t& data, int& dataSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegQueryValueEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryValueEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyBase, valueName, reserved, type, data, dataSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyBase, valueName, reserved, type, data, dataSize);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.RegQueryInfoKey
int Microsoft::Win32::Win32RegistryApi::RegQueryInfoKey(System::IntPtr hKey, System::Text::StringBuilder*& lpClass, ::Array<int>* lpcbClass, System::IntPtr lpReserved_MustBeZero, int& lpcSubKeys, ::Array<int>* lpcbMaxSubKeyLen, ::Array<int>* lpcbMaxClassLen, int& lpcValues, ::Array<int>* lpcbMaxValueNameLen, ::Array<int>* lpcbMaxValueLen, ::Array<int>* lpcbSecurityDescriptor, ::Array<int>* lpftLastWriteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("RegQueryInfoKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "RegQueryInfoKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hKey, lpClass, lpcbClass, lpReserved_MustBeZero, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hKey, lpClass, lpcbClass, lpReserved_MustBeZero, lpcSubKeys, lpcbMaxSubKeyLen, lpcbMaxClassLen, lpcValues, lpcbMaxValueNameLen, lpcbMaxValueLen, lpcbSecurityDescriptor, lpftLastWriteTime);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.IsHandleValid
bool Microsoft::Win32::Win32RegistryApi::IsHandleValid(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("IsHandleValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "IsHandleValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetBinaryValue
int Microsoft::Win32::Win32RegistryApi::GetBinaryValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, Microsoft::Win32::RegistryValueKind type, ::Array<uint8_t>*& data, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("GetBinaryValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBinaryValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, type, data, size)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rkey, name, type, data, size);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.SubKeyCount
int Microsoft::Win32::Win32RegistryApi::SubKeyCount(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("SubKeyCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SubKeyCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GenerateException
void Microsoft::Win32::Win32RegistryApi::GenerateException(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("GenerateException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(errorCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, errorCode);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.CombineName
::Il2CppString* Microsoft::Win32::Win32RegistryApi::CombineName(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("CombineName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "Win32RegistryApi", "CombineName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, localName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rkey, localName);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetHandle
System::IntPtr Microsoft::Win32::Win32RegistryApi::GetHandle(Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("GetHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetValue
::Il2CppObject* Microsoft::Win32::Win32RegistryApi::GetValue(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* name, ::Il2CppObject* defaultValue, Microsoft::Win32::RegistryValueOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, name, defaultValue, options)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, rkey, name, defaultValue, options);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.OpenSubKey
Microsoft::Win32::RegistryKey* Microsoft::Win32::Win32RegistryApi::OpenSubKey(Microsoft::Win32::RegistryKey* rkey, ::Il2CppString* keyName, bool writable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("OpenSubKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OpenSubKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey, keyName, writable)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(this, ___internal__method, rkey, keyName, writable);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Flush
void Microsoft::Win32::Win32RegistryApi::Flush(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.Close
void Microsoft::Win32::Win32RegistryApi::Close(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.GetSubKeyNames
::Array<::Il2CppString*>* Microsoft::Win32::Win32RegistryApi::GetSubKeyNames(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("GetSubKeyNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSubKeyNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, rkey);
}
// Autogenerated method: Microsoft.Win32.Win32RegistryApi.ToString
::Il2CppString* Microsoft::Win32::Win32RegistryApi::ToString(Microsoft::Win32::RegistryKey* rkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("Win32RegistryApi").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rkey)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, rkey);
}
