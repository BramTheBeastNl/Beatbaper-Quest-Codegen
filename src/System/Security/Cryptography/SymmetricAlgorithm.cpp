// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Clear
void System::Security::Cryptography::SymmetricAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_BlockSize
int System::Security::Cryptography::SymmetricAlgorithm::get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_BlockSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BlockSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_BlockSize
void System::Security::Cryptography::SymmetricAlgorithm::set_BlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_BlockSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_BlockSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_FeedbackSize
int System::Security::Cryptography::SymmetricAlgorithm::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_FeedbackSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_IV
::Array<uint8_t>* System::Security::Cryptography::SymmetricAlgorithm::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_IV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_IV
void System::Security::Cryptography::SymmetricAlgorithm::set_IV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_IV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Key
::Array<uint8_t>* System::Security::Cryptography::SymmetricAlgorithm::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Key
void System::Security::Cryptography::SymmetricAlgorithm::set_Key(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_LegalKeySizes
::Array<System::Security::Cryptography::KeySizes*>* System::Security::Cryptography::SymmetricAlgorithm::get_LegalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_LegalKeySizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LegalKeySizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Security::Cryptography::KeySizes*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_KeySize
int System::Security::Cryptography::SymmetricAlgorithm::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_KeySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_KeySize
void System::Security::Cryptography::SymmetricAlgorithm::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_KeySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::SymmetricAlgorithm::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_Mode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Mode
void System::Security::Cryptography::SymmetricAlgorithm::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_Mode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::SymmetricAlgorithm::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("get_Padding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Padding
void System::Security::Cryptography::SymmetricAlgorithm::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("set_Padding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize
bool System::Security::Cryptography::SymmetricAlgorithm::ValidKeySize(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("ValidKeySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidKeySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bitLength)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Create
System::Security::Cryptography::SymmetricAlgorithm* System::Security::Cryptography::SymmetricAlgorithm::Create(::Il2CppString* algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Security.Cryptography", "SymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(algName)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::SymmetricAlgorithm*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("CreateEncryptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("CreateEncryptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rgbKey, rgbIV)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("CreateDecryptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("CreateDecryptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rgbKey, rgbIV)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
void System::Security::Cryptography::SymmetricAlgorithm::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("GenerateKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
void System::Security::Cryptography::SymmetricAlgorithm::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("GenerateIV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("SymmetricAlgorithm").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Security::Cryptography::SymmetricAlgorithm::System_IDisposable_Dispose() {
  System::Security::Cryptography::SymmetricAlgorithm::Dispose();
}
