// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.DSASignatureDeformatter
#include "System/Security/Cryptography/DSASignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter..ctor
System::Security::Cryptography::DSASignatureDeformatter* System::Security::Cryptography::DSASignatureDeformatter::New_ctor(System::Security::Cryptography::AsymmetricAlgorithm* key) {
  return THROW_UNLESS(il2cpp_utils::New<DSASignatureDeformatter*>(key));
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter..ctor
System::Security::Cryptography::DSASignatureDeformatter* System::Security::Cryptography::DSASignatureDeformatter::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<DSASignatureDeformatter*>());
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.SetKey
void System::Security::Cryptography::DSASignatureDeformatter::SetKey(System::Security::Cryptography::AsymmetricAlgorithm* key) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetKey", key));
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::DSASignatureDeformatter::SetHashAlgorithm(::Il2CppString* strName) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetHashAlgorithm", strName));
}
// Autogenerated method: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature
bool System::Security::Cryptography::DSASignatureDeformatter::VerifySignature(::Array<uint8_t>* rgbHash, ::Array<uint8_t>* rgbSignature) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifySignature", rgbHash, rgbSignature));
}
