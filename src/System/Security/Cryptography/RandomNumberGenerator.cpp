// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Create
System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RandomNumberGenerator::Create() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::RandomNumberGenerator*>("System.Security.Cryptography", "RandomNumberGenerator", "Create"));
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Dispose
void System::Security::Cryptography::RandomNumberGenerator::Dispose(bool disposing) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose", disposing));
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.GetBytes
void System::Security::Cryptography::RandomNumberGenerator::GetBytes(::Array<uint8_t>* data) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetBytes", data));
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator..ctor
System::Security::Cryptography::RandomNumberGenerator* System::Security::Cryptography::RandomNumberGenerator::New_ctor() {
  return (RandomNumberGenerator*)THROW_UNLESS(il2cpp_utils::New("System.Security.Cryptography", "RandomNumberGenerator"));
}
// Autogenerated method: System.Security.Cryptography.RandomNumberGenerator.Dispose
void System::Security::Cryptography::RandomNumberGenerator::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void System::Security::Cryptography::RandomNumberGenerator::System_IDisposable_Dispose() {
  System::Security::Cryptography::RandomNumberGenerator::Dispose();
}
