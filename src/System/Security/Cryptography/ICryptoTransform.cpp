// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_InputBlockSize
int System::Security::Cryptography::ICryptoTransform::get_InputBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_InputBlockSize"));
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_OutputBlockSize
int System::Security::Cryptography::ICryptoTransform::get_OutputBlockSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_OutputBlockSize"));
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.get_CanTransformMultipleBlocks
bool System::Security::Cryptography::ICryptoTransform::get_CanTransformMultipleBlocks() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanTransformMultipleBlocks"));
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.TransformBlock
int System::Security::Cryptography::ICryptoTransform::TransformBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount, ::Array<uint8_t>* outputBuffer, int outputOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "TransformBlock", inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset));
}
// Autogenerated method: System.Security.Cryptography.ICryptoTransform.TransformFinalBlock
::Array<uint8_t>* System::Security::Cryptography::ICryptoTransform::TransformFinalBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "TransformFinalBlock", inputBuffer, inputOffset, inputCount));
}
