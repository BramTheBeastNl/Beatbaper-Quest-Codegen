// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.Oid..ctor
System::Security::Cryptography::Oid* System::Security::Cryptography::Oid::New_ctor(::CsString* oid) {
  return (Oid*)THROW_UNLESS(il2cpp_utils::New("System.Security.Cryptography", "Oid", oid));
}
// Autogenerated method: System.Security.Cryptography.Oid..ctor
System::Security::Cryptography::Oid* System::Security::Cryptography::Oid::New_ctor(::CsString* oid, System::Security::Cryptography::OidGroup group, bool lookupFriendlyName) {
  return (Oid*)THROW_UNLESS(il2cpp_utils::New("System.Security.Cryptography", "Oid", oid, group, lookupFriendlyName));
}
// Autogenerated method: System.Security.Cryptography.Oid..ctor
System::Security::Cryptography::Oid* System::Security::Cryptography::Oid::New_ctor(::CsString* value, ::CsString* friendlyName) {
  return (Oid*)THROW_UNLESS(il2cpp_utils::New("System.Security.Cryptography", "Oid", value, friendlyName));
}
// Autogenerated method: System.Security.Cryptography.Oid..ctor
System::Security::Cryptography::Oid* System::Security::Cryptography::Oid::New_ctor(System::Security::Cryptography::Oid* oid) {
  return (Oid*)THROW_UNLESS(il2cpp_utils::New("System.Security.Cryptography", "Oid", oid));
}
// Autogenerated method: System.Security.Cryptography.Oid.get_Value
::CsString* System::Security::Cryptography::Oid::get_Value() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_Value"));
}
// Autogenerated method: System.Security.Cryptography.Oid.set_Value
void System::Security::Cryptography::Oid::set_Value(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Value", value));
}
