// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MinSize
int System::Security::Cryptography::KeySizes::get_MinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("KeySizes").WithContext("get_MinSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MaxSize
int System::Security::Cryptography::KeySizes::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("KeySizes").WithContext("get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_SkipSize
int System::Security::Cryptography::KeySizes::get_SkipSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("KeySizes").WithContext("get_SkipSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SkipSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegal
bool System::Security::Cryptography::KeySizes::IsLegal(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("KeySizes").WithContext("IsLegal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLegal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keySize)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, keySize);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegalKeySize
bool System::Security::Cryptography::KeySizes::IsLegalKeySize(::Array<System::Security::Cryptography::KeySizes*>* legalKeys, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Security::Cryptography").WithContext("KeySizes").WithContext("IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Security.Cryptography", "KeySizes", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(legalKeys, size)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, legalKeys, size);
}
