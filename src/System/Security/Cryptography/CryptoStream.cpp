// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
// Including type: System.Security.Cryptography.CryptoStream/HopToThreadPoolAwaitable
#include "System/Security/Cryptography/CryptoStream_HopToThreadPoolAwaitable.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<ReadAsyncInternal>d__34
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncInternal-d__34.hpp"
// Including type: System.Security.Cryptography.CryptoStream/<WriteAsyncInternal>d__37
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncInternal-d__37.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CryptoStream..ctor
System::Security::Cryptography::CryptoStream* System::Security::Cryptography::CryptoStream::New_ctor(System::IO::Stream* stream, System::Security::Cryptography::ICryptoTransform* transform, System::Security::Cryptography::CryptoStreamMode mode) {
  return THROW_UNLESS(il2cpp_utils::New<CryptoStream*>(stream, transform, mode));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_HasFlushedFinalBlock
bool System::Security::Cryptography::CryptoStream::get_HasFlushedFinalBlock() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_HasFlushedFinalBlock"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.FlushFinalBlock
void System::Security::Cryptography::CryptoStream::FlushFinalBlock() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FlushFinalBlock"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsyncInternal
System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsyncInternal(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<int>*>(this, "ReadAsyncInternal", buffer, offset, count, cancellationToken));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsyncInternal
System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsyncInternal(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "WriteAsyncInternal", buffer, offset, count, cancellationToken));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Clear
void System::Security::Cryptography::CryptoStream::Clear() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Clear"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.InitializeBuffer
void System::Security::Cryptography::CryptoStream::InitializeBuffer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitializeBuffer"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanRead
bool System::Security::Cryptography::CryptoStream::get_CanRead() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanRead"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanSeek
bool System::Security::Cryptography::CryptoStream::get_CanSeek() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanSeek"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanWrite
bool System::Security::Cryptography::CryptoStream::get_CanWrite() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanWrite"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Length
int64_t System::Security::Cryptography::CryptoStream::get_Length() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Length"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Position
int64_t System::Security::Cryptography::CryptoStream::get_Position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Position"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.set_Position
void System::Security::Cryptography::CryptoStream::set_Position(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Position", value));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Flush
void System::Security::Cryptography::CryptoStream::Flush() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Flush"));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Seek
int64_t System::Security::Cryptography::CryptoStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "Seek", offset, origin));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.SetLength
void System::Security::Cryptography::CryptoStream::SetLength(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLength", value));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Read
int System::Security::Cryptography::CryptoStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Read", buffer, offset, count));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<int>*>(this, "ReadAsync", buffer, offset, count, cancellationToken));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Write
void System::Security::Cryptography::CryptoStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", buffer, offset, count));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsync
System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "WriteAsync", buffer, offset, count, cancellationToken));
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Dispose
void System::Security::Cryptography::CryptoStream::Dispose(bool disposing) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose", disposing));
}
