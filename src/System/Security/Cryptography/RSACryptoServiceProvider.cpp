// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSACryptoServiceProvider
#include "System/Security/Cryptography/RSACryptoServiceProvider.hpp"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged.hpp"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Security.Cryptography.RSASignaturePadding
#include "System/Security/Cryptography/RSASignaturePadding.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.CspProviderFlags s_UseMachineKeyStore
System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::RSACryptoServiceProvider::_get_s_UseMachineKeyStore() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "RSACryptoServiceProvider", "s_UseMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.CspProviderFlags s_UseMachineKeyStore
void System::Security::Cryptography::RSACryptoServiceProvider::_set_s_UseMachineKeyStore(System::Security::Cryptography::CspProviderFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSACryptoServiceProvider", "s_UseMachineKeyStore", value));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_UseMachineKeyStore
bool System::Security::Cryptography::RSACryptoServiceProvider::get_UseMachineKeyStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Security.Cryptography", "RSACryptoServiceProvider", "get_UseMachineKeyStore"));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.GetAlgorithmId
int System::Security::Cryptography::RSACryptoServiceProvider::GetAlgorithmId(System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System.Security.Cryptography", "RSACryptoServiceProvider", "GetAlgorithmId", hashAlgorithm));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.PaddingModeNotSupported
System::Exception* System::Security::Cryptography::RSACryptoServiceProvider::PaddingModeNotSupported() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Exception*>("System.Security.Cryptography", "RSACryptoServiceProvider", "PaddingModeNotSupported"));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider..ctor
System::Security::Cryptography::RSACryptoServiceProvider* System::Security::Cryptography::RSACryptoServiceProvider::New_ctor(System::Security::Cryptography::CspParameters* parameters) {
  return THROW_UNLESS(il2cpp_utils::New<RSACryptoServiceProvider*>(parameters));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider..ctor
System::Security::Cryptography::RSACryptoServiceProvider* System::Security::Cryptography::RSACryptoServiceProvider::New_ctor(int dwKeySize) {
  return THROW_UNLESS(il2cpp_utils::New<RSACryptoServiceProvider*>(dwKeySize));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider..ctor
System::Security::Cryptography::RSACryptoServiceProvider* System::Security::Cryptography::RSACryptoServiceProvider::New_ctor(int dwKeySize, System::Security::Cryptography::CspParameters* parameters) {
  return THROW_UNLESS(il2cpp_utils::New<RSACryptoServiceProvider*>(dwKeySize, parameters));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Common
void System::Security::Cryptography::RSACryptoServiceProvider::Common(int dwKeySize, bool parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Common", dwKeySize, parameters));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Common
void System::Security::Cryptography::RSACryptoServiceProvider::Common(System::Security::Cryptography::CspParameters* p) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Common", p));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_PublicOnly
bool System::Security::Cryptography::RSACryptoServiceProvider::get_PublicOnly() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_PublicOnly"));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.InternalHashToHashAlgorithm
System::Security::Cryptography::HashAlgorithm* System::Security::Cryptography::RSACryptoServiceProvider::InternalHashToHashAlgorithm(int calgHash) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::HashAlgorithm*>("System.Security.Cryptography", "RSACryptoServiceProvider", "InternalHashToHashAlgorithm", calgHash));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash(::Array<uint8_t>* rgbHash, int calgHash, ::Array<uint8_t>* rgbSignature) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifyHash", rgbHash, calgHash, rgbSignature));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.OnKeyGenerated
void System::Security::Cryptography::RSACryptoServiceProvider::OnKeyGenerated(::Il2CppObject* sender, System::EventArgs* e) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnKeyGenerated", sender, e));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.HashData
::Array<uint8_t>* System::Security::Cryptography::RSACryptoServiceProvider::HashData(::Array<uint8_t>* data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "HashData", data, offset, count, hashAlgorithm));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash
bool System::Security::Cryptography::RSACryptoServiceProvider::VerifyHash(::Array<uint8_t>* hash, ::Array<uint8_t>* signature, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, System::Security::Cryptography::RSASignaturePadding* padding) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "VerifyHash", hash, signature, hashAlgorithm, padding));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider..ctor
System::Security::Cryptography::RSACryptoServiceProvider* System::Security::Cryptography::RSACryptoServiceProvider::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<RSACryptoServiceProvider*>());
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Finalize
void System::Security::Cryptography::RSACryptoServiceProvider::Finalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Finalize"));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.get_KeySize
int System::Security::Cryptography::RSACryptoServiceProvider::get_KeySize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_KeySize"));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue
::Array<uint8_t>* System::Security::Cryptography::RSACryptoServiceProvider::EncryptValue(::Array<uint8_t>* rgb) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "EncryptValue", rgb));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters
System::Security::Cryptography::RSAParameters System::Security::Cryptography::RSACryptoServiceProvider::ExportParameters(bool includePrivateParameters) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::RSAParameters>(this, "ExportParameters", includePrivateParameters));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters
void System::Security::Cryptography::RSACryptoServiceProvider::ImportParameters(System::Security::Cryptography::RSAParameters parameters) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ImportParameters", parameters));
}
// Autogenerated method: System.Security.Cryptography.RSACryptoServiceProvider.Dispose
void System::Security::Cryptography::RSACryptoServiceProvider::Dispose(bool disposing) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose", disposing));
}
