// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono
#include "System/Security/Cryptography/X509Certificates/X509Certificate2ImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String empty_error
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_empty_error() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String empty_error
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_empty_error(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] commonName
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_commonName() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "commonName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] commonName
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_commonName(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "commonName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] email
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_email() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "email"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] email
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_email(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "email", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] signedData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_signedData() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] signedData
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_signedData(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..ctor
System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::New_ctor(Mono::Security::X509::X509Certificate* cert) {
  return THROW_UNLESS(il2cpp_utils::New<X509Certificate2ImplMono*>(cert));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..ctor
System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::New_ctor(System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono* other) {
  return THROW_UNLESS(il2cpp_utils::New<X509Certificate2ImplMono*>(other));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Find
Mono::Security::ASN1* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Find(::Array<uint8_t>* oid, Mono::Security::ASN1* dn) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::ASN1*>(this, "Find", oid, dn));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValueAsString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValueAsString(Mono::Security::ASN1* pair) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetValueAsString", pair));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ImportPkcs12
Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12(::Array<uint8_t>* rawData, ::Il2CppString* password) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Certificate*>(this, "ImportPkcs12", rawData, password));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.AppendBuffer
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::AppendBuffer(System::Text::StringBuilder* sb, ::Array<uint8_t>* buffer) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "AppendBuffer", sb, buffer));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_MonoCertificate
Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_MonoCertificate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Certificate*>(this, "get_MonoCertificate"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", ".cctor"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IsValid() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsValid"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Clone
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Clone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>(this, "Clone"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetIssuerName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetIssuerName(bool legacyV1Mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetIssuerName", legacyV1Mode));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetSubjectName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSubjectName(bool legacyV1Mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetSubjectName", legacyV1Mode));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetRawCertData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRawCertData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "GetRawCertData"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetCertHash
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetCertHash(bool lazy) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "GetCertHash", lazy));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValidFrom
System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidFrom() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "GetValidFrom"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValidUntil
System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidUntil() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "GetValidUntil"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Equals(System::Security::Cryptography::X509Certificates::X509CertificateImpl* other, bool& result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other, result));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetSerialNumber
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSerialNumber() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(this, "GetSerialNumber"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..ctor
System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<X509Certificate2ImplMono*>());
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_Extensions
System::Security::Cryptography::X509Certificates::X509ExtensionCollection* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Extensions() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ExtensionCollection*>(this, "get_Extensions"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IssuerName
System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IssuerName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X500DistinguishedName*>(this, "get_IssuerName"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_PrivateKey
System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PrivateKey() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::AsymmetricAlgorithm*>(this, "get_PrivateKey"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::set_PrivateKey(System::Security::Cryptography::AsymmetricAlgorithm* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_PrivateKey", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_PublicKey
System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PublicKey() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::PublicKey*>(this, "get_PublicKey"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_SignatureAlgorithm
System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SignatureAlgorithm() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::Oid*>(this, "get_SignatureAlgorithm"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_SubjectName
System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SubjectName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X500DistinguishedName*>(this, "get_SubjectName"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Version() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_Version"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetNameInfo
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetNameInfo", nameType, forIssuer));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Import
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Import(::Array<uint8_t>* rawData, ::Il2CppString* password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Import", rawData, password, keyStorageFlags));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString(bool verbose) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString", verbose));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Verify(System::Security::Cryptography::X509Certificates::X509Certificate2* thisCertificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Verify", thisCertificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IntermediateCertificates
System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IntermediateCertificates() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*>(this, "get_IntermediateCertificates"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_FallbackImpl
System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_FallbackImpl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2Impl*>(this, "get_FallbackImpl"));
}
