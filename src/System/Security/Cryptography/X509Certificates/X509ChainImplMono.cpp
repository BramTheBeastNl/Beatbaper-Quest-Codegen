// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImplMono
#include "System/Security/Cryptography/X509Certificates/X509ChainImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System/Security/Cryptography/X509Certificates/X509ChainStatus.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Store
#include "System/Security/Cryptography/X509Certificates/X509Store.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System/Security/Cryptography/X509Certificates/X509ChainStatusFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: Mono.Security.X509.X509Crl/X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
::Array<System::Security::Cryptography::X509Certificates::X509ChainStatus>* System::Security::Cryptography::X509Certificates::X509ChainImplMono::_get_Empty() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Security::Cryptography::X509Certificates::X509ChainStatus>*>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_set_Empty(::Array<System::Security::Cryptography::X509Certificates::X509ChainStatus>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono..ctor
System::Security::Cryptography::X509Certificates::X509ChainImplMono* System::Security::Cryptography::X509Certificates::X509ChainImplMono::New_ctor(bool useMachineContext) {
  return THROW_UNLESS(il2cpp_utils::New<X509ChainImplMono*>(useMachineContext));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_Roots
System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_Roots() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2Collection*>(this, "get_Roots"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateAuthorities
System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateAuthorities() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2Collection*>(this, "get_CertificateAuthorities"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMRootStore
System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMRootStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Store*>(this, "get_LMRootStore"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserRootStore
System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserRootStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Store*>(this, "get_UserRootStore"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMCAStore
System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMCAStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Store*>(this, "get_LMCAStore"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserCAStore
System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserCAStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Store*>(this, "get_UserCAStore"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateCollection
System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateCollection() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2Collection*>(this, "get_CertificateCollection"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.BuildChainFrom
System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::BuildChainFrom(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>(this, "BuildChainFrom", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.SelectBestFromCollection
System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::SelectBestFromCollection(System::Security::Cryptography::X509Certificates::X509Certificate2* child, System::Security::Cryptography::X509Certificates::X509Certificate2Collection* c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2*>(this, "SelectBestFromCollection", child, c));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindParent
System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindParent(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509Certificate2*>(this, "FindParent", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsChainComplete
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsChainComplete(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsChainComplete", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSelfIssued
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSelfIssued(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsSelfIssued", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ValidateChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ValidateChain(System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ValidateChain", flag));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Process
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Process(int n) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Process", n));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.PrepareForNextCertificate
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::PrepareForNextCertificate(int n) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PrepareForNextCertificate", n));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.WrapUp
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::WrapUp() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "WrapUp"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCertificateExtensions
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCertificateExtensions(System::Security::Cryptography::X509Certificates::X509ChainElement* element) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessCertificateExtensions", element));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSignedWith
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSignedWith(System::Security::Cryptography::X509Certificates::X509Certificate2* _signed, System::Security::Cryptography::AsymmetricAlgorithm* pubkey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsSignedWith", _signed, pubkey));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetSubjectKeyIdentifier
::Il2CppString* System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetSubjectKeyIdentifier(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetSubjectKeyIdentifier", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::Il2CppString* System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::Il2CppString* System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(Mono::Security::X509::X509Crl* crl) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", crl));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::Il2CppString* System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(Mono::Security::X509::X509Extension* ext) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", ext));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocationOnChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocationOnChain(System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CheckRevocationOnChain", flag));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, int ca, bool online) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>(this, "CheckRevocation", certificate, ca, online));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, System::Security::Cryptography::X509Certificates::X509Certificate2* ca_cert, bool online) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>(this, "CheckRevocation", certificate, ca_cert, online));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckCrls
Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckCrls(::Il2CppString* subject, ::Il2CppString* ski, Mono::Security::X509::X509Store* store) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Crl*>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "CheckCrls", subject, ski, store));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindCrl
Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindCrl(System::Security::Cryptography::X509Certificates::X509Certificate2* caCertificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Mono::Security::X509::X509Crl*>(this, "FindCrl", caCertificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlExtensions(Mono::Security::X509::X509Crl* crl) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessCrlExtensions", crl));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlEntryExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlEntryExtensions(Mono::Security::X509::X509Crl::X509CrlEntry* entry) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessCrlEntryExtensions", entry));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", ".cctor"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_IsValid() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsValid"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainElements
System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainElements() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ChainElementCollection*>(this, "get_ChainElements"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainPolicy
System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainPolicy() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::X509Certificates::X509ChainPolicy*>(this, "get_ChainPolicy"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.set_ChainPolicy
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::set_ChainPolicy(System::Security::Cryptography::X509Certificates::X509ChainPolicy* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_ChainPolicy", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Build
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::Build(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Build", certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Reset
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
