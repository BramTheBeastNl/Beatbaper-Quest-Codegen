// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsnEncodedData
#include "System/Security/Cryptography/AsnEncodedData.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Empty
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::PublicKey::_get_Empty() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Empty
void System::Security::Cryptography::X509Certificates::PublicKey::_set_Empty(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey..ctor
System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::PublicKey::New_ctor(Mono::Security::X509::X509Certificate* certificate) {
  return THROW_UNLESS(il2cpp_utils::New<PublicKey*>(certificate));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedKeyValue
System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedKeyValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::AsnEncodedData*>(this, "get_EncodedKeyValue"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedParameters
System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedParameters() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::AsnEncodedData*>(this, "get_EncodedParameters"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Key
System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::PublicKey::get_Key() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::AsymmetricAlgorithm*>(this, "get_Key"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Oid
System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::PublicKey::get_Oid() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::Oid*>(this, "get_Oid"));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.GetUnsignedBigInteger
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::PublicKey::GetUnsignedBigInteger(::Array<uint8_t>* integer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("System.Security.Cryptography.X509Certificates", "PublicKey", "GetUnsignedBigInteger", integer));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeDSA
System::Security::Cryptography::DSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeDSA(::Array<uint8_t>* rawPublicKey, ::Array<uint8_t>* rawParameters) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::DSA*>("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeDSA", rawPublicKey, rawParameters));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeRSA
System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeRSA(::Array<uint8_t>* rawPublicKey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Security::Cryptography::RSA*>("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeRSA", rawPublicKey));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey..cctor
void System::Security::Cryptography::X509Certificates::PublicKey::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Security.Cryptography.X509Certificates", "PublicKey", ".cctor"));
}
