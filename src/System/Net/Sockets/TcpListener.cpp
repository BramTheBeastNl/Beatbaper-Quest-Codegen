// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.TcpListener
#include "System/Net/Sockets/TcpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.TcpListener.get_LocalEndpoint
System::Net::EndPoint* System::Net::Sockets::TcpListener::get_LocalEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("get_LocalEndpoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalEndpoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::EndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start(int backlog) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(backlog)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, backlog);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Stop
void System::Net::Sockets::TcpListener::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.BeginAcceptTcpClient
System::IAsyncResult* System::Net::Sockets::TcpListener::BeginAcceptTcpClient(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("BeginAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginAcceptTcpClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, state)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.Sockets.TcpListener.EndAcceptTcpClient
System::Net::Sockets::TcpClient* System::Net::Sockets::TcpListener::EndAcceptTcpClient(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net::Sockets").WithContext("TcpListener").WithContext("EndAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndAcceptTcpClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::TcpClient*, false>(this, ___internal__method, asyncResult);
}
