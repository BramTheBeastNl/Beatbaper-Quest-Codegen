// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.SystemNetworkCredential
#include "System/Net/SystemNetworkCredential.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.SystemNetworkCredential defaultCredential
System::Net::SystemNetworkCredential* System::Net::SystemNetworkCredential::_get_defaultCredential() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("SystemNetworkCredential").WithContext("_get_defaultCredential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::SystemNetworkCredential*>("System.Net", "SystemNetworkCredential", "defaultCredential"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.SystemNetworkCredential defaultCredential
void System::Net::SystemNetworkCredential::_set_defaultCredential(System::Net::SystemNetworkCredential* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("SystemNetworkCredential").WithContext("_set_defaultCredential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SystemNetworkCredential", "defaultCredential", value));
}
// Autogenerated method: System.Net.SystemNetworkCredential..cctor
void System::Net::SystemNetworkCredential::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("SystemNetworkCredential").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "SystemNetworkCredential", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
