// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebProxy
#include "System/Net/WebProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Net.AutoWebProxyScriptEngine
#include "System/Net/AutoWebProxyScriptEngine.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebProxy.get_UseDefaultCredentials
bool System::Net::WebProxy::get_UseDefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("get_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.set_UseDefaultCredentials
void System::Net::WebProxy::set_UseDefaultCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("set_UseDefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_UseDefaultCredentials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.WebProxy.UpdateRegExList
void System::Net::WebProxy::UpdateRegExList(bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("UpdateRegExList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateRegExList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(canThrow)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canThrow);
}
// Autogenerated method: System.Net.WebProxy.IsMatchInBypassList
bool System::Net::WebProxy::IsMatchInBypassList(System::Uri* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsMatchInBypassList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatchInBypassList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Net.WebProxy.IsLocal
bool System::Net::WebProxy::IsLocal(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsLocalInProxyHash
bool System::Net::WebProxy::IsLocalInProxyHash(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsLocalInProxyHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLocalInProxyHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedManual
bool System::Net::WebProxy::IsBypassedManual(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsBypassedManual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBypassedManual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.GetObjectData
void System::Net::WebProxy::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Net.WebProxy.get_ScriptEngine
System::Net::AutoWebProxyScriptEngine* System::Net::WebProxy::get_ScriptEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("get_ScriptEngine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ScriptEngine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::AutoWebProxyScriptEngine*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.CreateDefaultProxy
System::Net::IWebProxy* System::Net::WebProxy::CreateDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("CreateDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "WebProxy", "CreateDefaultProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.UnsafeUpdateFromRegistry
void System::Net::WebProxy::UnsafeUpdateFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("UnsafeUpdateFromRegistry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnsafeUpdateFromRegistry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxyAuto
bool System::Net::WebProxy::GetProxyAuto(System::Uri* destination, System::Uri*& proxyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("GetProxyAuto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProxyAuto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destination, proxyUri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, proxyUri);
}
// Autogenerated method: System.Net.WebProxy.IsBypassedAuto
bool System::Net::WebProxy::IsBypassedAuto(System::Uri* destination, bool& isBypassed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsBypassedAuto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBypassedAuto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destination, isBypassed)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, destination, isBypassed);
}
// Autogenerated method: System.Net.WebProxy.AreAllBypassed
bool System::Net::WebProxy::AreAllBypassed(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* proxies, bool checkFirstOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("AreAllBypassed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "WebProxy", "AreAllBypassed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxies, checkFirstOnly)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxies, checkFirstOnly);
}
// Autogenerated method: System.Net.WebProxy.ProxyUri
System::Uri* System::Net::WebProxy::ProxyUri(::Il2CppString* proxyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("ProxyUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "WebProxy", "ProxyUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyName)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyName);
}
// Autogenerated method: System.Net.WebProxy.get_Credentials
System::Net::ICredentials* System::Net::WebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("get_Credentials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.WebProxy.GetProxy
System::Uri* System::Net::WebProxy::GetProxy(System::Uri* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("GetProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destination)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Net.WebProxy.IsBypassed
bool System::Net::WebProxy::IsBypassed(System::Uri* host) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("IsBypassed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Net.WebProxy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Net::WebProxy::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("WebProxy").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
