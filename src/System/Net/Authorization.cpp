// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Authorization..ctor
System::Net::Authorization* System::Net::Authorization::New_ctor(::Il2CppString* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("Authorization").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Authorization*>(token));
}
// Autogenerated method: System.Net.Authorization..ctor
System::Net::Authorization* System::Net::Authorization::New_ctor(::Il2CppString* token, bool finished) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("Authorization").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Authorization*>(token, finished));
}
// Autogenerated method: System.Net.Authorization.get_Message
::Il2CppString* System::Net::Authorization::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("Authorization").WithContext("get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_Message", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Authorization.get_Complete
bool System::Net::Authorization::get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("Authorization").WithContext("get_Complete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_Complete", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
