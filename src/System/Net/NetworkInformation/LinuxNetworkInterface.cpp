// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.LinuxNetworkInterface
#include "System/Net/NetworkInformation/LinuxNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_IfacePath
::Il2CppString* System::Net::NetworkInformation::LinuxNetworkInterface::get_IfacePath() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_IfacePath"));
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.ReadLine
::Il2CppString* System::Net::NetworkInformation::LinuxNetworkInterface::ReadLine(::Il2CppString* path) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Net.NetworkInformation", "LinuxNetworkInterface", "ReadLine", path));
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface..ctor
System::Net::NetworkInformation::LinuxNetworkInterface* System::Net::NetworkInformation::LinuxNetworkInterface::New_ctor(::Il2CppString* name) {
  return THROW_UNLESS(il2cpp_utils::New<LinuxNetworkInterface*>(name));
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.GetIPProperties
System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::LinuxNetworkInterface::GetIPProperties() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::NetworkInformation::IPInterfaceProperties*>(this, "GetIPProperties"));
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_OperationalStatus
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::LinuxNetworkInterface::get_OperationalStatus() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::NetworkInformation::OperationalStatus>(this, "get_OperationalStatus"));
}
