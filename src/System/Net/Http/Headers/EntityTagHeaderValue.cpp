// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(System::Net::Http::Headers::EntityTagHeaderValue* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsWeak"));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_IsWeak", value));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::Il2CppString* System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_Tag"));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Tag", value));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::EntityTagHeaderValue*& parsedValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", input, parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::EntityTagHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", lexer, parsedValue, t));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*& result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", input, minimalCount, result));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor"));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..ctor
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<EntityTagHeaderValue*>());
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(this, "System.ICloneable.Clone"));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
