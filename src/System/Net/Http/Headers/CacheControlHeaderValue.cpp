// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*>(this, "get_Extensions"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Nullable_1<System::TimeSpan>>(this, "get_MaxAge"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(System::Nullable_1<System::TimeSpan> value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MaxAge", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_MaxStale"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MaxStale", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Nullable_1<System::TimeSpan>>(this, "get_MaxStaleLimit"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(System::Nullable_1<System::TimeSpan> value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MaxStaleLimit", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Nullable_1<System::TimeSpan>>(this, "get_MinFresh"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(System::Nullable_1<System::TimeSpan> value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MinFresh", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_MustRevalidate"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_MustRevalidate", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_NoCache"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_NoCache", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
System::Collections::Generic::ICollection_1<::Il2CppString*>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::ICollection_1<::Il2CppString*>*>(this, "get_NoCacheHeaders"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_NoStore"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_NoStore", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_NoTransform"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_NoTransform", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_OnlyIfCached"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_OnlyIfCached", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_Private"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Private", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
System::Collections::Generic::ICollection_1<::Il2CppString*>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::ICollection_1<::Il2CppString*>*>(this, "get_PrivateHeaders"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_ProxyRevalidate"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_ProxyRevalidate", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_Public"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Public", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Nullable_1<System::TimeSpan>>(this, "get_SharedMaxAge"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(System::Nullable_1<System::TimeSpan> value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_SharedMaxAge", value));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::CacheControlHeaderValue*& parsedValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", input, parsedValue));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(this, "System.ICloneable.Clone"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue..ctor
System::Net::Http::Headers::CacheControlHeaderValue* System::Net::Http::Headers::CacheControlHeaderValue::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<CacheControlHeaderValue*>());
}
