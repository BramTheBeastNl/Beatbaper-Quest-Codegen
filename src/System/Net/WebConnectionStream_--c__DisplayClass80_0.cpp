// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass80_0
#include "System/Net/WebConnectionStream_--c__DisplayClass80_0.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass80_0.<WriteRequestAsync>b__0
void System::Net::WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__0(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("$$c__DisplayClass80_0").WithContext("<WriteRequestAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteRequestAsync>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inner))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inner);
}
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass80_0.<WriteRequestAsync>b__1
void System::Net::WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__1(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("$$c__DisplayClass80_0").WithContext("<WriteRequestAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteRequestAsync>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(r))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
