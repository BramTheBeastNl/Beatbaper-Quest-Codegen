// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Net.MonoChunkStream/Chunk
#include "System/Net/MonoChunkStream_Chunk.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.MonoChunkStream..ctor
System::Net::MonoChunkStream* System::Net::MonoChunkStream::New_ctor(::Array<uint8_t>* buffer, int offset, int size, System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MonoChunkStream*>(buffer, offset, size, headers));
}
// Autogenerated method: System.Net.MonoChunkStream..ctor
System::Net::MonoChunkStream* System::Net::MonoChunkStream::New_ctor(System::Net::WebHeaderCollection* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MonoChunkStream*>(headers));
}
// Autogenerated method: System.Net.MonoChunkStream.ResetBuffer
void System::Net::MonoChunkStream::ResetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ResetBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ResetBuffer", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.WriteAndReadBack
void System::Net::MonoChunkStream::WriteAndReadBack(::Array<uint8_t>* buffer, int offset, int size, int& read) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("WriteAndReadBack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "WriteAndReadBack", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size, read)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size, read);
}
// Autogenerated method: System.Net.MonoChunkStream.Read
int System::Net::MonoChunkStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "Read", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadFromChunks
int System::Net::MonoChunkStream::ReadFromChunks(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ReadFromChunks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "ReadFromChunks", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.Write
void System::Net::MonoChunkStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Write", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.InternalWrite
void System::Net::MonoChunkStream::InternalWrite(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("InternalWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InternalWrite", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.get_WantMore
bool System::Net::MonoChunkStream::get_WantMore() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("get_WantMore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_WantMore", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.get_DataAvailable
bool System::Net::MonoChunkStream::get_DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("get_DataAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_DataAvailable", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.get_ChunkLeft
int System::Net::MonoChunkStream::get_ChunkLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("get_ChunkLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_ChunkLeft", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadBody
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadBody(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ReadBody");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Net::MonoChunkStream::State>(), "ReadBody", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.GetChunkSize
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::GetChunkSize(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("GetChunkSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Net::MonoChunkStream::State>(), "GetChunkSize", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.RemoveChunkExtension
::Il2CppString* System::Net::MonoChunkStream::RemoveChunkExtension(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("RemoveChunkExtension");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "MonoChunkStream", il2cpp_utils::NoArgClass<::Il2CppString*>(), "RemoveChunkExtension", {}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadCRLF
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadCRLF(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ReadCRLF");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Net::MonoChunkStream::State>(), "ReadCRLF", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ReadTrailer
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadTrailer(::Array<uint8_t>* buffer, int& offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ReadTrailer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Net::MonoChunkStream::State>(), "ReadTrailer", {}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::MonoChunkStream::State, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.MonoChunkStream.ThrowProtocolViolation
void System::Net::MonoChunkStream::ThrowProtocolViolation(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Net").WithContext("MonoChunkStream").WithContext("ThrowProtocolViolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Net", "MonoChunkStream", il2cpp_utils::NoArgClass<void>(), "ThrowProtocolViolation", {}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
