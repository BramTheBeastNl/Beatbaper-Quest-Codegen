// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.MonoChunkStream
#include "System/Net/MonoChunkStream.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Net.MonoChunkStream/Chunk
#include "System/Net/MonoChunkStream_Chunk.hpp"
// Including type: System.Net.WebHeaderCollection
#include "System/Net/WebHeaderCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.MonoChunkStream..ctor
System::Net::MonoChunkStream* System::Net::MonoChunkStream::New_ctor(::Array<uint8_t>* buffer, int offset, int size, System::Net::WebHeaderCollection* headers) {
  return THROW_UNLESS(il2cpp_utils::New<MonoChunkStream*>(buffer, offset, size, headers));
}
// Autogenerated method: System.Net.MonoChunkStream..ctor
System::Net::MonoChunkStream* System::Net::MonoChunkStream::New_ctor(System::Net::WebHeaderCollection* headers) {
  return THROW_UNLESS(il2cpp_utils::New<MonoChunkStream*>(headers));
}
// Autogenerated method: System.Net.MonoChunkStream.ResetBuffer
void System::Net::MonoChunkStream::ResetBuffer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetBuffer"));
}
// Autogenerated method: System.Net.MonoChunkStream.WriteAndReadBack
void System::Net::MonoChunkStream::WriteAndReadBack(::Array<uint8_t>* buffer, int offset, int size, int& read) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "WriteAndReadBack", buffer, offset, size, read));
}
// Autogenerated method: System.Net.MonoChunkStream.Read
int System::Net::MonoChunkStream::Read(::Array<uint8_t>* buffer, int offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Read", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.ReadFromChunks
int System::Net::MonoChunkStream::ReadFromChunks(::Array<uint8_t>* buffer, int offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ReadFromChunks", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.Write
void System::Net::MonoChunkStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.InternalWrite
void System::Net::MonoChunkStream::InternalWrite(::Array<uint8_t>* buffer, int& offset, int size) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InternalWrite", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.get_WantMore
bool System::Net::MonoChunkStream::get_WantMore() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_WantMore"));
}
// Autogenerated method: System.Net.MonoChunkStream.get_DataAvailable
bool System::Net::MonoChunkStream::get_DataAvailable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_DataAvailable"));
}
// Autogenerated method: System.Net.MonoChunkStream.get_ChunkLeft
int System::Net::MonoChunkStream::get_ChunkLeft() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_ChunkLeft"));
}
// Autogenerated method: System.Net.MonoChunkStream.ReadBody
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadBody(::Array<uint8_t>* buffer, int& offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::MonoChunkStream::State>(this, "ReadBody", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.GetChunkSize
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::GetChunkSize(::Array<uint8_t>* buffer, int& offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::MonoChunkStream::State>(this, "GetChunkSize", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.RemoveChunkExtension
::Il2CppString* System::Net::MonoChunkStream::RemoveChunkExtension(::Il2CppString* input) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Net", "MonoChunkStream", "RemoveChunkExtension", input));
}
// Autogenerated method: System.Net.MonoChunkStream.ReadCRLF
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadCRLF(::Array<uint8_t>* buffer, int& offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::MonoChunkStream::State>(this, "ReadCRLF", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.ReadTrailer
System::Net::MonoChunkStream::State System::Net::MonoChunkStream::ReadTrailer(::Array<uint8_t>* buffer, int& offset, int size) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::MonoChunkStream::State>(this, "ReadTrailer", buffer, offset, size));
}
// Autogenerated method: System.Net.MonoChunkStream.ThrowProtocolViolation
void System::Net::MonoChunkStream::ThrowProtocolViolation(::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Net", "MonoChunkStream", "ThrowProtocolViolation", message));
}
