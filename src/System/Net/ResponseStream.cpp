// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.ResponseStream
#include "System/Net/ResponseStream.hpp"
// Including type: System.Net.HttpListenerResponse
#include "System/Net/HttpListenerResponse.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] crlf
::Array<uint8_t>* System::Net::ResponseStream::_get_crlf() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Net", "ResponseStream", "crlf"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] crlf
void System::Net::ResponseStream::_set_crlf(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "ResponseStream", "crlf", value));
}
// Autogenerated method: System.Net.ResponseStream..ctor
System::Net::ResponseStream* System::Net::ResponseStream::New_ctor(System::IO::Stream* stream, System::Net::HttpListenerResponse* response, bool ignore_errors) {
  return THROW_UNLESS(il2cpp_utils::New<ResponseStream*>(stream, response, ignore_errors));
}
// Autogenerated method: System.Net.ResponseStream.GetHeaders
System::IO::MemoryStream* System::Net::ResponseStream::GetHeaders(bool closing) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IO::MemoryStream*>(this, "GetHeaders", closing));
}
// Autogenerated method: System.Net.ResponseStream.GetChunkSizeBytes
::Array<uint8_t>* System::Net::ResponseStream::GetChunkSizeBytes(int size, bool final) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>("System.Net", "ResponseStream", "GetChunkSizeBytes", size, final));
}
// Autogenerated method: System.Net.ResponseStream.InternalWrite
void System::Net::ResponseStream::InternalWrite(::Array<uint8_t>* buffer, int offset, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InternalWrite", buffer, offset, count));
}
// Autogenerated method: System.Net.ResponseStream.get_CanRead
bool System::Net::ResponseStream::get_CanRead() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanRead"));
}
// Autogenerated method: System.Net.ResponseStream.get_CanSeek
bool System::Net::ResponseStream::get_CanSeek() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanSeek"));
}
// Autogenerated method: System.Net.ResponseStream.get_CanWrite
bool System::Net::ResponseStream::get_CanWrite() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanWrite"));
}
// Autogenerated method: System.Net.ResponseStream.get_Length
int64_t System::Net::ResponseStream::get_Length() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Length"));
}
// Autogenerated method: System.Net.ResponseStream.get_Position
int64_t System::Net::ResponseStream::get_Position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Position"));
}
// Autogenerated method: System.Net.ResponseStream.set_Position
void System::Net::ResponseStream::set_Position(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Position", value));
}
// Autogenerated method: System.Net.ResponseStream.Close
void System::Net::ResponseStream::Close() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Close"));
}
// Autogenerated method: System.Net.ResponseStream.Flush
void System::Net::ResponseStream::Flush() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Flush"));
}
// Autogenerated method: System.Net.ResponseStream.Write
void System::Net::ResponseStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", buffer, offset, count));
}
// Autogenerated method: System.Net.ResponseStream.BeginWrite
System::IAsyncResult* System::Net::ResponseStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginWrite", buffer, offset, count, cback, state));
}
// Autogenerated method: System.Net.ResponseStream.EndWrite
void System::Net::ResponseStream::EndWrite(System::IAsyncResult* ares) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndWrite", ares));
}
// Autogenerated method: System.Net.ResponseStream.Read
int System::Net::ResponseStream::Read(::Array<uint8_t>*& buffer, int offset, int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Read", buffer, offset, count));
}
// Autogenerated method: System.Net.ResponseStream.BeginRead
System::IAsyncResult* System::Net::ResponseStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* cback, ::Il2CppObject* state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginRead", buffer, offset, count, cback, state));
}
// Autogenerated method: System.Net.ResponseStream.EndRead
int System::Net::ResponseStream::EndRead(System::IAsyncResult* ares) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "EndRead", ares));
}
// Autogenerated method: System.Net.ResponseStream.Seek
int64_t System::Net::ResponseStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "Seek", offset, origin));
}
// Autogenerated method: System.Net.ResponseStream.SetLength
void System::Net::ResponseStream::SetLength(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLength", value));
}
// Autogenerated method: System.Net.ResponseStream..cctor
void System::Net::ResponseStream::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Net", "ResponseStream", ".cctor"));
}
