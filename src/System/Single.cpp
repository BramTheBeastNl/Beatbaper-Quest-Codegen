// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MinValue
float System::Single::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinValue
void System::Single::_set_MinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float System::Single::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void System::Single::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MaxValue
float System::Single::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaxValue
void System::Single::_set_MaxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PositiveInfinity
float System::Single::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PositiveInfinity
void System::Single::_set_PositiveInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NegativeInfinity
float System::Single::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NegativeInfinity
void System::Single::_set_NegativeInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NaN
float System::Single::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NaN
void System::Single::_set_NaN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NaN", value));
}
// Autogenerated method: System.Single.IsInfinity
bool System::Single::IsInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("IsInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsPositiveInfinity
bool System::Single::IsPositiveInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNegativeInfinity
bool System::Single::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNaN
bool System::Single::IsNaN(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("IsNaN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsNaN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::Single::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::Single::CompareTo(value);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(float obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.GetHashCode
int System::Single::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Single.GetTypeCode
System::TypeCode System::Single::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.System.IConvertible.ToBoolean
bool System::Single::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToChar
::Il2CppChar System::Single::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSByte
int8_t System::Single::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToByte
uint8_t System::Single::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt16
int16_t System::Single::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt16
uint16_t System::Single::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt32
int System::Single::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt32
uint System::Single::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt64
int64_t System::Single::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt64
uint64_t System::Single::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSingle
float System::Single::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDouble
double System::Single::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDecimal
System::Decimal System::Single::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDateTime
System::DateTime System::Single::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToType
::Il2CppObject* System::Single::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Single").WithContext("System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
