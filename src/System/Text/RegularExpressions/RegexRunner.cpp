// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Scan
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::Scan(System::Text::RegularExpressions::Regex* regex, ::Il2CppString* text, int textbeg, int textend, int textstart, int prevlen, bool quick, System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Scan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(regex, text, textbeg, textend, textstart, prevlen, quick, timeout)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, regex, text, textbeg, textend, textstart, prevlen, quick, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.StartTimeoutWatch
void System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("StartTimeoutWatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartTimeoutWatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.CheckTimeout
void System::Text::RegularExpressions::RegexRunner::CheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("CheckTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoCheckTimeout
void System::Text::RegularExpressions::RegexRunner::DoCheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("DoCheckTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoCheckTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Go
void System::Text::RegularExpressions::RegexRunner::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Go");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.FindFirstChar
bool System::Text::RegularExpressions::RegexRunner::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("FindFirstChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitTrackCount
void System::Text::RegularExpressions::RegexRunner::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("InitTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitMatch
void System::Text::RegularExpressions::RegexRunner::InitMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("InitMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TidyMatch
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::TidyMatch(bool quick) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("TidyMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TidyMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(quick)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.EnsureStorage
void System::Text::RegularExpressions::RegexRunner::EnsureStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("EnsureStorage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureStorage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsBoundary
bool System::Text::RegularExpressions::RegexRunner::IsBoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("IsBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, startpos, endpos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsECMABoundary
bool System::Text::RegularExpressions::RegexRunner::IsECMABoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("IsECMABoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsECMABoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, startpos, endpos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleTrack
void System::Text::RegularExpressions::RegexRunner::DoubleTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("DoubleTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleStack
void System::Text::RegularExpressions::RegexRunner::DoubleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("DoubleStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
void System::Text::RegularExpressions::RegexRunner::DoubleCrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("DoubleCrawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleCrawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawl
void System::Text::RegularExpressions::RegexRunner::Crawl(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Crawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Crawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Popcrawl
int System::Text::RegularExpressions::RegexRunner::Popcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Popcrawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Popcrawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawlpos
int System::Text::RegularExpressions::RegexRunner::Crawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Crawlpos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Crawlpos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Capture
void System::Text::RegularExpressions::RegexRunner::Capture(int capnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Capture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Capture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capnum, start, end)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TransferCapture
void System::Text::RegularExpressions::RegexRunner::TransferCapture(int capnum, int uncapnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("TransferCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TransferCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capnum, uncapnum, start, end)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capnum, uncapnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Uncapture
void System::Text::RegularExpressions::RegexRunner::Uncapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("Uncapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Uncapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsMatched
bool System::Text::RegularExpressions::RegexRunner::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("IsMatched");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchIndex
int System::Text::RegularExpressions::RegexRunner::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("MatchIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchLength
int System::Text::RegularExpressions::RegexRunner::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexRunner").WithContext("MatchLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
