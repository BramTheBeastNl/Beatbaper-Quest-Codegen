// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexFCD
#include "System/Text/RegularExpressions/RegexFCD.hpp"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FirstChars
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::FirstChars(System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("FirstChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexPrefix*>(), "FirstChars", {}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Prefix
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::Prefix(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("Prefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexPrefix*>(), "Prefix", {}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Anchors
int System::Text::RegularExpressions::RegexFCD::Anchors(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("Anchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", il2cpp_utils::NoArgClass<int>(), "Anchors", {}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.AnchorFromType
int System::Text::RegularExpressions::RegexFCD::AnchorFromType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("AnchorFromType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", il2cpp_utils::NoArgClass<int>(), "AnchorFromType", {}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushInt
void System::Text::RegularExpressions::RegexFCD::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("PushInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PushInt", {}, ::il2cpp_utils::ExtractTypes(I)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.IntIsEmpty
bool System::Text::RegularExpressions::RegexFCD::IntIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("IntIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IntIsEmpty", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopInt
int System::Text::RegularExpressions::RegexFCD::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("PopInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "PopInt", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushFC
void System::Text::RegularExpressions::RegexFCD::PushFC(System::Text::RegularExpressions::RegexFC* fc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("PushFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "PushFC", {}, ::il2cpp_utils::ExtractTypes(fc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FCIsEmpty
bool System::Text::RegularExpressions::RegexFCD::FCIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("FCIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "FCIsEmpty", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopFC
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::PopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("PopFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexFC*>(), "PopFC", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.TopFC
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::TopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("TopFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexFC*>(), "TopFC", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("RegexFCFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexFC*>(), "RegexFCFromRegexTree", {}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.SkipChild
void System::Text::RegularExpressions::RegexFCD::SkipChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("SkipChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SkipChild", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.CalculateFC
void System::Text::RegularExpressions::RegexFCD::CalculateFC(int NodeType, System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext("CalculateFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "CalculateFC", {}, ::il2cpp_utils::ExtractTypes(NodeType, node, CurIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, NodeType, node, CurIndex);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD..ctor
System::Text::RegularExpressions::RegexFCD* System::Text::RegularExpressions::RegexFCD::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexFCD").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RegexFCD*>());
}
