// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass_LowerCaseMapping.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String InternalRegexIgnoreCase
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String InternalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Space
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Space() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Space
void System::Text::RegularExpressions::RegexCharClass::_set_Space(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotSpace
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpace() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotSpace
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpace(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Word
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Word() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Word
void System::Text::RegularExpressions::RegexCharClass::_set_Word(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotWord
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWord() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotWord
void System::Text::RegularExpressions::RegexCharClass::_set_NotWord(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWord", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String SpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotSpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String WordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotWordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotDigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__definedCategories() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set__definedCategories(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[,] _propTable
::Array<::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__propTable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[,] _propTable
void System::Text::RegularExpressions::RegexCharClass::_set__propTable(::Array<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* System::Text::RegularExpressions::RegexCharClass::_get__lcTable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>*>("System.Text.RegularExpressions", "RegexCharClass", "_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
void System::Text::RegularExpressions::RegexCharClass::_set__lcTable(::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_lcTable", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor"));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..ctor
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::New_ctor(bool negate, System::Collections::Generic::List_1<System::Text::RegularExpressions::RegexCharClass::SingleRange*>* ranges, System::Text::StringBuilder* categories, System::Text::RegularExpressions::RegexCharClass* subtraction) {
  return (RegexCharClass*)THROW_UNLESS(il2cpp_utils::New("System.Text.RegularExpressions", "RegexCharClass", negate, ranges, categories, subtraction));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanMerge"));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Negate", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddChar", c));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(System::Text::RegularExpressions::RegexCharClass* cc) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCharClass", cc));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::Il2CppString* set) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddSet", set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(System::Text::RegularExpressions::RegexCharClass* sub) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddSubtraction", sub));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddRange", first, last));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::Il2CppString* categoryName, bool invert, bool caseInsensitive, ::Il2CppString* pattern) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCategoryFromName", categoryName, invert, caseInsensitive, pattern));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::Il2CppString* category) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddCategory", category));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(System::Globalization::CultureInfo* culture) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddLowercase", culture));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, System::Globalization::CultureInfo* culture) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddLowercaseRange", chMin, chMax, culture));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddWord", ecma, negate));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddSpace", ecma, negate));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::Il2CppString* pattern) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddDigit", ecma, negate, pattern));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::Il2CppString* set) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppChar>("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::Il2CppString* charClass) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", charClass));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::Il2CppString* charClass) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", charClass));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::Il2CppString* set) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::Il2CppString* set) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::Il2CppString* charClass) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", charClass));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::Il2CppString* set) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", ch));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", ch));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::Il2CppString* set) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", ch, set));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::Il2CppString* set, int start) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", ch, set, start));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", ch, set, start, mySetLength, myCategoryLength));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", ch, set, start, mySetLength, myCategoryLength));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, System::Globalization::UnicodeCategory chcategory, ::Il2CppString* category, int& i) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", ch, chcategory, category, i));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::NegateCategory(::Il2CppString* category) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", category));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::Il2CppString* charClass) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Text::RegularExpressions::RegexCharClass*>("System.Text.RegularExpressions", "RegexCharClass", "Parse", charClass));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::Il2CppString* charClass, int start) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Text::RegularExpressions::RegexCharClass*>("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", charClass, start));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "RangeCount"));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToStringClass"));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
System::Text::RegularExpressions::RegexCharClass::SingleRange* System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Text::RegularExpressions::RegexCharClass::SingleRange*>(this, "GetRangeAt", i));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Canonicalize"));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::Il2CppString* capname, bool invert, ::Il2CppString* pattern) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", capname, invert, pattern));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..ctor
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::New_ctor() {
  return (RegexCharClass*)THROW_UNLESS(il2cpp_utils::New("System.Text.RegularExpressions", "RegexCharClass"));
}
