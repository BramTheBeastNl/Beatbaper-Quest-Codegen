// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass_LowerCaseMapping.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String InternalRegexIgnoreCase
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_InternalRegexIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String InternalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_InternalRegexIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Space
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Space() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Space
void System::Text::RegularExpressions::RegexCharClass::_set_Space(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotSpace
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpace() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_NotSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotSpace
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpace(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_NotSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Word
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Word() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_Word");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Word
void System::Text::RegularExpressions::RegexCharClass::_set_Word(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_Word");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotWord
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWord() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_NotWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotWord
void System::Text::RegularExpressions::RegexCharClass::_set_NotWord(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_NotWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWord", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String SpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_SpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_SpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotSpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_NotSpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_NotSpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String WordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_WordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_WordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotWordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_NotWordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_NotWordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_DigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_DigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotDigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get_NotDigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set_NotDigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__definedCategories() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get__definedCategories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set__definedCategories(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set__definedCategories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[,] _propTable
::Array<::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__propTable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get__propTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[,] _propTable
void System::Text::RegularExpressions::RegexCharClass::_set__propTable(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set__propTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* System::Text::RegularExpressions::RegexCharClass::_get__lcTable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_get__lcTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>*>("System.Text.RegularExpressions", "RegexCharClass", "_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
void System::Text::RegularExpressions::RegexCharClass::_set__lcTable(::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("_set__lcTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_lcTable", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("get_CanMerge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanMerge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("set_Negate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Negate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(System::Text::RegularExpressions::RegexCharClass* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddCharClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCharClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(System::Text::RegularExpressions::RegexCharClass* sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddSubtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSubtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sub)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(first, last)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::Il2CppString* categoryName, bool invert, bool caseInsensitive, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddCategoryFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCategoryFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(categoryName, invert, caseInsensitive, pattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, categoryName, invert, caseInsensitive, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::Il2CppString* category) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddLowercase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLowercase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddLowercaseRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLowercaseRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chMin, chMax, culture)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chMin, chMax, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("AddDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate, pattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("SingletonChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsMergeable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsSingleton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsSingletonInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsSubtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsNegated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsECMAWordChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("IsWordChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("CharInClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::Il2CppString* set, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("CharInClassRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("CharInClassInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start, mySetLength, myCategoryLength)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("CharInCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start, mySetLength, myCategoryLength)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, System::Globalization::UnicodeCategory chcategory, ::Il2CppString* category, int& i) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("CharInCategoryGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, chcategory, category, i)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, chcategory, category, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::NegateCategory(::Il2CppString* category) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("NegateCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::Il2CppString* charClass, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("ParseRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass, start)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("RangeCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RangeCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("ToStringClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToStringClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
System::Text::RegularExpressions::RegexCharClass::SingleRange* System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("GetRangeAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRangeAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass::SingleRange*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("Canonicalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::Il2CppString* capname, bool invert, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCharClass").WithContext("SetFromProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capname, invert, pattern)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capname, invert, pattern);
}
