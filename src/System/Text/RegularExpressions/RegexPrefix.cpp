// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.RegexPrefix _empty
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::_get__empty() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext("_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexPrefix*>("System.Text.RegularExpressions", "RegexPrefix", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.RegexPrefix _empty
void System::Text::RegularExpressions::RegexPrefix::_set__empty(System::Text::RegularExpressions::RegexPrefix* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext("_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexPrefix", "_empty", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..ctor
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::New_ctor(::Il2CppString* prefix, bool ci) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RegexPrefix*>(prefix, ci));
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Prefix
::Il2CppString* System::Text::RegularExpressions::RegexPrefix::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext("get_Prefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_Prefix", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext("get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_CaseInsensitive", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Empty
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext("get_Empty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", il2cpp_utils::NoArgClass<System::Text::RegularExpressions::RegexPrefix*>(), "get_Empty", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..cctor
void System::Text::RegularExpressions::RegexPrefix::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexPrefix").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
