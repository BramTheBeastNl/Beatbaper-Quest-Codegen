// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Group _emptygroup
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::_get__emptygroup() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext("_get__emptygroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Group*>("System.Text.RegularExpressions", "Group", "_emptygroup"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Group _emptygroup
void System::Text::RegularExpressions::Group::_set__emptygroup(System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext("_set__emptygroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Group", "_emptygroup", value));
}
// Autogenerated method: System.Text.RegularExpressions.Group..ctor
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::New_ctor(::Il2CppString* text, ::Array<int>* caps, int capcount, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Group*>(text, caps, capcount, name));
}
// Autogenerated method: System.Text.RegularExpressions.Group.get_Success
bool System::Text::RegularExpressions::Group::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext("get_Success");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_Success", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..cctor
void System::Text::RegularExpressions::Group::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Group", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..ctor
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("Group").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Group*>());
}
