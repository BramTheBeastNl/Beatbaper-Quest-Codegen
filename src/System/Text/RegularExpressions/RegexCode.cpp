// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexCode..ctor
System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexCode::New_ctor(::Array<int>* codes, System::Collections::Generic::List_1<::Il2CppString*>* stringlist, int trackcount, System::Collections::Hashtable* caps, int capsize, System::Text::RegularExpressions::RegexBoyerMoore* bmPrefix, System::Text::RegularExpressions::RegexPrefix* fcPrefix, int anchors, bool rightToLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCode").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<RegexCode*>(codes, stringlist, trackcount, caps, capsize, bmPrefix, fcPrefix, anchors, rightToLeft));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCode.OpcodeBacktracks
bool System::Text::RegularExpressions::RegexCode::OpcodeBacktracks(int Op) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text::RegularExpressions").WithContext("RegexCode").WithContext("OpcodeBacktracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCode", il2cpp_utils::NoArgClass<bool>(), "OpcodeBacktracks", {}, ::il2cpp_utils::ExtractTypes(Op)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Op);
}
