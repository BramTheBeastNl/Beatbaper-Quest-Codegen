// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.EncoderNLS
#include "System/Text/EncoderNLS.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.EncoderNLS.get_Encoding
System::Text::Encoding* System::Text::EncoderNLS::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("get_Encoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncoderNLS.get_MustFlush
bool System::Text::EncoderNLS::get_MustFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("get_MustFlush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MustFlush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncoderNLS.get_HasState
bool System::Text::EncoderNLS::get_HasState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("get_HasState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncoderNLS.ClearMustFlush
void System::Text::EncoderNLS::ClearMustFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("ClearMustFlush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMustFlush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncoderNLS.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::EncoderNLS::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Text.EncoderNLS.Reset
void System::Text::EncoderNLS::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.EncoderNLS.GetByteCount
int System::Text::EncoderNLS::GetByteCount(::Array<::Il2CppChar>* chars, int index, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("GetByteCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, index, count, flush)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, index, count, flush);
}
// Autogenerated method: System.Text.EncoderNLS.GetByteCount
int System::Text::EncoderNLS::GetByteCount(::Il2CppChar* chars, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("GetByteCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, count, flush)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, count, flush);
}
// Autogenerated method: System.Text.EncoderNLS.GetBytes
int System::Text::EncoderNLS::GetBytes(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("GetBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, charIndex, charCount, bytes, byteIndex, flush)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex, flush);
}
// Autogenerated method: System.Text.EncoderNLS.GetBytes
int System::Text::EncoderNLS::GetBytes(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("GetBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, charCount, bytes, byteCount, flush)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, charCount, bytes, byteCount, flush);
}
// Autogenerated method: System.Text.EncoderNLS.Convert
void System::Text::EncoderNLS::Convert(::Array<::Il2CppChar>* chars, int charIndex, int charCount, ::Array<uint8_t>* bytes, int byteIndex, int byteCount, bool flush, int& charsUsed, int& bytesUsed, bool& completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("Convert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, charIndex, charCount, bytes, byteIndex, byteCount, flush, charsUsed, bytesUsed, completed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex, byteCount, flush, charsUsed, bytesUsed, completed);
}
// Autogenerated method: System.Text.EncoderNLS.Convert
void System::Text::EncoderNLS::Convert(::Il2CppChar* chars, int charCount, uint8_t* bytes, int byteCount, bool flush, int& charsUsed, int& bytesUsed, bool& completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Text").WithContext("EncoderNLS").WithContext("Convert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, charCount, bytes, byteCount, flush, charsUsed, bytesUsed, completed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, charCount, bytes, byteCount, flush, charsUsed, bytesUsed, completed);
}
