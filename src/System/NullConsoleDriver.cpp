// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.NullConsoleDriver
#include "System/NullConsoleDriver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.ConsoleKeyInfo EmptyConsoleKeyInfo
System::ConsoleKeyInfo System::NullConsoleDriver::_get_EmptyConsoleKeyInfo() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("NullConsoleDriver").WithContext("_get_EmptyConsoleKeyInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleKeyInfo>("System", "NullConsoleDriver", "EmptyConsoleKeyInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.ConsoleKeyInfo EmptyConsoleKeyInfo
void System::NullConsoleDriver::_set_EmptyConsoleKeyInfo(System::ConsoleKeyInfo value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("NullConsoleDriver").WithContext("_set_EmptyConsoleKeyInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "NullConsoleDriver", "EmptyConsoleKeyInfo", value));
}
// Autogenerated method: System.NullConsoleDriver..cctor
void System::NullConsoleDriver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("NullConsoleDriver").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "NullConsoleDriver", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.NullConsoleDriver.ReadKey
System::ConsoleKeyInfo System::NullConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("NullConsoleDriver").WithContext("ReadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(intercept)));
  return ::il2cpp_utils::RunMethodThrow<System::ConsoleKeyInfo, false>(this, ___internal__method, intercept);
}
