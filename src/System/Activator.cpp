// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Activator
#include "System/Activator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* args, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Activator").WithContext("CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, bindingAttr, binder, args, culture)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* args, System::Globalization::CultureInfo* culture, ::Array<::Il2CppObject*>* activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Activator").WithContext("CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, bindingAttr, binder, args, culture, activationAttributes)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingAttr, binder, args, culture, activationAttributes);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Activator").WithContext("CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, args);
}
// Creating initializer_list -> params proxy for: System.Object CreateInstance(System.Type type, params System.Object[] args)
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, std::initializer_list<::Il2CppObject*> args) {
  return System::Activator::CreateInstance(type, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Activator").WithContext("CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Activator.CreateInstance
::Il2CppObject* System::Activator::CreateInstance(System::Type* type, bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Activator").WithContext("CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Activator", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, nonPublic)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, nonPublic);
}
