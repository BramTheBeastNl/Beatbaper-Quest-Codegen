// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Omit
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Omit() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Omit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Omit
void System::Xml::XmlStandalone::_set_Omit(System::Xml::XmlStandalone value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Omit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Yes
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Yes() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Yes
void System::Xml::XmlStandalone::_set_Yes(System::Xml::XmlStandalone value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone No
System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_No() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone No
void System::Xml::XmlStandalone::_set_No(System::Xml::XmlStandalone value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "No", value));
}
