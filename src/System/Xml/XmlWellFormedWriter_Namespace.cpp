// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/Namespace
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.XmlWellFormedWriter/NamespaceKind
// Already included the same include: System/Xml/XmlWellFormedWriter.hpp
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/Namespace.Set
void System::Xml::XmlWellFormedWriter::Namespace::Set(::Il2CppString* prefix, ::Il2CppString* namespaceUri, System::Xml::XmlWellFormedWriter::NamespaceKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Xml").WithContext("Namespace").WithContext("Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefix, namespaceUri, kind)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, prefix, namespaceUri, kind);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/Namespace.WriteDecl
void System::Xml::XmlWellFormedWriter::Namespace::WriteDecl(System::Xml::XmlWriter* writer, System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Xml").WithContext("Namespace").WithContext("WriteDecl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "WriteDecl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, rawWriter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer, rawWriter);
}
