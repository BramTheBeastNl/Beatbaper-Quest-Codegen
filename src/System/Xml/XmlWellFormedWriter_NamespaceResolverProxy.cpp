// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy
#include "System/Xml/XmlWellFormedWriter_NamespaceResolverProxy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupNamespace
::Il2CppString* System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupNamespace(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Xml").WithContext("NamespaceResolverProxy").WithContext("System.Xml.IXmlNamespaceResolver.LookupNamespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefix)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupPrefix
::Il2CppString* System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupPrefix(::Il2CppString* namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Xml").WithContext("NamespaceResolverProxy").WithContext("System.Xml.IXmlNamespaceResolver.LookupPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(namespaceName)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, namespaceName);
}
