// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.WeakReference.AllocateHandle
void System::WeakReference::AllocateHandle(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("AllocateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AllocateHandle", {}, ::il2cpp_utils::ExtractTypes(target)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: System.WeakReference..ctor
System::WeakReference* System::WeakReference::New_ctor(::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<WeakReference*>(target));
}
// Autogenerated method: System.WeakReference..ctor
System::WeakReference* System::WeakReference::New_ctor(::Il2CppObject* target, bool trackResurrection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<WeakReference*>(target, trackResurrection));
}
// Autogenerated method: System.WeakReference..ctor
System::WeakReference* System::WeakReference::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<WeakReference*>(info, context));
}
// Autogenerated method: System.WeakReference.get_IsAlive
bool System::WeakReference::get_IsAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("get_IsAlive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_IsAlive", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.WeakReference.get_Target
::Il2CppObject* System::WeakReference::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("get_Target");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppObject*>(), "get_Target", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.WeakReference.set_Target
void System::WeakReference::set_Target(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("set_Target");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_Target", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.WeakReference.get_TrackResurrection
bool System::WeakReference::get_TrackResurrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("get_TrackResurrection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_TrackResurrection", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.WeakReference..ctor
System::WeakReference* System::WeakReference::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<WeakReference*>());
}
// Autogenerated method: System.WeakReference.Finalize
void System::WeakReference::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Finalize", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.WeakReference.GetObjectData
void System::WeakReference::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("WeakReference").WithContext("GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetObjectData", {}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::WeakReference::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::WeakReference::GetObjectData(info, context);
}
