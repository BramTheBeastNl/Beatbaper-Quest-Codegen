// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TaiwanCalendar
#include "System/Globalization/TaiwanCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] taiwanEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::TaiwanCalendar::_get_taiwanEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_get_taiwanEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "TaiwanCalendar", "taiwanEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] taiwanEraInfo
void System::Globalization::TaiwanCalendar::_set_taiwanEraInfo(::Array<System::Globalization::EraInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_set_taiwanEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "taiwanEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::TaiwanCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "TaiwanCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::TaiwanCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "s_defaultInstance", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
System::DateTime System::Globalization::TaiwanCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System.Globalization", "TaiwanCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::TaiwanCalendar::_set_calendarMinValue(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "TaiwanCalendar", "calendarMinValue", value));
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::TaiwanCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar..cctor
void System::Globalization::TaiwanCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "TaiwanCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::TaiwanCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::TaiwanCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_ID
int System::Globalization::TaiwanCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDaysInMonth
int System::Globalization::TaiwanCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfMonth
int System::Globalization::TaiwanCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::TaiwanCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonthsInYear
int System::Globalization::TaiwanCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetEra
int System::Globalization::TaiwanCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetMonth
int System::Globalization::TaiwanCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.GetYear
int System::Globalization::TaiwanCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.IsLeapYear
bool System::Globalization::TaiwanCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToDateTime
System::DateTime System::Globalization::TaiwanCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_Eras
::Array<int>* System::Globalization::TaiwanCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.get_TwoDigitYearMax
int System::Globalization::TaiwanCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.TaiwanCalendar.ToFourDigitYear
int System::Globalization::TaiwanCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("TaiwanCalendar").WithContext("ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
