// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.JapaneseCalendar
#include "System/Globalization/JapaneseCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
System::DateTime System::Globalization::JapaneseCalendar::_get_calendarMinValue() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_get_calendarMinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System.Globalization", "JapaneseCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::JapaneseCalendar::_set_calendarMinValue(System::DateTime value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_set_calendarMinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] japaneseEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::_get_japaneseEraInfo() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_get_japaneseEraInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "JapaneseCalendar", "japaneseEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] japaneseEraInfo
void System::Globalization::JapaneseCalendar::_set_japaneseEraInfo(::Array<System::Globalization::EraInfo*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_set_japaneseEraInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "japaneseEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::JapaneseCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetEraInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetEraInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<::Array<System::Globalization::EraInfo*>*>(), "GetEraInfo", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Globalization::EraInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetErasFromRegistry
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetErasFromRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetErasFromRegistry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<::Array<System::Globalization::EraInfo*>*>(), "GetErasFromRegistry", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Globalization::EraInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<System::Globalization::Calendar*>(), "GetDefaultInstance", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("EraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<::Array<::Il2CppString*>*>(), "EraNames", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.AbbrevEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::AbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("AbbrevEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<::Array<::Il2CppString*>*>(), "AbbrevEraNames", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EnglishEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("EnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<::Array<::Il2CppString*>*>(), "EnglishEraNames", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar..cctor
void System::Globalization::JapaneseCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "JapaneseCalendar", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::DateTime>(), "get_MinSupportedDateTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::DateTime>(), "get_MaxSupportedDateTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar..ctor
System::Globalization::JapaneseCalendar* System::Globalization::JapaneseCalendar::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<JapaneseCalendar*>());
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_ID
int System::Globalization::JapaneseCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_ID", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInMonth
int System::Globalization::JapaneseCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetDaysInMonth", {}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfMonth
int System::Globalization::JapaneseCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetDayOfMonth", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::JapaneseCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::DayOfWeek>(), "GetDayOfWeek", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonthsInYear
int System::Globalization::JapaneseCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetMonthsInYear", {}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEra
int System::Globalization::JapaneseCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetEra", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonth
int System::Globalization::JapaneseCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetMonth", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetYear
int System::Globalization::JapaneseCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetYear", {}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsLeapYear
bool System::Globalization::JapaneseCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsLeapYear", {}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToDateTime
System::DateTime System::Globalization::JapaneseCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::DateTime>(), "ToDateTime", {}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToFourDigitYear
int System::Globalization::JapaneseCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "ToFourDigitYear", {}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_Eras
::Array<int>* System::Globalization::JapaneseCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<int>*>(), "get_Eras", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsValidYear
bool System::Globalization::JapaneseCalendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("IsValidYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsValidYear", {}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_TwoDigitYearMax
int System::Globalization::JapaneseCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("JapaneseCalendar").WithContext("get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_TwoDigitYearMax", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
