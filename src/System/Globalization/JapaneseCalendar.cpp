// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.JapaneseCalendar
#include "System\Globalization\JapaneseCalendar.hpp"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System\Globalization\GregorianCalendarHelper.hpp"
// Including type: System.Globalization.EraInfo
#include "System\Globalization\EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System\DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.DateTime calendarMinValue
System::DateTime System::Globalization::JapaneseCalendar::_get_calendarMinValue() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System.Globalization", "JapaneseCalendar", "calendarMinValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.DateTime calendarMinValue
void System::Globalization::JapaneseCalendar::_set_calendarMinValue(System::DateTime value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "calendarMinValue", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.EraInfo[] japaneseEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::_get_japaneseEraInfo() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "JapaneseCalendar", "japaneseEraInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.EraInfo[] japaneseEraInfo
void System::Globalization::JapaneseCalendar::_set_japaneseEraInfo(::Array<System::Globalization::EraInfo*>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "japaneseEraInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::_get_s_defaultInstance() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.Calendar s_defaultInstance
void System::Globalization::JapaneseCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "JapaneseCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEraInfo
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetEraInfo() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "JapaneseCalendar", "GetEraInfo"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetErasFromRegistry
::Array<System::Globalization::EraInfo*>* System::Globalization::JapaneseCalendar::GetErasFromRegistry() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<System::Globalization::EraInfo*>*>("System.Globalization", "JapaneseCalendar", "GetErasFromRegistry"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::JapaneseCalendar::GetDefaultInstance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Globalization::Calendar*>("System.Globalization", "JapaneseCalendar", "GetDefaultInstance"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EraNames() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<::Il2CppString*>*>("System.Globalization", "JapaneseCalendar", "EraNames"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.AbbrevEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::AbbrevEraNames() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<::Il2CppString*>*>("System.Globalization", "JapaneseCalendar", "AbbrevEraNames"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.EnglishEraNames
::Array<::Il2CppString*>* System::Globalization::JapaneseCalendar::EnglishEraNames() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<::Il2CppString*>*>("System.Globalization", "JapaneseCalendar", "EnglishEraNames"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar..cctor
void System::Globalization::JapaneseCalendar::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Globalization", "JapaneseCalendar", ".cctor"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MinSupportedDateTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "get_MinSupportedDateTime"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::JapaneseCalendar::get_MaxSupportedDateTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "get_MaxSupportedDateTime"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar..ctor
System::Globalization::JapaneseCalendar* System::Globalization::JapaneseCalendar::New_ctor() {
  return (JapaneseCalendar*)THROW_UNLESS(il2cpp_utils::New("System.Globalization", "JapaneseCalendar"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_ID
int System::Globalization::JapaneseCalendar::get_ID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_ID"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDaysInMonth
int System::Globalization::JapaneseCalendar::GetDaysInMonth(int year, int month, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetDaysInMonth", year, month, era));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfMonth
int System::Globalization::JapaneseCalendar::GetDayOfMonth(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetDayOfMonth", time));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::JapaneseCalendar::GetDayOfWeek(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DayOfWeek>(this, "GetDayOfWeek", time));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonthsInYear
int System::Globalization::JapaneseCalendar::GetMonthsInYear(int year, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetMonthsInYear", year, era));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetEra
int System::Globalization::JapaneseCalendar::GetEra(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetEra", time));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetMonth
int System::Globalization::JapaneseCalendar::GetMonth(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetMonth", time));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.GetYear
int System::Globalization::JapaneseCalendar::GetYear(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetYear", time));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsLeapYear
bool System::Globalization::JapaneseCalendar::IsLeapYear(int year, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsLeapYear", year, era));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToDateTime
System::DateTime System::Globalization::JapaneseCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "ToDateTime", year, month, day, hour, minute, second, millisecond, era));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.ToFourDigitYear
int System::Globalization::JapaneseCalendar::ToFourDigitYear(int year) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ToFourDigitYear", year));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_Eras
::Array<int>* System::Globalization::JapaneseCalendar::get_Eras() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "get_Eras"));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.IsValidYear
bool System::Globalization::JapaneseCalendar::IsValidYear(int year, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsValidYear", year, era));
}
// Autogenerated method: System.Globalization.JapaneseCalendar.get_TwoDigitYearMax
int System::Globalization::JapaneseCalendar::get_TwoDigitYearMax() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_TwoDigitYearMax"));
}
