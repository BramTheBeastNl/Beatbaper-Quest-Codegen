// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.GregorianCalendarHelper
#include "System/Globalization/GregorianCalendarHelper.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.EraInfo
#include "System/Globalization/EraInfo.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::Array<int>* System::Globalization::GregorianCalendarHelper::_get_DaysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth365(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::Array<int>* System::Globalization::GregorianCalendarHelper::_get_DaysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendarHelper::_set_DaysToMonth366(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendarHelper", "DaysToMonth366", value));
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_MaxYear
int System::Globalization::GregorianCalendarHelper::get_MaxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("get_MaxYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetGregorianYear
int System::Globalization::GregorianCalendarHelper::GetGregorianYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetGregorianYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGregorianYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsValidYear
bool System::Globalization::GregorianCalendarHelper::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("IsValidYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDatePart
int System::Globalization::GregorianCalendarHelper::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetDatePart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks, part)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetAbsoluteDate
int64_t System::Globalization::GregorianCalendarHelper::GetAbsoluteDate(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetAbsoluteDate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "GetAbsoluteDate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.DateToTicks
int64_t System::Globalization::GregorianCalendarHelper::DateToTicks(int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("DateToTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "DateToTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, year, month, day);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.TimeToTicks
int64_t System::Globalization::GregorianCalendarHelper::TimeToTicks(int hour, int minute, int second, int millisecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", "TimeToTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hour, minute, second, millisecond)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hour, minute, second, millisecond);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.CheckTicksRange
void System::Globalization::GregorianCalendarHelper::CheckTicksRange(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("CheckTicksRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckTicksRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ticks);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfMonth
int System::Globalization::GregorianCalendarHelper::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDayOfWeek
System::DayOfWeek System::Globalization::GregorianCalendarHelper::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetDaysInMonth
int System::Globalization::GregorianCalendarHelper::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetEra
int System::Globalization::GregorianCalendarHelper::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.get_Eras
::Array<int>* System::Globalization::GregorianCalendarHelper::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonth
int System::Globalization::GregorianCalendarHelper::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetMonthsInYear
int System::Globalization::GregorianCalendarHelper::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.GetYear
int System::Globalization::GregorianCalendarHelper::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.IsLeapYear
bool System::Globalization::GregorianCalendarHelper::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper.ToDateTime
System::DateTime System::Globalization::GregorianCalendarHelper::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext("ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendarHelper..cctor
void System::Globalization::GregorianCalendarHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendarHelper").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendarHelper", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
