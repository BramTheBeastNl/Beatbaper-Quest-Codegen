// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatFlags
#include "System\Globalization\DateTimeFormatFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags None
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags None
void System::Globalization::DateTimeFormatFlags::_set_None(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
void System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
void System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
void System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
void System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_NotInitialized() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
void System::Globalization::DateTimeFormatFlags::_set_NotInitialized(System::Globalization::DateTimeFormatFlags value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "NotInitialized", value));
}
