// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.GregorianCalendar
#include "System/Globalization/GregorianCalendar.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth365() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_get_DaysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendar::_set_DaysToMonth365(::Array<int>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_set_DaysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth366() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_get_DaysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendar::_set_DaysToMonth366(::Array<int>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_set_DaysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::_get_s_defaultInstance() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_get_s_defaultInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.Calendar s_defaultInstance
void System::Globalization::GregorianCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("_set_s_defaultInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.GregorianCalendar.OnDeserialized
void System::Globalization::GregorianCalendar::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::GetDefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetDefaultInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", "GetDefaultInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDatePart
int System::Globalization::GregorianCalendar::GetDatePart(int64_t ticks, int part) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetDatePart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDatePart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks, part)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ticks, part);
}
// Autogenerated method: System.Globalization.GregorianCalendar..cctor
void System::Globalization::GregorianCalendar::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Globalization", "GregorianCalendar", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("get_MinSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("get_MaxSupportedDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_ID
int System::Globalization::GregorianCalendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfMonth
int System::Globalization::GregorianCalendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetDayOfMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::GregorianCalendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInMonth
int System::Globalization::GregorianCalendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetDaysInMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetEra
int System::Globalization::GregorianCalendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetEra");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_Eras
::Array<int>* System::Globalization::GregorianCalendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("get_Eras");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonth
int System::Globalization::GregorianCalendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonthsInYear
int System::Globalization::GregorianCalendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetMonthsInYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetYear
int System::Globalization::GregorianCalendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("GetYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, time);
}
// Autogenerated method: System.Globalization.GregorianCalendar.IsLeapYear
bool System::Globalization::GregorianCalendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("IsLeapYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, era)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToDateTime
System::DateTime System::Globalization::GregorianCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.GregorianCalendar.TryToDateTime
bool System::Globalization::GregorianCalendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, System::DateTime& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("TryToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, month, day, hour, minute, second, millisecond, era, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, year, month, day, hour, minute, second, millisecond, era, result);
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_TwoDigitYearMax
int System::Globalization::GregorianCalendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("get_TwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToFourDigitYear
int System::Globalization::GregorianCalendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Globalization").WithContext("GregorianCalendar").WithContext("ToFourDigitYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, year);
}
