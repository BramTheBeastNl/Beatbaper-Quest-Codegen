// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.GregorianCalendar
#include "System/Globalization/GregorianCalendar.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth365
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth365() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth365
void System::Globalization::GregorianCalendar::_set_DaysToMonth365(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32[] DaysToMonth366
::Array<int>* System::Globalization::GregorianCalendar::_get_DaysToMonth366() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Globalization", "GregorianCalendar", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32[] DaysToMonth366
void System::Globalization::GregorianCalendar::_set_DaysToMonth366(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.Calendar s_defaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::_get_s_defaultInstance() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "s_defaultInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.Calendar s_defaultInstance
void System::Globalization::GregorianCalendar::_set_s_defaultInstance(System::Globalization::Calendar* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "GregorianCalendar", "s_defaultInstance", value));
}
// Autogenerated method: System.Globalization.GregorianCalendar.OnDeserialized
void System::Globalization::GregorianCalendar::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDeserialized", ctx));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDefaultInstance
System::Globalization::Calendar* System::Globalization::GregorianCalendar::GetDefaultInstance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Globalization::Calendar*>("System.Globalization", "GregorianCalendar", "GetDefaultInstance"));
}
// Autogenerated method: System.Globalization.GregorianCalendar..ctor
System::Globalization::GregorianCalendar* System::Globalization::GregorianCalendar::New_ctor(System::Globalization::GregorianCalendarTypes type) {
  return (GregorianCalendar*)THROW_UNLESS(il2cpp_utils::New("System.Globalization", "GregorianCalendar", type));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDatePart
int System::Globalization::GregorianCalendar::GetDatePart(int64_t ticks, int part) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetDatePart", ticks, part));
}
// Autogenerated method: System.Globalization.GregorianCalendar..cctor
void System::Globalization::GregorianCalendar::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Globalization", "GregorianCalendar", ".cctor"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MinSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MinSupportedDateTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "get_MinSupportedDateTime"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::GregorianCalendar::get_MaxSupportedDateTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "get_MaxSupportedDateTime"));
}
// Autogenerated method: System.Globalization.GregorianCalendar..ctor
System::Globalization::GregorianCalendar* System::Globalization::GregorianCalendar::New_ctor() {
  return (GregorianCalendar*)THROW_UNLESS(il2cpp_utils::New("System.Globalization", "GregorianCalendar"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_ID
int System::Globalization::GregorianCalendar::get_ID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_ID"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfMonth
int System::Globalization::GregorianCalendar::GetDayOfMonth(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetDayOfMonth", time));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDayOfWeek
System::DayOfWeek System::Globalization::GregorianCalendar::GetDayOfWeek(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DayOfWeek>(this, "GetDayOfWeek", time));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetDaysInMonth
int System::Globalization::GregorianCalendar::GetDaysInMonth(int year, int month, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetDaysInMonth", year, month, era));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetEra
int System::Globalization::GregorianCalendar::GetEra(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetEra", time));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_Eras
::Array<int>* System::Globalization::GregorianCalendar::get_Eras() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<int>*>(this, "get_Eras"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonth
int System::Globalization::GregorianCalendar::GetMonth(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetMonth", time));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetMonthsInYear
int System::Globalization::GregorianCalendar::GetMonthsInYear(int year, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetMonthsInYear", year, era));
}
// Autogenerated method: System.Globalization.GregorianCalendar.GetYear
int System::Globalization::GregorianCalendar::GetYear(System::DateTime time) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetYear", time));
}
// Autogenerated method: System.Globalization.GregorianCalendar.IsLeapYear
bool System::Globalization::GregorianCalendar::IsLeapYear(int year, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsLeapYear", year, era));
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToDateTime
System::DateTime System::Globalization::GregorianCalendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(this, "ToDateTime", year, month, day, hour, minute, second, millisecond, era));
}
// Autogenerated method: System.Globalization.GregorianCalendar.TryToDateTime
bool System::Globalization::GregorianCalendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, System::DateTime& result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryToDateTime", year, month, day, hour, minute, second, millisecond, era, result));
}
// Autogenerated method: System.Globalization.GregorianCalendar.get_TwoDigitYearMax
int System::Globalization::GregorianCalendar::get_TwoDigitYearMax() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_TwoDigitYearMax"));
}
// Autogenerated method: System.Globalization.GregorianCalendar.ToFourDigitYear
int System::Globalization::GregorianCalendar::ToFourDigitYear(int year) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ToFourDigitYear", year));
}
