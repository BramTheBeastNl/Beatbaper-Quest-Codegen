// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CharEnumerator
#include "System/CharEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.CharEnumerator.Clone
::Il2CppObject* System::CharEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::CharEnumerator::System_ICloneable_Clone() {
  return System::CharEnumerator::Clone();
}
// Autogenerated method: System.CharEnumerator.MoveNext
bool System::CharEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::CharEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::CharEnumerator::MoveNext();
}
// Autogenerated method: System.CharEnumerator.Dispose
void System::CharEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::CharEnumerator::System_IDisposable_Dispose() {
  System::CharEnumerator::Dispose();
}
// Autogenerated method: System.CharEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::CharEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.CharEnumerator.get_Current
::Il2CppChar System::CharEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
::Il2CppChar System::CharEnumerator::System_Collections_Generic_IEnumerator_1_get_Current() {
  return System::CharEnumerator::get_Current();
}
// Autogenerated method: System.CharEnumerator.Reset
void System::CharEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("CharEnumerator").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::CharEnumerator::System_Collections_IEnumerator_Reset() {
  System::CharEnumerator::Reset();
}
