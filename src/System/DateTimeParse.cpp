// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeParse
#include "System/DateTimeParse.hpp"
// Including type: System.DateTimeParse/MatchNumberDelegate
#include "System/DateTimeParse_MatchNumberDelegate.hpp"
// Including type: System.DateTimeParse/DTT
#include "System/DateTimeParse_DTT.hpp"
// Including type: System.DateTimeParse/TM
#include "System/DateTimeParse_TM.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
// Including type: System.DateTimeResult
#include "System/DateTimeResult.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.DateTimeToken
#include "System/DateTimeToken.hpp"
// Including type: System.DateTimeRawInfo
#include "System/DateTimeRawInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.ParsingInfo
#include "System/ParsingInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
System::DateTimeParse::MatchNumberDelegate* System::DateTimeParse::_get_m_hebrewNumberParser() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("_get_m_hebrewNumberParser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeParse::MatchNumberDelegate*>("System", "DateTimeParse", "m_hebrewNumberParser"));
}
// Autogenerated static field setter
// Set static field: static System.DateTimeParse/MatchNumberDelegate m_hebrewNumberParser
void System::DateTimeParse::_set_m_hebrewNumberParser(System::DateTimeParse::MatchNumberDelegate* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("_set_m_hebrewNumberParser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "m_hebrewNumberParser", value));
}
// Autogenerated static field getter
// Get static field: static private System.DateTimeParse/DS[][] dateParsingStates
::Array<::Array<System::DateTimeParse::DS>*>* System::DateTimeParse::_get_dateParsingStates() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("_get_dateParsingStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<System::DateTimeParse::DS>*>*>("System", "DateTimeParse", "dateParsingStates"));
}
// Autogenerated static field setter
// Set static field: static private System.DateTimeParse/DS[][] dateParsingStates
void System::DateTimeParse::_set_dateParsingStates(::Array<::Array<System::DateTimeParse::DS>*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("_set_dateParsingStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeParse", "dateParsingStates", value));
}
// Autogenerated method: System.DateTimeParse.ParseExact
System::DateTime System::DateTimeParse::ParseExact(::Il2CppString* s, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseExact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseExact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, format, dtfi, style)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, format, dtfi, style);
}
// Autogenerated method: System.DateTimeParse.TryParseExact
bool System::DateTimeParse::TryParseExact(::Il2CppString* s, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParseExact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, format, dtfi, style, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, format, dtfi, style, result);
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::Il2CppString* s, ::Array<::Il2CppString*>* formats, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTime& result, System::TimeSpan& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, formats, dtfi, style, result, offset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formats, dtfi, style, result, offset);
}
// Autogenerated method: System.DateTimeParse.TryParseExactMultiple
bool System::DateTimeParse::TryParseExactMultiple(::Il2CppString* s, ::Array<::Il2CppString*>* formats, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles style, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParseExactMultiple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseExactMultiple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, formats, dtfi, style, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formats, dtfi, style, result);
}
// Autogenerated method: System.DateTimeParse.MatchWord
bool System::DateTimeParse::MatchWord(System::__DTString& str, ::Il2CppString* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, target)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, target);
}
// Autogenerated method: System.DateTimeParse.GetTimeZoneName
bool System::DateTimeParse::GetTimeZoneName(System::__DTString& str) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetTimeZoneName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeZoneName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.DateTimeParse.IsDigit
bool System::DateTimeParse::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("IsDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "IsDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.DateTimeParse.ParseFraction
bool System::DateTimeParse::ParseFraction(System::__DTString& str, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseFraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.ParseTimeZone
bool System::DateTimeParse::ParseTimeZone(System::__DTString& str, System::TimeSpan& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.HandleTimeZone
bool System::DateTimeParse::HandleTimeZone(System::__DTString& str, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("HandleTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "HandleTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.Lex
bool System::DateTimeParse::Lex(System::DateTimeParse::DS dps, System::__DTString& str, System::DateTimeToken& dtok, System::DateTimeRawInfo& raw, System::DateTimeResult& result, System::Globalization::DateTimeFormatInfo*& dtfi, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("Lex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "Lex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dps, str, dtok, raw, result, dtfi, styles)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, str, dtok, raw, result, dtfi, styles);
}
// Autogenerated method: System.DateTimeParse.VerifyValidPunctuation
bool System::DateTimeParse::VerifyValidPunctuation(System::__DTString& str) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("VerifyValidPunctuation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "VerifyValidPunctuation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.DateTimeParse.GetYearMonthDayOrder
bool System::DateTimeParse::GetYearMonthDayOrder(::Il2CppString* datePattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetYearMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthDayOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(datePattern, dtfi, order)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, datePattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.GetYearMonthOrder
bool System::DateTimeParse::GetYearMonthOrder(::Il2CppString* pattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetYearMonthOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetYearMonthOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, dtfi, order)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.GetMonthDayOrder
bool System::DateTimeParse::GetMonthDayOrder(::Il2CppString* pattern, System::Globalization::DateTimeFormatInfo* dtfi, int& order) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetMonthDayOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetMonthDayOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, dtfi, order)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, dtfi, order);
}
// Autogenerated method: System.DateTimeParse.TryAdjustYear
bool System::DateTimeParse::TryAdjustYear(System::DateTimeResult& result, int year, int& adjustedYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryAdjustYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryAdjustYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, year, adjustedYear)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, adjustedYear);
}
// Autogenerated method: System.DateTimeParse.SetDateYMD
bool System::DateTimeParse::SetDateYMD(System::DateTimeResult& result, int year, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("SetDateYMD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYMD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, year, month, day)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, month, day);
}
// Autogenerated method: System.DateTimeParse.SetDateMDY
bool System::DateTimeParse::SetDateMDY(System::DateTimeResult& result, int month, int day, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("SetDateMDY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateMDY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, month, day, year)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, month, day, year);
}
// Autogenerated method: System.DateTimeParse.SetDateDMY
bool System::DateTimeParse::SetDateDMY(System::DateTimeResult& result, int day, int month, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("SetDateDMY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateDMY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, day, month, year)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, day, month, year);
}
// Autogenerated method: System.DateTimeParse.SetDateYDM
bool System::DateTimeParse::SetDateYDM(System::DateTimeResult& result, int year, int day, int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("SetDateYDM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "SetDateYDM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, year, day, month)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, year, day, month);
}
// Autogenerated method: System.DateTimeParse.GetDefaultYear
void System::DateTimeParse::GetDefaultYear(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDefaultYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDefaultYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNN
bool System::DateTimeParse::GetDayOfNN(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNN
bool System::DateTimeParse::GetDayOfNNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfNNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMN
bool System::DateTimeParse::GetDayOfMN(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfMN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetHebrewDayOfNM
bool System::DateTimeParse::GetHebrewDayOfNM(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetHebrewDayOfNM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetHebrewDayOfNM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNM
bool System::DateTimeParse::GetDayOfNM(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfNM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfMNN
bool System::DateTimeParse::GetDayOfMNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfMNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfMNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYNN
bool System::DateTimeParse::GetDayOfYNN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfYNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfNNY
bool System::DateTimeParse::GetDayOfNNY(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfNNY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfNNY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYMN
bool System::DateTimeParse::GetDayOfYMN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfYMN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYMN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYN
bool System::DateTimeParse::GetDayOfYN(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfYN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.GetDayOfYM
bool System::DateTimeParse::GetDayOfYM(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDayOfYM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDayOfYM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeMark
void System::DateTimeParse::AdjustTimeMark(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("AdjustTimeMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dtfi, raw)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, raw);
}
// Autogenerated method: System.DateTimeParse.AdjustHour
bool System::DateTimeParse::AdjustHour(int& hour, System::DateTimeParse::TM timeMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("AdjustHour");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustHour", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hour, timeMark)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hour, timeMark);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfN
bool System::DateTimeParse::GetTimeOfN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetTimeOfN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dtfi, result, raw)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNN
bool System::DateTimeParse::GetTimeOfNN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetTimeOfNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dtfi, result, raw)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetTimeOfNNN
bool System::DateTimeParse::GetTimeOfNNN(System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetTimeOfNNN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetTimeOfNNN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dtfi, result, raw)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dtfi, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfDSN
bool System::DateTimeParse::GetDateOfDSN(System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDateOfDSN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfDSN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfNDS
bool System::DateTimeParse::GetDateOfNDS(System::DateTimeResult& result, System::DateTimeRawInfo& raw) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDateOfNDS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNDS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw);
}
// Autogenerated method: System.DateTimeParse.GetDateOfNNDS
bool System::DateTimeParse::GetDateOfNNDS(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDateOfNNDS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateOfNNDS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessDateTimeSuffix
bool System::DateTimeParse::ProcessDateTimeSuffix(System::DateTimeResult& result, System::DateTimeRawInfo& raw, System::DateTimeToken& dtok) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ProcessDateTimeSuffix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessDateTimeSuffix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, raw, dtok)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, raw, dtok);
}
// Autogenerated method: System.DateTimeParse.ProcessHebrewTerminalState
bool System::DateTimeParse::ProcessHebrewTerminalState(System::DateTimeParse::DS dps, System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ProcessHebrewTerminalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessHebrewTerminalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dps, result, styles, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.ProcessTerminaltState
bool System::DateTimeParse::ProcessTerminaltState(System::DateTimeParse::DS dps, System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles, System::DateTimeRawInfo& raw, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ProcessTerminaltState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ProcessTerminaltState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dps, result, styles, raw, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dps, result, styles, raw, dtfi);
}
// Autogenerated method: System.DateTimeParse.Parse
System::DateTime System::DateTimeParse::Parse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, dtfi, styles)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles);
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles, System::DateTime& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, dtfi, styles, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles, result);
}
// Autogenerated method: System.DateTimeParse.TryParse
bool System::DateTimeParse::TryParse(::Il2CppString* s, System::Globalization::DateTimeFormatInfo* dtfi, System::Globalization::DateTimeStyles styles, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, dtfi, styles, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, dtfi, styles, result);
}
// Autogenerated method: System.DateTimeParse.DetermineTimeZoneAdjustments
bool System::DateTimeParse::DetermineTimeZoneAdjustments(System::DateTimeResult& result, System::Globalization::DateTimeStyles styles, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("DetermineTimeZoneAdjustments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "DetermineTimeZoneAdjustments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles, bTimeOnly)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles, bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.DateTimeOffsetTimeZonePostProcessing
bool System::DateTimeParse::DateTimeOffsetTimeZonePostProcessing(System::DateTimeResult& result, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("DateTimeOffsetTimeZonePostProcessing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "DateTimeOffsetTimeZonePostProcessing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToUniversal
bool System::DateTimeParse::AdjustTimeZoneToUniversal(System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("AdjustTimeZoneToUniversal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToUniversal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result);
}
// Autogenerated method: System.DateTimeParse.AdjustTimeZoneToLocal
bool System::DateTimeParse::AdjustTimeZoneToLocal(System::DateTimeResult& result, bool bTimeOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("AdjustTimeZoneToLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "AdjustTimeZoneToLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, bTimeOnly)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, bTimeOnly);
}
// Autogenerated method: System.DateTimeParse.ParseISO8601
bool System::DateTimeParse::ParseISO8601(System::DateTimeRawInfo& raw, System::__DTString& str, System::Globalization::DateTimeStyles styles, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseISO8601");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseISO8601", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(raw, str, styles, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, raw, str, styles, result);
}
// Autogenerated method: System.DateTimeParse.MatchHebrewDigits
bool System::DateTimeParse::MatchHebrewDigits(System::__DTString& str, int digitLen, int& number) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchHebrewDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchHebrewDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, digitLen, number)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, digitLen, number);
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(System::__DTString& str, int digitLen, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, digitLen, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, digitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseDigits
bool System::DateTimeParse::ParseDigits(System::__DTString& str, int minDigitLen, int maxDigitLen, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, minDigitLen, maxDigitLen, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, minDigitLen, maxDigitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseFractionExact
bool System::DateTimeParse::ParseFractionExact(System::__DTString& str, int maxDigitLen, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseFractionExact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseFractionExact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, maxDigitLen, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, maxDigitLen, result);
}
// Autogenerated method: System.DateTimeParse.ParseSign
bool System::DateTimeParse::ParseSign(System::__DTString& str, bool& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseSign");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseSign", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, result);
}
// Autogenerated method: System.DateTimeParse.ParseTimeZoneOffset
bool System::DateTimeParse::ParseTimeZoneOffset(System::__DTString& str, int len, System::TimeSpan& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseTimeZoneOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseTimeZoneOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, len, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, len, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedMonthName
bool System::DateTimeParse::MatchAbbreviatedMonthName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchMonthName
bool System::DateTimeParse::MatchMonthName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedDayName
bool System::DateTimeParse::MatchAbbreviatedDayName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchDayName
bool System::DateTimeParse::MatchDayName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchDayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchDayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchEraName
bool System::DateTimeParse::MatchEraName(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchEraName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchEraName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchTimeMark
bool System::DateTimeParse::MatchTimeMark(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeParse::TM& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchTimeMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchTimeMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.MatchAbbreviatedTimeMark
bool System::DateTimeParse::MatchAbbreviatedTimeMark(System::__DTString& str, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeParse::TM& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("MatchAbbreviatedTimeMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "MatchAbbreviatedTimeMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.CheckNewValue
bool System::DateTimeParse::CheckNewValue(int& currentValue, int newValue, ::Il2CppChar patternChar, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("CheckNewValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckNewValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentValue, newValue, patternChar, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentValue, newValue, patternChar, result);
}
// Autogenerated method: System.DateTimeParse.GetDateTimeNow
System::DateTime System::DateTimeParse::GetDateTimeNow(System::DateTimeResult& result, System::Globalization::DateTimeStyles& styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDateTimeNow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeNow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, styles)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, styles);
}
// Autogenerated method: System.DateTimeParse.CheckDefaultDateTime
bool System::DateTimeParse::CheckDefaultDateTime(System::DateTimeResult& result, System::Globalization::Calendar*& cal, System::Globalization::DateTimeStyles styles) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("CheckDefaultDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "CheckDefaultDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result, cal, styles)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result, cal, styles);
}
// Autogenerated method: System.DateTimeParse.ExpandPredefinedFormat
::Il2CppString* System::DateTimeParse::ExpandPredefinedFormat(::Il2CppString* format, System::Globalization::DateTimeFormatInfo*& dtfi, System::ParsingInfo& parseInfo, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, dtfi, parseInfo, result)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dtfi, parseInfo, result);
}
// Autogenerated method: System.DateTimeParse.ParseByFormat
bool System::DateTimeParse::ParseByFormat(System::__DTString& str, System::__DTString& format, System::ParsingInfo& parseInfo, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("ParseByFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "ParseByFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, format, parseInfo, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, format, parseInfo, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.TryParseQuoteString
bool System::DateTimeParse::TryParseQuoteString(::Il2CppString* format, int pos, System::Text::StringBuilder* result, int& returnValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("TryParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "TryParseQuoteString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, pos, result, returnValue)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, result, returnValue);
}
// Autogenerated method: System.DateTimeParse.DoStrictParse
bool System::DateTimeParse::DoStrictParse(::Il2CppString* s, ::Il2CppString* formatParam, System::Globalization::DateTimeStyles styles, System::Globalization::DateTimeFormatInfo* dtfi, System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("DoStrictParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "DoStrictParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, formatParam, styles, dtfi, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, formatParam, styles, dtfi, result);
}
// Autogenerated method: System.DateTimeParse.GetDateTimeParseException
System::Exception* System::DateTimeParse::GetDateTimeParseException(System::DateTimeResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext("GetDateTimeParseException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", "GetDateTimeParseException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, result);
}
// Autogenerated method: System.DateTimeParse..cctor
void System::DateTimeParse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeParse").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeParse", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
