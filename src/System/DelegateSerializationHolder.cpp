// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateSerializationHolder
#include "System/DelegateSerializationHolder.hpp"
// Including type: System.DelegateSerializationHolder/DelegateEntry
#include "System/DelegateSerializationHolder_DelegateEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DelegateSerializationHolder..ctor
System::DelegateSerializationHolder* System::DelegateSerializationHolder::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DelegateSerializationHolder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<DelegateSerializationHolder*>(info, ctx));
}
// Autogenerated method: System.DelegateSerializationHolder.GetDelegateData
void System::DelegateSerializationHolder::GetDelegateData(System::Delegate* instance, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DelegateSerializationHolder").WithContext("GetDelegateData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DelegateSerializationHolder", il2cpp_utils::NoArgClass<void>(), "GetDelegateData", {}, ::il2cpp_utils::ExtractTypes(instance, info, ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance, info, ctx);
}
// Autogenerated method: System.DelegateSerializationHolder.GetObjectData
void System::DelegateSerializationHolder::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DelegateSerializationHolder").WithContext("GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetObjectData", {}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::DelegateSerializationHolder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::DelegateSerializationHolder::GetObjectData(info, context);
}
// Autogenerated method: System.DelegateSerializationHolder.GetRealObject
::Il2CppObject* System::DelegateSerializationHolder::GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DelegateSerializationHolder").WithContext("GetRealObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppObject*>(), "GetRealObject", {}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
::Il2CppObject* System::DelegateSerializationHolder::System_Runtime_Serialization_IObjectReference_GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  return System::DelegateSerializationHolder::GetRealObject(context);
}
