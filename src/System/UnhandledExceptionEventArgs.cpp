// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnhandledExceptionEventArgs..ctor
System::UnhandledExceptionEventArgs* System::UnhandledExceptionEventArgs::New_ctor(::Il2CppObject* exception, bool isTerminating) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnhandledExceptionEventArgs").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<UnhandledExceptionEventArgs*>(exception, isTerminating));
}
// Autogenerated method: System.UnhandledExceptionEventArgs.get_ExceptionObject
::Il2CppObject* System::UnhandledExceptionEventArgs::get_ExceptionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnhandledExceptionEventArgs").WithContext("get_ExceptionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppObject*>(), "get_ExceptionObject", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.UnhandledExceptionEventArgs.get_IsTerminating
bool System::UnhandledExceptionEventArgs::get_IsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnhandledExceptionEventArgs").WithContext("get_IsTerminating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_IsTerminating", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
