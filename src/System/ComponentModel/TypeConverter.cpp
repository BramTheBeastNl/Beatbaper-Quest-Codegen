// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String s_UseCompatibleTypeConverterBehavior
::CsString* System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CsString*>("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_UseCompatibleTypeConverterBehavior
void System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useCompatibleTypeConversion
void System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion", value));
}
// Autogenerated method: System.ComponentModel.TypeConverter..ctor
System::ComponentModel::TypeConverter* System::ComponentModel::TypeConverter::New_ctor() {
  return (TypeConverter*)THROW_UNLESS(il2cpp_utils::New("System.ComponentModel", "TypeConverter"));
}
