// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.DateTimeKind
#include "System/DateTimeKind.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerMillisecond
int64_t System::DateTime::_get_TicksPerMillisecond() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerMillisecond
void System::DateTime::_set_TicksPerMillisecond(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerSecond
int64_t System::DateTime::_get_TicksPerSecond() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerSecond
void System::DateTime::_set_TicksPerSecond(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerMinute
int64_t System::DateTime::_get_TicksPerMinute() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerMinute
void System::DateTime::_set_TicksPerMinute(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerHour
int64_t System::DateTime::_get_TicksPerHour() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerHour
void System::DateTime::_set_TicksPerHour(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksPerDay
int64_t System::DateTime::_get_TicksPerDay() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksPerDay
void System::DateTime::_set_TicksPerDay(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerSecond
int System::DateTime::_get_MillisPerSecond() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerSecond
void System::DateTime::_set_MillisPerSecond(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerMinute
int System::DateTime::_get_MillisPerMinute() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerMinute
void System::DateTime::_set_MillisPerMinute(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerHour
int System::DateTime::_get_MillisPerHour() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerHour
void System::DateTime::_set_MillisPerHour(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MillisPerDay
int System::DateTime::_get_MillisPerDay() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MillisPerDay
void System::DateTime::_set_MillisPerDay(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPerYear
int System::DateTime::_get_DaysPerYear() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPerYear
void System::DateTime::_set_DaysPerYear(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer4Years
int System::DateTime::_get_DaysPer4Years() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer4Years
void System::DateTime::_set_DaysPer4Years(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer100Years
int System::DateTime::_get_DaysPer100Years() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer100Years
void System::DateTime::_set_DaysPer100Years(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysPer400Years
int System::DateTime::_get_DaysPer400Years() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysPer400Years
void System::DateTime::_set_DaysPer400Years(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo1601
int System::DateTime::_get_DaysTo1601() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1601"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo1601
void System::DateTime::_set_DaysTo1601(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1601", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo1899
int System::DateTime::_get_DaysTo1899() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1899"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo1899
void System::DateTime::_set_DaysTo1899(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1899", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo1970
int System::DateTime::_get_DaysTo1970() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo1970"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo1970
void System::DateTime::_set_DaysTo1970(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo1970", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DaysTo10000
int System::DateTime::_get_DaysTo10000() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DaysTo10000
void System::DateTime::_set_DaysTo10000(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MinTicks
int64_t System::DateTime::_get_MinTicks() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MinTicks"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MinTicks
void System::DateTime::_set_MinTicks(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MinTicks", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxTicks
int64_t System::DateTime::_get_MaxTicks() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MaxTicks"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxTicks
void System::DateTime::_set_MaxTicks(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxTicks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 MaxMillis
int64_t System::DateTime::_get_MaxMillis() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 MaxMillis
void System::DateTime::_set_MaxMillis(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 FileTimeOffset
int64_t System::DateTime::_get_FileTimeOffset() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "FileTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 FileTimeOffset
void System::DateTime::_set_FileTimeOffset(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "FileTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 DoubleDateOffset
int64_t System::DateTime::_get_DoubleDateOffset() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "DoubleDateOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 DoubleDateOffset
void System::DateTime::_set_DoubleDateOffset(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DoubleDateOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 OADateMinAsTicks
int64_t System::DateTime::_get_OADateMinAsTicks() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "OADateMinAsTicks"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 OADateMinAsTicks
void System::DateTime::_set_OADateMinAsTicks(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMinAsTicks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double OADateMinAsDouble
double System::DateTime::_get_OADateMinAsDouble() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "DateTime", "OADateMinAsDouble"));
}
// Autogenerated static field setter
// Set static field: static private System.Double OADateMinAsDouble
void System::DateTime::_set_OADateMinAsDouble(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMinAsDouble", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double OADateMaxAsDouble
double System::DateTime::_get_OADateMaxAsDouble() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "DateTime", "OADateMaxAsDouble"));
}
// Autogenerated static field setter
// Set static field: static private System.Double OADateMaxAsDouble
void System::DateTime::_set_OADateMaxAsDouble(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "OADateMaxAsDouble", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartYear
int System::DateTime::_get_DatePartYear() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartYear
void System::DateTime::_set_DatePartYear(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartDayOfYear
int System::DateTime::_get_DatePartDayOfYear() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartDayOfYear"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartDayOfYear
void System::DateTime::_set_DatePartDayOfYear(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartDayOfYear", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartMonth
int System::DateTime::_get_DatePartMonth() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartMonth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartMonth
void System::DateTime::_set_DatePartMonth(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartMonth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DatePartDay
int System::DateTime::_get_DatePartDay() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "DatePartDay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DatePartDay
void System::DateTime::_set_DatePartDay(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DatePartDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DaysToMonth365
::Array<int>* System::DateTime::_get_DaysToMonth365() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System", "DateTime", "DaysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DaysToMonth365
void System::DateTime::_set_DaysToMonth365(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DaysToMonth366
::Array<int>* System::DateTime::_get_DaysToMonth366() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System", "DateTime", "DaysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DaysToMonth366
void System::DateTime::_set_DaysToMonth366(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DaysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime MinValue
System::DateTime System::DateTime::_get_MinValue() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System", "DateTime", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime MinValue
void System::DateTime::_set_MinValue(System::DateTime value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTime MaxValue
System::DateTime System::DateTime::_get_MaxValue() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("System", "DateTime", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTime MaxValue
void System::DateTime::_set_MaxValue(System::DateTime value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 TicksMask
uint64_t System::DateTime::_get_TicksMask() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "TicksMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 TicksMask
void System::DateTime::_set_TicksMask(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 FlagsMask
uint64_t System::DateTime::_get_FlagsMask() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "FlagsMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 FlagsMask
void System::DateTime::_set_FlagsMask(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "FlagsMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 LocalMask
uint64_t System::DateTime::_get_LocalMask() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "LocalMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 LocalMask
void System::DateTime::_set_LocalMask(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "LocalMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 TicksCeiling
int64_t System::DateTime::_get_TicksCeiling() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System", "DateTime", "TicksCeiling"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 TicksCeiling
void System::DateTime::_set_TicksCeiling(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksCeiling", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindUnspecified
uint64_t System::DateTime::_get_KindUnspecified() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindUnspecified"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindUnspecified
void System::DateTime::_set_KindUnspecified(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindUnspecified", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindUtc
uint64_t System::DateTime::_get_KindUtc() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindUtc"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindUtc
void System::DateTime::_set_KindUtc(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindUtc", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindLocal
uint64_t System::DateTime::_get_KindLocal() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindLocal"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindLocal
void System::DateTime::_set_KindLocal(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindLocal", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt64 KindLocalAmbiguousDst
uint64_t System::DateTime::_get_KindLocalAmbiguousDst() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "DateTime", "KindLocalAmbiguousDst"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt64 KindLocalAmbiguousDst
void System::DateTime::_set_KindLocalAmbiguousDst(uint64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindLocalAmbiguousDst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 KindShift
int System::DateTime::_get_KindShift() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "DateTime", "KindShift"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 KindShift
void System::DateTime::_set_KindShift(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "KindShift", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TicksField
::Il2CppString* System::DateTime::_get_TicksField() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "DateTime", "TicksField"));
}
// Autogenerated static field setter
// Set static field: static private System.String TicksField
void System::DateTime::_set_TicksField(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "TicksField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DateDataField
::Il2CppString* System::DateTime::_get_DateDataField() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "DateTime", "DateDataField"));
}
// Autogenerated static field setter
// Set static field: static private System.String DateDataField
void System::DateTime::_set_DateDataField(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTime", "DateDataField", value));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int64_t ticks) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", ticks));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(uint64_t dateData) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", dateData));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int64_t ticks, System::DateTimeKind kind) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", ticks, kind));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int64_t ticks, System::DateTimeKind kind, bool isAmbiguousDst) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", ticks, kind, isAmbiguousDst));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int year, int month, int day) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", year, month, day));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int year, int month, int day, int hour, int minute, int second, System::DateTimeKind kind) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", year, month, day, hour, minute, second, kind));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int year, int month, int day, int hour, int minute, int second, int millisecond) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", year, month, day, hour, minute, second, millisecond));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(int year, int month, int day, int hour, int minute, int second, int millisecond, System::DateTimeKind kind) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", year, month, day, hour, minute, second, millisecond, kind));
}
// Autogenerated method: System.DateTime..ctor
System::DateTime* System::DateTime::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  return (DateTime*)THROW_UNLESS(il2cpp_utils::New("System", "DateTime", info, context));
}
// Autogenerated method: System.DateTime.get_InternalTicks
int64_t System::DateTime::get_InternalTicks() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "get_InternalTicks"));
}
// Autogenerated method: System.DateTime.get_InternalKind
uint64_t System::DateTime::get_InternalKind() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(*this, "get_InternalKind"));
}
// Autogenerated method: System.DateTime.Add
System::DateTime System::DateTime::Add(System::TimeSpan value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "Add", value));
}
// Autogenerated method: System.DateTime.Add
System::DateTime System::DateTime::Add(double value, int scale) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "Add", value, scale));
}
// Autogenerated method: System.DateTime.AddDays
System::DateTime System::DateTime::AddDays(double value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddDays", value));
}
// Autogenerated method: System.DateTime.AddMilliseconds
System::DateTime System::DateTime::AddMilliseconds(double value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddMilliseconds", value));
}
// Autogenerated method: System.DateTime.AddMonths
System::DateTime System::DateTime::AddMonths(int months) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddMonths", months));
}
// Autogenerated method: System.DateTime.AddSeconds
System::DateTime System::DateTime::AddSeconds(double value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddSeconds", value));
}
// Autogenerated method: System.DateTime.AddTicks
System::DateTime System::DateTime::AddTicks(int64_t value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddTicks", value));
}
// Autogenerated method: System.DateTime.AddYears
System::DateTime System::DateTime::AddYears(int value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "AddYears", value));
}
// Autogenerated method: System.DateTime.DateToTicks
int64_t System::DateTime::DateToTicks(int year, int month, int day) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "DateTime", "DateToTicks", year, month, day));
}
// Autogenerated method: System.DateTime.TimeToTicks
int64_t System::DateTime::TimeToTicks(int hour, int minute, int second) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "DateTime", "TimeToTicks", hour, minute, second));
}
// Autogenerated method: System.DateTime.DaysInMonth
int System::DateTime::DaysInMonth(int year, int month) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System", "DateTime", "DaysInMonth", year, month));
}
// Autogenerated method: System.DateTime.FromBinary
System::DateTime System::DateTime::FromBinary(int64_t dateData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "FromBinary", dateData));
}
// Autogenerated method: System.DateTime.FromBinaryRaw
System::DateTime System::DateTime::FromBinaryRaw(int64_t dateData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "FromBinaryRaw", dateData));
}
// Autogenerated method: System.DateTime.FromFileTime
System::DateTime System::DateTime::FromFileTime(int64_t fileTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "FromFileTime", fileTime));
}
// Autogenerated method: System.DateTime.FromFileTimeUtc
System::DateTime System::DateTime::FromFileTimeUtc(int64_t fileTime) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "FromFileTimeUtc", fileTime));
}
// Autogenerated method: System.DateTime.SpecifyKind
System::DateTime System::DateTime::SpecifyKind(System::DateTime value, System::DateTimeKind kind) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "SpecifyKind", value, kind));
}
// Autogenerated method: System.DateTime.ToBinaryRaw
int64_t System::DateTime::ToBinaryRaw() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "ToBinaryRaw"));
}
// Autogenerated method: System.DateTime.get_Date
System::DateTime System::DateTime::get_Date() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "get_Date"));
}
// Autogenerated method: System.DateTime.GetDatePart
int System::DateTime::GetDatePart(int part) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetDatePart", part));
}
// Autogenerated method: System.DateTime.get_Day
int System::DateTime::get_Day() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Day"));
}
// Autogenerated method: System.DateTime.get_DayOfWeek
System::DayOfWeek System::DateTime::get_DayOfWeek() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DayOfWeek>(*this, "get_DayOfWeek"));
}
// Autogenerated method: System.DateTime.get_Hour
int System::DateTime::get_Hour() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Hour"));
}
// Autogenerated method: System.DateTime.get_Kind
System::DateTimeKind System::DateTime::get_Kind() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTimeKind>(*this, "get_Kind"));
}
// Autogenerated method: System.DateTime.get_Minute
int System::DateTime::get_Minute() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Minute"));
}
// Autogenerated method: System.DateTime.get_Month
int System::DateTime::get_Month() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Month"));
}
// Autogenerated method: System.DateTime.get_Now
System::DateTime System::DateTime::get_Now() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "get_Now"));
}
// Autogenerated method: System.DateTime.get_UtcNow
System::DateTime System::DateTime::get_UtcNow() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "get_UtcNow"));
}
// Autogenerated method: System.DateTime.GetSystemTimeAsFileTime
int64_t System::DateTime::GetSystemTimeAsFileTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "DateTime", "GetSystemTimeAsFileTime"));
}
// Autogenerated method: System.DateTime.get_Second
int System::DateTime::get_Second() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Second"));
}
// Autogenerated method: System.DateTime.get_Ticks
int64_t System::DateTime::get_Ticks() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "get_Ticks"));
}
// Autogenerated method: System.DateTime.get_TimeOfDay
System::TimeSpan System::DateTime::get_TimeOfDay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeSpan>(*this, "get_TimeOfDay"));
}
// Autogenerated method: System.DateTime.get_Year
int System::DateTime::get_Year() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Year"));
}
// Autogenerated method: System.DateTime.IsLeapYear
bool System::DateTime::IsLeapYear(int year) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "IsLeapYear", year));
}
// Autogenerated method: System.DateTime.Parse
System::DateTime System::DateTime::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "Parse", s, provider));
}
// Autogenerated method: System.DateTime.Subtract
System::TimeSpan System::DateTime::Subtract(System::DateTime value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeSpan>(*this, "Subtract", value));
}
// Autogenerated method: System.DateTime.ToFileTimeUtc
int64_t System::DateTime::ToFileTimeUtc() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "ToFileTimeUtc"));
}
// Autogenerated method: System.DateTime.ToLocalTime
System::DateTime System::DateTime::ToLocalTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "ToLocalTime"));
}
// Autogenerated method: System.DateTime.ToLocalTime
System::DateTime System::DateTime::ToLocalTime(bool throwOnOverflow) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "ToLocalTime", throwOnOverflow));
}
// Autogenerated method: System.DateTime.ToString
::Il2CppString* System::DateTime::ToString(::Il2CppString* format) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString", format));
}
// Autogenerated method: System.DateTime.ToUniversalTime
System::DateTime System::DateTime::ToUniversalTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "ToUniversalTime"));
}
// Autogenerated method: System.DateTime.TryCreate
bool System::DateTime::TryCreate(int year, int month, int day, int hour, int minute, int second, int millisecond, System::DateTime& result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "TryCreate", year, month, day, hour, minute, second, millisecond, result));
}
// Autogenerated method: System.DateTime..cctor
void System::DateTime::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System", "DateTime", ".cctor"));
}
// Autogenerated method: System.DateTime.CompareTo
int System::DateTime::CompareTo(::Il2CppObject* value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "CompareTo", value));
}
int System::DateTime::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::DateTime::CompareTo(value);
}
// Autogenerated method: System.DateTime.CompareTo
int System::DateTime::CompareTo(System::DateTime value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "CompareTo", value));
}
// Autogenerated method: System.DateTime.Equals
bool System::DateTime::Equals(::Il2CppObject* value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", value));
}
// Autogenerated method: System.DateTime.Equals
bool System::DateTime::Equals(System::DateTime value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", value));
}
// Autogenerated method: System.DateTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::DateTime::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", info, context));
}
// Autogenerated method: System.DateTime.GetHashCode
int System::DateTime::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: System.DateTime.ToString
::Il2CppString* System::DateTime::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
}
// Autogenerated method: System.DateTime.ToString
::Il2CppString* System::DateTime::ToString(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString", provider));
}
// Autogenerated method: System.DateTime.ToString
::Il2CppString* System::DateTime::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString", format, provider));
}
// Autogenerated method: System.DateTime.GetTypeCode
System::TypeCode System::DateTime::GetTypeCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TypeCode>(*this, "GetTypeCode"));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToBoolean
bool System::DateTime::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "System.IConvertible.ToBoolean", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToChar
::Il2CppChar System::DateTime::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppChar>(*this, "System.IConvertible.ToChar", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToSByte
int8_t System::DateTime::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int8_t>(*this, "System.IConvertible.ToSByte", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToByte
uint8_t System::DateTime::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint8_t>(*this, "System.IConvertible.ToByte", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt16
int16_t System::DateTime::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int16_t>(*this, "System.IConvertible.ToInt16", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt16
uint16_t System::DateTime::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint16_t>(*this, "System.IConvertible.ToUInt16", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt32
int System::DateTime::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "System.IConvertible.ToInt32", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt32
uint System::DateTime::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(*this, "System.IConvertible.ToUInt32", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToInt64
int64_t System::DateTime::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(*this, "System.IConvertible.ToInt64", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToUInt64
uint64_t System::DateTime::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(*this, "System.IConvertible.ToUInt64", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToSingle
float System::DateTime::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(*this, "System.IConvertible.ToSingle", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDouble
double System::DateTime::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>(*this, "System.IConvertible.ToDouble", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDecimal
System::Decimal System::DateTime::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Decimal>(*this, "System.IConvertible.ToDecimal", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToDateTime
System::DateTime System::DateTime::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "System.IConvertible.ToDateTime", provider));
}
// Autogenerated method: System.DateTime.System.IConvertible.ToType
::Il2CppObject* System::DateTime::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(*this, "System.IConvertible.ToType", type, provider));
}
// Autogenerated method: System.DateTime.op_Addition
System::DateTime System::operator+(const System::DateTime& d, const System::TimeSpan& t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "op_Addition", d, t));
}
// Autogenerated method: System.DateTime.op_Subtraction
System::DateTime System::operator-(const System::DateTime& d, const System::TimeSpan& t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>("System", "DateTime", "op_Subtraction", d, t));
}
// Autogenerated method: System.DateTime.op_Subtraction
System::TimeSpan System::operator-(const System::DateTime& d1, const System::DateTime& d2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeSpan>("System", "DateTime", "op_Subtraction", d1, d2));
}
// Autogenerated method: System.DateTime.op_Equality
bool System::operator ==(const System::DateTime& d1, const System::DateTime& d2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_Equality", d1, d2));
}
// Autogenerated method: System.DateTime.op_Inequality
bool System::operator !=(const System::DateTime& d1, const System::DateTime& d2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_Inequality", d1, d2));
}
// Autogenerated method: System.DateTime.op_LessThan
bool System::operator <(const System::DateTime& t1, const System::DateTime& t2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_LessThan", t1, t2));
}
// Autogenerated method: System.DateTime.op_LessThanOrEqual
bool System::operator <=(const System::DateTime& t1, const System::DateTime& t2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_LessThanOrEqual", t1, t2));
}
// Autogenerated method: System.DateTime.op_GreaterThan
bool System::operator >(const System::DateTime& t1, const System::DateTime& t2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_GreaterThan", t1, t2));
}
// Autogenerated method: System.DateTime.op_GreaterThanOrEqual
bool System::operator >=(const System::DateTime& t1, const System::DateTime& t2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DateTime", "op_GreaterThanOrEqual", t1, t2));
}
