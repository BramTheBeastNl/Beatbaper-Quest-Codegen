// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_TimeOfDay
System::DateTime System::TimeZoneInfo::TransitionTime::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<System::DateTime>(), "get_TimeOfDay", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Month
int System::TimeZoneInfo::TransitionTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_Month");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "get_Month", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Week
int System::TimeZoneInfo::TransitionTime::get_Week() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_Week");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "get_Week", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Day
int System::TimeZoneInfo::TransitionTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_Day");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "get_Day", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_DayOfWeek
System::DayOfWeek System::TimeZoneInfo::TransitionTime::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<System::DayOfWeek>(), "get_DayOfWeek", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_IsFixedDateRule
bool System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("get_IsFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "get_IsFixedDateRule", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFixedDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFixedDateRule(System::DateTime timeOfDay, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("CreateFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", il2cpp_utils::NoArgClass<System::TimeZoneInfo::TransitionTime>(), "CreateFixedDateRule", {}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, day)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, day);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFloatingDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule(System::DateTime timeOfDay, int month, int week, System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("CreateFloatingDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", il2cpp_utils::NoArgClass<System::TimeZoneInfo::TransitionTime>(), "CreateFloatingDateRule", {}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, dayOfWeek)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateTransitionTime
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek, bool isFixedDateRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("CreateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", il2cpp_utils::NoArgClass<System::TimeZoneInfo::TransitionTime>(), "CreateTransitionTime", {}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, day, dayOfWeek, isFixedDateRule)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek, isFixedDateRule);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.ValidateTransitionTime
void System::TimeZoneInfo::TransitionTime::ValidateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("ValidateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", il2cpp_utils::NoArgClass<void>(), "ValidateTransitionTime", {}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, day, dayOfWeek)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime..ctor
System::TimeZoneInfo::TransitionTime::TransitionTime(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext(".ctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<TimeZoneInfo::TransitionTime>(), ".ctor", {}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(System::TimeZoneInfo::TransitionTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.GetHashCode
int System::TimeZoneInfo::TransitionTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", {}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "System.Runtime.Serialization.ISerializable.GetObjectData", {}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.op_Inequality
bool System::operator !=(const System::TimeZoneInfo::TransitionTime& t1, const System::TimeZoneInfo::TransitionTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("TransitionTime").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", il2cpp_utils::NoArgClass<bool>(), "op_Inequality", {}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
