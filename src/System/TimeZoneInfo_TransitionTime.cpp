// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_TimeOfDay
System::DateTime System::TimeZoneInfo::TransitionTime::get_TimeOfDay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DateTime>(*this, "get_TimeOfDay"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Month
int System::TimeZoneInfo::TransitionTime::get_Month() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Month"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Week
int System::TimeZoneInfo::TransitionTime::get_Week() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Week"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Day
int System::TimeZoneInfo::TransitionTime::get_Day() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "get_Day"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_DayOfWeek
System::DayOfWeek System::TimeZoneInfo::TransitionTime::get_DayOfWeek() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::DayOfWeek>(*this, "get_DayOfWeek"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_IsFixedDateRule
bool System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "get_IsFixedDateRule"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFixedDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFixedDateRule(System::DateTime timeOfDay, int month, int day) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeZoneInfo::TransitionTime>("System", "TimeZoneInfo/TransitionTime", "CreateFixedDateRule", timeOfDay, month, day));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFloatingDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule(System::DateTime timeOfDay, int month, int week, System::DayOfWeek dayOfWeek) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeZoneInfo::TransitionTime>("System", "TimeZoneInfo/TransitionTime", "CreateFloatingDateRule", timeOfDay, month, week, dayOfWeek));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateTransitionTime
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek, bool isFixedDateRule) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeZoneInfo::TransitionTime>("System", "TimeZoneInfo/TransitionTime", "CreateTransitionTime", timeOfDay, month, week, day, dayOfWeek, isFixedDateRule));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.ValidateTransitionTime
void System::TimeZoneInfo::TransitionTime::ValidateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System", "TimeZoneInfo/TransitionTime", "ValidateTransitionTime", timeOfDay, month, week, day, dayOfWeek));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime..ctor
System::TimeZoneInfo::TransitionTime* System::TimeZoneInfo::TransitionTime::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  return (TimeZoneInfo::TransitionTime*)THROW_UNLESS(il2cpp_utils::New("System", "TimeZoneInfo/TransitionTime", info, context));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::CsObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(System::TimeZoneInfo::TransitionTime other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.GetHashCode
int System::TimeZoneInfo::TransitionTime::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::CsObject* sender) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", sender));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", info, context));
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.op_Inequality
bool System::operator !=(const System::TimeZoneInfo::TransitionTime& t1, const System::TimeZoneInfo::TransitionTime& t2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "TimeZoneInfo/TransitionTime", "op_Inequality", t1, t2));
}
