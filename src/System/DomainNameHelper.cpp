// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DomainNameHelper
#include "System\DomainNameHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::Il2CppString* System::DomainNameHelper::ParseCanonicalName(::Il2CppString* str, int start, int end, bool& loopback) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System", "DomainNameHelper", "ParseCanonicalName", str, start, end, loopback));
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsValid", name, pos, returnedEnd, notCanonical, notImplicitFile));
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsValidByIri", name, pos, returnedEnd, notCanonical, notImplicitFile));
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System", "DomainNameHelper", "IdnEquivalent", hostname, start, end, allAscii, atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, ::Il2CppString*& bidiStrippedHost) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System", "DomainNameHelper", "IdnEquivalent", hostname, start, end, allAscii, bidiStrippedHost));
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppString* input, int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsIdnAce", input, index));
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsIdnAce", input, index));
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppString* idnHost, ::Il2CppChar* hostname, int start, int end) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System", "DomainNameHelper", "UnicodeEquivalent", idnHost, hostname, start, end));
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System", "DomainNameHelper", "UnicodeEquivalent", hostname, start, end, allAscii, atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, bool& notCanonical) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsASCIILetterOrDigit", character, notCanonical));
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, bool& notCanonical) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System", "DomainNameHelper", "IsValidDomainLabelCharacter", character, notCanonical));
}
