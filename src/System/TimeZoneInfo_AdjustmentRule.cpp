// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateStart
System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("get_DateStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateEnd
System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("get_DateEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightDelta
System::TimeSpan System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("get_DaylightDelta");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightDelta", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionStart
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("get_DaylightTransitionStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightTransitionStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionEnd
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("get_DaylightTransitionEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightTransitionEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd, System::TimeSpan baseUtcOffsetDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.ValidateAdjustmentRule
void System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("ValidateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "ValidateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.Equals
bool System::TimeZoneInfo::AdjustmentRule::Equals(System::TimeZoneInfo::AdjustmentRule* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.GetHashCode
int System::TimeZoneInfo::AdjustmentRule::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("AdjustmentRule").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
