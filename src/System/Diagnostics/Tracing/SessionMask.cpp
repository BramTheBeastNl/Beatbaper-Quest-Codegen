// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.SessionMask
#include "System/Diagnostics/Tracing/SessionMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SessionMask..ctor
// ABORTED elsewhere.  System::Diagnostics::Tracing::SessionMask::SessionMask(uint mask)
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.IsEqualOrSupersetOf
bool System::Diagnostics::Tracing::SessionMask::IsEqualOrSupersetOf(System::Diagnostics::Tracing::SessionMask m) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("IsEqualOrSupersetOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "IsEqualOrSupersetOf", {}, ::il2cpp_utils::ExtractTypes(m)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, m);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.get_All
System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("get_All");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", il2cpp_utils::NoArgClass<System::Diagnostics::Tracing::SessionMask>(), "get_All", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.FromId
System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::FromId(int perEventSourceSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("FromId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", il2cpp_utils::NoArgClass<System::Diagnostics::Tracing::SessionMask>(), "FromId", {}, ::il2cpp_utils::ExtractTypes(perEventSourceSessionId)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perEventSourceSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.ToEventKeywords
uint64_t System::Diagnostics::Tracing::SessionMask::ToEventKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("ToEventKeywords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<uint64_t>(), "ToEventKeywords", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.FromEventKeywords
System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::SessionMask::FromEventKeywords(uint64_t m) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("FromEventKeywords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", il2cpp_utils::NoArgClass<System::Diagnostics::Tracing::SessionMask>(), "FromEventKeywords", {}, ::il2cpp_utils::ExtractTypes(m)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::SessionMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.get_Item
bool System::Diagnostics::Tracing::SessionMask::get_Item(int perEventSourceSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "get_Item", {}, ::il2cpp_utils::ExtractTypes(perEventSourceSessionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, perEventSourceSessionId);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.set_Item
void System::Diagnostics::Tracing::SessionMask::set_Item(int perEventSourceSessionId, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "set_Item", {}, ::il2cpp_utils::ExtractTypes(perEventSourceSessionId, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, perEventSourceSessionId, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.op_Explicit
System::Diagnostics::Tracing::SessionMask::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics::Tracing").WithContext("SessionMask").WithContext("op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "SessionMask", il2cpp_utils::NoArgClass<uint64_t>(), "op_Explicit", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.SessionMask.op_Explicit
// ABORTED elsewhere.  System::Diagnostics::Tracing::SessionMask::operator uint()
