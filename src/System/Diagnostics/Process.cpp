// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.Diagnostics.Process/State
#include "System/Diagnostics/Process_State.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.Diagnostics.ProcessThreadCollection
#include "System/Diagnostics/ProcessThreadCollection.hpp"
// Including type: System.Diagnostics.ProcessModuleCollection
#include "System/Diagnostics/ProcessModuleCollection.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.Diagnostics.ProcessInfo
#include "System/Diagnostics/ProcessInfo.hpp"
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Process.get_Associated
bool System::Diagnostics::Process::get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_Associated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Associated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_HasExited
bool System::Diagnostics::Process::get_HasExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_HasExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessTimes
System::Diagnostics::ProcessThreadTimes* System::Diagnostics::Process::GetProcessTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::ProcessThreadTimes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Id
int System::Diagnostics::Process::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_SynchronizingObject
System::ComponentModel::ISynchronizeInvoke* System::Diagnostics::Process::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_TotalProcessorTime
System::TimeSpan System::Diagnostics::Process::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ReleaseProcessHandle
void System::Diagnostics::Process::ReleaseProcessHandle(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("ReleaseProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.Close
void System::Diagnostics::Process::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.EnsureState
void System::Diagnostics::Process::EnsureState(System::Diagnostics::Process::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("EnsureState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Diagnostics.Process.GetCurrentProcess
System::Diagnostics::Process* System::Diagnostics::Process::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Process*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.OnExited
void System::Diagnostics::Process::OnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("OnExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access, bool throwIfExited) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(access, throwIfExited)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access, throwIfExited);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(access)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.Refresh
void System::Diagnostics::Process::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Kill
void System::Diagnostics::Process::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("Kill");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StopWatchingForExit
void System::Diagnostics::Process::StopWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("StopWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopWatchingForExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::Il2CppString* System::Diagnostics::Process::ProcessName_internal(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::Il2CppString* System::Diagnostics::Process::ProcessName_internal(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.get_ProcessName
::Il2CppString* System::Diagnostics::Process::get_ProcessName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("get_ProcessName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ProcessName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.RaiseOnExited
void System::Diagnostics::Process::RaiseOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("RaiseOnExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RaiseOnExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Dispose
void System::Diagnostics::Process::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Process.ToString
::Il2CppString* System::Diagnostics::Process::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Process").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
