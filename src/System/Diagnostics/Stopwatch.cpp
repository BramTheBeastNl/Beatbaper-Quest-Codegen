// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System.Diagnostics", "Stopwatch", "GetTimestamp"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::TimeSpan>(this, "get_Elapsed"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_ElapsedMilliseconds"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_ElapsedTicks"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_IsRunning
bool System::Diagnostics::Stopwatch::get_IsRunning() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsRunning"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.Reset
void System::Diagnostics::Stopwatch::Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Reset"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: System.Diagnostics.Stopwatch.Stop
void System::Diagnostics::Stopwatch::Stop() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Stop"));
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Diagnostics", "Stopwatch", ".cctor"));
}
// Autogenerated method: System.Diagnostics.Stopwatch..ctor
System::Diagnostics::Stopwatch* System::Diagnostics::Stopwatch::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<Stopwatch*>());
}
