// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::Il2CppString* System::Diagnostics::Debugger::_get_DefaultCategory() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Diagnostics", "Debugger", "get_IsAttached"));
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Diagnostics", "Debugger", "IsAttached_internal"));
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Diagnostics", "Debugger", "IsLogging"));
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::Il2CppString* category, ::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Diagnostics", "Debugger", "Log", level, category, message));
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency"));
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Diagnostics", "Debugger", ".cctor"));
}
