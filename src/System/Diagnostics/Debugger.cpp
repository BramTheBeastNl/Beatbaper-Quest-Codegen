// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::Il2CppString* System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("IsLogging");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::Il2CppString* category, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level, category, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext("NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("Debugger").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
