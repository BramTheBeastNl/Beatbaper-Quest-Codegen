// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::Il2CppString* System::Diagnostics::StackTrace::_get_aotid() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(bool fNeedFileInfo) {
  return (StackTrace*)THROW_UNLESS(il2cpp_utils::New("System.Diagnostics", "StackTrace", fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(int skipFrames, bool fNeedFileInfo) {
  return (StackTrace*)THROW_UNLESS(il2cpp_utils::New("System.Diagnostics", "StackTrace", skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "init_frames", skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::Array<System::Diagnostics::StackFrame*>* System::Diagnostics::StackTrace::get_trace(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<System::Diagnostics::StackFrame*>*>("System.Diagnostics", "StackTrace", "get_trace", e, skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(System::Exception* e, bool fNeedFileInfo) {
  return (StackTrace*)THROW_UNLESS(il2cpp_utils::New("System.Diagnostics", "StackTrace", e, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  return (StackTrace*)THROW_UNLESS(il2cpp_utils::New("System.Diagnostics", "StackTrace", e, skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_FrameCount"));
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Diagnostics::StackFrame*>(this, "GetFrame", index));
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::Il2CppString* System::Diagnostics::StackTrace::GetAotId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("System.Diagnostics", "StackTrace", "GetAotId"));
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(System::Text::StringBuilder* sb) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "AddFrames", sb));
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(System::Text::StringBuilder* sb, System::Reflection::MethodBase* mi) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetFullNameForStackTrace", sb, mi));
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString(System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString", traceFormat));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor() {
  return (StackTrace*)THROW_UNLESS(il2cpp_utils::New("System.Diagnostics", "StackTrace"));
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
