// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::Il2CppString* System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<StackTrace*>(fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<StackTrace*>(skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("init_frames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "init_frames", {}, ::il2cpp_utils::ExtractTypes(skipFrames, fNeedFileInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::Array<System::Diagnostics::StackFrame*>* System::Diagnostics::StackTrace::get_trace(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("get_trace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", il2cpp_utils::NoArgClass<::Array<System::Diagnostics::StackFrame*>*>(), "get_trace", {}, ::il2cpp_utils::ExtractTypes(e, skipFrames, fNeedFileInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Diagnostics::StackFrame*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(System::Exception* e, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<StackTrace*>(e, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<StackTrace*>(e, skipFrames, fNeedFileInfo));
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("get_FrameCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_FrameCount", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("GetFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Diagnostics::StackFrame*>(), "GetFrame", {}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::Il2CppString* System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("GetAotId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetAotId", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("AddFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "AddFrames", {}, ::il2cpp_utils::ExtractTypes(sb)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(System::Text::StringBuilder* sb, System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetFullNameForStackTrace", {}, ::il2cpp_utils::ExtractTypes(sb, mi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString(System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes(traceFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace..ctor
System::Diagnostics::StackTrace* System::Diagnostics::StackTrace::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<StackTrace*>());
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Diagnostics").WithContext("StackTrace").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
