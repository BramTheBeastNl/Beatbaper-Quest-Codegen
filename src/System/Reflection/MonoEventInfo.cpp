// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.MonoEventInfo
#include "System/Reflection/MonoEventInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.MonoEvent
#include "System/Reflection/MonoEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.MonoEventInfo.get_event_info
void System::Reflection::MonoEventInfo::get_event_info(System::Reflection::MonoEvent* ev, System::Reflection::MonoEventInfo& info) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Reflection").WithContext("MonoEventInfo").WithContext("get_event_info");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Reflection", "MonoEventInfo", "get_event_info", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ev, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ev, info);
}
// Autogenerated method: System.Reflection.MonoEventInfo.GetEventInfo
System::Reflection::MonoEventInfo System::Reflection::MonoEventInfo::GetEventInfo(System::Reflection::MonoEvent* ev) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Reflection").WithContext("MonoEventInfo").WithContext("GetEventInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Reflection", "MonoEventInfo", "GetEventInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ev)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MonoEventInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ev);
}
