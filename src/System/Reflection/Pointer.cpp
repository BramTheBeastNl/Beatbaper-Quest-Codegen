// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Pointer
#include "System/Reflection/Pointer.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Pointer..ctor
System::Reflection::Pointer* System::Reflection::Pointer::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  return (Pointer*)THROW_UNLESS(il2cpp_utils::New("System.Reflection", "Pointer", info, context));
}
// Autogenerated method: System.Reflection.Pointer.Box
::CsObject* System::Reflection::Pointer::Box(void* ptr, System::Type* type) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsObject*>("System.Reflection", "Pointer", "Box", ptr, type));
}
// Autogenerated method: System.Reflection.Pointer..ctor
System::Reflection::Pointer* System::Reflection::Pointer::New_ctor() {
  return (Pointer*)THROW_UNLESS(il2cpp_utils::New("System.Reflection", "Pointer"));
}
// Autogenerated method: System.Reflection.Pointer.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Reflection::Pointer::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", info, context));
}
