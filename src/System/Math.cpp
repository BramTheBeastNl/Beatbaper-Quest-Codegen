// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Math
#include "System/Math.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double doubleRoundLimit
double System::Math::_get_doubleRoundLimit() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "doubleRoundLimit"));
}
// Autogenerated static field setter
// Set static field: static private System.Double doubleRoundLimit
void System::Math::_set_doubleRoundLimit(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "doubleRoundLimit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 maxRoundingDigits
int System::Math::_get_maxRoundingDigits() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Math", "maxRoundingDigits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 maxRoundingDigits
void System::Math::_set_maxRoundingDigits(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "maxRoundingDigits", value));
}
// Autogenerated static field getter
// Get static field: static private System.Double[] roundPower10Double
::Array<double>* System::Math::_get_roundPower10Double() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<double>*>("System", "Math", "roundPower10Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Double[] roundPower10Double
void System::Math::_set_roundPower10Double(::Array<double>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "roundPower10Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double PI
double System::Math::_get_PI() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Double PI
void System::Math::_set_PI(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Double E
double System::Math::_get_E() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System", "Math", "E"));
}
// Autogenerated static field setter
// Set static field: static public System.Double E
void System::Math::_set_E(double value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Math", "E", value));
}
// Autogenerated method: System.Math.Acos
double System::Math::Acos(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Acos", d));
}
// Autogenerated method: System.Math.Asin
double System::Math::Asin(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Asin", d));
}
// Autogenerated method: System.Math.Atan
double System::Math::Atan(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Atan", d));
}
// Autogenerated method: System.Math.Atan2
double System::Math::Atan2(double y, double x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Atan2", y, x));
}
// Autogenerated method: System.Math.Ceiling
double System::Math::Ceiling(double a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Ceiling", a));
}
// Autogenerated method: System.Math.Cos
double System::Math::Cos(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Cos", d));
}
// Autogenerated method: System.Math.Floor
double System::Math::Floor(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Floor", d));
}
// Autogenerated method: System.Math.InternalTruncate
double System::Math::InternalTruncate(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "InternalTruncate", d));
}
// Autogenerated method: System.Math.Sin
double System::Math::Sin(double a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Sin", a));
}
// Autogenerated method: System.Math.Tan
double System::Math::Tan(double a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Tan", a));
}
// Autogenerated method: System.Math.Round
double System::Math::Round(double a) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Round", a));
}
// Autogenerated method: System.Math.SplitFractionDouble
double System::Math::SplitFractionDouble(double* value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "SplitFractionDouble", value));
}
// Autogenerated method: System.Math.Truncate
double System::Math::Truncate(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Truncate", d));
}
// Autogenerated method: System.Math.Sqrt
double System::Math::Sqrt(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Sqrt", d));
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Log", d));
}
// Autogenerated method: System.Math.Log10
double System::Math::Log10(double d) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Log10", d));
}
// Autogenerated method: System.Math.Pow
double System::Math::Pow(double x, double y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Pow", x, y));
}
// Autogenerated method: System.Math.Abs
int System::Math::Abs(int value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System", "Math", "Abs", value));
}
// Autogenerated method: System.Math.AbsHelper
int System::Math::AbsHelper(int value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System", "Math", "AbsHelper", value));
}
// Autogenerated method: System.Math.Abs
int64_t System::Math::Abs(int64_t value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "Math", "Abs", value));
}
// Autogenerated method: System.Math.AbsHelper
int64_t System::Math::AbsHelper(int64_t value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "Math", "AbsHelper", value));
}
// Autogenerated method: System.Math.Abs
float System::Math::Abs(float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("System", "Math", "Abs", value));
}
// Autogenerated method: System.Math.Abs
double System::Math::Abs(double value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Abs", value));
}
// Autogenerated method: System.Math.Abs
System::Decimal System::Math::Abs(System::Decimal value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Decimal>("System", "Math", "Abs", value));
}
// Autogenerated method: System.Math.Max
int System::Math::Max(int val1, int val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Max
uint System::Math::Max(uint val1, uint val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Max
int64_t System::Math::Max(int64_t val1, int64_t val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Max
uint64_t System::Math::Max(uint64_t val1, uint64_t val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Max
float System::Math::Max(float val1, float val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Max
double System::Math::Max(double val1, double val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Max", val1, val2));
}
// Autogenerated method: System.Math.Min
int System::Math::Min(int val1, int val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Min
uint System::Math::Min(uint val1, uint val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Min
int64_t System::Math::Min(int64_t val1, int64_t val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Min
uint64_t System::Math::Min(uint64_t val1, uint64_t val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Min
float System::Math::Min(float val1, float val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Min
double System::Math::Min(double val1, double val2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Min", val1, val2));
}
// Autogenerated method: System.Math.Log
double System::Math::Log(double a, double newBase) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<double>("System", "Math", "Log", a, newBase));
}
// Autogenerated method: System.Math..cctor
void System::Math::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System", "Math", ".cctor"));
}
