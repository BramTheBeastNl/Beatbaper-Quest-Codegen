// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Version/ParseFailureKind
#include "System/Version_ParseFailureKind.hpp"
// Including type: System.Version/VersionResult
#include "System/Version_VersionResult.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SeparatorsArray
::Array<::Il2CppChar>* System::Version::_get_SeparatorsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("_get_SeparatorsArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Version", "SeparatorsArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SeparatorsArray
void System::Version::_set_SeparatorsArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("_set_SeparatorsArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "SeparatorsArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ZERO_CHAR_VALUE
int System::Version::_get_ZERO_CHAR_VALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("_get_ZERO_CHAR_VALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Version", "ZERO_CHAR_VALUE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ZERO_CHAR_VALUE
void System::Version::_set_ZERO_CHAR_VALUE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("_set_ZERO_CHAR_VALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "ZERO_CHAR_VALUE", value));
}
// Autogenerated method: System.Version.get_Major
int System::Version::get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("get_Major");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Major", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Minor
int System::Version::get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("get_Minor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Minor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Build
int System::Version::get_Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("get_Build");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Build", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Revision
int System::Version::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("get_Revision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.ToString
::Il2CppString* System::Version::ToString(int fieldCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fieldCount)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, fieldCount);
}
// Autogenerated method: System.Version.AppendPositiveNumber
void System::Version::AppendPositiveNumber(int num, System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("AppendPositiveNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "AppendPositiveNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(num, sb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, num, sb);
}
// Autogenerated method: System.Version.Parse
System::Version* System::Version::Parse(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Version.TryParseVersion
bool System::Version::TryParseVersion(::Il2CppString* version, System::Version::VersionResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("TryParseVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "TryParseVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(version, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, version, result);
}
// Autogenerated method: System.Version.TryParseComponent
bool System::Version::TryParseComponent(::Il2CppString* component, ::Il2CppString* componentName, System::Version::VersionResult& result, int& parsedComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("TryParseComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "TryParseComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(component, componentName, result, parsedComponent)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, component, componentName, result, parsedComponent);
}
// Autogenerated method: System.Version..cctor
void System::Version::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Version.Clone
::Il2CppObject* System::Version::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Version::System_ICloneable_Clone() {
  return System::Version::Clone();
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(::Il2CppObject* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(version)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, version);
}
int System::Version::System_IComparable_CompareTo(::Il2CppObject* version) {
  return System::Version::CompareTo(version);
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(System::Version* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.GetHashCode
int System::Version::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.ToString
::Il2CppString* System::Version::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.op_Equality
bool System::operator ==(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_Inequality
bool System::operator !=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThan
bool System::operator <(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_LessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThanOrEqual
bool System::operator <=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThan
bool System::operator >(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThanOrEqual
bool System::operator >=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Version").WithContext("op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
