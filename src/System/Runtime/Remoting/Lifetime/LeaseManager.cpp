// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Lifetime.LeaseManager
#include "System/Runtime/Remoting/Lifetime/LeaseManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.SetPollTime
void System::Runtime::Remoting::Lifetime::LeaseManager::SetPollTime(System::TimeSpan timeSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext("SetPollTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetPollTime", {}, ::il2cpp_utils::ExtractTypes(timeSpan)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeSpan);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.TrackLifetime
void System::Runtime::Remoting::Lifetime::LeaseManager::TrackLifetime(System::Runtime::Remoting::ServerIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext("TrackLifetime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TrackLifetime", {}, ::il2cpp_utils::ExtractTypes(identity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, identity);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.StartManager
void System::Runtime::Remoting::Lifetime::LeaseManager::StartManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext("StartManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StartManager", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.StopManager
void System::Runtime::Remoting::Lifetime::LeaseManager::StopManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext("StopManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StopManager", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.ManageLeases
void System::Runtime::Remoting::Lifetime::LeaseManager::ManageLeases(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext("ManageLeases");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ManageLeases", {}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager..ctor
System::Runtime::Remoting::Lifetime::LeaseManager* System::Runtime::Remoting::Lifetime::LeaseManager::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("LeaseManager").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<LeaseManager*>());
}
