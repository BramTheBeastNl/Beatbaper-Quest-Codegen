// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.Lifetime.LeaseState
#include "System/Runtime/Remoting/Lifetime/LeaseState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_CurrentLeaseTime
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::get_CurrentLeaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("ILease").WithContext("get_CurrentLeaseTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::TimeSpan>(), "get_CurrentLeaseTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_CurrentState
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::ILease::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("ILease").WithContext("get_CurrentState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Runtime::Remoting::Lifetime::LeaseState>(), "get_CurrentState", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Lifetime::LeaseState, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_RenewOnCallTime
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::get_RenewOnCallTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("ILease").WithContext("get_RenewOnCallTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::TimeSpan>(), "get_RenewOnCallTime", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.Renew
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::Renew(System::TimeSpan renewalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("ILease").WithContext("Renew");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::TimeSpan>(), "Renew", {}, ::il2cpp_utils::ExtractTypes(renewalTime)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, renewalTime);
}
