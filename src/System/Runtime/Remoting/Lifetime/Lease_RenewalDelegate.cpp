// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate
#include "System/Runtime/Remoting/Lifetime/Lease_RenewalDelegate.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.Invoke
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::Invoke(System::Runtime::Remoting::Lifetime::ILease* lease) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("RenewalDelegate").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lease)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, lease);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.BeginInvoke
System::IAsyncResult* System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::BeginInvoke(System::Runtime::Remoting::Lifetime::ILease* lease, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("RenewalDelegate").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lease, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, lease, callback, object);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.EndInvoke
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Lifetime").WithContext("RenewalDelegate").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, result);
}
