// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.IContextProperty
#include "System/Runtime/Remoting/Contexts/IContextProperty.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.get_Name
::Il2CppString* System::Runtime::Remoting::Contexts::IContextProperty::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Contexts").WithContext("IContextProperty").WithContext("get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_Name", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.Freeze
void System::Runtime::Remoting::Contexts::IContextProperty::Freeze(System::Runtime::Remoting::Contexts::Context* newContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Contexts").WithContext("IContextProperty").WithContext("Freeze");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Freeze", {}, ::il2cpp_utils::ExtractTypes(newContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newContext);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK
bool System::Runtime::Remoting::Contexts::IContextProperty::IsNewContextOK(System::Runtime::Remoting::Contexts::Context* newCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting::Contexts").WithContext("IContextProperty").WithContext("IsNewContextOK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "IsNewContextOK", {}, ::il2cpp_utils::ExtractTypes(newCtx)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, newCtx);
}
