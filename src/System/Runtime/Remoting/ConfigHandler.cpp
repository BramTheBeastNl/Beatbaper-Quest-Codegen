// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.ConfigHandler
#include "System/Runtime/Remoting/ConfigHandler.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.ChannelData
#include "System/Runtime/Remoting/ChannelData.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.ProviderData
#include "System/Runtime/Remoting/ProviderData.hpp"
// Including type: Mono.Xml.SmallXmlParser/IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.ConfigHandler..ctor
System::Runtime::Remoting::ConfigHandler* System::Runtime::Remoting::ConfigHandler::New_ctor(bool onlyDelayedChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ConfigHandler*>(onlyDelayedChannels));
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ValidatePath
void System::Runtime::Remoting::ConfigHandler::ValidatePath(::Il2CppString* element, ::Array<::Il2CppString*>* paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ValidatePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ValidatePath", {}, ::il2cpp_utils::ExtractTypes(element, paths)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element, paths);
}
// Creating initializer_list -> params proxy for: System.Void ValidatePath(System.String element, params System.String[] paths)
void System::Runtime::Remoting::ConfigHandler::ValidatePath(::Il2CppString* element, std::initializer_list<::Il2CppString*> paths) {
  System::Runtime::Remoting::ConfigHandler::ValidatePath(element, ::Array<::Il2CppString*>::New(paths));
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.CheckPath
bool System::Runtime::Remoting::ConfigHandler::CheckPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("CheckPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "CheckPath", {}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ParseElement
void System::Runtime::Remoting::ConfigHandler::ParseElement(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ParseElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ParseElement", {}, ::il2cpp_utils::ExtractTypes(name, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadCustomProviderData
void System::Runtime::Remoting::ConfigHandler::ReadCustomProviderData(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadCustomProviderData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadCustomProviderData", {}, ::il2cpp_utils::ExtractTypes(name, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadLifetine
void System::Runtime::Remoting::ConfigHandler::ReadLifetine(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadLifetine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadLifetine", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ParseTime
System::TimeSpan System::Runtime::Remoting::ConfigHandler::ParseTime(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ParseTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::TimeSpan>(), "ParseTime", {}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadChannel
void System::Runtime::Remoting::ConfigHandler::ReadChannel(Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadChannel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadChannel", {}, ::il2cpp_utils::ExtractTypes(attrs, isTemplate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs, isTemplate);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadProvider
System::Runtime::Remoting::ProviderData* System::Runtime::Remoting::ConfigHandler::ReadProvider(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Runtime::Remoting::ProviderData*>(), "ReadProvider", {}, ::il2cpp_utils::ExtractTypes(name, attrs, isTemplate)));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::ProviderData*, false>(this, ___internal__method, name, attrs, isTemplate);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadClientActivated
void System::Runtime::Remoting::ConfigHandler::ReadClientActivated(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadClientActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadClientActivated", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadServiceActivated
void System::Runtime::Remoting::ConfigHandler::ReadServiceActivated(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadServiceActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadServiceActivated", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadClientWellKnown
void System::Runtime::Remoting::ConfigHandler::ReadClientWellKnown(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadClientWellKnown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadClientWellKnown", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadServiceWellKnown
void System::Runtime::Remoting::ConfigHandler::ReadServiceWellKnown(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadServiceWellKnown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadServiceWellKnown", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadInteropXml
void System::Runtime::Remoting::ConfigHandler::ReadInteropXml(Mono::Xml::SmallXmlParser::IAttrList* attrs, bool isElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadInteropXml");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadInteropXml", {}, ::il2cpp_utils::ExtractTypes(attrs, isElement)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs, isElement);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ReadPreload
void System::Runtime::Remoting::ConfigHandler::ReadPreload(Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ReadPreload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReadPreload", {}, ::il2cpp_utils::ExtractTypes(attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.GetNotNull
::Il2CppString* System::Runtime::Remoting::ConfigHandler::GetNotNull(Mono::Xml::SmallXmlParser::IAttrList* attrs, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("GetNotNull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetNotNull", {}, ::il2cpp_utils::ExtractTypes(attrs, name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, attrs, name);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.ExtractAssembly
::Il2CppString* System::Runtime::Remoting::ConfigHandler::ExtractAssembly(::Il2CppString*& type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("ExtractAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ExtractAssembly", {}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnStartParsing
void System::Runtime::Remoting::ConfigHandler::OnStartParsing(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnStartParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnStartParsing", {}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnProcessingInstruction
void System::Runtime::Remoting::ConfigHandler::OnProcessingInstruction(::Il2CppString* name, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnProcessingInstruction", {}, ::il2cpp_utils::ExtractTypes(name, text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnIgnorableWhitespace
void System::Runtime::Remoting::ConfigHandler::OnIgnorableWhitespace(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnIgnorableWhitespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnIgnorableWhitespace", {}, ::il2cpp_utils::ExtractTypes(s)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnStartElement
void System::Runtime::Remoting::ConfigHandler::OnStartElement(::Il2CppString* name, Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnStartElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnStartElement", {}, ::il2cpp_utils::ExtractTypes(name, attrs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnEndElement
void System::Runtime::Remoting::ConfigHandler::OnEndElement(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnEndElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEndElement", {}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnChars
void System::Runtime::Remoting::ConfigHandler::OnChars(::Il2CppString* ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnChars", {}, ::il2cpp_utils::ExtractTypes(ch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Runtime.Remoting.ConfigHandler.OnEndParsing
void System::Runtime::Remoting::ConfigHandler::OnEndParsing(Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Remoting").WithContext("ConfigHandler").WithContext("OnEndParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEndParsing", {}, ::il2cpp_utils::ExtractTypes(parser)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parser);
}
