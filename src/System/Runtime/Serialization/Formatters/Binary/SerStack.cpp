// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.SerStack
#include "System/Runtime/Serialization/Formatters/Binary/SerStack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.Push
void System::Runtime::Serialization::Formatters::Binary::SerStack::Push(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("Push");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.Pop
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::SerStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("Pop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.IncreaseCapacity
void System::Runtime::Serialization::Formatters::Binary::SerStack::IncreaseCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("IncreaseCapacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncreaseCapacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.Peek
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::SerStack::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.PeekPeek
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::SerStack::PeekPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("PeekPeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PeekPeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerStack.IsEmpty
bool System::Runtime::Serialization::Formatters::Binary::SerStack::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("SerStack").WithContext("IsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
