// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectReader/TopLevelAssemblyTypeResolver
#include "System/Runtime/Serialization/Formatters/Binary/ObjectReader_TopLevelAssemblyTypeResolver.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectReader/TopLevelAssemblyTypeResolver.ResolveType
System::Type* System::Runtime::Serialization::Formatters::Binary::ObjectReader::TopLevelAssemblyTypeResolver::ResolveType(System::Reflection::Assembly* assembly, ::Il2CppString* simpleTypeName, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Runtime::Serialization::Formatters::Binary").WithContext("TopLevelAssemblyTypeResolver").WithContext("ResolveType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assembly, simpleTypeName, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assembly, simpleTypeName, ignoreCase);
}
