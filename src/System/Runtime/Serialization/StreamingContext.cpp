// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.StreamingContext..ctor
System::Runtime::Serialization::StreamingContext* System::Runtime::Serialization::StreamingContext::New_ctor(System::Runtime::Serialization::StreamingContextStates state) {
  return (StreamingContext*)THROW_UNLESS(il2cpp_utils::New("System.Runtime.Serialization", "StreamingContext", state));
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext..ctor
System::Runtime::Serialization::StreamingContext* System::Runtime::Serialization::StreamingContext::New_ctor(System::Runtime::Serialization::StreamingContextStates state, ::CsObject* additional) {
  return (StreamingContext*)THROW_UNLESS(il2cpp_utils::New("System.Runtime.Serialization", "StreamingContext", state, additional));
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext.get_State
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContext::get_State() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Runtime::Serialization::StreamingContextStates>(*this, "get_State"));
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext.Equals
bool System::Runtime::Serialization::StreamingContext::Equals(::CsObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext.GetHashCode
int System::Runtime::Serialization::StreamingContext::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
