// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeFormat
#include "System/DateTimeFormat.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan NullOffset
System::TimeSpan System::DateTimeFormat::_get_NullOffset() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_get_NullOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System", "DateTimeFormat", "NullOffset"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan NullOffset
void System::DateTimeFormat::_set_NullOffset(System::TimeSpan value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_set_NullOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "NullOffset", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] allStandardFormats
::Array<::Il2CppChar>* System::DateTimeFormat::_get_allStandardFormats() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_get_allStandardFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "DateTimeFormat", "allStandardFormats"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] allStandardFormats
void System::DateTimeFormat::_set_allStandardFormats(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_set_allStandardFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "allStandardFormats", value));
}
// Autogenerated static field getter
// Get static field: static System.String[] fixedNumberFormats
::Array<::Il2CppString*>* System::DateTimeFormat::_get_fixedNumberFormats() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_get_fixedNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System", "DateTimeFormat", "fixedNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static System.String[] fixedNumberFormats
void System::DateTimeFormat::_set_fixedNumberFormats(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("_set_fixedNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeFormat", "fixedNumberFormats", value));
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(System::Text::StringBuilder* outputBuffer, int value, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outputBuffer, value, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, value, len);
}
// Autogenerated method: System.DateTimeFormat.FormatDigits
void System::DateTimeFormat::FormatDigits(System::Text::StringBuilder* outputBuffer, int value, int len, bool overrideLengthLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outputBuffer, value, len, overrideLengthLimit)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, value, len, overrideLengthLimit);
}
// Autogenerated method: System.DateTimeFormat.HebrewFormatDigits
void System::DateTimeFormat::HebrewFormatDigits(System::Text::StringBuilder* outputBuffer, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("HebrewFormatDigits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "HebrewFormatDigits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outputBuffer, digits)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outputBuffer, digits);
}
// Autogenerated method: System.DateTimeFormat.ParseRepeatPattern
int System::DateTimeFormat::ParseRepeatPattern(::Il2CppString* format, int pos, ::Il2CppChar patternChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("ParseRepeatPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseRepeatPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, pos, patternChar)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, patternChar);
}
// Autogenerated method: System.DateTimeFormat.FormatDayOfWeek
::Il2CppString* System::DateTimeFormat::FormatDayOfWeek(int dayOfWeek, int repeat, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatDayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatDayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dayOfWeek, repeat, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dayOfWeek, repeat, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatMonth
::Il2CppString* System::DateTimeFormat::FormatMonth(int month, int repeatCount, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatMonth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatMonth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(month, repeatCount, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.FormatHebrewMonthName
::Il2CppString* System::DateTimeFormat::FormatHebrewMonthName(System::DateTime time, int month, int repeatCount, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatHebrewMonthName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatHebrewMonthName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, month, repeatCount, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, month, repeatCount, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ParseQuoteString
int System::DateTimeFormat::ParseQuoteString(::Il2CppString* format, int pos, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("ParseQuoteString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseQuoteString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, pos, result)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos, result);
}
// Autogenerated method: System.DateTimeFormat.ParseNextChar
int System::DateTimeFormat::ParseNextChar(::Il2CppString* format, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("ParseNextChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ParseNextChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, pos)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, pos);
}
// Autogenerated method: System.DateTimeFormat.IsUseGenitiveForm
bool System::DateTimeFormat::IsUseGenitiveForm(::Il2CppString* format, int index, int tokenLen, ::Il2CppChar patternToMatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("IsUseGenitiveForm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "IsUseGenitiveForm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, index, tokenLen, patternToMatch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, index, tokenLen, patternToMatch);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomized
::Il2CppString* System::DateTimeFormat::FormatCustomized(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatCustomized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, format, dtfi, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedTimeZone
void System::DateTimeFormat::FormatCustomizedTimeZone(System::DateTime dateTime, System::TimeSpan offset, ::Il2CppString* format, int tokenLen, bool timeOnly, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatCustomizedTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, offset, format, tokenLen, timeOnly, result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, offset, format, tokenLen, timeOnly, result);
}
// Autogenerated method: System.DateTimeFormat.FormatCustomizedRoundripTimeZone
void System::DateTimeFormat::FormatCustomizedRoundripTimeZone(System::DateTime dateTime, System::TimeSpan offset, System::Text::StringBuilder* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("FormatCustomizedRoundripTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "FormatCustomizedRoundripTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, offset, result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, offset, result);
}
// Autogenerated method: System.DateTimeFormat.GetRealFormat
::Il2CppString* System::DateTimeFormat::GetRealFormat(::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("GetRealFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "GetRealFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dtfi);
}
// Autogenerated method: System.DateTimeFormat.ExpandPredefinedFormat
::Il2CppString* System::DateTimeFormat::ExpandPredefinedFormat(::Il2CppString* format, System::DateTime& dateTime, System::Globalization::DateTimeFormatInfo*& dtfi, System::TimeSpan& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("ExpandPredefinedFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "ExpandPredefinedFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, dateTime, dtfi, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.Format
::Il2CppString* System::DateTimeFormat::Format(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, format, dtfi)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi);
}
// Autogenerated method: System.DateTimeFormat.Format
::Il2CppString* System::DateTimeFormat::Format(System::DateTime dateTime, ::Il2CppString* format, System::Globalization::DateTimeFormatInfo* dtfi, System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, format, dtfi, offset)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, format, dtfi, offset);
}
// Autogenerated method: System.DateTimeFormat.InvalidFormatForLocal
void System::DateTimeFormat::InvalidFormatForLocal(::Il2CppString* format, System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("InvalidFormatForLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "InvalidFormatForLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, dateTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime);
}
// Autogenerated method: System.DateTimeFormat.InvalidFormatForUtc
void System::DateTimeFormat::InvalidFormatForUtc(::Il2CppString* format, System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext("InvalidFormatForUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", "InvalidFormatForUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, dateTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, dateTime);
}
// Autogenerated method: System.DateTimeFormat..cctor
void System::DateTimeFormat::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeFormat").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeFormat", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
