// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.RuntimeType/MemberListType
#include "System/RuntimeType_MemberListType.hpp"
// Including type: System.RuntimeType/ListBuilder`1
#include "System/RuntimeType_ListBuilder_1.hpp"
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.RuntimePropertyInfo
#include "System/Reflection/RuntimePropertyInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.RuntimeEventInfo
#include "System/Reflection/RuntimeEventInfo.hpp"
// Including type: System.Reflection.ParameterModifier
#include "System/Reflection/ParameterModifier.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType ValueType
System::RuntimeType* System::RuntimeType::_get_ValueType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_ValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ValueType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType ValueType
void System::RuntimeType::_set_ValueType(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_ValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ValueType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType EnumType
System::RuntimeType* System::RuntimeType::_get_EnumType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_EnumType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "EnumType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType EnumType
void System::RuntimeType::_set_EnumType(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_EnumType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "EnumType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType ObjectType
System::RuntimeType* System::RuntimeType::_get_ObjectType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType ObjectType
void System::RuntimeType::_set_ObjectType(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType StringType
System::RuntimeType* System::RuntimeType::_get_StringType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "StringType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType StringType
void System::RuntimeType::_set_StringType(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType DelegateType
System::RuntimeType* System::RuntimeType::_get_DelegateType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_DelegateType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "DelegateType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType DelegateType
void System::RuntimeType::_set_DelegateType(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_DelegateType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "DelegateType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] s_SICtorParamTypes
::Array<System::Type*>* System::RuntimeType::_get_s_SICtorParamTypes() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_s_SICtorParamTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System", "RuntimeType", "s_SICtorParamTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] s_SICtorParamTypes
void System::RuntimeType::_set_s_SICtorParamTypes(::Array<System::Type*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_s_SICtorParamTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_SICtorParamTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags MemberBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_MemberBindingMask() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_MemberBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "MemberBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags MemberBindingMask
void System::RuntimeType::_set_MemberBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_MemberBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "MemberBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags InvocationMask
System::Reflection::BindingFlags System::RuntimeType::_get_InvocationMask() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_InvocationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "InvocationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags InvocationMask
void System::RuntimeType::_set_InvocationMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_InvocationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "InvocationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonCreateInstance() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderNonCreateInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonCreateInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
void System::RuntimeType::_set_BinderNonCreateInstance(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderNonCreateInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonCreateInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetProperty() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderGetSetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetProperty
void System::RuntimeType::_set_BinderGetSetProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderGetSetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeProperty() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderSetInvokeProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
void System::RuntimeType::_set_BinderSetInvokeProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderSetInvokeProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetField() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderGetSetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetField
void System::RuntimeType::_set_BinderGetSetField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderGetSetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeField() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderSetInvokeField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeField
void System::RuntimeType::_set_BinderSetInvokeField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderSetInvokeField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonFieldGetSet() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_BinderNonFieldGetSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonFieldGetSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
void System::RuntimeType::_set_BinderNonFieldGetSet(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_BinderNonFieldGetSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonFieldGetSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags ClassicBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_ClassicBindingMask() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_ClassicBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "ClassicBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags ClassicBindingMask
void System::RuntimeType::_set_ClassicBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_ClassicBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ClassicBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.RuntimeType s_typedRef
System::RuntimeType* System::RuntimeType::_get_s_typedRef() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_get_s_typedRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "s_typedRef"));
}
// Autogenerated static field setter
// Set static field: static private System.RuntimeType s_typedRef
void System::RuntimeType::_set_s_typedRef(System::RuntimeType* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("_set_s_typedRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_typedRef", value));
}
// Autogenerated method: System.RuntimeType.ThrowIfTypeNeverValidGenericArgument
void System::RuntimeType::ThrowIfTypeNeverValidGenericArgument(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("ThrowIfTypeNeverValidGenericArgument");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "ThrowIfTypeNeverValidGenericArgument", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.SanityCheckGenericArguments
void System::RuntimeType::SanityCheckGenericArguments(::Array<System::RuntimeType*>* genericArguments, ::Array<System::RuntimeType*>* genericParamters) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("SanityCheckGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "SanityCheckGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(genericArguments, genericParamters)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericArguments, genericParamters);
}
// Autogenerated method: System.RuntimeType.SplitName
void System::RuntimeType::SplitName(::Il2CppString* fullname, ::Il2CppString*& name, ::Il2CppString*& ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("SplitName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "SplitName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, name, ns)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fullname, name, ns);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool allowPrefixLookup, bool& prefixLookup, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingFlags, name, allowPrefixLookup, prefixLookup, ignoreCase, listType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, allowPrefixLookup, prefixLookup, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingFlags, name, ignoreCase, listType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterApplyPrefixLookup
bool System::RuntimeType::FilterApplyPrefixLookup(System::Reflection::MemberInfo* memberInfo, ::Il2CppString* name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyPrefixLookup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyPrefixLookup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(memberInfo, name, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, name, ignoreCase);
}
// Autogenerated method: System.RuntimeType.FilterApplyBase
bool System::RuntimeType::FilterApplyBase(System::Reflection::MemberInfo* memberInfo, System::Reflection::BindingFlags bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, ::Il2CppString* name, bool prefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyBase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyBase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup);
}
// Autogenerated method: System.RuntimeType.FilterApplyType
bool System::RuntimeType::FilterApplyType(System::Type* type, System::Reflection::BindingFlags bindingFlags, ::Il2CppString* name, bool prefixLookup, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, bindingFlags, name, prefixLookup, ns)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingFlags, name, prefixLookup, ns);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodInfo
bool System::RuntimeType::FilterApplyMethodInfo(System::Reflection::RuntimeMethodInfo* method, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyMethodInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(method, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyConstructorInfo
bool System::RuntimeType::FilterApplyConstructorInfo(System::Reflection::RuntimeConstructorInfo* constructor, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyConstructorInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(constructor, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, constructor, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodBase
bool System::RuntimeType::FilterApplyMethodBase(System::Reflection::MethodBase* methodBase, System::Reflection::BindingFlags methodFlags, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FilterApplyMethodBase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodBase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodBase, methodFlags, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodBase, methodFlags, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.IsSpecialSerializableType
bool System::RuntimeType::IsSpecialSerializableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsSpecialSerializableType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSpecialSerializableType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetMethodCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*> System::RuntimeType::GetMethodCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMethodCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, callConv, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetConstructorCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*> System::RuntimeType::GetConstructorCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetConstructorCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructorCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, callConv, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetPropertyCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*> System::RuntimeType::GetPropertyCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetPropertyCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertyCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*>, false>(this, ___internal__method, name, bindingAttr, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetEventCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*> System::RuntimeType::GetEventCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEventCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEventCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetFieldCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*> System::RuntimeType::GetFieldCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetFieldCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFieldCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetNestedTypeCandidates
System::RuntimeType::ListBuilder_1<System::Type*> System::RuntimeType::GetNestedTypeCandidates(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetNestedTypeCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypeCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Type*>, false>(this, ___internal__method, fullname, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetRuntimeModule
System::Reflection::RuntimeModule* System::RuntimeType::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetRuntimeAssembly
System::Reflection::RuntimeAssembly* System::RuntimeType::GetRuntimeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetRuntimeAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRuntimeAssembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeAssembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetBaseType
System::RuntimeType* System::RuntimeType::GetBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetBaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::RuntimeType*>* System::RuntimeType::GetGenericArgumentsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceCheckThis
void System::RuntimeType::CreateInstanceCheckThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceCheckThis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceCheckThis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceImpl
::Il2CppObject* System::RuntimeType::CreateInstanceImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* args, System::Globalization::CultureInfo* culture, ::Array<::Il2CppObject*>* activationAttributes, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, args, culture, activationAttributes, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, bindingAttr, binder, args, culture, activationAttributes, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceDefaultCtor
::Il2CppObject* System::RuntimeType::CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceDefaultCtor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceDefaultCtor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(publicOnly, skipCheckThis, fillCache, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.GetDefaultConstructor
System::Reflection::MonoCMethod* System::RuntimeType::GetDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MonoCMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetDefaultMemberName
::Il2CppString* System::RuntimeType::GetDefaultMemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetDefaultMemberName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultMemberName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetSerializationCtor
System::Reflection::RuntimeConstructorInfo* System::RuntimeType::GetSerializationCtor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetSerializationCtor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSerializationCtor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceSlow
::Il2CppObject* System::RuntimeType::CreateInstanceSlow(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceSlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceSlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(publicOnly, skipCheckThis, fillCache, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceMono
::Il2CppObject* System::RuntimeType::CreateInstanceMono(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceMono");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceMono", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nonPublic)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.RuntimeType.CheckValue
::Il2CppObject* System::RuntimeType::CheckValue(::Il2CppObject* value, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture, System::Reflection::BindingFlags invokeAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CheckValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, binder, culture, invokeAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, binder, culture, invokeAttr);
}
// Autogenerated method: System.RuntimeType.TryConvertToType
::Il2CppObject* System::RuntimeType::TryConvertToType(::Il2CppObject* value, bool& failed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("TryConvertToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryConvertToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, failed)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, failed);
}
// Autogenerated method: System.RuntimeType.IsConvertibleToPrimitiveType
::Il2CppObject* System::RuntimeType::IsConvertibleToPrimitiveType(::Il2CppObject* value, System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsConvertibleToPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "IsConvertibleToPrimitiveType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, targetType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.RuntimeType.GetCachedName
::Il2CppString* System::RuntimeType::GetCachedName(System::TypeNameKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetCachedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCachedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(kind)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, kind);
}
// Autogenerated method: System.RuntimeType.make_array_type
System::Type* System::RuntimeType::make_array_type(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("make_array_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "make_array_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.make_byref_type
System::Type* System::RuntimeType::make_byref_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("make_byref_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "make_byref_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakePointerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "MakePointerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.CreateInstanceForAnotherGenericParameter
::Il2CppObject* System::RuntimeType::CreateInstanceForAnotherGenericParameter(System::Type* genericType, System::RuntimeType* genericArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceForAnotherGenericParameter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceForAnotherGenericParameter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(genericType, genericArgument)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericType, genericArgument);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(System::Type* gt, ::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "MakeGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gt, types)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gt, types);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName_native
System::IntPtr System::RuntimeType::GetMethodsByName_native(System::IntPtr namePtr, System::Reflection::BindingFlags bindingAttr, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMethodsByName_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodsByName_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(namePtr, bindingAttr, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, namePtr, bindingAttr, ignoreCase);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName
::Array<System::Reflection::RuntimeMethodInfo*>* System::RuntimeType::GetMethodsByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool ignoreCase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMethodsByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodsByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, ignoreCase, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeMethodInfo*>*, false>(this, ___internal__method, name, bindingAttr, ignoreCase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName_native
System::IntPtr System::RuntimeType::GetPropertiesByName_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr, bool icase) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetPropertiesByName_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertiesByName_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, icase)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr, icase);
}
// Autogenerated method: System.RuntimeType.GetConstructors_native
System::IntPtr System::RuntimeType::GetConstructors_native(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetConstructors_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors_internal
::Array<System::Reflection::RuntimeConstructorInfo*>* System::RuntimeType::GetConstructors_internal(System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetConstructors_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeConstructorInfo*>*, false>(this, ___internal__method, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName
::Array<System::Reflection::RuntimePropertyInfo*>* System::RuntimeType::GetPropertiesByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool icase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetPropertiesByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertiesByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, icase, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimePropertyInfo*>*, false>(this, ___internal__method, name, bindingAttr, icase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImplInternal
System::TypeCode System::RuntimeType::GetTypeCodeImplInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetTypeCodeImplInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "GetTypeCodeImplInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsGenericCOMObjectImpl
bool System::RuntimeType::IsGenericCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsGenericCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsGenericCOMObjectImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceInternal
::Il2CppObject* System::RuntimeType::CreateInstanceInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("CreateInstanceInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.getFullName
::Il2CppString* System::RuntimeType::getFullName(bool full_name, bool assembly_qualified) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("getFullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "getFullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(full_name, assembly_qualified)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, full_name, assembly_qualified);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::Type*>* System::RuntimeType::GetGenericArgumentsInternal(bool runtimeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(runtimeArray)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, runtimeArray);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::GetGenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterPosition
int System::RuntimeType::GetGenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEvents_native
System::IntPtr System::RuntimeType::GetEvents_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEvents_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvents_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_native
System::IntPtr System::RuntimeType::GetFields_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetFields_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_internal
::Array<System::Reflection::RuntimeFieldInfo*>* System::RuntimeType::GetFields_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetFields_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeFieldInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetEvents_internal
::Array<System::Reflection::RuntimeEventInfo*>* System::RuntimeType::GetEvents_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEvents_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvents_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeEventInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_native
System::IntPtr System::RuntimeType::GetNestedTypes_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetNestedTypes_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypes_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_internal
::Array<System::RuntimeType*>* System::RuntimeType::GetNestedTypes_internal(::Il2CppString* displayName, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetNestedTypes_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypes_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(displayName, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method, displayName, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethods
::Array<System::Reflection::MethodInfo*>* System::RuntimeType::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMethods");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors
::Array<System::Reflection::ConstructorInfo*>* System::RuntimeType::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetConstructors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ConstructorInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetProperties
::Array<System::Reflection::PropertyInfo*>* System::RuntimeType::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::PropertyInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields
::Array<System::Reflection::FieldInfo*>* System::RuntimeType::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::FieldInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethodImpl
System::Reflection::MethodInfo* System::RuntimeType::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMethodImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, callConv, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConv, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetConstructorImpl
System::Reflection::ConstructorInfo* System::RuntimeType::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetConstructorImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, callConvention, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetPropertyImpl
System::Reflection::PropertyInfo* System::RuntimeType::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetPropertyImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, returnType, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetEvent
System::Reflection::EventInfo* System::RuntimeType::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetField
System::Reflection::FieldInfo* System::RuntimeType::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedType
System::Type* System::RuntimeType::GetNestedType(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetNestedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, fullname, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMember
::Array<System::Reflection::MemberInfo*>* System::RuntimeType::GetMember(::Il2CppString* name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, type, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.RuntimeType.get_Module
System::Reflection::Module* System::RuntimeType::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_Module");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Assembly
System::Reflection::Assembly* System::RuntimeType::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_Assembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_TypeHandle
System::RuntimeTypeHandle System::RuntimeType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_TypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsInstanceOfType
bool System::RuntimeType::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsInstanceOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.RuntimeType.IsSubclassOf
bool System::RuntimeType::IsSubclassOf(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsSubclassOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsAssignableFrom
bool System::RuntimeType::IsAssignableFrom(System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.RuntimeType.IsEquivalentTo
bool System::RuntimeType::IsEquivalentTo(System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsEquivalentTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.RuntimeType.get_BaseType
System::Type* System::RuntimeType::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_BaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_UnderlyingSystemType
System::Type* System::RuntimeType::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_UnderlyingSystemType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::RuntimeType::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetAttributeFlagsImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsContextfulImpl
bool System::RuntimeType::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsContextfulImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsByRefImpl
bool System::RuntimeType::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsByRefImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPrimitiveImpl
bool System::RuntimeType::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsPrimitiveImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPointerImpl
bool System::RuntimeType::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsPointerImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsCOMObjectImpl
bool System::RuntimeType::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsValueTypeImpl
bool System::RuntimeType::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsValueTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsEnum
bool System::RuntimeType::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_IsEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.HasElementTypeImpl
bool System::RuntimeType::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("HasElementTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_GenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsSzArray
bool System::RuntimeType::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_IsSzArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsArrayImpl
bool System::RuntimeType::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsArrayImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetArrayRank
int System::RuntimeType::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetArrayRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetElementType
System::Type* System::RuntimeType::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumNames
::Array<::Il2CppString*>* System::RuntimeType::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEnumNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumValues
System::Array* System::RuntimeType::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEnumValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumUnderlyingType
System::Type* System::RuntimeType::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEnumUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsEnumDefined
bool System::RuntimeType::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsEnumDefined");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetEnumName
::Il2CppString* System::RuntimeType::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetEnumName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetGenericArguments
::Array<System::Type*>* System::RuntimeType::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(::Array<System::Type*>* instantiation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instantiation)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, instantiation);
}
// Creating initializer_list -> params proxy for: System.Type MakeGenericType(params System.Type[] instantiation)
System::Type* System::RuntimeType::MakeGenericType(std::initializer_list<System::Type*> instantiation) {
  return System::RuntimeType::MakeGenericType(::Array<System::Type*>::New(instantiation));
}
// Autogenerated method: System.RuntimeType.get_IsGenericTypeDefinition
bool System::RuntimeType::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_IsGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericParameter
bool System::RuntimeType::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_IsGenericParameter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterPosition
int System::RuntimeType::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_GenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericTypeDefinition
System::Type* System::RuntimeType::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericType
bool System::RuntimeType::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_IsGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.InvokeMember
::Il2CppObject* System::RuntimeType::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags bindingFlags, System::Reflection::Binder* binder, ::Il2CppObject* target, ::Array<::Il2CppObject*>* providedArgs, ::Array<System::Reflection::ParameterModifier>* modifiers, System::Globalization::CultureInfo* culture, ::Array<::Il2CppString*>* namedParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("InvokeMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams);
}
// Autogenerated method: System.RuntimeType.Equals
bool System::RuntimeType::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.RuntimeType.Clone
::Il2CppObject* System::RuntimeType::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::RuntimeType::System_ICloneable_Clone() {
  return System::RuntimeType::Clone();
}
// Autogenerated method: System.RuntimeType.GetObjectData
void System::RuntimeType::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::RuntimeType::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::RuntimeType::GetObjectData(info, context);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inherit)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attributeType, inherit)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.IsDefined
bool System::RuntimeType::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("IsDefined");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attributeType, inherit)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributesData
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::RuntimeType::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetCustomAttributesData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.FormatTypeName
::Il2CppString* System::RuntimeType::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("FormatTypeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serialization)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.RuntimeType.get_MemberType
System::Reflection::MemberTypes System::RuntimeType::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_MemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ReflectedType
System::Type* System::RuntimeType::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_ReflectedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_MetadataToken
int System::RuntimeType::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_MetadataToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.MakeByRefType
System::Type* System::RuntimeType::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakeByRefType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("MakePointerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ContainsGenericParameters
bool System::RuntimeType::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_ContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterConstraints
::Array<System::Type*>* System::RuntimeType::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetGenericParameterConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImpl
System::TypeCode System::RuntimeType::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetTypeCodeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.ToString
::Il2CppString* System::RuntimeType::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringMethod
System::Reflection::MethodBase* System::RuntimeType::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_DeclaringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetInterfaces
::Array<System::Type*>* System::RuntimeType::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetInterfaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_AssemblyQualifiedName
::Il2CppString* System::RuntimeType::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_AssemblyQualifiedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringType
System::Type* System::RuntimeType::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Name
::Il2CppString* System::RuntimeType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Namespace
::Il2CppString* System::RuntimeType::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_Namespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetHashCode
int System::RuntimeType::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_FullName
::Il2CppString* System::RuntimeType::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("get_FullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType..cctor
void System::RuntimeType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.RuntimeType.op_Equality
bool System::operator ==(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.RuntimeType.op_Inequality
bool System::operator !=(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("RuntimeType").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
