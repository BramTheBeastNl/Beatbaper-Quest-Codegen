// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ThreadPoolGlobals
#include "System/Threading/ThreadPoolGlobals.hpp"
// Including type: System.Threading.ThreadPoolWorkQueue
#include "System/Threading/ThreadPoolWorkQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 tpQuantum
uint System::Threading::ThreadPoolGlobals::_get_tpQuantum() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ThreadPoolGlobals", "tpQuantum"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 tpQuantum
void System::Threading::ThreadPoolGlobals::_set_tpQuantum(uint value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpQuantum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 processorCount
int System::Threading::ThreadPoolGlobals::_get_processorCount() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ThreadPoolGlobals", "processorCount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 processorCount
void System::Threading::ThreadPoolGlobals::_set_processorCount(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "processorCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean tpHosted
bool System::Threading::ThreadPoolGlobals::_get_tpHosted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "tpHosted"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean tpHosted
void System::Threading::ThreadPoolGlobals::_set_tpHosted(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "tpHosted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean vmTpInitialized
bool System::Threading::ThreadPoolGlobals::_get_vmTpInitialized() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "vmTpInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean vmTpInitialized
void System::Threading::ThreadPoolGlobals::_set_vmTpInitialized(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "vmTpInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean enableWorkerTracking
bool System::Threading::ThreadPoolGlobals::_get_enableWorkerTracking() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean enableWorkerTracking
void System::Threading::ThreadPoolGlobals::_set_enableWorkerTracking(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "enableWorkerTracking", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.ThreadPoolWorkQueue workQueue
System::Threading::ThreadPoolWorkQueue* System::Threading::ThreadPoolGlobals::_get_workQueue() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ThreadPoolWorkQueue*>("System.Threading", "ThreadPoolGlobals", "workQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.ThreadPoolWorkQueue workQueue
void System::Threading::ThreadPoolGlobals::_set_workQueue(System::Threading::ThreadPoolWorkQueue* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ThreadPoolGlobals", "workQueue", value));
}
// Autogenerated method: System.Threading.ThreadPoolGlobals..cctor
void System::Threading::ThreadPoolGlobals::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading", "ThreadPoolGlobals", ".cctor"));
}
