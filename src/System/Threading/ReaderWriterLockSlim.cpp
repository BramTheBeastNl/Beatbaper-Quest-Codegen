// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim
#include "System/Threading/ReaderWriterLockSlim.hpp"
// Including type: System.Threading.ReaderWriterLockSlim/TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCycles
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_LockSpinCycles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCycles
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCycles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_LockSpinCycles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCount
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_LockSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCount
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_LockSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSleep0Count
int System::Threading::ReaderWriterLockSlim::_get_LockSleep0Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_LockSleep0Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSleep0Count
void System::Threading::ReaderWriterLockSlim::_set_LockSleep0Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_LockSleep0Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 s_nextLockID
int64_t System::Threading::ReaderWriterLockSlim::_get_s_nextLockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_s_nextLockID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "ReaderWriterLockSlim", "s_nextLockID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 s_nextLockID
void System::Threading::ReaderWriterLockSlim::_set_s_nextLockID(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_s_nextLockID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "s_nextLockID", value));
}
// [ThreadStaticAttribute] Offset: 0xD479E4
// Autogenerated static field getter
// Get static field: static private System.Threading.ReaderWriterCount t_rwc
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::_get_t_rwc() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_t_rwc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ReaderWriterCount*>("System.Threading", "ReaderWriterLockSlim", "t_rwc"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ReaderWriterCount t_rwc
void System::Threading::ReaderWriterLockSlim::_set_t_rwc(System::Threading::ReaderWriterCount* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_t_rwc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "t_rwc", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSpinCount
int System::Threading::ReaderWriterLockSlim::_get_MaxSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_MaxSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSpinCount
void System::Threading::ReaderWriterLockSlim::_set_MaxSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_MaxSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WRITER_HELD
uint System::Threading::ReaderWriterLockSlim::_get_WRITER_HELD() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_WRITER_HELD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WRITER_HELD
void System::Threading::ReaderWriterLockSlim::_set_WRITER_HELD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_WRITER_HELD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_WRITERS
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_WRITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_WAITING_WRITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_WRITERS
void System::Threading::ReaderWriterLockSlim::_set_WAITING_WRITERS(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_WAITING_WRITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_UPGRADER
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_UPGRADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_WAITING_UPGRADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_UPGRADER
void System::Threading::ReaderWriterLockSlim::_set_WAITING_UPGRADER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_WAITING_UPGRADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 MAX_READER
uint System::Threading::ReaderWriterLockSlim::_get_MAX_READER() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_MAX_READER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "MAX_READER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 MAX_READER
void System::Threading::ReaderWriterLockSlim::_set_MAX_READER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_MAX_READER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MAX_READER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 READER_MASK
uint System::Threading::ReaderWriterLockSlim::_get_READER_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_get_READER_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "READER_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 READER_MASK
void System::Threading::ReaderWriterLockSlim::_set_READER_MASK(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("_set_READER_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "READER_MASK", value));
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.InitializeThreadCounts
void System::Threading::ReaderWriterLockSlim::InitializeThreadCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("InitializeThreadCounts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeThreadCounts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRWEntryEmpty
bool System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty(System::Threading::ReaderWriterCount* rwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("IsRWEntryEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "IsRWEntryEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rwc)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRwHashEntryChanged
bool System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged(System::Threading::ReaderWriterCount* lrwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("IsRwHashEntryChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsRwHashEntryChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lrwc)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, lrwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetThreadRWCount
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::GetThreadRWCount(bool dontAllocate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("GetThreadRWCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetThreadRWCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dontAllocate)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ReaderWriterCount*, false>(this, ___internal__method, dontAllocate);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterReadLock
void System::Threading::ReaderWriterLockSlim::EnterReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("EnterReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnterReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterReadLockCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterReadLockCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterWriteLock
void System::Threading::ReaderWriterLockSlim::EnterWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("EnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnterWriteLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterWriteLockCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterWriteLockCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("EnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("TryEnterUpgradeableReadLockCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLockCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitReadLock
void System::Threading::ReaderWriterLockSlim::ExitReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitWriteLock
void System::Threading::ReaderWriterLockSlim::ExitWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitWriteLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitWriteLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.LazyCreateEvent
void System::Threading::ReaderWriterLockSlim::LazyCreateEvent(System::Threading::EventWaitHandle*& waitEvent, bool makeAutoResetEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("LazyCreateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LazyCreateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitEvent, makeAutoResetEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, waitEvent, makeAutoResetEvent);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.WaitOnEvent
bool System::Threading::ReaderWriterLockSlim::WaitOnEvent(System::Threading::EventWaitHandle* waitEvent, uint& numWaiters, System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout, bool isWriteWaiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("WaitOnEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOnEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitEvent, numWaiters, timeout, isWriteWaiter)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, waitEvent, numWaiters, timeout, isWriteWaiter);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitAndWakeUpAppropriateWaiters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaiters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaitersPreferringWriters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitAndWakeUpAppropriateWaitersPreferringWriters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaitersPreferringWriters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateReadWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitAndWakeUpAppropriateReadWaiters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateReadWaiters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsWriterAcquired
bool System::Threading::ReaderWriterLockSlim::IsWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("IsWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWriterAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWriterAcquired
void System::Threading::ReaderWriterLockSlim::SetWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("SetWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetWriterAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWriterAcquired
void System::Threading::ReaderWriterLockSlim::ClearWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ClearWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearWriterAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWritersWaiting
void System::Threading::ReaderWriterLockSlim::SetWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("SetWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetWritersWaiting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWritersWaiting
void System::Threading::ReaderWriterLockSlim::ClearWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ClearWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearWritersWaiting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("SetUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUpgraderWaiting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ClearUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearUpgraderWaiting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetNumReaders
uint System::Threading::ReaderWriterLockSlim::GetNumReaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("GetNumReaders");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNumReaders", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLock
void System::Threading::ReaderWriterLockSlim::EnterMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("EnterMyLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnterMyLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLockSpin
void System::Threading::ReaderWriterLockSlim::EnterMyLockSpin() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("EnterMyLockSpin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnterMyLockSpin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitMyLock
void System::Threading::ReaderWriterLockSlim::ExitMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("ExitMyLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ExitMyLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SpinWait
void System::Threading::ReaderWriterLockSlim::SpinWait(int SpinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("SpinWait");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "SpinWait", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(SpinCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, SpinCount);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_IsReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadLockHeld", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_IsUpgradeableReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUpgradeableReadLockHeld", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsWriteLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_IsWriteLockHeld");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsWriteLockHeld", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveReadCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_RecursiveReadCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RecursiveReadCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_RecursiveUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RecursiveUpgradeCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveWriteCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_RecursiveWriteCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RecursiveWriteCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingReadCount
int System::Threading::ReaderWriterLockSlim::get_WaitingReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_WaitingReadCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WaitingReadCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_WaitingUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WaitingUpgradeCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingWriteCount
int System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("get_WaitingWriteCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WaitingWriteCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("ReaderWriterLockSlim").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Threading::ReaderWriterLockSlim::System_IDisposable_Dispose() {
  System::Threading::ReaderWriterLockSlim::Dispose();
}
