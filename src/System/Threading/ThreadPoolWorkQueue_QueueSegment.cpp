// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.ThreadPoolWorkQueue/QueueSegment
#include "System/Threading/ThreadPoolWorkQueue_QueueSegment.hpp"
// Including type: System.Threading.IThreadPoolWorkItem
#include "System/Threading/IThreadPoolWorkItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.GetIndexes
void System::Threading::ThreadPoolWorkQueue::QueueSegment::GetIndexes(int& upper, int& lower) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetIndexes", upper, lower));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.CompareExchangeIndexes
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::CompareExchangeIndexes(int& prevUpper, int newUpper, int& prevLower, int newLower) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "CompareExchangeIndexes", prevUpper, newUpper, prevLower, newLower));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.IsUsedUp
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::IsUsedUp() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsUsedUp"));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.TryEnqueue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryEnqueue(System::Threading::IThreadPoolWorkItem* node) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryEnqueue", node));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment.TryDequeue
bool System::Threading::ThreadPoolWorkQueue::QueueSegment::TryDequeue(System::Threading::IThreadPoolWorkItem*& node) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryDequeue", node));
}
// Autogenerated method: System.Threading.ThreadPoolWorkQueue/QueueSegment..ctor
System::Threading::ThreadPoolWorkQueue::QueueSegment* System::Threading::ThreadPoolWorkQueue::QueueSegment::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<ThreadPoolWorkQueue::QueueSegment*>());
}
