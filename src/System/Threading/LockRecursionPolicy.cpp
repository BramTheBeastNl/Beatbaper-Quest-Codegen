// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionPolicy
#include "System/Threading/LockRecursionPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy NoRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_NoRecursion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "NoRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy NoRecursion
void System::Threading::LockRecursionPolicy::_set_NoRecursion(System::Threading::LockRecursionPolicy value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "NoRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_SupportsRecursion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "SupportsRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
void System::Threading::LockRecursionPolicy::_set_SupportsRecursion(System::Threading::LockRecursionPolicy value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "SupportsRecursion", value));
}
