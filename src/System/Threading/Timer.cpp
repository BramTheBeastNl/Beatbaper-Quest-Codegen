// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.Threading.Timer/TimerComparer
#include "System/Threading/Timer_TimerComparer.hpp"
// Including type: System.Threading.Timer/Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Timer/Scheduler scheduler
System::Threading::Timer::Scheduler* System::Threading::Timer::_get_scheduler() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("_get_scheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Timer::Scheduler*>("System.Threading", "Timer", "scheduler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Timer/Scheduler scheduler
void System::Threading::Timer::_set_scheduler(System::Threading::Timer::Scheduler* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("_set_scheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "scheduler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 MaxValue
int64_t System::Threading::Timer::_get_MaxValue() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "Timer", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 MaxValue
void System::Threading::Timer::_set_MaxValue(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer", "MaxValue", value));
}
// Autogenerated method: System.Threading.Timer..ctor
System::Threading::Timer* System::Threading::Timer::New_ctor(System::Threading::TimerCallback* callback, ::Il2CppObject* state, int dueTime, int period) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Timer*>(callback, state, dueTime, period));
}
// Autogenerated method: System.Threading.Timer..ctor
System::Threading::Timer* System::Threading::Timer::New_ctor(System::Threading::TimerCallback* callback, ::Il2CppObject* state, System::TimeSpan dueTime, System::TimeSpan period) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<Timer*>(callback, state, dueTime, period));
}
// Autogenerated method: System.Threading.Timer.Init
void System::Threading::Timer::Init(System::Threading::TimerCallback* callback, ::Il2CppObject* state, int64_t dueTime, int64_t period) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Init", {}, ::il2cpp_utils::ExtractTypes(callback, state, dueTime, period)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback, state, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int dueTime, int period) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Change", {}, ::il2cpp_utils::ExtractTypes(dueTime, period)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(System::TimeSpan dueTime, System::TimeSpan period) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Change", {}, ::il2cpp_utils::ExtractTypes(dueTime, period)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period);
}
// Autogenerated method: System.Threading.Timer.Change
bool System::Threading::Timer::Change(int64_t dueTime, int64_t period, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "Change", {}, ::il2cpp_utils::ExtractTypes(dueTime, period, first)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dueTime, period, first);
}
// Autogenerated method: System.Threading.Timer.KeepRootedWhileScheduled
void System::Threading::Timer::KeepRootedWhileScheduled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("KeepRootedWhileScheduled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "KeepRootedWhileScheduled", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer.GetTimeMonotonic
int64_t System::Threading::Timer::GetTimeMonotonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("GetTimeMonotonic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer", il2cpp_utils::NoArgClass<int64_t>(), "GetTimeMonotonic", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer..cctor
void System::Threading::Timer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer.Dispose
void System::Threading::Timer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Timer").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Threading::Timer::System_IDisposable_Dispose() {
  System::Threading::Timer::Dispose();
}
