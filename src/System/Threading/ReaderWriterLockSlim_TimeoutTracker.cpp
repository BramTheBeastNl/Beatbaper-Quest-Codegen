// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim/TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.ReaderWriterLockSlim/TimeoutTracker.get_RemainingMilliseconds
int System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("TimeoutTracker").WithContext("get_RemainingMilliseconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_RemainingMilliseconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/TimeoutTracker.get_IsExpired
bool System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("TimeoutTracker").WithContext("get_IsExpired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsExpired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
