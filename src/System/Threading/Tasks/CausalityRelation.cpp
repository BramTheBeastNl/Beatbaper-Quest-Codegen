// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.CausalityRelation
#include "System/Threading/Tasks/CausalityRelation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation AssignDelegate
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_AssignDelegate() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "AssignDelegate"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation AssignDelegate
void System::Threading::Tasks::CausalityRelation::_set_AssignDelegate(System::Threading::Tasks::CausalityRelation value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "AssignDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Join
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Join() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Join"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Join
void System::Threading::Tasks::CausalityRelation::_set_Join(System::Threading::Tasks::CausalityRelation value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Join", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Choice
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Choice() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Choice"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Choice
void System::Threading::Tasks::CausalityRelation::_set_Choice(System::Threading::Tasks::CausalityRelation value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Choice", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Cancel
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Cancel() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Cancel
void System::Threading::Tasks::CausalityRelation::_set_Cancel(System::Threading::Tasks::CausalityRelation value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.CausalityRelation Error
System::Threading::Tasks::CausalityRelation System::Threading::Tasks::CausalityRelation::_get_Error() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::CausalityRelation>("System.Threading.Tasks", "CausalityRelation", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.CausalityRelation Error
void System::Threading::Tasks::CausalityRelation::_set_Error(System::Threading::Tasks::CausalityRelation value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "CausalityRelation", "Error", value));
}
