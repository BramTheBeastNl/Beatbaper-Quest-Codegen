// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskContinuationOptions
#include "System/Threading/Tasks/TaskContinuationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions None
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions None
void System::Threading::Tasks::TaskContinuationOptions::_set_None(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_PreferFairness() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
void System::Threading::Tasks::TaskContinuationOptions::_set_PreferFairness(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LongRunning() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
void System::Threading::Tasks::TaskContinuationOptions::_set_LongRunning(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_AttachedToParent() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
void System::Threading::Tasks::TaskContinuationOptions::_set_AttachedToParent(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_DenyChildAttach() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
void System::Threading::Tasks::TaskContinuationOptions::_set_DenyChildAttach(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_HideScheduler() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
void System::Threading::Tasks::TaskContinuationOptions::_set_HideScheduler(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LazyCancellation() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
void System::Threading::Tasks::TaskContinuationOptions::_set_LazyCancellation(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_RunContinuationsAsynchronously() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_RunContinuationsAsynchronously(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnRanToCompletion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnRanToCompletion(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnFaulted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnFaulted(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnCanceled() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnCanceled(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnRanToCompletion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnRanToCompletion(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnFaulted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnFaulted(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnCanceled() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnCanceled(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_ExecuteSynchronously() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_ExecuteSynchronously(System::Threading::Tasks::TaskContinuationOptions value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously", value));
}
