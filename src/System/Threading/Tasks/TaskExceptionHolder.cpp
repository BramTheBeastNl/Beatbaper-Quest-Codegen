// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskExceptionHolder
#include "System/Threading/Tasks/TaskExceptionHolder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_failFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_failFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_get_s_failFastOnUnobservedException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_failFastOnUnobservedException
void System::Threading::Tasks::TaskExceptionHolder::_set_s_failFastOnUnobservedException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_set_s_failFastOnUnobservedException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_domainUnloadStarted
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_domainUnloadStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_get_s_domainUnloadStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_domainUnloadStarted
void System::Threading::Tasks::TaskExceptionHolder::_set_s_domainUnloadStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_set_s_domainUnloadStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted", value));
}
// Autogenerated static field getter
// Get static field: static private System.EventHandler s_adUnloadEventHandler
System::EventHandler* System::Threading::Tasks::TaskExceptionHolder::_get_s_adUnloadEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_get_s_adUnloadEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::EventHandler*>("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler s_adUnloadEventHandler
void System::Threading::Tasks::TaskExceptionHolder::_set_s_adUnloadEventHandler(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("_set_s_adUnloadEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler", value));
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.ShouldFailFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::ShouldFailFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("ShouldFailFastOnUnobservedException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "ShouldFailFastOnUnobservedException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.EnsureADUnloadCallbackRegistered
void System::Threading::Tasks::TaskExceptionHolder::EnsureADUnloadCallbackRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("EnsureADUnloadCallbackRegistered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "EnsureADUnloadCallbackRegistered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AppDomainUnloadCallback
void System::Threading::Tasks::TaskExceptionHolder::AppDomainUnloadCallback(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("AppDomainUnloadCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "AppDomainUnloadCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.get_ContainsFaultList
bool System::Threading::Tasks::TaskExceptionHolder::get_ContainsFaultList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("get_ContainsFaultList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainsFaultList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Add
void System::Threading::Tasks::TaskExceptionHolder::Add(::Il2CppObject* exceptionObject, bool representsCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exceptionObject, representsCancellation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionObject, representsCancellation);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.SetCancellationException
void System::Threading::Tasks::TaskExceptionHolder::SetCancellationException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("SetCancellationException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCancellationException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exceptionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AddFaultException
void System::Threading::Tasks::TaskExceptionHolder::AddFaultException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("AddFaultException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFaultException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exceptionObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsUnhandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsUnhandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("MarkAsUnhandled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkAsUnhandled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsHandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsHandled(bool calledFromFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("MarkAsHandled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkAsHandled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calledFromFinalizer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, calledFromFinalizer);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.CreateExceptionObject
System::AggregateException* System::Threading::Tasks::TaskExceptionHolder::CreateExceptionObject(bool calledFromFinalizer, System::Exception* includeThisException) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("CreateExceptionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateExceptionObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(calledFromFinalizer, includeThisException)));
  return ::il2cpp_utils::RunMethodThrow<System::AggregateException*, false>(this, ___internal__method, calledFromFinalizer, includeThisException);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetExceptionDispatchInfos
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* System::Threading::Tasks::TaskExceptionHolder::GetExceptionDispatchInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("GetExceptionDispatchInfos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetExceptionDispatchInfos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetCancellationExceptionDispatchInfo
System::Runtime::ExceptionServices::ExceptionDispatchInfo* System::Threading::Tasks::TaskExceptionHolder::GetCancellationExceptionDispatchInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("GetCancellationExceptionDispatchInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCancellationExceptionDispatchInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder..cctor
void System::Threading::Tasks::TaskExceptionHolder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Finalize
void System::Threading::Tasks::TaskExceptionHolder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading::Tasks").WithContext("TaskExceptionHolder").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
