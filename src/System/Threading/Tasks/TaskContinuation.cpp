// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskContinuation
#include "System\Threading\Tasks\TaskContinuation.hpp"
// Including type: System.Threading.Tasks.Task
#include "System\Threading\Tasks\Task.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskContinuation.Run
void System::Threading::Tasks::TaskContinuation::Run(System::Threading::Tasks::Task* completedTask, bool bCanInlineContinuationTask) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Run", completedTask, bCanInlineContinuationTask));
}
// Autogenerated method: System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue
void System::Threading::Tasks::TaskContinuation::InlineIfPossibleOrElseQueue(System::Threading::Tasks::Task* task, bool needsProtection) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading.Tasks", "TaskContinuation", "InlineIfPossibleOrElseQueue", task, needsProtection));
}
// Autogenerated method: System.Threading.Tasks.TaskContinuation..ctor
System::Threading::Tasks::TaskContinuation* System::Threading::Tasks::TaskContinuation::New_ctor() {
  return (TaskContinuation*)THROW_UNLESS(il2cpp_utils::New("System.Threading.Tasks", "TaskContinuation"));
}
