// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AwaitTaskContinuation
#include "System/Threading/Tasks/AwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.AwaitTaskContinuation/<>c
#include "System/Threading/Tasks/AwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeActionCallback
System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::_get_s_invokeActionCallback() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeActionCallback
void System::Threading::Tasks::AwaitTaskContinuation::_set_s_invokeActionCallback(System::Threading::ContextCallback* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback", value));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation..ctor
System::Threading::Tasks::AwaitTaskContinuation* System::Threading::Tasks::AwaitTaskContinuation::New_ctor(System::Action* action, bool flowExecutionContext, System::Threading::StackCrawlMark& stackMark) {
  return (AwaitTaskContinuation*)THROW_UNLESS(il2cpp_utils::New("System.Threading.Tasks", "AwaitTaskContinuation", action, flowExecutionContext, stackMark));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation..ctor
System::Threading::Tasks::AwaitTaskContinuation* System::Threading::Tasks::AwaitTaskContinuation::New_ctor(System::Action* action, bool flowExecutionContext) {
  return (AwaitTaskContinuation*)THROW_UNLESS(il2cpp_utils::New("System.Threading.Tasks", "AwaitTaskContinuation", action, flowExecutionContext));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.CreateTask
System::Threading::Tasks::Task* System::Threading::Tasks::AwaitTaskContinuation::CreateTask(System::Action_1<::CsObject*>* action, ::CsObject* state, System::Threading::Tasks::TaskScheduler* scheduler) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "CreateTask", action, state, scheduler));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.get_IsValidLocationForInlining
bool System::Threading::Tasks::AwaitTaskContinuation::get_IsValidLocationForInlining() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("System.Threading.Tasks", "AwaitTaskContinuation", "get_IsValidLocationForInlining"));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ExecuteWorkItemHelper
void System::Threading::Tasks::AwaitTaskContinuation::ExecuteWorkItemHelper() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ExecuteWorkItemHelper"));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.InvokeAction
void System::Threading::Tasks::AwaitTaskContinuation::InvokeAction(::CsObject* state) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading.Tasks", "AwaitTaskContinuation", "InvokeAction", state));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.GetInvokeActionCallback
System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::GetInvokeActionCallback() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::ContextCallback*>("System.Threading.Tasks", "AwaitTaskContinuation", "GetInvokeActionCallback"));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunCallback
void System::Threading::Tasks::AwaitTaskContinuation::RunCallback(System::Threading::ContextCallback* callback, ::CsObject* state, System::Threading::Tasks::Task*& currentTask) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RunCallback", callback, state, currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::RunOrScheduleAction(System::Action* action, bool allowInlining, System::Threading::Tasks::Task*& currentTask) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading.Tasks", "AwaitTaskContinuation", "RunOrScheduleAction", action, allowInlining, currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.UnsafeScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::UnsafeScheduleAction(System::Action* action, System::Threading::Tasks::Task* task) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading.Tasks", "AwaitTaskContinuation", "UnsafeScheduleAction", action, task));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ThrowAsyncIfNecessary
void System::Threading::Tasks::AwaitTaskContinuation::ThrowAsyncIfNecessary(System::Exception* exc) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading.Tasks", "AwaitTaskContinuation", "ThrowAsyncIfNecessary", exc));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.Run
void System::Threading::Tasks::AwaitTaskContinuation::Run(System::Threading::Tasks::Task* task, bool canInlineContinuationTask) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Run", task, canInlineContinuationTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem"));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_MarkAborted(System::Threading::ThreadAbortException* tae) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", tae));
}
