// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 WaitTimeout
int System::Threading::WaitHandle::_get_WaitTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_WaitTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WaitTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 WaitTimeout
void System::Threading::WaitHandle::_set_WaitTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_WaitTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WaitTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_WAITHANDLES
int System::Threading::WaitHandle::_get_MAX_WAITHANDLES() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_MAX_WAITHANDLES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MAX_WAITHANDLES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_WAITHANDLES
void System::Threading::WaitHandle::_set_MAX_WAITHANDLES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_MAX_WAITHANDLES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MAX_WAITHANDLES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_OBJECT_0
int System::Threading::WaitHandle::_get_WAIT_OBJECT_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_WAIT_OBJECT_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_OBJECT_0"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_OBJECT_0
void System::Threading::WaitHandle::_set_WAIT_OBJECT_0(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_WAIT_OBJECT_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_OBJECT_0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_ABANDONED
int System::Threading::WaitHandle::_get_WAIT_ABANDONED() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_WAIT_ABANDONED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_ABANDONED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_ABANDONED
void System::Threading::WaitHandle::_set_WAIT_ABANDONED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_WAIT_ABANDONED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_ABANDONED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 WAIT_FAILED
int System::Threading::WaitHandle::_get_WAIT_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_WAIT_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "WAIT_FAILED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 WAIT_FAILED
void System::Threading::WaitHandle::_set_WAIT_FAILED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_WAIT_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "WAIT_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ERROR_TOO_MANY_POSTS
int System::Threading::WaitHandle::_get_ERROR_TOO_MANY_POSTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_ERROR_TOO_MANY_POSTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ERROR_TOO_MANY_POSTS
void System::Threading::WaitHandle::_set_ERROR_TOO_MANY_POSTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_ERROR_TOO_MANY_POSTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "ERROR_TOO_MANY_POSTS", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.IntPtr InvalidHandle
System::IntPtr System::Threading::WaitHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System.Threading", "WaitHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.IntPtr InvalidHandle
void System::Threading::WaitHandle::_set_InvalidHandle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MaxWaitHandles
int System::Threading::WaitHandle::_get_MaxWaitHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_get_MaxWaitHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "WaitHandle", "MaxWaitHandles"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MaxWaitHandles
void System::Threading::WaitHandle::_set_MaxWaitHandles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("_set_MaxWaitHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "WaitHandle", "MaxWaitHandles", value));
}
// Autogenerated method: System.Threading.WaitHandle.Init
void System::Threading::WaitHandle::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.set_Handle
void System::Threading::WaitHandle::set_Handle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("set_Handle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.WaitHandle.get_SafeWaitHandle
Microsoft::Win32::SafeHandles::SafeWaitHandle* System::Threading::WaitHandle::get_SafeWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("get_SafeWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SafeWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeWaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.set_SafeWaitHandle
void System::Threading::WaitHandle::set_SafeWaitHandle(Microsoft::Win32::SafeHandles::SafeWaitHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("set_SafeWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SafeWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Threading.WaitHandle.SetHandleInternal
void System::Threading::WaitHandle::SetHandleInternal(Microsoft::Win32::SafeHandles::SafeWaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("SetHandleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetHandleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(millisecondsTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOne
bool System::Threading::WaitHandle::WaitOne(int64_t timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.InternalWaitOne
bool System::Threading::WaitHandle::InternalWaitOne(System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, int64_t millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("InternalWaitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "InternalWaitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::Array<System::Threading::WaitHandle*>* waitHandles, int millisecondsTimeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, millisecondsTimeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.WaitAny
int System::Threading::WaitHandle::WaitAny(::Array<System::Threading::WaitHandle*>* waitHandles, System::TimeSpan timeout, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, timeout, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, timeout, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.ThrowAbandonedMutexException
void System::Threading::WaitHandle::ThrowAbandonedMutexException(int location, System::Threading::WaitHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("ThrowAbandonedMutexException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "ThrowAbandonedMutexException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(location, handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location, handle);
}
// Autogenerated method: System.Threading.WaitHandle.Close
void System::Threading::WaitHandle::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose(bool explicitDisposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(explicitDisposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, explicitDisposing);
}
// Autogenerated method: System.Threading.WaitHandle.WaitMultiple
int System::Threading::WaitHandle::WaitMultiple(::Array<System::Threading::WaitHandle*>* waitHandles, int millisecondsTimeout, bool exitContext, bool WaitAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitMultiple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitMultiple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitHandles, millisecondsTimeout, exitContext, WaitAll)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitHandles, millisecondsTimeout, exitContext, WaitAll);
}
// Autogenerated method: System.Threading.WaitHandle.WaitOneNative
int System::Threading::WaitHandle::WaitOneNative(System::Runtime::InteropServices::SafeHandle* waitableSafeHandle, uint millisecondsTimeout, bool hasThreadAffinity, bool exitContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("WaitOneNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "WaitOneNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, waitableSafeHandle, millisecondsTimeout, hasThreadAffinity, exitContext);
}
// Autogenerated method: System.Threading.WaitHandle.Wait_internal
int System::Threading::WaitHandle::Wait_internal(System::IntPtr* handles, int numHandles, bool waitAll, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("Wait_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", "Wait_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handles, numHandles, waitAll, ms)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handles, numHandles, waitAll, ms);
}
// Autogenerated method: System.Threading.WaitHandle..cctor
void System::Threading::WaitHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "WaitHandle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.WaitHandle.Dispose
void System::Threading::WaitHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("WaitHandle").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Threading::WaitHandle::System_IDisposable_Dispose() {
  System::Threading::WaitHandle::Dispose();
}
