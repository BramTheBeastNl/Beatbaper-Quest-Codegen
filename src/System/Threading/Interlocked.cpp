// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Interlocked
#include "System/Threading/Interlocked.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(int& location1, int value, int comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int System::Threading::Interlocked::CompareExchange(int& location1, int value, int comparand, bool& succeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand, succeeded)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand, succeeded);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
::Il2CppObject* System::Threading::Interlocked::CompareExchange(::Il2CppObject*& location1, ::Il2CppObject* value, ::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<::Il2CppObject*>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
float System::Threading::Interlocked::CompareExchange(float& location1, float value, float comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<float>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Decrement
int System::Threading::Interlocked::Decrement(int& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Decrement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "Decrement", {}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Increment
int System::Threading::Interlocked::Increment(int& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Increment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "Increment", {}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Increment
int64_t System::Threading::Interlocked::Increment(int64_t& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Increment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int64_t>(), "Increment", {}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int System::Threading::Interlocked::Exchange(int& location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
::Il2CppObject* System::Threading::Interlocked::Exchange(::Il2CppObject*& location1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<::Il2CppObject*>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
float System::Threading::Interlocked::Exchange(float& location1, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<float>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
int64_t System::Threading::Interlocked::CompareExchange(int64_t& location1, int64_t value, int64_t comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int64_t>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
System::IntPtr System::Threading::Interlocked::CompareExchange(System::IntPtr& location1, System::IntPtr value, System::IntPtr comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<System::IntPtr>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.CompareExchange
double System::Threading::Interlocked::CompareExchange(double& location1, double value, double comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("CompareExchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<double>(), "CompareExchange", {}, ::il2cpp_utils::ExtractTypes(location1, value, comparand)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value, comparand);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
int64_t System::Threading::Interlocked::Exchange(int64_t& location1, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int64_t>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
System::IntPtr System::Threading::Interlocked::Exchange(System::IntPtr& location1, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<System::IntPtr>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Exchange
double System::Threading::Interlocked::Exchange(double& location1, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Exchange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<double>(), "Exchange", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Read
int64_t System::Threading::Interlocked::Read(int64_t& location) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int64_t>(), "Read", {}, ::il2cpp_utils::ExtractTypes(location)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location);
}
// Autogenerated method: System.Threading.Interlocked.Add
int System::Threading::Interlocked::Add(int& location1, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int>(), "Add", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
// Autogenerated method: System.Threading.Interlocked.Add
int64_t System::Threading::Interlocked::Add(int64_t& location1, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Interlocked").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Interlocked", il2cpp_utils::NoArgClass<int64_t>(), "Add", {}, ::il2cpp_utils::ExtractTypes(location1, value)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, location1, value);
}
