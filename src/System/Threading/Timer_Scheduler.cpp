// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer/Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.Timer/Scheduler instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::_get_instance() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Timer::Scheduler*>("System.Threading", "Timer/Scheduler", "instance"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Timer/Scheduler instance
void System::Threading::Timer::Scheduler::_set_instance(System::Threading::Timer::Scheduler* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer/Scheduler", "instance", value));
}
// Autogenerated method: System.Threading.Timer/Scheduler..cctor
void System::Threading::Timer::Scheduler::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading", "Timer/Scheduler", ".cctor"));
}
// Autogenerated method: System.Threading.Timer/Scheduler.get_Instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::get_Instance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Timer::Scheduler*>("System.Threading", "Timer/Scheduler", "get_Instance"));
}
// Autogenerated method: System.Threading.Timer/Scheduler.Remove
void System::Threading::Timer::Scheduler::Remove(System::Threading::Timer* timer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Remove", timer));
}
// Autogenerated method: System.Threading.Timer/Scheduler.Change
void System::Threading::Timer::Scheduler::Change(System::Threading::Timer* timer, int64_t new_next_run) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Change", timer, new_next_run));
}
// Autogenerated method: System.Threading.Timer/Scheduler.FindByDueTime
int System::Threading::Timer::Scheduler::FindByDueTime(int64_t nr) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "FindByDueTime", nr));
}
// Autogenerated method: System.Threading.Timer/Scheduler.Add
void System::Threading::Timer::Scheduler::Add(System::Threading::Timer* timer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Add", timer));
}
// Autogenerated method: System.Threading.Timer/Scheduler.InternalRemove
int System::Threading::Timer::Scheduler::InternalRemove(System::Threading::Timer* timer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "InternalRemove", timer));
}
// Autogenerated method: System.Threading.Timer/Scheduler.TimerCB
void System::Threading::Timer::Scheduler::TimerCB(::CsObject* o) {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Threading", "Timer/Scheduler", "TimerCB", o));
}
// Autogenerated method: System.Threading.Timer/Scheduler.SchedulerThread
void System::Threading::Timer::Scheduler::SchedulerThread() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SchedulerThread"));
}
// Autogenerated method: System.Threading.Timer/Scheduler.ShrinkIfNeeded
void System::Threading::Timer::Scheduler::ShrinkIfNeeded(System::Collections::Generic::List_1<System::Threading::Timer*>* list, int initial) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ShrinkIfNeeded", list, initial));
}
// Autogenerated method: System.Threading.Timer/Scheduler..ctor
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::New_ctor() {
  return (Timer::Scheduler*)THROW_UNLESS(il2cpp_utils::New("System.Threading", "Timer/Scheduler"));
}
