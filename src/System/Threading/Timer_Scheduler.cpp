// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Timer/Scheduler
#include "System/Threading/Timer_Scheduler.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.Timer/Scheduler instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::_get_instance() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Timer::Scheduler*>("System.Threading", "Timer/Scheduler", "instance"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Timer/Scheduler instance
void System::Threading::Timer::Scheduler::_set_instance(System::Threading::Timer::Scheduler* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "Timer/Scheduler", "instance", value));
}
// Autogenerated method: System.Threading.Timer/Scheduler..cctor
void System::Threading::Timer::Scheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.get_Instance
System::Threading::Timer::Scheduler* System::Threading::Timer::Scheduler::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("get_Instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", "get_Instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Timer::Scheduler*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Remove
void System::Threading::Timer::Scheduler::Remove(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Change
void System::Threading::Timer::Scheduler::Change(System::Threading::Timer* timer, int64_t new_next_run) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("Change");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Change", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer, new_next_run)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer, new_next_run);
}
// Autogenerated method: System.Threading.Timer/Scheduler.FindByDueTime
int System::Threading::Timer::Scheduler::FindByDueTime(int64_t nr) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("FindByDueTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindByDueTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nr)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, nr);
}
// Autogenerated method: System.Threading.Timer/Scheduler.Add
void System::Threading::Timer::Scheduler::Add(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.InternalRemove
int System::Threading::Timer::Scheduler::InternalRemove(System::Threading::Timer* timer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("InternalRemove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRemove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, timer);
}
// Autogenerated method: System.Threading.Timer/Scheduler.TimerCB
void System::Threading::Timer::Scheduler::TimerCB(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("TimerCB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Threading", "Timer/Scheduler", "TimerCB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Threading.Timer/Scheduler.SchedulerThread
void System::Threading::Timer::Scheduler::SchedulerThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("SchedulerThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SchedulerThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Timer/Scheduler.ShrinkIfNeeded
void System::Threading::Timer::Scheduler::ShrinkIfNeeded(System::Collections::Generic::List_1<System::Threading::Timer*>* list, int initial) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::Threading").WithContext("Scheduler").WithContext("ShrinkIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShrinkIfNeeded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, initial)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, list, initial);
}
