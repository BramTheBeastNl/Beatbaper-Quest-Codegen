// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Empty
#include "System\Empty.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System\Runtime\Serialization\SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System\Runtime\Serialization\StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Empty Value
System::Empty* System::Empty::_get_Value() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Empty*>("System", "Empty", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Empty Value
void System::Empty::_set_Value(System::Empty* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Empty", "Value", value));
}
// Autogenerated method: System.Empty..cctor
void System::Empty::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System", "Empty", ".cctor"));
}
// Autogenerated method: System.Empty..ctor
System::Empty* System::Empty::New_ctor() {
  return (Empty*)THROW_UNLESS(il2cpp_utils::New("System", "Empty"));
}
// Autogenerated method: System.Empty.ToString
::Il2CppString* System::Empty::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
// Autogenerated method: System.Empty.GetObjectData
void System::Empty::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetObjectData", info, context));
}
void System::Empty::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  GetObjectData(info, context);
}
