// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Comparer
#include "System/Collections/Comparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer Default
System::Collections::Comparer* System::Collections::Comparer::_get_Default() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Comparer*>("System.Collections", "Comparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer Default
void System::Collections::Comparer::_set_Default(System::Collections::Comparer* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer DefaultInvariant
System::Collections::Comparer* System::Collections::Comparer::_get_DefaultInvariant() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Comparer*>("System.Collections", "Comparer", "DefaultInvariant"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer DefaultInvariant
void System::Collections::Comparer::_set_DefaultInvariant(System::Collections::Comparer* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "DefaultInvariant", value));
}
// Autogenerated method: System.Collections.Comparer..ctor
System::Collections::Comparer* System::Collections::Comparer::New_ctor(System::Globalization::CultureInfo* culture) {
  return (Comparer*)THROW_UNLESS(il2cpp_utils::New("System.Collections", "Comparer", culture));
}
// Autogenerated method: System.Collections.Comparer..ctor
System::Collections::Comparer* System::Collections::Comparer::New_ctor(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  return (Comparer*)THROW_UNLESS(il2cpp_utils::New("System.Collections", "Comparer", info, context));
}
// Autogenerated method: System.Collections.Comparer..cctor
void System::Collections::Comparer::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.Collections", "Comparer", ".cctor"));
}
// Autogenerated method: System.Collections.Comparer..ctor
System::Collections::Comparer* System::Collections::Comparer::New_ctor() {
  return (Comparer*)THROW_UNLESS(il2cpp_utils::New("System.Collections", "Comparer"));
}
// Autogenerated method: System.Collections.Comparer.Compare
int System::Collections::Comparer::Compare(::CsObject* a, ::CsObject* b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Compare", a, b));
}
int System::Collections::Comparer::System_Collections_IComparer_Compare(::CsObject* a, ::CsObject* b) {
  return Compare(a, b);
}
// Autogenerated method: System.Collections.Comparer.GetObjectData
void System::Collections::Comparer::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetObjectData", info, context));
}
void System::Collections::Comparer::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  GetObjectData(info, context);
}
