// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.DateTimeStyles
#include "System/Globalization/DateTimeStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeOffset MinValue
System::DateTimeOffset System::DateTimeOffset::_get_MinValue() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeOffset>("System", "DateTimeOffset", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeOffset MinValue
void System::DateTimeOffset::_set_MinValue(System::DateTimeOffset value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeOffset", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.DateTimeOffset MaxValue
System::DateTimeOffset System::DateTimeOffset::_get_MaxValue() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTimeOffset>("System", "DateTimeOffset", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.DateTimeOffset MaxValue
void System::DateTimeOffset::_set_MaxValue(System::DateTimeOffset value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "DateTimeOffset", "MaxValue", value));
}
// Autogenerated method: System.DateTimeOffset.get_UtcDateTime
System::DateTime System::DateTimeOffset::get_UtcDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("get_UtcDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_UtcDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_ClockDateTime
System::DateTime System::DateTimeOffset::get_ClockDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("get_ClockDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_ClockDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Offset
System::TimeSpan System::DateTimeOffset::get_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("get_Offset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Offset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.get_Ticks
int64_t System::DateTimeOffset::get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("get_Ticks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Ticks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.TryParseExact
bool System::DateTimeOffset::TryParseExact(::Il2CppString* input, ::Array<::Il2CppString*>* formats, System::IFormatProvider* formatProvider, System::Globalization::DateTimeStyles styles, System::DateTimeOffset& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("TryParseExact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "TryParseExact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, formats, formatProvider, styles, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, formats, formatProvider, styles, result);
}
// Autogenerated method: System.DateTimeOffset.ValidateOffset
int16_t System::DateTimeOffset::ValidateOffset(System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("ValidateOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.DateTimeOffset.ValidateDate
System::DateTime System::DateTimeOffset::ValidateDate(System::DateTime dateTime, System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("ValidateDate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateDate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, offset)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, offset);
}
// Autogenerated method: System.DateTimeOffset.ValidateStyles
System::Globalization::DateTimeStyles System::DateTimeOffset::ValidateStyles(System::Globalization::DateTimeStyles style, ::Il2CppString* parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("ValidateStyles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "ValidateStyles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(style, parameterName)));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeStyles, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, style, parameterName);
}
// Autogenerated method: System.DateTimeOffset..cctor
void System::DateTimeOffset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.System.IComparable.CompareTo
int System::DateTimeOffset::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("System.IComparable.CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.DateTimeOffset.CompareTo
int System::DateTimeOffset::CompareTo(System::DateTimeOffset other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.DateTimeOffset.Equals
bool System::DateTimeOffset::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.DateTimeOffset.Equals
bool System::DateTimeOffset::Equals(System::DateTimeOffset other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::DateTimeOffset::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sender);
}
// Autogenerated method: System.DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData
void System::DateTimeOffset::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, info, context);
}
// Autogenerated method: System.DateTimeOffset.GetHashCode
int System::DateTimeOffset::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.ToString
::Il2CppString* System::DateTimeOffset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.DateTimeOffset.ToString
::Il2CppString* System::DateTimeOffset::ToString(::Il2CppString* format, System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, formatProvider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, formatProvider);
}
// Autogenerated method: System.DateTimeOffset.op_Subtraction
System::TimeSpan System::operator-(const System::DateTimeOffset& left, const System::DateTimeOffset& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.DateTimeOffset.op_Equality
bool System::operator ==(const System::DateTimeOffset& left, const System::DateTimeOffset& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DateTimeOffset").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DateTimeOffset", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
