// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.MonoIO
#include "System/IO/MonoIO.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr InvalidHandle
System::IntPtr System::IO::MonoIO::_get_InvalidHandle() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System.IO", "MonoIO", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr InvalidHandle
void System::IO::MonoIO::_set_InvalidHandle(System::IntPtr value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dump_handles
bool System::IO::MonoIO::_get_dump_handles() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("_get_dump_handles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "MonoIO", "dump_handles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dump_handles
void System::IO::MonoIO::_set_dump_handles(bool value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("_set_dump_handles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "dump_handles", value));
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(error)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(::Il2CppString* path, System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetCurrentDirectory
::Il2CppString* System::IO::MonoIO::GetCurrentDirectory(System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(error)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("DeleteFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("DeleteFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppChar* sourceFileName, ::Il2CppChar* destinationFileName, ::Il2CppChar* destinationBackupFileName, bool ignoreMetadataErrors, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error);
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName, bool ignoreMetadataErrors, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppChar* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::Runtime::InteropServices::SafeHandle* safeHandle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error);
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppChar* pathWithPattern, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pathWithPattern, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppString* pathWithPattern, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pathWithPattern, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindNextFile
bool System::IO::MonoIO::FindNextFile(System::IntPtr hnd, ::Il2CppString*& fileName, int& fileAttr, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("FindNextFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindNextFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hnd, fileName, fileAttr, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd, fileName, fileAttr, error);
}
// Autogenerated method: System.IO.MonoIO.FindCloseFile
bool System::IO::MonoIO::FindCloseFile(System::IntPtr hnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("FindCloseFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindCloseFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hnd)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd);
}
// Autogenerated method: System.IO.MonoIO.ExistsFile
bool System::IO::MonoIO::ExistsFile(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("ExistsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ExistsDirectory
bool System::IO::MonoIO::ExistsDirectory(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("ExistsDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.ExistsSymlink
bool System::IO::MonoIO::ExistsSymlink(::Il2CppString* path, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("ExistsSymlink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsSymlink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppChar* path, System::IO::MonoIOStat& stat, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileStat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, stat, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, stat, error);
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppString* path, System::IO::MonoIOStat& stat, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetFileStat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, stat, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, stat, error);
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppChar* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, mode, access, share, options, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, error);
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppString* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filename, mode, access, share, options, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, error);
}
// Autogenerated method: System.IO.MonoIO.Close
bool System::IO::MonoIO::Close(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::IntPtr handle, ::Array<uint8_t>* dest, int dest_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, dest, dest_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, dest, dest_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::Runtime::InteropServices::SafeHandle* safeHandle, ::Array<uint8_t>* dest, int dest_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, dest, dest_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, dest, dest_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::IntPtr handle, ::Array<uint8_t>*& src, int src_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, src, src_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, src, src_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::Runtime::InteropServices::SafeHandle* safeHandle, ::Array<uint8_t>* src, int src_offset, int count, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, src, src_offset, count, error)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, src, src_offset, count, error);
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::IntPtr handle, int64_t offset, System::IO::SeekOrigin origin, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, offset, origin, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, offset, origin, error);
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t offset, System::IO::SeekOrigin origin, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, offset, origin, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, offset, origin, error);
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::IntPtr handle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, error);
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("GetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, error)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error);
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::IntPtr handle, int64_t length, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, length, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, length, error);
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t length, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(safeHandle, length, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, length, error);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleOutput
System::IntPtr System::IO::MonoIO::get_ConsoleOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_ConsoleOutput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleOutput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleInput
System::IntPtr System::IO::MonoIO::get_ConsoleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_ConsoleInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleError
System::IntPtr System::IO::MonoIO::get_ConsoleError() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_ConsoleError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.DuplicateHandle
bool System::IO::MonoIO::DuplicateHandle(System::IntPtr source_process_handle, System::IntPtr source_handle, System::IntPtr target_process_handle, System::IntPtr& target_handle, int access, int inherit, int options, System::IO::MonoIOError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source_process_handle, source_handle, target_process_handle, target_handle, access, inherit, options, error)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source_process_handle, source_handle, target_process_handle, target_handle, access, inherit, options, error);
}
// Autogenerated method: System.IO.MonoIO.get_VolumeSeparatorChar
::Il2CppChar System::IO::MonoIO::get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_VolumeSeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_VolumeSeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_DirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_DirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_DirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_AltDirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_AltDirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_AltDirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_PathSeparator
::Il2CppChar System::IO::MonoIO::get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("get_PathSeparator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_PathSeparator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.DumpHandles
void System::IO::MonoIO::DumpHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("DumpHandles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DumpHandles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.RemapPath
bool System::IO::MonoIO::RemapPath(::Il2CppString* path, ::Il2CppString*& newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext("RemapPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemapPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, newPath)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, newPath);
}
// Autogenerated method: System.IO.MonoIO..cctor
void System::IO::MonoIO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("MonoIO").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "MonoIO", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
