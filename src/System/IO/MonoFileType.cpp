// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Unknown
System::IO::MonoFileType System::IO::MonoFileType::_get_Unknown() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Unknown
void System::IO::MonoFileType::_set_Unknown(System::IO::MonoFileType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Disk
System::IO::MonoFileType System::IO::MonoFileType::_get_Disk() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Disk"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Disk
void System::IO::MonoFileType::_set_Disk(System::IO::MonoFileType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Disk", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Char
System::IO::MonoFileType System::IO::MonoFileType::_get_Char() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Char
void System::IO::MonoFileType::_set_Char(System::IO::MonoFileType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Pipe
System::IO::MonoFileType System::IO::MonoFileType::_get_Pipe() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Pipe
void System::IO::MonoFileType::_set_Pipe(System::IO::MonoFileType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Remote
System::IO::MonoFileType System::IO::MonoFileType::_get_Remote() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Remote
void System::IO::MonoFileType::_set_Remote(System::IO::MonoFileType value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Remote", value));
}
