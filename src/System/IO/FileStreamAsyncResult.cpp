// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStreamAsyncResult
#include "System/IO/FileStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStreamAsyncResult.CBWrapper
void System::IO::FileStreamAsyncResult::CBWrapper(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("FileStreamAsyncResult").WithContext("CBWrapper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO", "FileStreamAsyncResult", "CBWrapper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ares)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ares);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncState
::Il2CppObject* System::IO::FileStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("FileStreamAsyncResult").WithContext("get_AsyncState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::IO::FileStreamAsyncResult::System_IAsyncResult_get_AsyncState() {
  return System::IO::FileStreamAsyncResult::get_AsyncState();
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_CompletedSynchronously
bool System::IO::FileStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("FileStreamAsyncResult").WithContext("get_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::IO::FileStreamAsyncResult::System_IAsyncResult_get_CompletedSynchronously() {
  return System::IO::FileStreamAsyncResult::get_CompletedSynchronously();
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("FileStreamAsyncResult").WithContext("get_AsyncWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::System_IAsyncResult_get_AsyncWaitHandle() {
  return System::IO::FileStreamAsyncResult::get_AsyncWaitHandle();
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_IsCompleted
bool System::IO::FileStreamAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO").WithContext("FileStreamAsyncResult").WithContext("get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::IO::FileStreamAsyncResult::System_IAsyncResult_get_IsCompleted() {
  return System::IO::FileStreamAsyncResult::get_IsCompleted();
}
