// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle
#include "System/IO/Compression/DeflateStreamNative_SafeDeflateStreamHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle.get_IsInvalid
bool System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("SafeDeflateStreamHandle").WithContext("get_IsInvalid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_IsInvalid", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle..ctor
System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle* System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("SafeDeflateStreamHandle").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<DeflateStreamNative::SafeDeflateStreamHandle*>());
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative/SafeDeflateStreamHandle.ReleaseHandle
bool System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("SafeDeflateStreamHandle").WithContext("ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "ReleaseHandle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
