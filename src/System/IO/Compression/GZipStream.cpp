// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.GZipStream
#include "System/IO/Compression/GZipStream.hpp"
// Including type: System.IO.Compression.DeflateStream
#include "System/IO/Compression/DeflateStream.hpp"
// Including type: System.IO.Compression.CompressionMode
#include "System/IO/Compression/CompressionMode.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.GZipStream..ctor
System::IO::Compression::GZipStream* System::IO::Compression::GZipStream::New_ctor(System::IO::Stream* stream, System::IO::Compression::CompressionMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<GZipStream*>(stream, mode));
}
// Autogenerated method: System.IO.Compression.GZipStream..ctor
System::IO::Compression::GZipStream* System::IO::Compression::GZipStream::New_ctor(System::IO::Stream* stream, System::IO::Compression::CompressionMode mode, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<GZipStream*>(stream, mode, leaveOpen));
}
// Autogenerated method: System.IO.Compression.GZipStream.CheckDeflateStream
void System::IO::Compression::GZipStream::CheckDeflateStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("CheckDeflateStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "CheckDeflateStream", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.ThrowStreamClosedException
void System::IO::Compression::GZipStream::ThrowStreamClosedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("ThrowStreamClosedException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.IO.Compression", "GZipStream", il2cpp_utils::NoArgClass<void>(), "ThrowStreamClosedException", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanRead
bool System::IO::Compression::GZipStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("get_CanRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_CanRead", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanWrite
bool System::IO::Compression::GZipStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_CanWrite", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanSeek
bool System::IO::Compression::GZipStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("get_CanSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_CanSeek", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Length
int64_t System::IO::Compression::GZipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int64_t>(), "get_Length", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Position
int64_t System::IO::Compression::GZipStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("get_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int64_t>(), "get_Position", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.set_Position
void System::IO::Compression::GZipStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("set_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_Position", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.GZipStream.Flush
void System::IO::Compression::GZipStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Flush", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.Seek
int64_t System::IO::Compression::GZipStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int64_t>(), "Seek", {}, ::il2cpp_utils::ExtractTypes(offset, origin)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.GZipStream.SetLength
void System::IO::Compression::GZipStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetLength", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadByte
int System::IO::Compression::GZipStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("ReadByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "ReadByte", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginRead
System::IAsyncResult* System::IO::Compression::GZipStream::BeginRead(::Array<uint8_t>* array, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("BeginRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginRead", {}, ::il2cpp_utils::ExtractTypes(array, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.GZipStream.EndRead
int System::IO::Compression::GZipStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("EndRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "EndRead", {}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.GZipStream.Read
int System::IO::Compression::GZipStream::Read(::Array<uint8_t>* array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "Read", {}, ::il2cpp_utils::ExtractTypes(array, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginWrite
System::IAsyncResult* System::IO::Compression::GZipStream::BeginWrite(::Array<uint8_t>* array, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("BeginWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::IAsyncResult*>(), "BeginWrite", {}, ::il2cpp_utils::ExtractTypes(array, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.GZipStream.EndWrite
void System::IO::Compression::GZipStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("EndWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "EndWrite", {}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.GZipStream.Write
void System::IO::Compression::GZipStream::Write(::Array<uint8_t>* array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Write", {}, ::il2cpp_utils::ExtractTypes(array, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.GZipStream.Dispose
void System::IO::Compression::GZipStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::Compression::GZipStream::ReadAsync(::Array<uint8_t>* array, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("ReadAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<int>*>(), "ReadAsync", {}, ::il2cpp_utils::ExtractTypes(array, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.GZipStream.WriteAsync
System::Threading::Tasks::Task* System::IO::Compression::GZipStream::WriteAsync(::Array<uint8_t>* array, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("WriteAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task*>(), "WriteAsync", {}, ::il2cpp_utils::ExtractTypes(array, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.GZipStream.CopyToAsync
System::Threading::Tasks::Task* System::IO::Compression::GZipStream::CopyToAsync(System::IO::Stream* destination, int bufferSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System::IO::Compression").WithContext("GZipStream").WithContext("CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task*>(), "CopyToAsync", {}, ::il2cpp_utils::ExtractTypes(destination, bufferSize, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, destination, bufferSize, cancellationToken);
}
