// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.GZipStream
#include "System/IO/Compression/GZipStream.hpp"
// Including type: System.IO.Compression.DeflateStream
#include "System/IO/Compression/DeflateStream.hpp"
// Including type: System.IO.Compression.CompressionMode
#include "System/IO/Compression/CompressionMode.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.GZipStream..ctor
System::IO::Compression::GZipStream* System::IO::Compression::GZipStream::New_ctor(System::IO::Stream* stream, System::IO::Compression::CompressionMode mode) {
  return THROW_UNLESS(il2cpp_utils::New<GZipStream*>(stream, mode));
}
// Autogenerated method: System.IO.Compression.GZipStream..ctor
System::IO::Compression::GZipStream* System::IO::Compression::GZipStream::New_ctor(System::IO::Stream* stream, System::IO::Compression::CompressionMode mode, bool leaveOpen) {
  return THROW_UNLESS(il2cpp_utils::New<GZipStream*>(stream, mode, leaveOpen));
}
// Autogenerated method: System.IO.Compression.GZipStream.CheckDeflateStream
void System::IO::Compression::GZipStream::CheckDeflateStream() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CheckDeflateStream"));
}
// Autogenerated method: System.IO.Compression.GZipStream.ThrowStreamClosedException
void System::IO::Compression::GZipStream::ThrowStreamClosedException() {
  THROW_UNLESS(il2cpp_utils::RunMethod("System.IO.Compression", "GZipStream", "ThrowStreamClosedException"));
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanRead
bool System::IO::Compression::GZipStream::get_CanRead() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanRead"));
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanWrite
bool System::IO::Compression::GZipStream::get_CanWrite() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanWrite"));
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanSeek
bool System::IO::Compression::GZipStream::get_CanSeek() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_CanSeek"));
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Length
int64_t System::IO::Compression::GZipStream::get_Length() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Length"));
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Position
int64_t System::IO::Compression::GZipStream::get_Position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "get_Position"));
}
// Autogenerated method: System.IO.Compression.GZipStream.set_Position
void System::IO::Compression::GZipStream::set_Position(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_Position", value));
}
// Autogenerated method: System.IO.Compression.GZipStream.Flush
void System::IO::Compression::GZipStream::Flush() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Flush"));
}
// Autogenerated method: System.IO.Compression.GZipStream.Seek
int64_t System::IO::Compression::GZipStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int64_t>(this, "Seek", offset, origin));
}
// Autogenerated method: System.IO.Compression.GZipStream.SetLength
void System::IO::Compression::GZipStream::SetLength(int64_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLength", value));
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadByte
int System::IO::Compression::GZipStream::ReadByte() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "ReadByte"));
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginRead
System::IAsyncResult* System::IO::Compression::GZipStream::BeginRead(::Array<uint8_t>* array, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginRead", array, offset, count, asyncCallback, asyncState));
}
// Autogenerated method: System.IO.Compression.GZipStream.EndRead
int System::IO::Compression::GZipStream::EndRead(System::IAsyncResult* asyncResult) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "EndRead", asyncResult));
}
// Autogenerated method: System.IO.Compression.GZipStream.Read
int System::IO::Compression::GZipStream::Read(::Array<uint8_t>* array, int offset, int count) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Read", array, offset, count));
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginWrite
System::IAsyncResult* System::IO::Compression::GZipStream::BeginWrite(::Array<uint8_t>* array, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginWrite", array, offset, count, asyncCallback, asyncState));
}
// Autogenerated method: System.IO.Compression.GZipStream.EndWrite
void System::IO::Compression::GZipStream::EndWrite(System::IAsyncResult* asyncResult) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndWrite", asyncResult));
}
// Autogenerated method: System.IO.Compression.GZipStream.Write
void System::IO::Compression::GZipStream::Write(::Array<uint8_t>* array, int offset, int count) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", array, offset, count));
}
// Autogenerated method: System.IO.Compression.GZipStream.Dispose
void System::IO::Compression::GZipStream::Dispose(bool disposing) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose", disposing));
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::Compression::GZipStream::ReadAsync(::Array<uint8_t>* array, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<int>*>(this, "ReadAsync", array, offset, count, cancellationToken));
}
// Autogenerated method: System.IO.Compression.GZipStream.WriteAsync
System::Threading::Tasks::Task* System::IO::Compression::GZipStream::WriteAsync(::Array<uint8_t>* array, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "WriteAsync", array, offset, count, cancellationToken));
}
// Autogenerated method: System.IO.Compression.GZipStream.CopyToAsync
System::Threading::Tasks::Task* System::IO::Compression::GZipStream::CopyToAsync(System::IO::Stream* destination, int bufferSize, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "CopyToAsync", destination, bufferSize, cancellationToken));
}
