// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAchievementProgressList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAchievementProgressList").WithContext("GetAchievementProgressList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAchievementUpdate").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAchievementUpdate").WithContext("GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithApplicationVersion").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithApplicationVersion").WithContext("GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetDetails").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetDetails").WithContext("GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetDetailsList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetDetailsList").WithContext("GetAssetDetailsList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDeleteResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDeleteResult").WithContext("GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadCancelResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadCancelResult").WithContext("GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadResult").WithContext("GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadUpdate").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithAssetFileDownloadUpdate").WithContext("GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationFinalized
#include "Oculus/Platform/MessageWithCalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetDataFromMessage
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationFinalized").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetCalApplicationFinalized
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationFinalized").WithContext("GetCalApplicationFinalized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationProposed
#include "Oculus/Platform/MessageWithCalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetDataFromMessage
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationProposed").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetCalApplicationProposed
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationProposed").WithContext("GetCalApplicationProposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationSuggestionList
#include "Oculus/Platform/MessageWithCalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetDataFromMessage
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationSuggestionList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetCalApplicationSuggestionList
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCalApplicationSuggestionList").WithContext("GetCalApplicationSuggestionList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageConflictMetadata
#include "Oculus/Platform/MessageWithCloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetDataFromMessage
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageConflictMetadata").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetCloudStorageConflictMetadata
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageConflictMetadata").WithContext("GetCloudStorageConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageData
#include "Oculus/Platform/MessageWithCloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetDataFromMessage
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageData").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetCloudStorageData
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageData").WithContext("GetCloudStorageData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCloudStorageData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal
#include "Oculus/Platform/MessageWithCloudStorageMetadataUnderLocal.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageMetadataUnderLocal").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetCloudStorageMetadata
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageMetadataUnderLocal").WithContext("GetCloudStorageMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataList
#include "Oculus/Platform/MessageWithCloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageMetadataList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetCloudStorageMetadataList
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageMetadataList").WithContext("GetCloudStorageMetadataList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadataList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageUpdateResponse
#include "Oculus/Platform/MessageWithCloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetDataFromMessage
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageUpdateResponse").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetCloudStorageUpdateResponse
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithCloudStorageUpdateResponse").WithContext("GetCloudStorageUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDestinationList
#include "Oculus/Platform/MessageWithDestinationList.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDataFromMessage
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithDestinationList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDestinationList
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithDestinationList").WithContext("GetDestinationList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDestinationList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInstalledApplicationList
#include "Oculus/Platform/MessageWithInstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetDataFromMessage
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithInstalledApplicationList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetInstalledApplicationList
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithInstalledApplicationList").WithContext("GetInstalledApplicationList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInstalledApplicationList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchBlockFlowResult
#include "Oculus/Platform/MessageWithLaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchBlockFlowResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetLaunchBlockFlowResult
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchBlockFlowResult").WithContext("GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult
#include "Oculus/Platform/MessageWithLaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchFriendRequestFlowResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetLaunchFriendRequestFlowResult
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchFriendRequestFlowResult").WithContext("GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchReportFlowResult
#include "Oculus/Platform/MessageWithLaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchReportFlowResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetLaunchReportFlowResult
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchReportFlowResult").WithContext("GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchUnblockFlowResult
#include "Oculus/Platform/MessageWithLaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchUnblockFlowResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetLaunchUnblockFlowResult
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLaunchUnblockFlowResult").WithContext("GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardEntryList
#include "Oculus/Platform/MessageWithLeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetDataFromMessage
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLeaderboardEntryList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetLeaderboardEntryList
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLeaderboardEntryList").WithContext("GetLeaderboardEntryList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLeaderboardEntryList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLinkedAccountList
#include "Oculus/Platform/MessageWithLinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetDataFromMessage
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLinkedAccountList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetLinkedAccountList
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLinkedAccountList").WithContext("GetLinkedAccountList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLinkedAccountList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingApplicationStatus
#include "Oculus/Platform/MessageWithLivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingApplicationStatus").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetLivestreamingApplicationStatus
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingApplicationStatus").WithContext("GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStartResult
#include "Oculus/Platform/MessageWithLivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingStartResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetLivestreamingStartResult
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingStartResult").WithContext("GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStatus
#include "Oculus/Platform/MessageWithLivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingStatus").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetLivestreamingStatus
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingStatus").WithContext("GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingVideoStats
#include "Oculus/Platform/MessageWithLivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetDataFromMessage
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingVideoStats").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingVideoStats.GetLivestreamingVideoStats
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::MessageWithLivestreamingVideoStats::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLivestreamingVideoStats").WithContext("GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingAdminSnapshot
#include "Oculus/Platform/MessageWithMatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetDataFromMessage
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingAdminSnapshot").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingAdminSnapshot.GetMatchmakingAdminSnapshot
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::MessageWithMatchmakingAdminSnapshot::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingAdminSnapshot").WithContext("GetMatchmakingAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResult
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingEnqueueResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingEnqueueResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingEnqueueResult").WithContext("GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/MessageWithMatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetDataFromMessage
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingEnqueueResultAndRoom").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingEnqueueResultAndRoom.GetMatchmakingEnqueueResultAndRoom
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::MessageWithMatchmakingEnqueueResultAndRoom::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingEnqueueResultAndRoom").WithContext("GetMatchmakingEnqueueResultAndRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats
#include "Oculus/Platform/MessageWithMatchmakingStatsUnderMatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetDataFromMessage
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingStatsUnderMatchmakingStats").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingStatsUnderMatchmakingStats.GetMatchmakingStats
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::MessageWithMatchmakingStatsUnderMatchmakingStats::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingStatsUnderMatchmakingStats").WithContext("GetMatchmakingStats");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncConnection
#include "Oculus/Platform/MessageWithNetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetDataFromMessage
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncConnection").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncConnection.GetNetSyncConnection
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::MessageWithNetSyncConnection::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncConnection").WithContext("GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionList
#include "Oculus/Platform/MessageWithNetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSessionList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionList.GetNetSyncSessionList
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::MessageWithNetSyncSessionList::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSessionList").WithContext("GetNetSyncSessionList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNetSyncSessionList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification
#include "Oculus/Platform/MessageWithNetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetDataFromMessage
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSessionsChangedNotification").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSessionsChangedNotification.GetNetSyncSessionsChangedNotification
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::MessageWithNetSyncSessionsChangedNotification::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSessionsChangedNotification").WithContext("GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult
#include "Oculus/Platform/MessageWithNetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetDataFromMessage
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSetSessionPropertyResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetSyncSetSessionPropertyResult.GetNetSyncSetSessionPropertyResult
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::MessageWithNetSyncSetSessionPropertyResult::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetSyncSetSessionPropertyResult").WithContext("GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithOrgScopedID
#include "Oculus/Platform/MessageWithOrgScopedID.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetDataFromMessage
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithOrgScopedID").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithOrgScopedID.GetOrgScopedID
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::MessageWithOrgScopedID::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithOrgScopedID").WithContext("GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithParty
#include "Oculus/Platform/MessageWithParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithParty").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithParty").WithContext("GetParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUnderCurrentParty
#include "Oculus/Platform/MessageWithPartyUnderCurrentParty.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetDataFromMessage
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyUnderCurrentParty").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUnderCurrentParty.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::MessageWithPartyUnderCurrentParty::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyUnderCurrentParty").WithContext("GetParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyID
#include "Oculus/Platform/MessageWithPartyID.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetDataFromMessage
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyID").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyID.GetPartyID
Oculus::Platform::Models::PartyID* Oculus::Platform::MessageWithPartyID::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyID").WithContext("GetPartyID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPartyID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPartyUpdateNotification
#include "Oculus/Platform/MessageWithPartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetDataFromMessage
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyUpdateNotification").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPartyUpdateNotification.GetPartyUpdateNotification
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::MessageWithPartyUpdateNotification::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPartyUpdateNotification").WithContext("GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPidList
#include "Oculus/Platform/MessageWithPidList.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetDataFromMessage
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPidList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPidList.GetPidList
Oculus::Platform::Models::PidList* Oculus::Platform::MessageWithPidList::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPidList").WithContext("GetPidList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPidList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithProductList
#include "Oculus/Platform/MessageWithProductList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetDataFromMessage
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithProductList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithProductList.GetProductList
Oculus::Platform::Models::ProductList* Oculus::Platform::MessageWithProductList::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithProductList").WithContext("GetProductList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProductList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchase
#include "Oculus/Platform/MessageWithPurchase.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetDataFromMessage
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPurchase").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchase.GetPurchase
Oculus::Platform::Models::Purchase* Oculus::Platform::MessageWithPurchase::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPurchase").WithContext("GetPurchase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPurchaseList
#include "Oculus/Platform/MessageWithPurchaseList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetDataFromMessage
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPurchaseList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPurchaseList.GetPurchaseList
Oculus::Platform::Models::PurchaseList* Oculus::Platform::MessageWithPurchaseList::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPurchaseList").WithContext("GetPurchaseList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPurchaseList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoom
#include "Oculus/Platform/MessageWithRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoom").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoom").WithContext("GetRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderCurrentRoom
#include "Oculus/Platform/MessageWithRoomUnderCurrentRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomUnderCurrentRoom").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderCurrentRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderCurrentRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomUnderCurrentRoom").WithContext("GetRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomUnderViewerRoom
#include "Oculus/Platform/MessageWithRoomUnderViewerRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomUnderViewerRoom").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomUnderViewerRoom.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithRoomUnderViewerRoom::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomUnderViewerRoom").WithContext("GetRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomList
#include "Oculus/Platform/MessageWithRoomList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetDataFromMessage
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomList.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithRoomList::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomList").WithContext("GetRoomList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotification
#include "Oculus/Platform/MessageWithRoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomInviteNotification").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotification.GetRoomInviteNotification
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::MessageWithRoomInviteNotification::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomInviteNotification").WithContext("GetRoomInviteNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithRoomInviteNotificationList
#include "Oculus/Platform/MessageWithRoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetDataFromMessage
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomInviteNotificationList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithRoomInviteNotificationList.GetRoomInviteNotificationList
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::MessageWithRoomInviteNotificationList::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithRoomInviteNotificationList").WithContext("GetRoomInviteNotificationList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSdkAccountList
#include "Oculus/Platform/MessageWithSdkAccountList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetDataFromMessage
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSdkAccountList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSdkAccountList.GetSdkAccountList
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::MessageWithSdkAccountList::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSdkAccountList").WithContext("GetSdkAccountList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSdkAccountList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithShareMediaResult
#include "Oculus/Platform/MessageWithShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetDataFromMessage
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithShareMediaResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithShareMediaResult.GetShareMediaResult
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::MessageWithShareMediaResult::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithShareMediaResult").WithContext("GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetShareMediaResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MessageWithString
#include "Oculus/Platform/MessageWithString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithString.GetDataFromMessage
::Il2CppString* Oculus::Platform::MessageWithString::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithString").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithString.GetString
::Il2CppString* Oculus::Platform::MessageWithString::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithString").WithContext("GetString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemPermission
#include "Oculus/Platform/MessageWithSystemPermission.hpp"
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetDataFromMessage
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSystemPermission").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemPermission.GetSystemPermission
Oculus::Platform::Models::SystemPermission* Oculus::Platform::MessageWithSystemPermission::GetSystemPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSystemPermission").WithContext("GetSystemPermission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSystemPermission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithSystemVoipState
#include "Oculus/Platform/MessageWithSystemVoipState.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetDataFromMessage
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSystemVoipState").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithSystemVoipState.GetSystemVoipState
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::MessageWithSystemVoipState::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithSystemVoipState").WithContext("GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSystemVoipState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUser
#include "Oculus/Platform/MessageWithUser.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUser.GetDataFromMessage
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUser").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUser.GetUser
Oculus::Platform::Models::User* Oculus::Platform::MessageWithUser::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUser").WithContext("GetUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserAndRoomList
#include "Oculus/Platform/MessageWithUserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetDataFromMessage
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserAndRoomList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserAndRoomList.GetUserAndRoomList
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::MessageWithUserAndRoomList::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserAndRoomList").WithContext("GetUserAndRoomList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUserAndRoomList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserList
#include "Oculus/Platform/MessageWithUserList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetDataFromMessage
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserList").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserList.GetUserList
Oculus::Platform::Models::UserList* Oculus::Platform::MessageWithUserList::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserList").WithContext("GetUserList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUserList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserProof
#include "Oculus/Platform/MessageWithUserProof.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetDataFromMessage
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserProof").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserProof.GetUserProof
Oculus::Platform::Models::UserProof* Oculus::Platform::MessageWithUserProof::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserProof").WithContext("GetUserProof");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUserProof", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithUserReportID
#include "Oculus/Platform/MessageWithUserReportID.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetDataFromMessage
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserReportID").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithUserReportID.GetUserReportID
Oculus::Platform::Models::UserReportID* Oculus::Platform::MessageWithUserReportID::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithUserReportID").WithContext("GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUserReportID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithNetworkingPeer
#include "Oculus/Platform/MessageWithNetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetDataFromMessage
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetworkingPeer").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithNetworkingPeer.GetNetworkingPeer
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::MessageWithNetworkingPeer::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithNetworkingPeer").WithContext("GetNetworkingPeer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPingResult
#include "Oculus/Platform/MessageWithPingResult.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetDataFromMessage
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPingResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPingResult.GetPingResult
Oculus::Platform::Models::PingResult* Oculus::Platform::MessageWithPingResult::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPingResult").WithContext("GetPingResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPingResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardDidUpdate
#include "Oculus/Platform/MessageWithLeaderboardDidUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetDataFromMessage
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLeaderboardDidUpdate").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardDidUpdate.GetLeaderboardDidUpdate
bool Oculus::Platform::MessageWithLeaderboardDidUpdate::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithLeaderboardDidUpdate").WithContext("GetLeaderboardDidUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingNotification
#include "Oculus/Platform/MessageWithMatchmakingNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetDataFromMessage
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingNotification").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingNotification.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::MessageWithMatchmakingNotification::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingNotification").WithContext("GetRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithMatchmakingBrowseResult
#include "Oculus/Platform/MessageWithMatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetDataFromMessage
Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingBrowseResult").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingBrowseResult").WithContext("GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MessageWithMatchmakingBrowseResult.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::MessageWithMatchmakingBrowseResult::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithMatchmakingBrowseResult").WithContext("GetRoomList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithHttpTransferUpdate
#include "Oculus/Platform/MessageWithHttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetDataFromMessage
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithHttpTransferUpdate").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithHttpTransferUpdate.GetHttpTransferUpdate
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::MessageWithHttpTransferUpdate::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithHttpTransferUpdate").WithContext("GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithPlatformInitialize
#include "Oculus/Platform/MessageWithPlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetDataFromMessage
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPlatformInitialize").WithContext("GetDataFromMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c_message)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithPlatformInitialize.GetPlatformInitialize
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::MessageWithPlatformInitialize::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("MessageWithPlatformInitialize").WithContext("GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAE6E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Unknown
void Oculus::Platform::NetSyncConnectionStatus::_set_Unknown(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAE71C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connecting
void Oculus::Platform::NetSyncConnectionStatus::_set_Connecting(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connecting", value));
}
// [DescriptionAttribute] Offset: 0xDAE754
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Disconnected
void Oculus::Platform::NetSyncConnectionStatus::_set_Disconnected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Disconnected", value));
}
// [DescriptionAttribute] Offset: 0xDAE78C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::NetSyncConnectionStatus::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncConnectionStatus>("Oculus.Platform", "NetSyncConnectionStatus", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncConnectionStatus Connected
void Oculus::Platform::NetSyncConnectionStatus::_set_Connected(Oculus::Platform::NetSyncConnectionStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncConnectionStatus").WithContext("_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncConnectionStatus", "Connected", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAE7C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Unknown
void Oculus::Platform::NetSyncDisconnectReason::_set_Unknown(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAE7FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_LocalTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_get_LocalTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason LocalTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_LocalTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_set_LocalTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "LocalTerminated", value));
}
// [DescriptionAttribute] Offset: 0xDAE834
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_ServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_get_ServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason ServerTerminated
void Oculus::Platform::NetSyncDisconnectReason::_set_ServerTerminated(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_set_ServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "ServerTerminated", value));
}
// [DescriptionAttribute] Offset: 0xDAE86C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Failed
void Oculus::Platform::NetSyncDisconnectReason::_set_Failed(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Failed", value));
}
// [DescriptionAttribute] Offset: 0xDAE8A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::NetSyncDisconnectReason::_get_Lost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_get_Lost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncDisconnectReason>("Oculus.Platform", "NetSyncDisconnectReason", "Lost"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncDisconnectReason Lost
void Oculus::Platform::NetSyncDisconnectReason::_set_Lost(Oculus::Platform::NetSyncDisconnectReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncDisconnectReason").WithContext("_set_Lost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncDisconnectReason", "Lost", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.NetSyncOptions
#include "Oculus/Platform/NetSyncOptions.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipGroup
void Oculus::Platform::NetSyncOptions::SetVoipGroup(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncOptions").WithContext("SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVoipGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetVoipStreamDefault
void Oculus::Platform::NetSyncOptions::SetVoipStreamDefault(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncOptions").WithContext("SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.SetZoneId
void Oculus::Platform::NetSyncOptions::SetZoneId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncOptions").WithContext("SetZoneId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetZoneId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.NetSyncOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::NetSyncOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.NetSyncOptions.Finalize
void Oculus::Platform::NetSyncOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncOptions").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAE8DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Unknown
void Oculus::Platform::NetSyncVoipMicSource::_set_Unknown(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAE914
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource None
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource None
void Oculus::Platform::NetSyncVoipMicSource::_set_None(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "None", value));
}
// [DescriptionAttribute] Offset: 0xDAE94C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
Oculus::Platform::NetSyncVoipMicSource Oculus::Platform::NetSyncVoipMicSource::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipMicSource>("Oculus.Platform", "NetSyncVoipMicSource", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipMicSource Internal
void Oculus::Platform::NetSyncVoipMicSource::_set_Internal(Oculus::Platform::NetSyncVoipMicSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipMicSource").WithContext("_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipMicSource", "Internal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAE984
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Unknown
void Oculus::Platform::NetSyncVoipStreamMode::_set_Unknown(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAE9BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Ambisonic() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_get_Ambisonic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Ambisonic
void Oculus::Platform::NetSyncVoipStreamMode::_set_Ambisonic(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_set_Ambisonic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Ambisonic", value));
}
// [DescriptionAttribute] Offset: 0xDAE9F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
Oculus::Platform::NetSyncVoipStreamMode Oculus::Platform::NetSyncVoipStreamMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::NetSyncVoipStreamMode>("Oculus.Platform", "NetSyncVoipStreamMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.NetSyncVoipStreamMode Mono
void Oculus::Platform::NetSyncVoipStreamMode::_set_Mono(Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("NetSyncVoipStreamMode").WithContext("_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "NetSyncVoipStreamMode", "Mono", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Packet.ReadBytes
uint64_t Oculus::Platform::Packet::ReadBytes(::Array<uint8_t>* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("ReadBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(destination)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, destination);
}
// Autogenerated method: Oculus.Platform.Packet.get_SenderID
uint64_t Oculus::Platform::Packet::get_SenderID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_SenderID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SenderID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Size
uint64_t Oculus::Platform::Packet::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_Size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.get_Policy
Oculus::Platform::SendPolicy Oculus::Platform::Packet::get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("get_Policy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Policy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Finalize
void Oculus::Platform::Packet::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Packet.Dispose
void Oculus::Platform::Packet::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Packet").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Oculus::Platform::Packet::System_IDisposable_Dispose() {
  Oculus::Platform::Packet::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAEA2C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Unknown
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Unknown
void Oculus::Platform::PartyUpdateAction::_set_Unknown(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAEA64
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Join
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_get_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Join
void Oculus::Platform::PartyUpdateAction::_set_Join(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_set_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Join", value));
}
// [DescriptionAttribute] Offset: 0xDAEA9C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Leave
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_get_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Leave
void Oculus::Platform::PartyUpdateAction::_set_Leave(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_set_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Leave", value));
}
// [DescriptionAttribute] Offset: 0xDAEAD4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Invite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Invite
void Oculus::Platform::PartyUpdateAction::_set_Invite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Invite", value));
}
// [DescriptionAttribute] Offset: 0xDAEB0C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PartyUpdateAction Uninvite
Oculus::Platform::PartyUpdateAction Oculus::Platform::PartyUpdateAction::_get_Uninvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_get_Uninvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PartyUpdateAction>("Oculus.Platform", "PartyUpdateAction", "Uninvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PartyUpdateAction Uninvite
void Oculus::Platform::PartyUpdateAction::_set_Uninvite(Oculus::Platform::PartyUpdateAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PartyUpdateAction").WithContext("_set_Uninvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PartyUpdateAction", "Uninvite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAEB44
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Unknown
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Unknown
void Oculus::Platform::PeerConnectionState::_set_Unknown(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAEB7C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Connected
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Connected
void Oculus::Platform::PeerConnectionState::_set_Connected(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Connected", value));
}
// [DescriptionAttribute] Offset: 0xDAEBB4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Timeout
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Timeout
void Oculus::Platform::PeerConnectionState::_set_Timeout(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Timeout", value));
}
// [DescriptionAttribute] Offset: 0xDAEBEC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PeerConnectionState Closed
Oculus::Platform::PeerConnectionState Oculus::Platform::PeerConnectionState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PeerConnectionState>("Oculus.Platform", "PeerConnectionState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PeerConnectionState Closed
void Oculus::Platform::PeerConnectionState::_set_Closed(Oculus::Platform::PeerConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PeerConnectionState").WithContext("_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PeerConnectionState", "Closed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAEC24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Unknown
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Unknown
void Oculus::Platform::PermissionGrantStatus::_set_Unknown(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAEC5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Granted
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Granted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_get_Granted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Granted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Granted
void Oculus::Platform::PermissionGrantStatus::_set_Granted(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_set_Granted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Granted", value));
}
// [DescriptionAttribute] Offset: 0xDAEC94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Denied
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Denied() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_get_Denied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Denied"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Denied
void Oculus::Platform::PermissionGrantStatus::_set_Denied(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_set_Denied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Denied", value));
}
// [DescriptionAttribute] Offset: 0xDAECCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionGrantStatus Blocked
Oculus::Platform::PermissionGrantStatus Oculus::Platform::PermissionGrantStatus::_get_Blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_get_Blocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionGrantStatus>("Oculus.Platform", "PermissionGrantStatus", "Blocked"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionGrantStatus Blocked
void Oculus::Platform::PermissionGrantStatus::_set_Blocked(Oculus::Platform::PermissionGrantStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionGrantStatus").WithContext("_set_Blocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionGrantStatus", "Blocked", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDAED04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Unknown
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Unknown
void Oculus::Platform::PermissionType::_set_Unknown(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDAED3C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType Microphone
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType Microphone
void Oculus::Platform::PermissionType::_set_Microphone(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "Microphone", value));
}
// [DescriptionAttribute] Offset: 0xDAED74
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.PermissionType WriteExternalStorage
Oculus::Platform::PermissionType Oculus::Platform::PermissionType::_get_WriteExternalStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_get_WriteExternalStorage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::PermissionType>("Oculus.Platform", "PermissionType", "WriteExternalStorage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.PermissionType WriteExternalStorage
void Oculus::Platform::PermissionType::_set_WriteExternalStorage(Oculus::Platform::PermissionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("PermissionType").WithContext("_set_WriteExternalStorage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "PermissionType", "WriteExternalStorage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Core
#include "Oculus/Platform/Core.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean IsPlatformInitialized
bool Oculus::Platform::Core::_get_IsPlatformInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_get_IsPlatformInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "IsPlatformInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean IsPlatformInitialized
void Oculus::Platform::Core::_set_IsPlatformInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_set_IsPlatformInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "IsPlatformInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean LogMessages
bool Oculus::Platform::Core::_get_LogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_get_LogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Core", "LogMessages"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean LogMessages
void Oculus::Platform::Core::_set_LogMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("_set_LogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Core", "LogMessages", value));
}
// Autogenerated method: Oculus.Platform.Core.IsInitialized
bool Oculus::Platform::Core::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.ForceInitialized
void Oculus::Platform::Core::ForceInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("ForceInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "ForceInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core.getAppID
::Il2CppString* Oculus::Platform::Core::getAppID(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("getAppID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "getAppID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::Core::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "AsyncInitialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.Initialize
void Oculus::Platform::Core::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.Core.GetAppIDFromConfig
::Il2CppString* Oculus::Platform::Core::GetAppIDFromConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext("GetAppIDFromConfig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", "GetAppIDFromConfig", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Core..cctor
void Oculus::Platform::Core::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Core").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Core", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationLifecycle
#include "Oculus/Platform/ApplicationLifecycle.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.GetLaunchDetails
Oculus::Platform::Models::LaunchDetails* Oculus::Platform::ApplicationLifecycle::GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("ApplicationLifecycle").WithContext("GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "GetLaunchDetails", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchDetails*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.ApplicationLifecycle.SetLaunchIntentChangedNotificationCallback
void Oculus::Platform::ApplicationLifecycle::SetLaunchIntentChangedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("ApplicationLifecycle").WithContext("SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "ApplicationLifecycle", "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Rooms
#include "Oculus/Platform/Rooms.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomOptions
#include "Oculus/Platform/RoomOptions.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Rooms.UpdateDataStore
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateDataStore(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateDataStore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, data)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("SetRoomInviteNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(joinPolicy, maxUsers, subscribeToUpdates)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.CreateAndJoinPrivate2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(joinPolicy, maxUsers, roomOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.Get
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrent
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetCurrent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetCurrentForUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetCurrentForUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.GetInvitableUsers2
Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>* Oculus::Platform::Rooms::GetInvitableUsers2(Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::UserList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.GetModeratedRooms
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetModeratedRooms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Rooms.InviteUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::InviteUser(uint64_t roomID, ::Il2CppString* inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("InviteUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "InviteUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, inviteToken)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.Rooms.Join
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, subscribeToUpdates)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Rooms.Join2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Join2(uint64_t roomID, Oculus::Platform::RoomOptions* roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("Join2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Join2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, roomOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.Rooms.KickUser
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("KickUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "KickUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, userID, kickDurationSeconds)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.Rooms.LaunchInvitableUserFlow
Oculus::Platform::Request* Oculus::Platform::Rooms::LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.Leave
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("Leave");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "Leave", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Rooms.SetDescription
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::SetDescription(uint64_t roomID, ::Il2CppString* description) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("SetDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, description)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateMembershipLockStatus
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, membershipLockStatus)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdateOwner
Oculus::Platform::Request* Oculus::Platform::Rooms::UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdateOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, userID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.Rooms.UpdatePrivateRoomJoinPolicy
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Rooms::UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, newJoinPolicy)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteAcceptedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteAcceptedNotificationCallback(typename Oculus::Platform::Message_1<::Il2CppString*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("SetRoomInviteAcceptedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteAcceptedNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetRoomInviteReceivedNotificationCallback
void Oculus::Platform::Rooms::SetRoomInviteReceivedNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("SetRoomInviteReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetRoomInviteReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.SetUpdateNotificationCallback
void Oculus::Platform::Rooms::SetUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("SetUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "SetUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Rooms.GetNextRoomListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>* Oculus::Platform::Rooms::GetNextRoomListPage(Oculus::Platform::Models::RoomList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Rooms").WithContext("GetNextRoomListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Rooms", "GetNextRoomListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::RoomList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking
#include "Oculus/Platform/Matchmaking.hpp"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking.ReportResultsInsecure
Oculus::Platform::Request* Oculus::Platform::Matchmaking::ReportResultsInsecure(uint64_t roomID, System::Collections::Generic::Dictionary_2<::Il2CppString*, int>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("ReportResultsInsecure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "ReportResultsInsecure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, data)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetStats
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>* Oculus::Platform::Matchmaking::GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("GetStats");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetStats", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, maxLevel, approach)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingStats*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Browse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, customQueryData)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Browse2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>* Oculus::Platform::Matchmaking::Browse2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Browse2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Browse2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, matchmakingOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingBrowseResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel(::Il2CppString* pool, ::Il2CppString* requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Cancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, requestHash)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Cancel
Oculus::Platform::Request* Oculus::Platform::Matchmaking::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Cancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Cancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, maxUsers, subscribeToUpdates, customQueryData)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateAndEnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>* Oculus::Platform::Matchmaking::CreateAndEnqueueRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, matchmakingOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("CreateRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, maxUsers, subscribeToUpdates)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.CreateRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::CreateRoom2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "CreateRoom2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, matchmakingOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue(::Il2CppString* pool, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Enqueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, customQueryData)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.Enqueue2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::Enqueue2(::Il2CppString* pool, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("Enqueue2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "Enqueue2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pool, matchmakingOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom(uint64_t roomID, Oculus::Platform::Matchmaking::CustomQuery* customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, customQueryData)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.Matchmaking.EnqueueRoom2
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>* Oculus::Platform::Matchmaking::EnqueueRoom2(uint64_t roomID, Oculus::Platform::MatchmakingOptions* matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "EnqueueRoom2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, matchmakingOptions)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingEnqueueResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.Matchmaking.GetAdminSnapshot
Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>* Oculus::Platform::Matchmaking::GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::MatchmakingAdminSnapshot*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Matchmaking.JoinRoom
Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>* Oculus::Platform::Matchmaking::JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("JoinRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "JoinRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID, subscribeToUpdates)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Room*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.Matchmaking.StartMatch
Oculus::Platform::Request* Oculus::Platform::Matchmaking::StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("StartMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "StartMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(roomID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.Matchmaking.SetMatchFoundNotificationCallback
void Oculus::Platform::Matchmaking::SetMatchFoundNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Matchmaking").WithContext("SetMatchFoundNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Matchmaking", "SetMatchFoundNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Matchmaking/CustomQuery.ToUnmanaged
System::IntPtr Oculus::Platform::Matchmaking::CustomQuery::ToUnmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CustomQuery").WithContext("ToUnmanaged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUnmanaged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Matchmaking/CustomQuery/Criterion
#include "Oculus/Platform/Matchmaking_CustomQuery.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Net
#include "Oculus/Platform/Net.hpp"
// Including type: Oculus.Platform.Packet
#include "Oculus/Platform/Packet.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Net.ReadPacket
Oculus::Platform::Packet* Oculus::Platform::Net::ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("ReadPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "ReadPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Packet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.SendPacket
bool Oculus::Platform::Net::SendPacket(uint64_t userID, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("SendPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID, bytes, policy)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.Connect
void Oculus::Platform::Net::Connect(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("Connect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Connect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Accept
void Oculus::Platform::Net::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("Accept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Accept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.Close
void Oculus::Platform::Net::Close(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.IsConnected
bool Oculus::Platform::Net::IsConnected(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("IsConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "IsConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SendPacketToCurrentRoom
bool Oculus::Platform::Net::SendPacketToCurrentRoom(::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bytes, policy)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, policy);
}
// Autogenerated method: Oculus.Platform.Net.AcceptForCurrentRoom
bool Oculus::Platform::Net::AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.CloseForCurrentRoom
void Oculus::Platform::Net::CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Net.Ping
Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>* Oculus::Platform::Net::Ping(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("Ping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "Ping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PingResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Net.SetConnectionStateChangedCallback
void Oculus::Platform::Net::SetConnectionStateChangedCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("SetConnectionStateChangedCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetConnectionStateChangedCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPeerConnectRequestCallback
void Oculus::Platform::Net::SetPeerConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("SetPeerConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPeerConnectRequestCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Net.SetPingResultNotificationCallback
void Oculus::Platform::Net::SetPingResultNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Net").WithContext("SetPingResultNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Net", "SetPingResultNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Leaderboards
#include "Oculus/Platform/Leaderboards.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Leaderboards.GetNextEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetNextEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Leaderboards").WithContext("GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetNextEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetPreviousEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetPreviousEntries(Oculus::Platform::Models::LeaderboardEntryList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Leaderboards").WithContext("GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetPreviousEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntries
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Leaderboards").WithContext("GetEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaderboardName, limit, filter, startAt)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.Leaderboards.GetEntriesAfterRank
Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>* Oculus::Platform::Leaderboards::GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Leaderboards").WithContext("GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaderboardName, limit, afterRank)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::LeaderboardEntryList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.Leaderboards.WriteEntry
Oculus::Platform::Request_1<bool>* Oculus::Platform::Leaderboards::WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Leaderboards").WithContext("WriteEntry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Leaderboards", "WriteEntry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaderboardName, score, extraData, forceUpdate)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, extraData, forceUpdate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Voip
#include "Oculus/Platform/Voip.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipOptions
#include "Oculus/Platform/VoipOptions.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Voip.Start
void Oculus::Platform::Voip::Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Accept
void Oculus::Platform::Voip::Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("Accept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Accept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.Stop
void Oculus::Platform::Voip::Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneFilterCallback
void Oculus::Platform::Voip::SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetMicrophoneMuted
void Oculus::Platform::Voip::SetMicrophoneMuted(Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::Voip::GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetSystemVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::Voip::GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Voip.GetIsConnectionUsingDtx
Oculus::Platform::VoipDtxState Oculus::Platform::Voip::GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peerID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetLocalBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetLocalBitrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peerID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.GetRemoteBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::Voip::GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peerID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.Voip.SetNewConnectionOptions
void Oculus::Platform::Voip::SetNewConnectionOptions(Oculus::Platform::VoipOptions* voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(voipOptions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipSuppressed
Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>* Oculus::Platform::Voip::SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(suppressed)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::SystemVoipState*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipConnectRequestCallback
void Oculus::Platform::Voip::SetVoipConnectRequestCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetVoipConnectRequestCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipConnectRequestCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetVoipStateChangeCallback
void Oculus::Platform::Voip::SetVoipStateChangeCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetVoipStateChangeCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetVoipStateChangeCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Platform.Voip.SetSystemVoipStateNotificationCallback
void Oculus::Platform::Voip::SetSystemVoipStateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::SystemVoipState*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Voip").WithContext("SetSystemVoipStateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Voip", "SetSystemVoipStateNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Achievements
#include "Oculus/Platform/Achievements.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Achievements.AddCount
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddCount(::Il2CppString* name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("AddCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, count)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.Achievements.AddFields
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::AddFields(::Il2CppString* name, ::Il2CppString* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("AddFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "AddFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, fields)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllDefinitions
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllDefinitions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetAllProgress
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetAllProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Achievements.GetDefinitionsByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetDefinitionsByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(names)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.GetProgressByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetProgressByName(::Array<::Il2CppString*>* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetProgressByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(names)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names);
}
// Autogenerated method: Oculus.Platform.Achievements.Unlock
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>* Oculus::Platform::Achievements::Unlock(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("Unlock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "Unlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementUpdate*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementDefinitionListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>* Oculus::Platform::Achievements::GetNextAchievementDefinitionListPage(Oculus::Platform::Models::AchievementDefinitionList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetNextAchievementDefinitionListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementDefinitionListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementDefinitionList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.Achievements.GetNextAchievementProgressListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>* Oculus::Platform::Achievements::GetNextAchievementProgressListPage(Oculus::Platform::Models::AchievementProgressList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Achievements").WithContext("GetNextAchievementProgressListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Achievements", "GetNextAchievementProgressListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AchievementProgressList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Application
#include "Oculus/Platform/Application.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Application.GetVersion
Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>* Oculus::Platform::Application::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Application").WithContext("GetVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "GetVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ApplicationVersion*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Application.LaunchOtherApp
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::Application::LaunchOtherApp(uint64_t appID, Oculus::Platform::ApplicationOptions* deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Application").WithContext("LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Application", "LaunchOtherApp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appID, deeplink_options)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AssetFile
#include "Oculus/Platform/AssetFile.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AssetFile.Delete
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("Delete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Delete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DeleteById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DeleteByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>* Oculus::Platform::AssetFile::DeleteByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DeleteByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DeleteByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileName)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDeleteResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.Download
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("Download");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Download", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DownloadById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>* Oculus::Platform::AssetFile::DownloadByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DownloadByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileName)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancel
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.DownloadCancelByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>* Oculus::Platform::AssetFile::DownloadCancelByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "DownloadCancelByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileName)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetFileDownloadCancelResult*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.GetList
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetailsList*>* Oculus::Platform::AssetFile::GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("GetList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "GetList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetailsList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.AssetFile.Status
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("Status");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "Status", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusById
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("StatusById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileID)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.AssetFile.StatusByName
Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>* Oculus::Platform::AssetFile::StatusByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("StatusByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "StatusByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assetFileName)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::AssetDetails*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.AssetFile.SetDownloadUpdateNotificationCallback
void Oculus::Platform::AssetFile::SetDownloadUpdateNotificationCallback(typename Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("AssetFile").WithContext("SetDownloadUpdateNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "AssetFile", "SetDownloadUpdateNotificationCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CloudStorage
#include "Oculus/Platform/CloudStorage.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage.Delete
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Delete(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("Delete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Delete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Load
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::Load(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadBucketMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::LoadBucketMetadata(::Il2CppString* bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadConflictMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageConflictMetadata*>* Oculus::Platform::CloudStorage::LoadConflictMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageConflictMetadata*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadHandle
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>* Oculus::Platform::CloudStorage::LoadHandle(::Il2CppString* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("LoadHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageData*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.LoadMetadata
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadata*>* Oculus::Platform::CloudStorage::LoadMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "LoadMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadata*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepLocal
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepLocal(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key, remoteHandle)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.ResolveKeepRemote
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::ResolveKeepRemote(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key, remoteHandle)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CloudStorage.Save
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>* Oculus::Platform::CloudStorage::Save(::Il2CppString* bucket, ::Il2CppString* key, ::Array<uint8_t>* data, int64_t counter, ::Il2CppString* extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bucket, key, data, counter, extraData)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageUpdateResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, data, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CloudStorage.GetNextCloudStorageMetadataListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>* Oculus::Platform::CloudStorage::GetNextCloudStorageMetadataListPage(Oculus::Platform::Models::CloudStorageMetadataList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage").WithContext("GetNextCloudStorageMetadataListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage", "GetNextCloudStorageMetadataListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::CloudStorageMetadataList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CloudStorage2
#include "Oculus/Platform/CloudStorage2.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CloudStorage2.GetUserDirectoryPath
Oculus::Platform::Request_1<::Il2CppString*>* Oculus::Platform::CloudStorage2::GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("CloudStorage2").WithContext("GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "CloudStorage2", "GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Entitlements
#include "Oculus/Platform/Entitlements.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Entitlements.IsUserEntitledToApplication
Oculus::Platform::Request* Oculus::Platform::Entitlements::IsUserEntitledToApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("Entitlements").WithContext("IsUserEntitledToApplication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "Entitlements", "IsUserEntitledToApplication", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.IAP
#include "Oculus/Platform/IAP.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IAP.ConsumePurchase
Oculus::Platform::Request* Oculus::Platform::IAP::ConsumePurchase(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "ConsumePurchase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sku)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetProductsBySKU
Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetProductsBySKU(::Array<::Il2CppString*>* skus) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetProductsBySKU", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(skus)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skus);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchases
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchases", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.GetViewerPurchasesDurableCache
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.IAP.LaunchCheckoutFlow
Oculus::Platform::Request_1<Oculus::Platform::Models::Purchase*>* Oculus::Platform::IAP::LaunchCheckoutFlow(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sku)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::Purchase*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextProductListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>* Oculus::Platform::IAP::GetNextProductListPage(Oculus::Platform::Models::ProductList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("GetNextProductListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextProductListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::ProductList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Oculus.Platform.IAP.GetNextPurchaseListPage
Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>* Oculus::Platform::IAP::GetNextPurchaseListPage(Oculus::Platform::Models::PurchaseList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Oculus::Platform").WithContext("IAP").WithContext("GetNextPurchaseListPage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Oculus.Platform", "IAP", "GetNextPurchaseListPage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PurchaseList*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
