// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell_-RefreshAvailabilityAsync-d__23.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AnnotatedBeatmapLevelCollectionCell <>4__this
GlobalNamespace::AnnotatedBeatmapLevelCollectionCell*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AnnotatedBeatmapLevelCollectionCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel contentModel
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numberOfOwnedLevels>5__3
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numberOfOwnedLevels>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <error>5__4
bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<error>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel[] <>7__wrap4
::ArrayW<GlobalNamespace::IPreviewBeatmapLevel*>& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::IPreviewBeatmapLevel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap5
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.MoveNext
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.SetStateMachine
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _selectionImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgNormalColor
UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgNormalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgHighlightColor
UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SetData
void GlobalNamespace::BeatmapCharacteristicTableCell::SetData(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicTableCell.RefreshVisuals
void GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SelectionDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: BeatmapCharacteristicTableCell.HighlightDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::ColorPickerButtonController::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _colorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorPickerButtonController::dyn__colorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::dyn__colorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorPickerButtonController.get_button
UnityEngine::UI::Button* GlobalNamespace::ColorPickerButtonController::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorPickerButtonController.SetColor
void GlobalNamespace::ColorPickerButtonController::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _decButton
UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__decButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__decButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _incButton
UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__incButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__incButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _valueImage
HMUI::ImageView*& GlobalNamespace::ColorStepValuePicker::dyn__valueImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__valueImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action decButtonWasPressedEvent
System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action incButtonWasPressedEvent
System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorStepValuePicker.get_color
UnityEngine::Color GlobalNamespace::ColorStepValuePicker::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.set_color
void GlobalNamespace::ColorStepValuePicker::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_decButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_incButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.OnEnable
void GlobalNamespace::ColorStepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.OnDisable
void GlobalNamespace::ColorStepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.IncButtonPressed
void GlobalNamespace::ColorStepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.DecButtonPressed
void GlobalNamespace::ColorStepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _difficultyText
TMPro::TextMeshProUGUI*& GlobalNamespace::DifficultyTableCell::dyn__difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__difficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FillIndicator _fillIndicator
GlobalNamespace::FillIndicator*& GlobalNamespace::DifficultyTableCell::dyn__fillIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__fillIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fillIndicator"))->offset;
  return *reinterpret_cast<GlobalNamespace::FillIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyTableCell.get_difficultyText
::Il2CppString* GlobalNamespace::DifficultyTableCell::get_difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::get_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DifficultyTableCell.set_difficultyText
void GlobalNamespace::DifficultyTableCell::set_difficultyText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.set_difficultyValue
void GlobalNamespace::DifficultyTableCell::set_difficultyValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.SelectionDidChange
void GlobalNamespace::DifficultyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: DifficultyTableCell.HighlightDidChange
void GlobalNamespace::DifficultyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FillIndicator.get_fillAmount
float GlobalNamespace::FillIndicator::get_fillAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::get_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FillIndicator.set_fillAmount
void GlobalNamespace::FillIndicator::set_fillAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::set_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinServerButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinServerButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action joinServerButtonWasPressedEvent
System::Action*& GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinServerButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListDetailTableCell.add_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.remove_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.<Start>b__5_0
void GlobalNamespace::GameServerListDetailTableCell::$Start$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerListDetailTableCell.Start
void GlobalNamespace::GameServerListDetailTableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _serverName
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverName"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _difficultiesText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__difficultiesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__difficultiesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultiesText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _musicPackText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__musicPackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__musicPackText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerCount
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__playerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCount"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _passwordProtected
UnityEngine::GameObject*& GlobalNamespace::GameServerListTableCell::dyn__passwordProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__passwordProtected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passwordProtected"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMasksModel _songPackMasksModel
GlobalNamespace::SongPackMasksModel*& GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMasksModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMasksModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListTableCell.SetData
void GlobalNamespace::GameServerListTableCell::SetData(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: GameServerPlayerTableCell/<>c__DisplayClass27_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass27_0.hpp"
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__33
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__33.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerNameText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _localPlayerBackgroundImage
UnityEngine::UI::Image*& GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerBackgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _suggestedLevelText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedLevelText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _suggestedCharacteristicIcon
HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedCharacteristicIcon"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _suggestedDifficultyText
TMPro::TextMeshProUGUI*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedDifficultyText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedLevelText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedLevelText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _suggestedModifiersList
GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedModifiersList"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedModifiersText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedModifiersText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _kickPlayerButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kickPlayerButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useBeatmapButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useModifiersButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useModifiersButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _useBeatmapButtonHoverHint
HMUI::HoverHint*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButtonHoverHint"))->offset;
  return *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _statusImageView
HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statusImageView"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _readyIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _spectatingIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _hostIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hostIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiers
GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> kickPlayerEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useBeatmapEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useModifiersEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _getLevelEntitlementCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getLevelEntitlementCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.SetData
void GlobalNamespace::GameServerPlayerTableCell::SetData(GlobalNamespace::IConnectedPlayer* connectedPlayer, GlobalNamespace::ILobbyPlayerData* playerData, bool hasKickPermissions, bool allowSelection, System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(hasKickPermissions), ::il2cpp_utils::ExtractType(allowSelection), ::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer, playerData, hasKickPermissions, allowSelection, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell.Awake
void GlobalNamespace::GameServerPlayerTableCell::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleKickPlayerButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayerButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseBeatmapButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseBeatmapButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseModifiersButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseModifiersButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.SetBeatmapUseButtonEnabledAsync
void GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync(System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapUseButtonEnabledAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, getLevelEntitlementTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<>c__DisplayClass27_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass27_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifiersList
System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass27_0::dyn_modifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass27_0::dyn_modifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiersList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<>c__DisplayClass27_0.<SetData>b__0
void GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass27_0::$SetData$b__0(int id, GlobalNamespace::GameplayModifierInfoListItem* listItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass27_0::<SetData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(listItem)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, id, listItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__33
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__33.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameServerPlayerTableCell <>4__this
GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<AdditionalContentModel/EntitlementStatus> getLevelEntitlementTask
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_getLevelEntitlementTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_getLevelEntitlementTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getLevelEntitlementTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__33.MoveNext
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__33.SetStateMachine
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__33::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _hoverHint
HMUI::HoverHint*& GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  return *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
UnityEngine::UI::Image*& GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierInfoListItem.SetModifier
void GlobalNamespace::GameplayModifierInfoListItem::SetModifier(GlobalNamespace::GameplayModifierParamsSO* modifierParam, bool showName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParam), ::il2cpp_utils::ExtractType(showName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, modifierParam, showName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageWithHintItemsList
#include "GlobalNamespace/ImageWithHintItemsList.hpp"
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IncDecColorController
#include "GlobalNamespace/IncDecColorController.hpp"
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorStepValuePicker _stepValuePicker
GlobalNamespace::ColorStepValuePicker*& GlobalNamespace::IncDecColorController::dyn__stepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::dyn__stepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepValuePicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorStepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IncDecColorController.set_enableDec
void GlobalNamespace::IncDecColorController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_enableInc
void GlobalNamespace::IncDecColorController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_color
void GlobalNamespace::IncDecColorController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.Awake
void GlobalNamespace::IncDecColorController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.OnDestroy
void GlobalNamespace::IncDecColorController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.IncButtonPressed
void GlobalNamespace::IncDecColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.DecButtonPressed
void GlobalNamespace::IncDecColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerNameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _fullComboText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__fullComboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__fullComboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullComboText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
UnityEngine::Color& GlobalNamespace::LeaderboardTableCell::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _specialScoreColor
UnityEngine::Color& GlobalNamespace::LeaderboardTableCell::dyn__specialScoreColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__specialScoreColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialScoreColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _separatorImage
UnityEngine::UI::Image*& GlobalNamespace::LeaderboardTableCell::dyn__separatorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__separatorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separatorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableCell.set_rank
void GlobalNamespace::LeaderboardTableCell::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_playerName
void GlobalNamespace::LeaderboardTableCell::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_score
void GlobalNamespace::LeaderboardTableCell::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showSeparator
void GlobalNamespace::LeaderboardTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showFullCombo
void GlobalNamespace::LeaderboardTableCell::set_showFullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showFullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showFullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_specialScore
void GlobalNamespace::LeaderboardTableCell::set_specialScore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_specialScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_specialScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup*& GlobalNamespace::LevelListTableCell::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _coverImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songNameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songNameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songAuthorText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songAuthorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songAuthorText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _favoritesBadgeImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__favoritesBadgeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__favoritesBadgeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoritesBadgeImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songDurationText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songDurationText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songDurationText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDurationText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songBpmText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songBpmText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songBpmText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBpmText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__highlightBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__highlightBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__selectedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__selectedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedAndHighlightedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__selectedAndHighlightedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__selectedAndHighlightedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _notOwnedAlpha
float& GlobalNamespace::LevelListTableCell::dyn__notOwnedAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__notOwnedAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notOwnedAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _refreshingAvailabilityCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshingAvailabilityCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _settingDataCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::LevelListTableCell::dyn__settingDataCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__settingDataCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingDataCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _notOwned
bool& GlobalNamespace::LevelListTableCell::dyn__notOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__notOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _refreshingAvailabilityLevelID
::Il2CppString*& GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityLevelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityLevelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshingAvailabilityLevelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _settingDataFromLevelId
::Il2CppString*& GlobalNamespace::LevelListTableCell::dyn__settingDataFromLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__settingDataFromLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingDataFromLevelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell.SetDataFromLevelAsync
void GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* level, bool isFavorite) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataFromLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(isFavorite)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, level, isFavorite);
}
// Autogenerated method: LevelListTableCell.RefreshVisuals
void GlobalNamespace::LevelListTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelListTableCell.RefreshAvailabilityAsync
void GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel, ::Il2CppString* levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel), ::il2cpp_utils::ExtractType(levelID)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, contentModel, levelID);
}
// Autogenerated method: LevelListTableCell.CancelAsyncOperations
void GlobalNamespace::LevelListTableCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelListTableCell.SelectionDidChange
void GlobalNamespace::LevelListTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.HighlightDidChange
void GlobalNamespace::LevelListTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.WasPreparedForReuse
void GlobalNamespace::LevelListTableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelListTableCell <>4__this
GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFavorite
bool& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_isFavorite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_isFavorite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFavorite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.MoveNext
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.SetStateMachine
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelListTableCell <>4__this
GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
::Il2CppString*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel contentModel
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_contentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_contentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.MoveNext
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.SetStateMachine
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelPackHeaderTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
UnityEngine::UI::Image*& GlobalNamespace::LevelPackHeaderTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__highlightBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__highlightBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedAndHighlightedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedAndHighlightedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedAndHighlightedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelPackHeaderTableCell.SetData
void GlobalNamespace::LevelPackHeaderTableCell::SetData(::Il2CppString* headerText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerText)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headerText);
}
// Autogenerated method: LevelPackHeaderTableCell.RefreshVisuals
void GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelPackHeaderTableCell.SelectionDidChange
void GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelPackHeaderTableCell.HighlightDidChange
void GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListColorController
#include "GlobalNamespace/ListColorController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _idx
int& GlobalNamespace::ListColorController::dyn__idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::dyn__idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
int& GlobalNamespace::ListColorController::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListColorController.GetInitValues
bool GlobalNamespace::ListColorController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: ListColorController.ApplyValue
void GlobalNamespace::ListColorController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: ListColorController.ColorForValue
UnityEngine::Color GlobalNamespace::ListColorController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: ListColorController.OnEnable
void GlobalNamespace::ListColorController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.RefreshUI
void GlobalNamespace::ListColorController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.Refresh
void GlobalNamespace::ListColorController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, applyValue);
}
// Autogenerated method: ListColorController.IncButtonPressed
void GlobalNamespace::ListColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.DecButtonPressed
void GlobalNamespace::ListColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _loadingContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__loadingContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__loadingContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _loadingText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__loadingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__loadingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _refreshText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__refreshText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _refreshButton
UnityEngine::UI::Button*& GlobalNamespace::LoadingControl::dyn__refreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _refreshContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__refreshContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _downloadingContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__downloadingContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__downloadingContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadingContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _downloadingText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__downloadingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__downloadingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadingText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _donwloadingProgressImage
UnityEngine::UI::Image*& GlobalNamespace::LoadingControl::dyn__donwloadingProgressImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__donwloadingProgressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_donwloadingProgressImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressRefreshButtonEvent
System::Action*& GlobalNamespace::LoadingControl::dyn_didPressRefreshButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn_didPressRefreshButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressRefreshButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::LoadingControl::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoadingControl.get_isLoading
bool GlobalNamespace::LoadingControl::get_isLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::get_isLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.add_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LoadingControl.remove_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LoadingControl.Awake
void GlobalNamespace::LoadingControl::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.OnDestroy
void GlobalNamespace::LoadingControl::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.ShowLoading
void GlobalNamespace::LoadingControl::ShowLoading(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: LoadingControl.ShowText
void GlobalNamespace::LoadingControl::ShowText(::Il2CppString* text, bool showRefreshButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(showRefreshButton)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, showRefreshButton);
}
// Autogenerated method: LoadingControl.ShowDownloadingProgress
void GlobalNamespace::LoadingControl::ShowDownloadingProgress(::Il2CppString* text, float downloadingProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowDownloadingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDownloadingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(downloadingProgress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, downloadingProgress);
}
// Autogenerated method: LoadingControl.Hide
void GlobalNamespace::LoadingControl::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.<Awake>b__14_0
void GlobalNamespace::LoadingControl::$Awake$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NamedColorListController/ColorValuePair[] _textValuePairs
::ArrayW<GlobalNamespace::NamedColorListController::ColorValuePair*>& GlobalNamespace::NamedColorListController::dyn__textValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn__textValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textValuePairs"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::NamedColorListController::ColorValuePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
int& GlobalNamespace::NamedColorListController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> valueChangedEvent
System::Action_1<int>*& GlobalNamespace::NamedColorListController::dyn_valueChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn_valueChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedColorListController.add_valueChangedEvent
void GlobalNamespace::NamedColorListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.remove_valueChangedEvent
void GlobalNamespace::NamedColorListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.Init
void GlobalNamespace::NamedColorListController::Init(::ArrayW<GlobalNamespace::NamedColorListController::ColorValuePair*> values, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, values, value);
}
// Autogenerated method: NamedColorListController.SetValue
void GlobalNamespace::NamedColorListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.GetInitValues
bool GlobalNamespace::NamedColorListController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: NamedColorListController.ApplyValue
void GlobalNamespace::NamedColorListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: NamedColorListController.ColorForValue
UnityEngine::Color GlobalNamespace::NamedColorListController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::NamedColorListController::ColorValuePair::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorValuePair::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
int& GlobalNamespace::NamedColorListController::ColorValuePair::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorValuePair::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NamedIntListController/TextValuePair[] _textValuePairs
::ArrayW<GlobalNamespace::NamedIntListController::TextValuePair*>& GlobalNamespace::NamedIntListController::dyn__textValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn__textValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textValuePairs"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::NamedIntListController::TextValuePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
int& GlobalNamespace::NamedIntListController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> valueChangedEvent
System::Action_1<int>*& GlobalNamespace::NamedIntListController::dyn_valueChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn_valueChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListController.add_valueChangedEvent
void GlobalNamespace::NamedIntListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.remove_valueChangedEvent
void GlobalNamespace::NamedIntListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.InitValues
void GlobalNamespace::NamedIntListController::InitValues(::ArrayW<GlobalNamespace::NamedIntListController::TextValuePair*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::InitValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, values);
}
// Autogenerated method: NamedIntListController.SetValue
void GlobalNamespace::NamedIntListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.GetInitValues
bool GlobalNamespace::NamedIntListController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: NamedIntListController.ApplyValue
void GlobalNamespace::NamedIntListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: NamedIntListController.TextForValue
::Il2CppString* GlobalNamespace::NamedIntListController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String localizationKey
::Il2CppString*& GlobalNamespace::NamedIntListController::TextValuePair::dyn_localizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::dyn_localizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizationKey"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
int& GlobalNamespace::NamedIntListController::TextValuePair::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListController/TextValuePair.get_localizedText
::Il2CppString* GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PackLevelListHeaderTableCell
#include "GlobalNamespace/PackLevelListHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedHighlightElementsColor
UnityEngine::Color& GlobalNamespace::PackLevelListHeaderTableCell::dyn__selectedHighlightElementsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__selectedHighlightElementsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedHighlightElementsColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _arrowImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__arrowImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__arrowImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrowImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PackLevelListHeaderTableCell.get_text
::Il2CppString* GlobalNamespace::PackLevelListHeaderTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.set_text
void GlobalNamespace::PackLevelListHeaderTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PackLevelListHeaderTableCell.RefreshVisuals
void GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.SelectionDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: PackLevelListHeaderTableCell.HighlightDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SafeAreaRectChecker
#include "GlobalNamespace/SafeAreaRectChecker.hpp"
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _minAngleX
float& GlobalNamespace::SafeAreaRectChecker::dyn__minAngleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__minAngleX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAngleX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngleX
float& GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngleX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minAngleY
float& GlobalNamespace::SafeAreaRectChecker::dyn__minAngleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__minAngleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAngleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngleY
float& GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _activeObjectWhenInsideSafeArea
UnityEngine::GameObject*& GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenInsideSafeArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenInsideSafeArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeObjectWhenInsideSafeArea"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _activeObjectWhenNotInsideSafeArea
UnityEngine::GameObject*& GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenNotInsideSafeArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenNotInsideSafeArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeObjectWhenNotInsideSafeArea"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransformToCheck
UnityEngine::RectTransform*& GlobalNamespace::SafeAreaRectChecker::dyn__rectTransformToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__rectTransformToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransformToCheck"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] _corners
::ArrayW<UnityEngine::Vector3>& GlobalNamespace::SafeAreaRectChecker::dyn__corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_corners"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
GlobalNamespace::MainCamera*& GlobalNamespace::SafeAreaRectChecker::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SafeAreaRectChecker/InitData _initData
GlobalNamespace::SafeAreaRectChecker::InitData*& GlobalNamespace::SafeAreaRectChecker::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SafeAreaRectChecker::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SafeAreaRectChecker.Start
void GlobalNamespace::SafeAreaRectChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SafeAreaRectChecker.Update
void GlobalNamespace::SafeAreaRectChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean checkingEnabled
bool& GlobalNamespace::SafeAreaRectChecker::InitData::dyn_checkingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::InitData::dyn_checkingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonBackgroundController
#include "GlobalNamespace/StartMiddleEndButtonBackgroundController.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _startSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__startSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__startSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _middleSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__middleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__middleSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_middleSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _endSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__endSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__endSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _image
HMUI::ImageView*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetStartSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetMiddleSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMiddleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetEndSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonsGroup
#include "GlobalNamespace/StartMiddleEndButtonsGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutHorizontal
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutVertical
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _decButton
UnityEngine::UI::Button*& GlobalNamespace::StepValuePicker::dyn__decButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__decButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _incButton
UnityEngine::UI::Button*& GlobalNamespace::StepValuePicker::dyn__incButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__incButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _valueText
TMPro::TextMeshProUGUI*& GlobalNamespace::StepValuePicker::dyn__valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action decButtonWasPressedEvent
System::Action*& GlobalNamespace::StepValuePicker::dyn_decButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn_decButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action incButtonWasPressedEvent
System::Action*& GlobalNamespace::StepValuePicker::dyn_incButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn_incButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StepValuePicker.get_text
::Il2CppString* GlobalNamespace::StepValuePicker::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.set_text
void GlobalNamespace::StepValuePicker::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_decButtonInteractable
void GlobalNamespace::StepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_incButtonInteractable
void GlobalNamespace::StepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.OnEnable
void GlobalNamespace::StepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.OnDisable
void GlobalNamespace::StepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.IncButtonPressed
void GlobalNamespace::StepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.DecButtonPressed
void GlobalNamespace::StepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextButton
#include "GlobalNamespace/TextButton.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
UnityEngine::UI::Text*& GlobalNamespace::TextButton::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::TextButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextButton.get_text
UnityEngine::UI::Text* GlobalNamespace::TextButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::TextMeshProButton::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::TextMeshProButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextMeshProButton.get_text
TMPro::TextMeshProUGUI* GlobalNamespace::TextMeshProButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextMeshProUGUI*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextMeshProButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextMeshProButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TextOnlyTableCell
#include "GlobalNamespace/TextOnlyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedHighlightColor
UnityEngine::Color& GlobalNamespace::TextOnlyTableCell::dyn__selectedHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__selectedHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::TextOnlyTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _bgImage
HMUI::ImageView*& GlobalNamespace::TextOnlyTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _highlightImage
HMUI::ImageView*& GlobalNamespace::TextOnlyTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextOnlyTableCell.get_text
::Il2CppString* GlobalNamespace::TextOnlyTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.set_text
void GlobalNamespace::TextOnlyTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TextOnlyTableCell.RefreshVisuals
void GlobalNamespace::TextOnlyTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.SelectionDidChange
void GlobalNamespace::TextOnlyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: TextOnlyTableCell.HighlightDidChange
void GlobalNamespace::TextOnlyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseStateTransition
#include "GlobalNamespace/BaseStateTransition.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected SelectableStateController _selectableStateController
GlobalNamespace::SelectableStateController*& GlobalNamespace::BaseStateTransition::dyn__selectableStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::dyn__selectableStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectableStateController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectableStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseStateTransition.get_tweeningManager
Tweening::TimeTweeningManager* GlobalNamespace::BaseStateTransition::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::TimeTweeningManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::BaseStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetState
void GlobalNamespace::BaseStateTransition::SetState(GlobalNamespace::SelectableStateController::ViewState viewState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewState);
}
// Autogenerated method: BaseStateTransition.OnEnable
void GlobalNamespace::BaseStateTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.OnDisable
void GlobalNamespace::BaseStateTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.HandleSelectableStateControllerStateDidChange
void GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange(GlobalNamespace::SelectableStateController::ViewState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableStateControllerStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: BaseStateTransition.TransitionToNormalState
void GlobalNamespace::BaseStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToPressedState
void GlobalNamespace::BaseStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToDisabledState
void GlobalNamespace::BaseStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetNormalState
void GlobalNamespace::BaseStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetHighlightedState
void GlobalNamespace::BaseStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetPressedState
void GlobalNamespace::BaseStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetDisabledState
void GlobalNamespace::BaseStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedState
void GlobalNamespace::BaseStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TransitionTimingSO _transitionTiming
GlobalNamespace::TransitionTimingSO*& GlobalNamespace::BaseTransitionSO::dyn__transitionTiming() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::dyn__transitionTiming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionTiming"))->offset;
  return *reinterpret_cast<GlobalNamespace::TransitionTimingSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseTransitionSO.get_easeType
Tweening::EaseType GlobalNamespace::BaseTransitionSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseTransitionSO.get_easeDuration
float GlobalNamespace::BaseTransitionSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorGraphicStateTransition
#include "GlobalNamespace/ColorGraphicStateTransition.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorTransitionSO _transition
GlobalNamespace::ColorTransitionSO*& GlobalNamespace::ColorGraphicStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTween
Tweening::ColorTween*& GlobalNamespace::ColorGraphicStateTransition::dyn__colorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::dyn__colorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTween"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorGraphicStateTransition.StartTween
void GlobalNamespace::ColorGraphicStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorGraphicStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToNormalState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToPressedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetNormalState
void GlobalNamespace::ColorGraphicStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetPressedState
void GlobalNamespace::ColorGraphicStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetDisabledState
void GlobalNamespace::ColorGraphicStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTMPTextStateTransition
#include "GlobalNamespace/ColorTMPTextStateTransition.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorTransitionSO _transition
GlobalNamespace::ColorTransitionSO*& GlobalNamespace::ColorTMPTextStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTween
Tweening::ColorTween*& GlobalNamespace::ColorTMPTextStateTransition::dyn__colorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::dyn__colorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTween"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorTMPTextStateTransition.StartTween
void GlobalNamespace::ColorTMPTextStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorTMPTextStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToNormalState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToPressedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetNormalState
void GlobalNamespace::ColorTMPTextStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetPressedState
void GlobalNamespace::ColorTMPTextStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__highlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__pressedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__selectedAndHighlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__selectedAndHighlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorTransitionSO.get_normalColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_normalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_highlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_highlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_pressedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_pressedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_disabledColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_disabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedAndHighlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _normalState
bool& GlobalNamespace::EnabledTransitionSO::dyn__normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__normalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlightedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__highlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pressedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__pressedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disabledState
bool& GlobalNamespace::EnabledTransitionSO::dyn__disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__disabledState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__selectedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectedAndHighlightedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__selectedAndHighlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnabledTransitionSO.get_normalState
bool GlobalNamespace::EnabledTransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_highlightedState
bool GlobalNamespace::EnabledTransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_pressedState
bool GlobalNamespace::EnabledTransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_disabledState
bool GlobalNamespace::EnabledTransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedAndHighlightedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledViewStateTransition
#include "GlobalNamespace/EnabledViewStateTransition.hpp"
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnabledTransitionSO _transition
GlobalNamespace::EnabledTransitionSO*& GlobalNamespace::EnabledViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnabledTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnabledViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::EnabledViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToNormalState
void GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToPressedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToDisabledState
void GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetNormalState
void GlobalNamespace::EnabledViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetPressedState
void GlobalNamespace::EnabledViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetDisabledState
void GlobalNamespace::EnabledViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientImageViewStateTransition
#include "GlobalNamespace/GradientImageViewStateTransition.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GradientTransitionSO _transition
GlobalNamespace::GradientTransitionSO*& GlobalNamespace::GradientImageViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::GradientTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTweenA
Tweening::ColorTween*& GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenA() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTweenA"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTweenB
Tweening::ColorTween*& GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTweenB"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GradientImageViewStateTransition.StartTweens
void GlobalNamespace::GradientImageViewStateTransition::StartTweens(UnityEngine::Color endColor1, UnityEngine::Color endColor2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor1), ::il2cpp_utils::ExtractType(endColor2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor1, endColor2);
}
// Autogenerated method: GradientImageViewStateTransition.StartTween
void GlobalNamespace::GradientImageViewStateTransition::StartTween(UnityEngine::Color startColor, UnityEngine::Color endColor, System::Action_1<UnityEngine::Color>* tweenAction, System::Action* onCompleteAction, ByRef<Tweening::ColorTween*> colorTween) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor), ::il2cpp_utils::ExtractType(tweenAction), ::il2cpp_utils::ExtractType(onCompleteAction), ::il2cpp_utils::ExtractType(colorTween)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startColor, endColor, tweenAction, onCompleteAction, byref(colorTween));
}
// Autogenerated method: GradientImageViewStateTransition.SetColors
void GlobalNamespace::GradientImageViewStateTransition::SetColors(UnityEngine::Color startColor, UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startColor, endColor);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color1CompleteAction|17_0
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color1CompleteAction_17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color1CompleteAction|17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color1CompleteAction|17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color2CompleteAction|17_1
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color2CompleteAction_17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color2CompleteAction|17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color2CompleteAction|17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_2
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_2(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_3
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_3(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::GradientImageViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToNormalState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToPressedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToDisabledState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetNormalState
void GlobalNamespace::GradientImageViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetPressedState
void GlobalNamespace::GradientImageViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetDisabledState
void GlobalNamespace::GradientImageViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__normalColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__normalColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__normalColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__normalColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__highlightColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__highlightColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__pressedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__pressedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__pressedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__pressedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__disabledColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__disabledColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__disabledColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__disabledColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GradientTransitionSO.get_normalColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_normalColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoTransitionButtonSelectableStateController
#include "GlobalNamespace/NoTransitionButtonSelectableStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoTransitionButtonSelectableStateController.OnEnable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.OnDisable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.HandleNoTransitionButtonSelectionStateDidChange
void GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTransitionButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PositionRectTransformViewStateTransition
#include "GlobalNamespace/PositionRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3TransitionSO _transition
GlobalNamespace::Vector3TransitionSO*& GlobalNamespace::PositionRectTransformViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3TransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector3Tween _vectorTween
Tweening::Vector3Tween*& GlobalNamespace::PositionRectTransformViewStateTransition::dyn__vectorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::dyn__vectorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorTween"))->offset;
  return *reinterpret_cast<Tweening::Vector3Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PositionRectTransformViewStateTransition.StartTween
void GlobalNamespace::PositionRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPosition);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::PositionRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScaleRectTransformViewStateTransition
#include "GlobalNamespace/ScaleRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3TransitionSO _transition
GlobalNamespace::Vector3TransitionSO*& GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3TransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector3Tween _vectorTween
Tweening::Vector3Tween*& GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__vectorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__vectorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorTween"))->offset;
  return *reinterpret_cast<Tweening::Vector3Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.StartTween
void GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endScale);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController
#include "GlobalNamespace/SelectableStateController.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
Tweening::TimeTweeningManager*& GlobalNamespace::SelectableStateController::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SelectableStateController/ViewState> stateDidChangeEvent
System::Action_1<GlobalNamespace::SelectableStateController::ViewState>*& GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::SelectableStateController::ViewState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectableStateController/ViewState <currentViewState>k__BackingField
GlobalNamespace::SelectableStateController::ViewState& GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentViewState>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectableStateController::ViewState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectableStateController.get_tweeningManager
Tweening::TimeTweeningManager* GlobalNamespace::SelectableStateController::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::TimeTweeningManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableStateController.get_currentViewState
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::get_currentViewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectableStateController::ViewState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableStateController.set_currentViewState
void GlobalNamespace::SelectableStateController::set_currentViewState(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::set_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.add_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::add_stateDidChangeEvent(System::Action_1<GlobalNamespace::SelectableStateController::ViewState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.remove_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent(System::Action_1<GlobalNamespace::SelectableStateController::ViewState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.SetState
void GlobalNamespace::SelectableStateController::SetState(GlobalNamespace::SelectableStateController::ViewState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController/ViewState
#include "GlobalNamespace/SelectableStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Normal
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Normal
void GlobalNamespace::SelectableStateController::ViewState::_set_Normal(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Highlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Highlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Pressed
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Pressed
void GlobalNamespace::SelectableStateController::ViewState::_set_Pressed(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Disabled
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Disabled
void GlobalNamespace::SelectableStateController::ViewState::_set_Disabled(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Selected
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Selected
void GlobalNamespace::SelectableStateController::ViewState::_set_Selected(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState SelectedAndHighlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "SelectedAndHighlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState SelectedAndHighlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "SelectedAndHighlighted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::SelectableStateController::ViewState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapGraphicViewStateTransition
#include "GlobalNamespace/SpriteSwapGraphicViewStateTransition.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SpriteSwapTransitionSO _transition
GlobalNamespace::SpriteSwapTransitionSO*& GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpriteSwapTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _normalSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _highlightedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _pressedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _disabledSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedAndHighlightedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapTransitionSO.get_normalSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_highlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_pressedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_disabledSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedAndHighlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tweening.EaseType _easeType
Tweening::EaseType& GlobalNamespace::TransitionTimingSO::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _easeDuration
float& GlobalNamespace::TransitionTimingSO::dyn__easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::dyn__easeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransitionTimingSO.get_easeType
Tweening::EaseType GlobalNamespace::TransitionTimingSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TransitionTimingSO.get_easeDuration
float GlobalNamespace::TransitionTimingSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _normalState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__normalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _highlightedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__highlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _pressedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__pressedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _disabledState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__disabledState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__selectedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedAndHighlightedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vector3TransitionSO.get_normalState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_highlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_pressedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_disabledState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedAndHighlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TextMeshProButton _keyButtonPrefab
GlobalNamespace::TextMeshProButton*& GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyButtonPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::TextMeshProButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Char> textKeyWasPressedEvent
System::Action_1<::Il2CppChar>*& GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textKeyWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action deleteButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deleteButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action okButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _okButtonInteractivity
bool& GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButtonInteractivity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hideCancelButton
bool& GlobalNamespace::UIKeyboard::dyn__hideCancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__hideCancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideCancelButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard.set_enableOkButtonInteractivity
void GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableOkButtonInteractivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.set_hideCancelButton
void GlobalNamespace::UIKeyboard::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.Awake
void GlobalNamespace::UIKeyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_0
void GlobalNamespace::UIKeyboard::$Awake$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_1
void GlobalNamespace::UIKeyboard::$Awake$b__21_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_2
void GlobalNamespace::UIKeyboard::$Awake$b__21_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_3
void GlobalNamespace::UIKeyboard::$Awake$b__21_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
::Il2CppString*& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UIKeyboard <>4__this
GlobalNamespace::UIKeyboard*& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard/<>c__DisplayClass21_0.<Awake>b__4
void GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::$Awake$b__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::<Awake>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboardManager
#include "GlobalNamespace/UIKeyboardManager.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kKeyboardTopOffset
float GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UIKeyboardManager", "kKeyboardTopOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kKeyboardTopOffset
void GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UIKeyboardManager", "kKeyboardTopOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
HMUI::UIKeyboard*& GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _keyboardModalView
HMUI::ModalView*& GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardModalView"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _keyboardContainerTransform
UnityEngine::RectTransform*& GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardContainerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentContainerTransform
UnityEngine::Transform*& GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentContainerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VRUIControls.VRInputModule _vrInputModule
VRUIControls::VRInputModule*& GlobalNamespace::UIKeyboardManager::dyn__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _selectedInput
HMUI::InputFieldView*& GlobalNamespace::UIKeyboardManager::dyn__selectedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__selectedInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInput"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboardManager.get_keyboard
HMUI::UIKeyboard* GlobalNamespace::UIKeyboardManager::get_keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::get_keyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::UIKeyboard*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.Start
void GlobalNamespace::UIKeyboardManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnEnable
void GlobalNamespace::UIKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDisable
void GlobalNamespace::UIKeyboardManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDestroy
void GlobalNamespace::UIKeyboardManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OpenKeyboardFor
void GlobalNamespace::UIKeyboardManager::OpenKeyboardFor(HMUI::InputFieldView* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OpenKeyboardFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenKeyboardFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: UIKeyboardManager.CloseKeyboard
void GlobalNamespace::UIKeyboardManager::CloseKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::CloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.TransferKeyboardTo
void GlobalNamespace::UIKeyboardManager::TransferKeyboardTo(HMUI::InputFieldView* nextInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::TransferKeyboardTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferKeyboardTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextInput)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, nextInput);
}
// Autogenerated method: UIKeyboardManager.ShouldCloseKeyboard
bool GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldCloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, root);
}
// Autogenerated method: UIKeyboardManager.ProcessMousePress
void GlobalNamespace::UIKeyboardManager::ProcessMousePress(UnityEngine::GameObject* currentOverGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentOverGo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, currentOverGo);
}
// Autogenerated method: UIKeyboardManager.HandleKeyboardOkButton
void GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboardOkButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTextEntryController
#include "GlobalNamespace/VRTextEntryController.hpp"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UIKeyboard _uiKeyboard
GlobalNamespace::UIKeyboard*& GlobalNamespace::VRTextEntryController::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<GlobalNamespace::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::VRTextEntryController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _cursorText
TMPro::TextMeshProUGUI*& GlobalNamespace::VRTextEntryController::dyn__cursorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__cursorText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxLength
int& GlobalNamespace::VRTextEntryController::dyn__maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowBlank
bool& GlobalNamespace::VRTextEntryController::dyn__allowBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__allowBlank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowBlank"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> textDidChangeEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::VRTextEntryController::dyn_textDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn_textDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action okButtonWasPressedEvent
System::Action*& GlobalNamespace::VRTextEntryController::dyn_okButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn_okButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelButtonWasPressedEvent
System::Action*& GlobalNamespace::VRTextEntryController::dyn_cancelButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn_cancelButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _stopBlinkingCursor
bool& GlobalNamespace::VRTextEntryController::dyn__stopBlinkingCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::dyn__stopBlinkingCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopBlinkingCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTextEntryController.set_hideCancelButton
void GlobalNamespace::VRTextEntryController::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.get_text
::Il2CppString* GlobalNamespace::VRTextEntryController::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.set_text
void GlobalNamespace::VRTextEntryController::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::add_textDidChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.Awake
void GlobalNamespace::VRTextEntryController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnEnable
void GlobalNamespace::VRTextEntryController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnDisable
void GlobalNamespace::VRTextEntryController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.BlinkCursor
System::Collections::IEnumerator* GlobalNamespace::VRTextEntryController::BlinkCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::BlinkCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardTextKeyWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed(::Il2CppChar key) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardTextKeyWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, key);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardDeleteButtonWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardDeleteButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_0
void GlobalNamespace::VRTextEntryController::$Awake$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::<Awake>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_1
void GlobalNamespace::VRTextEntryController::$Awake$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::<Awake>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRTextEntryController <>4__this
GlobalNamespace::VRTextEntryController*& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRTextEntryController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <cursorColor>5__2
UnityEngine::Color& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$cursorColor$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$cursorColor$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cursorColor>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.IDisposable.Dispose
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.MoveNext
bool GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsContent
#include "GlobalNamespace/CreditsContent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _normalTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__normalTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__normalTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _normalLocalizedTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__normalLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__normalLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _titleTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__titleTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__titleTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _titleLocalizedTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__titleLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__titleLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _headerTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__headerTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__headerTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _headerLocalizedTextPrefab
UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__headerLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__headerLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _columnCount
int& GlobalNamespace::CreditsContent::dyn__columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__columnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spaceHeight
float& GlobalNamespace::CreditsContent::dyn__spaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__spaceHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spaceHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _titleHeight
float& GlobalNamespace::CreditsContent::dyn__titleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__titleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _contentRoot
UnityEngine::Transform*& GlobalNamespace::CreditsContent::dyn__contentRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__contentRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRoot"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rootRectTransform
UnityEngine::RectTransform*& GlobalNamespace::CreditsContent::dyn__rootRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__rootRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _creditsContentTextAsset
UnityEngine::TextAsset*& GlobalNamespace::CreditsContent::dyn__creditsContentTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::dyn__creditsContentTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creditsContentTextAsset"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsContent.get_normalTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_normalTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_normalLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_headerTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_columnCount
int GlobalNamespace::CreditsContent::get_columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_columnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_columnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_spaceHeight
float GlobalNamespace::CreditsContent::get_spaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_spaceHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spaceHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleHeight
float GlobalNamespace::CreditsContent::get_titleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_contentRoot
UnityEngine::Transform* GlobalNamespace::CreditsContent::get_contentRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_contentRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_rootRectTransform
UnityEngine::RectTransform* GlobalNamespace::CreditsContent::get_rootRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_rootRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsContent.get_creditsContentTextAsset
UnityEngine::TextAsset* GlobalNamespace::CreditsContent::get_creditsContentTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_creditsContentTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_creditsContentTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsController
#include "GlobalNamespace/CreditsController.hpp"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CreditsScenesTransitionSetupDataSO _creditsSceneSetupDataSO
GlobalNamespace::CreditsScenesTransitionSetupDataSO*& GlobalNamespace::CreditsController::dyn__creditsSceneSetupDataSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__creditsSceneSetupDataSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creditsSceneSetupDataSO"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPlayerBase _audioPlayer
GlobalNamespace::AudioPlayerBase*& GlobalNamespace::CreditsController::dyn__audioPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__audioPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioPlayerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
UnityEngine::UI::Button*& GlobalNamespace::CreditsController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
UnityEngine::RectTransform*& GlobalNamespace::CreditsController::dyn__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _overflowHeight
float& GlobalNamespace::CreditsController::dyn__overflowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__overflowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overflowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentWrapper
UnityEngine::RectTransform*& GlobalNamespace::CreditsController::dyn__contentWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__contentWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentWrapper"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::CreditsController::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::CreditsController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didFinish
bool& GlobalNamespace::CreditsController::dyn__didFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__didFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPaused
bool& GlobalNamespace::CreditsController::dyn__isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::dyn__isPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsController.Start
void GlobalNamespace::CreditsController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController.OnDestroy
void GlobalNamespace::CreditsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController.Finish
void GlobalNamespace::CreditsController::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController.ScrollCoroutine
System::Collections::IEnumerator* GlobalNamespace::CreditsController::ScrollCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::ScrollCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusCaptured
void GlobalNamespace::CreditsController::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusReleased
void GlobalNamespace::CreditsController::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsController <>4__this
GlobalNamespace::CreditsController*& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <contentHeight>5__2
float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentHeight$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentHeight$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contentHeight>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <contentWrapperHeight>5__3
float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentWrapperHeight$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentWrapperHeight$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contentWrapperHeight>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <posY>5__4
float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$posY$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$posY$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<posY>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <scrollingSpeed>5__5
float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$scrollingSpeed$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$scrollingSpeed$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<scrollingSpeed>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.MoveNext
bool GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsData
#include "GlobalNamespace/CreditsData.hpp"
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/RootCreditsItem[] creditsItems
::ArrayW<GlobalNamespace::CreditsData::RootCreditsItem*>& GlobalNamespace::CreditsData::dyn_creditsItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::dyn_creditsItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creditsItems"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::CreditsData::RootCreditsItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData.Deserialize
GlobalNamespace::CreditsData* GlobalNamespace::CreditsData::Deserialize(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CreditsData", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CreditsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Normal
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Normal
void GlobalNamespace::CreditsData::TextStyle::_set_Normal(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Title
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Title"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Title
void GlobalNamespace::CreditsData::TextStyle::_set_Title(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Title", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Header
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Header"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Header
void GlobalNamespace::CreditsData::TextStyle::_set_Header(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Header", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::CreditsData::TextStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String text
::Il2CppString*& GlobalNamespace::CreditsData::Text::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean localized
bool& GlobalNamespace::CreditsData::Text::dyn_localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::dyn_localized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/TextStyle style
GlobalNamespace::CreditsData::TextStyle& GlobalNamespace::CreditsData::Text::dyn_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::dyn_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsData::TextStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/Text.IsEmpty
bool GlobalNamespace::CreditsData::Text::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsData/Text.ToString
::Il2CppString* GlobalNamespace::CreditsData::Text::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text title
GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::RootCreditsItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text text
GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::RootCreditsItem::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rowCountOverride
int& GlobalNamespace::CreditsData::RootCreditsItem::dyn_rowCountOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::dyn_rowCountOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rowCountOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/ChildCreditsItem[] creditsItems
::ArrayW<GlobalNamespace::CreditsData::ChildCreditsItem*>& GlobalNamespace::CreditsData::RootCreditsItem::dyn_creditsItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::dyn_creditsItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creditsItems"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::CreditsData::ChildCreditsItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::RootCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasText
bool GlobalNamespace::CreditsData::RootCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasRowItems
bool GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRowItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text title
GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::ChildCreditsItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text text
GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::ChildCreditsItem::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/ChildCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CreditsData/ChildCreditsItem.HasText
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuShockwave
#include "GlobalNamespace/MenuShockwave.hpp"
// Including type: VRUIControls.VRPointer
#include "VRUIControls/VRPointer.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _shockwavePS
UnityEngine::ParticleSystem*& GlobalNamespace::MenuShockwave::dyn__shockwavePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::dyn__shockwavePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePS"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.VRPointer _vrPointer
VRUIControls::VRPointer*& GlobalNamespace::MenuShockwave::dyn__vrPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::dyn__vrPointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPointer"))->offset;
  return *reinterpret_cast<VRUIControls::VRPointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal[] _buttonClickEvents
::ArrayW<GlobalNamespace::Signal*>& GlobalNamespace::MenuShockwave::dyn__buttonClickEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::dyn__buttonClickEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonClickEvents"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::Signal*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _shockwavePSEmitParams
UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::MenuShockwave::dyn__shockwavePSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::dyn__shockwavePSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePSEmitParams"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuShockwave.Awake
void GlobalNamespace::MenuShockwave::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnEnable
void GlobalNamespace::MenuShockwave::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnDisable
void GlobalNamespace::MenuShockwave::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuShockwave.HandleButtonClickEvent
void GlobalNamespace::MenuShockwave::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuShockwave.SpawnShockwave
void GlobalNamespace::MenuShockwave::SpawnShockwave(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::SpawnShockwave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnShockwave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _overrideEnvironmentsToggle
UnityEngine::UI::Toggle*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEnvironmentsToggle"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _elementsGO
UnityEngine::GameObject*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elementsGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elementsGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentOverrideSettingsPanelController/Elements[] _elements
::ArrayW<GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements*>& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
HMUI::PanelAnimationSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
HMUI::PanelAnimationSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _allEnvironments
GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__allEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__allEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allEnvironments"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
GlobalNamespace::IAnalyticsModel*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OverrideEnvironmentSettings _overrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEnvironmentSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::OverrideEnvironmentSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.get_overrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OverrideEnvironmentSettings*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.SetData
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData(GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideEnvironmentSettings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, overrideEnvironmentSettings);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.Refresh
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleOverrideEnvironmentsToggleValueChanged
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideEnvironmentsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.<HandleOverrideEnvironmentsToggleValueChanged>b__16_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$HandleOverrideEnvironmentsToggleValueChanged$b__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::<HandleOverrideEnvironmentsToggleValueChanged>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideEnvironmentsToggleValueChanged>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI label
TMPro::TextMeshProUGUI*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_label() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "label"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.SimpleTextDropdown simpleTextDropdown
HMUI::SimpleTextDropdown*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleTextDropdown"))->offset;
  return *reinterpret_cast<HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentTypeSO environmentType
GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<EnvironmentInfoSO> <environmentInfos>k__BackingField
System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_$environmentInfos$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_$environmentInfos$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<environmentInfos>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.get_environmentInfos
System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.set_environmentInfos
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos(System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9(GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__12_0
System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__12_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__12_0(System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__12_0", value)));
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c..cctor
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentOverrideSettingsPanelController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c.<SetData>b__12_0
::Il2CppString* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::$SetData$b__12_0(GlobalNamespace::EnvironmentInfoSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::<SetData>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::FileBrowserTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::FileBrowserTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
UnityEngine::UI::Image*& GlobalNamespace::FileBrowserTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserTableCell.get_text
::Il2CppString* GlobalNamespace::FileBrowserTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FileBrowserTableCell.set_text
void GlobalNamespace::FileBrowserTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableCell.SelectionDidChange
void GlobalNamespace::FileBrowserTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: FileBrowserTableCell.HighlightDidChange
void GlobalNamespace::FileBrowserTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserTableView
#include "GlobalNamespace/FileBrowserTableView.hpp"
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "FileBrowserTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FileBrowserTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
HMUI::TableView*& GlobalNamespace::FileBrowserTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserTableCell _cellPrefab
GlobalNamespace::FileBrowserTableCell*& GlobalNamespace::FileBrowserTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FileBrowserTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
float& GlobalNamespace::FileBrowserTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<FileBrowserTableView,FileBrowserItem> didSelectRow
System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>*& GlobalNamespace::FileBrowserTableView::dyn_didSelectRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::dyn_didSelectRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRow"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserItem[] _items
::ArrayW<GlobalNamespace::FileBrowserItem*>& GlobalNamespace::FileBrowserTableView::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserTableView.add_didSelectRow
void GlobalNamespace::FileBrowserTableView::add_didSelectRow(System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.remove_didSelectRow
void GlobalNamespace::FileBrowserTableView::remove_didSelectRow(System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.Init
void GlobalNamespace::FileBrowserTableView::Init(::ArrayW<GlobalNamespace::FileBrowserItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SetItems
void GlobalNamespace::FileBrowserTableView::SetItems(::ArrayW<GlobalNamespace::FileBrowserItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SetItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRowToItemWithPath
bool GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath(::Il2CppString* folderPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRowToItemWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folderPath)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, folderPath);
}
// Autogenerated method: FileBrowserTableView.CellSize
float GlobalNamespace::FileBrowserTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.NumberOfCells
int GlobalNamespace::FileBrowserTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::FileBrowserTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.HandleDidSelectRowEvent
void GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRow
void GlobalNamespace::FileBrowserTableView::SelectAndScrollRow(int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SelectAndScrollRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, row);
}
// Autogenerated method: FileBrowserTableView.ClearSelection
void GlobalNamespace::FileBrowserTableView::ClearSelection(bool animated, bool scrollToRow0) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(scrollToRow0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, animated, scrollToRow0);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ArcadeFlowCoordinator
#include "GlobalNamespace/ArcadeFlowCoordinator.hpp"
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass26_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass26_0.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalLeaderboardsModel _localLeaderboardsModel
GlobalNamespace::LocalLeaderboardsModel*& GlobalNamespace::ArcadeFlowCoordinator::dyn__localLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__localLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::ArcadeFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::ArcadeFlowCoordinator::dyn__resultsLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__resultsLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController _tabBarViewController
GlobalNamespace::TabBarViewController*& GlobalNamespace::ArcadeFlowCoordinator::dyn__tabBarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__tabBarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabBarViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::TabBarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HowToPlayViewController _howToPlayViewController
GlobalNamespace::HowToPlayViewController*& GlobalNamespace::ArcadeFlowCoordinator::dyn__howToPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__howToPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_howToPlayViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HowToPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsManager _menuLightsManager
GlobalNamespace::MenuLightsManager*& GlobalNamespace::ArcadeFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultsViewController _resultsViewController
GlobalNamespace::ResultsViewController*& GlobalNamespace::ArcadeFlowCoordinator::dyn__resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalLeaderboardViewController _localLeaderboardViewController
GlobalNamespace::LocalLeaderboardViewController*& GlobalNamespace::ArcadeFlowCoordinator::dyn__localLeaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__localLeaderboardViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnterPlayerGuestNameViewController _enterNameViewController
GlobalNamespace::EnterPlayerGuestNameViewController*& GlobalNamespace::ArcadeFlowCoordinator::dyn__enterNameViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__enterNameViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterNameViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnterPlayerGuestNameViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::ArcadeFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArcadeFlowCoordinator.WillScoreGoToLeaderboard
bool GlobalNamespace::ArcadeFlowCoordinator::WillScoreGoToLeaderboard(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::WillScoreGoToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoToLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, practice);
}
// Autogenerated method: ArcadeFlowCoordinator.ProcessScore
bool GlobalNamespace::ArcadeFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice), ::il2cpp_utils::ExtractType(playerName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, practice, playerName);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resultsViewController);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resultsViewController);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, howToPlayOptions);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleHowToPlayTabSelected
void GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayTabSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayTabSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayTabSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0
void GlobalNamespace::ArcadeFlowCoordinator::$SinglePlayerLevelSelectionFlowCoordinatorDidActivate$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.<HandleHowToPlayTabSelected>b__28_0
void GlobalNamespace::ArcadeFlowCoordinator::$HandleHowToPlayTabSelected$b__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::<HandleHowToPlayTabSelected>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleHowToPlayTabSelected>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::ArcadeFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::ArcadeFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::ArcadeFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::ArcadeFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_showPlayerStatsInDetailView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::ArcadeFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: ArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: ArcadeFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::ArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ArcadeFlowCoordinator <>4__this
GlobalNamespace::ArcadeFlowCoordinator*& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::ArcadeFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelCompletionResults levelCompletionResults
GlobalNamespace::LevelCompletionResults*& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDifficultyBeatmap difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
bool& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArcadeFlowCoordinator/<>c__DisplayClass22_0.<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0
void GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::$ProcessLevelCompletionResultsAfterLevelDidFinish$b__0(GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass22_0::<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass26_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass26_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ArcadeFlowCoordinator <>4__this
GlobalNamespace::ArcadeFlowCoordinator*& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::ArcadeFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ResultsViewController resultsViewController
GlobalNamespace::ResultsViewController*& GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::dyn_resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::dyn_resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArcadeFlowCoordinator/<>c__DisplayClass26_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::$$c__DisplayClass26_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator
#include "GlobalNamespace/CampaignFlowCoordinator.hpp"
// Including type: CampaignFlowCoordinator/<>c__DisplayClass20_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass20_0.hpp"
// Including type: CampaignFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: MissionSelectionNavigationController
#include "GlobalNamespace/MissionSelectionNavigationController.hpp"
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsClearedLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__resultsClearedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__resultsClearedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsClearedLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsFailedLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__resultsFailedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__resultsFailedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsFailedLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _newObjectiveLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__newObjectiveLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__newObjectiveLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newObjectiveLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::CampaignFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
GlobalNamespace::MenuLightsManager*& GlobalNamespace::CampaignFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionSelectionNavigationController _missionSelectionNavigationController
GlobalNamespace::MissionSelectionNavigationController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionSelectionNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__missionSelectionNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionSelectionNavigationController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionSelectionNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionResultsViewController _missionResultsViewController
GlobalNamespace::MissionResultsViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionResultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__missionResultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionResultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionHelpViewController _missionHelpViewController
GlobalNamespace::MissionHelpViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionHelpViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__missionHelpViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionHelpViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::CampaignFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CampaignProgressModel _campaignProgressModel
GlobalNamespace::CampaignProgressModel*& GlobalNamespace::CampaignFlowCoordinator::dyn__campaignProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__campaignProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignProgressModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CampaignFlowCoordinator> didFinishEvent
System::Action_1<GlobalNamespace::CampaignFlowCoordinator*>*& GlobalNamespace::CampaignFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::CampaignFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showCredits
bool& GlobalNamespace::CampaignFlowCoordinator::dyn__showCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::dyn__showCredits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showCredits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator.add_didFinishEvent
void GlobalNamespace::CampaignFlowCoordinator::add_didFinishEvent(System::Action_1<GlobalNamespace::CampaignFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: CampaignFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::CampaignFlowCoordinator::remove_didFinishEvent(System::Action_1<GlobalNamespace::CampaignFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionSelectionNavigationControllerDidPressPlayButton
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionSelectionNavigationControllerDidPressPlayButton(GlobalNamespace::MissionSelectionNavigationController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::HandleMissionSelectionNavigationControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionSelectionNavigationControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionHelpViewControllerDidFinish
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionHelpViewControllerDidFinish(GlobalNamespace::MissionHelpViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::HandleMissionHelpViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionHelpViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionResultsViewControllerContinueButtonPressed
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerContinueButtonPressed(GlobalNamespace::MissionResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionResultsViewControllerRetryButtonPressed
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerRetryButtonPressed(GlobalNamespace::MissionResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerRetryButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionResultsViewControllerRetryButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.StartLevel
void GlobalNamespace::CampaignFlowCoordinator::StartLevel(System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::StartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beforeSceneSwitchCallback);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionLevelSceneDidFinish
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneDidFinish(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: CampaignFlowCoordinator.<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0
void GlobalNamespace::CampaignFlowCoordinator::$HandleMissionResultsViewControllerContinueButtonPressed$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CampaignFlowCoordinator.<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1
void GlobalNamespace::CampaignFlowCoordinator::$HandleMissionResultsViewControllerContinueButtonPressed$b__21_1(bool presented) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(presented)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, presented);
}
// Autogenerated method: CampaignFlowCoordinator.DidActivate
void GlobalNamespace::CampaignFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: CampaignFlowCoordinator.DidDeactivate
void GlobalNamespace::CampaignFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: CampaignFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::CampaignFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: CampaignFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::CampaignFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator/<>c__DisplayClass20_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass20_0.hpp"
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CampaignFlowCoordinator <>4__this
GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionHelpViewController viewController
GlobalNamespace::MissionHelpViewController*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionHelpViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator/<>c__DisplayClass20_0.<HandleMissionHelpViewControllerDidFinish>b__0
void GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::$HandleMissionHelpViewControllerDidFinish$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::<HandleMissionHelpViewControllerDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionHelpViewControllerDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CampaignFlowCoordinator <>4__this
GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionResultsViewController viewController
GlobalNamespace::MissionResultsViewController*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator/<>c__DisplayClass22_0.<HandleMissionResultsViewControllerRetryButtonPressed>b__0
void GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::$HandleMissionResultsViewControllerRetryButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::<HandleMissionResultsViewControllerRetryButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerRetryButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarFlowCoordinator
#include "GlobalNamespace/EditAvatarFlowCoordinator.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: AvatarTweenController
#include "GlobalNamespace/AvatarTweenController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: EditColorController
#include "GlobalNamespace/EditColorController.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
GlobalNamespace::AvatarVisualController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarTweenController _avatarTweenController
GlobalNamespace::AvatarTweenController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarTweenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarTweenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarTweenController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _avatarContainerGameObject
UnityEngine::GameObject*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarContainerGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarContainerGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarContainerGameObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarViewController _editAvatarViewController
GlobalNamespace::EditAvatarViewController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::EditAvatarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditColorController _editColorViewController
GlobalNamespace::EditColorController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editColorViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__editColorViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::EditColorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
GlobalNamespace::AvatarDataModel*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<EditAvatarViewController/AvatarEditPart,System.Action> _parameterChangedAnimationCallbacks
System::Collections::Generic::Dictionary_2<GlobalNamespace::EditAvatarViewController::AvatarEditPart, System::Action*>*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__parameterChangedAnimationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__parameterChangedAnimationCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterChangedAnimationCallbacks"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::EditAvatarViewController::AvatarEditPart, System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator/EditAvatarType _editAvatarType
GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarType"))->offset;
  return *reinterpret_cast<GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<EditAvatarFlowCoordinator,EditAvatarFlowCoordinator/EditAvatarType> didFinishEvent
System::Action_2<GlobalNamespace::EditAvatarFlowCoordinator*, GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>*& GlobalNamespace::EditAvatarFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::EditAvatarFlowCoordinator*, GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarFlowCoordinator.add_didFinishEvent
void GlobalNamespace::EditAvatarFlowCoordinator::add_didFinishEvent(System::Action_2<GlobalNamespace::EditAvatarFlowCoordinator*, GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::EditAvatarFlowCoordinator::remove_didFinishEvent(System::Action_2<GlobalNamespace::EditAvatarFlowCoordinator*, GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.Setup
void GlobalNamespace::EditAvatarFlowCoordinator::Setup(GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editAvatarType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, editAvatarType);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerDidRequestColorChange
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidRequestColorChange(System::Action_1<UnityEngine::Color>* colorCallback, UnityEngine::Color currentColor, GlobalNamespace::EditAvatarViewController::AvatarEditPart editPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidRequestColorChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidRequestColorChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorCallback), ::il2cpp_utils::ExtractType(currentColor), ::il2cpp_utils::ExtractType(editPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorCallback, currentColor, editPart, uvSegment);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerChangedAvatarPart
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerChangedAvatarPart(GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerChangedAvatarPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerChangedAvatarPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarPart)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, avatarPart);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerDidFinished
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditColorViewControllerDidChangedColor
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidChangedColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidChangedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorViewControllerDidChangedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditColorViewControllerDidFinish
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidFinish(bool apply) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(apply)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, apply);
}
// Autogenerated method: EditAvatarFlowCoordinator.DidActivate
void GlobalNamespace::EditAvatarFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EditAvatarFlowCoordinator.DidDeactivate
void GlobalNamespace::EditAvatarFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarFlowCoordinator/EditAvatarType
#include "GlobalNamespace/EditAvatarFlowCoordinator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EditAvatarFlowCoordinator/EditAvatarType Create
GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>("", "EditAvatarFlowCoordinator/EditAvatarType", "Create"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarFlowCoordinator/EditAvatarType Create
void GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Create(GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarFlowCoordinator/EditAvatarType", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarFlowCoordinator/EditAvatarType Edit
GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Edit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Edit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>("", "EditAvatarFlowCoordinator/EditAvatarType", "Edit"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarFlowCoordinator/EditAvatarType Edit
void GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Edit(GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Edit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarFlowCoordinator/EditAvatarType", "Edit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: HealthWarningFlowCoordinator/InitData
#include "GlobalNamespace/HealthWarningFlowCoordinator_InitData.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: DlcPromoExperimentModel
#include "GlobalNamespace/DlcPromoExperimentModel.hpp"
// Including type: EulaViewController
#include "GlobalNamespace/EulaViewController.hpp"
// Including type: HealthWarningViewController
#include "GlobalNamespace/HealthWarningViewController.hpp"
// Including type: PrivacyPolicyViewController
#include "GlobalNamespace/PrivacyPolicyViewController.hpp"
// Including type: SelectLanguageViewController
#include "GlobalNamespace/SelectLanguageViewController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DlcPromoExperimentModel _dlcPromoExperimentModel
GlobalNamespace::DlcPromoExperimentModel*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__dlcPromoExperimentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__dlcPromoExperimentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoExperimentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::DlcPromoExperimentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EulaViewController _eulaViewController
GlobalNamespace::EulaViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__eulaViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__eulaViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eulaViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::EulaViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HealthWarningViewController _healthWarningViewController
GlobalNamespace::HealthWarningViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__healthWarningViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__healthWarningViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PrivacyPolicyViewController _privacyPolicyViewController
GlobalNamespace::PrivacyPolicyViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__privacyPolicyViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__privacyPolicyViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_privacyPolicyViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PrivacyPolicyViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectLanguageViewController _selectLanguageViewController
GlobalNamespace::SelectLanguageViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectLanguageViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectLanguageViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectLanguageViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectLanguageViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataContainerSO _appInitScenesTransitionSetupDataContainer
GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__appInitScenesTransitionSetupDataContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__appInitScenesTransitionSetupDataContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appInitScenesTransitionSetupDataContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
GlobalNamespace::FadeInOutController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningFlowCoordinator/InitData _initData
GlobalNamespace::HealthWarningFlowCoordinator::InitData*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningFlowCoordinator::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<HMUI.ViewController,System.String> _viewControllerTitles
System::Collections::Generic::Dictionary_2<HMUI::ViewController*, ::Il2CppString*>*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__viewControllerTitles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::dyn__viewControllerTitles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewControllerTitles"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<HMUI::ViewController*, ::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningFlowCoordinator.GetEulaOrHealthWarningViewController
HMUI::ViewController* GlobalNamespace::HealthWarningFlowCoordinator::GetEulaOrHealthWarningViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::GetEulaOrHealthWarningViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEulaOrHealthWarningViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.Update
void GlobalNamespace::HealthWarningFlowCoordinator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleSelectLanguageViewControllerDidChangeLanguage
void GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidChangeLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidChangeLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectLanguageViewControllerDidChangeLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleSelectLanguageViewControllerDidPressContinueButton
void GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidPressContinueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidPressContinueButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectLanguageViewControllerDidPressContinueButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleEulaViewControllerDidFinish
void GlobalNamespace::HealthWarningFlowCoordinator::HandleEulaViewControllerDidFinish(bool agreed) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleEulaViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEulaViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(agreed)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, agreed);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleHealthWarningViewControllerPrivacyPolicyButtonPressed
void GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerPrivacyPolicyButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerPrivacyPolicyButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHealthWarningViewControllerPrivacyPolicyButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed
void GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleHealthWarningViewControllerDidFinish
void GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHealthWarningViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.GoToNextScene
void GlobalNamespace::HealthWarningFlowCoordinator::GoToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::GoToNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.<HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed>b__23_0
void GlobalNamespace::HealthWarningFlowCoordinator::$HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed$b__23_0(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::<HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleHealthWarningViewControllerOpenDataPrivacyPolicyButtonPressed>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, button);
}
// Autogenerated method: HealthWarningFlowCoordinator.DidActivate
void GlobalNamespace::HealthWarningFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HealthWarningFlowCoordinator.DidDeactivate
void GlobalNamespace::HealthWarningFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HealthWarningFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::HealthWarningFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: HealthWarningFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::HealthWarningFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningFlowCoordinator/InitData
#include "GlobalNamespace/HealthWarningFlowCoordinator_InitData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScenesTransitionSetupDataSO nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::HealthWarningFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelSelectionFlowCoordinator
#include "GlobalNamespace/LevelSelectionFlowCoordinator.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: LevelSelectionNavigationController
#include "GlobalNamespace/LevelSelectionNavigationController.hpp"
// Including type: SearchFilterParamsViewController
#include "GlobalNamespace/SearchFilterParamsViewController.hpp"
// Including type: LevelSearchViewController
#include "GlobalNamespace/LevelSearchViewController.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly PlayerDataModel playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn_playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::dyn_playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LevelSelectionNavigationController levelSelectionNavigationController
GlobalNamespace::LevelSelectionNavigationController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn_levelSelectionNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::dyn_levelSelectionNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelSelectionNavigationController"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelSelectionNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SearchFilterParamsViewController _searchFilterParamsViewController
GlobalNamespace::SearchFilterParamsViewController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__searchFilterParamsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::dyn__searchFilterParamsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_searchFilterParamsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SearchFilterParamsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelSearchViewController _levelSearchViewController
GlobalNamespace::LevelSearchViewController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__levelSearchViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::dyn__levelSearchViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSearchViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelSearchViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _startState
GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__startState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::dyn__startState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startState"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_isInRootViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_isInRootViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_isInRootViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInRootViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedLevelCategory
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedLevelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedBeatmapLevelPack
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialLeftScreenViewController
HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialLeftScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_initialLeftScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialLeftScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialRightScreenViewController
HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialRightScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_initialRightScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialRightScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_showPlayerStatsInDetailView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_actionButtonText
::Il2CppString* GlobalNamespace::LevelSelectionFlowCoordinator::get_actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_actionButtonText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_mainTitle
::Il2CppString* GlobalNamespace::LevelSelectionFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_enableCustomLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_songPackMask
GlobalNamespace::SongPackMask GlobalNamespace::LevelSelectionFlowCoordinator::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_songPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_allowedBeatmapDifficultyMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::LevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_notAllowedCharacteristics
::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::LevelSelectionFlowCoordinator::get_notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::get_notAllowedCharacteristics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_notAllowedCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::LevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::ActionButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.PracticeButtonWasPressed
void GlobalNamespace::LevelSelectionFlowCoordinator::PracticeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::PracticeButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PracticeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.SelectionDidChange
void GlobalNamespace::LevelSelectionFlowCoordinator::SelectionDidChange(GlobalNamespace::IBeatmapLevelPack* pack, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(beatmap)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pack, beatmap);
}
// Autogenerated method: LevelSelectionFlowCoordinator.Setup
void GlobalNamespace::LevelSelectionFlowCoordinator::Setup(GlobalNamespace::LevelSelectionFlowCoordinator::State* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidSelectPack
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidSelectPack(GlobalNamespace::LevelSelectionNavigationController* viewController, GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidSelectPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidSelectPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(pack)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, pack);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleSearchFilterParamsViewControllerDidFinish
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleSearchFilterParamsViewControllerDidFinish(GlobalNamespace::SearchFilterParamsViewController* viewController, GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleSearchFilterParamsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSearchFilterParamsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelFilterParams)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, levelFilterParams);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSearchViewControllerDidPressSearchButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSearchViewControllerDidPressSearchButton(GlobalNamespace::LevelSearchViewController* viewController, GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSearchViewControllerDidPressSearchButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSearchViewControllerDidPressSearchButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelFilterParams)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, levelFilterParams);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidPressActionButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressActionButton(GlobalNamespace::LevelSelectionNavigationController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressActionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidPressActionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidPressPracticeButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressPracticeButton(GlobalNamespace::LevelSelectionNavigationController* viewController, GlobalNamespace::IBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressPracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidPressPracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(level)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, level);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap(GlobalNamespace::LevelSelectionNavigationController* viewController, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(beatmap)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, beatmap);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent(GlobalNamespace::LevelSelectionNavigationController* viewController, GlobalNamespace::StandardLevelDetailViewController::ContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(contentType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, contentType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.Refresh
void GlobalNamespace::LevelSelectionFlowCoordinator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.IsMainViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::IsMainViewController(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::IsMainViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: LevelSelectionFlowCoordinator.PresentMainViewController
void GlobalNamespace::LevelSelectionFlowCoordinator::PresentMainViewController(System::Action* finishedCallback, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::PresentMainViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, finishedCallback, animationType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.DidActivate
void GlobalNamespace::LevelSelectionFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelSelectionFlowCoordinator.DidDeactivate
void GlobalNamespace::LevelSelectionFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LevelSelectionFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::LevelSelectionFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Nullable`1<SelectLevelCategoryViewController/LevelCategory> levelCategory
System::Nullable_1<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_levelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_levelCategory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCategory"))->offset;
  return *reinterpret_cast<System::Nullable_1<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelPack beatmapLevelPack
GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPack"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IDifficultyBeatmap difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainFlowCoordinator
#include "GlobalNamespace/MainFlowCoordinator.hpp"
// Including type: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40
#include "GlobalNamespace/MainFlowCoordinator_-ProcessMenuDestinationRequestAfterFrameCoroutine-d__40.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: SoloFreePlayFlowCoordinator
#include "GlobalNamespace/SoloFreePlayFlowCoordinator.hpp"
// Including type: PartyFreePlayFlowCoordinator
#include "GlobalNamespace/PartyFreePlayFlowCoordinator.hpp"
// Including type: CampaignFlowCoordinator
#include "GlobalNamespace/CampaignFlowCoordinator.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator.hpp"
// Including type: LevelSelectionFlowCoordinator
#include "GlobalNamespace/LevelSelectionFlowCoordinator.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: PlayerOptionsViewController
#include "GlobalNamespace/PlayerOptionsViewController.hpp"
// Including type: PlayerStatisticsViewController
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _startWithSettings
bool GlobalNamespace::MainFlowCoordinator::_get__startWithSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::_get__startWithSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainFlowCoordinator", "_startWithSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _startWithSettings
void GlobalNamespace::MainFlowCoordinator::_set__startWithSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::_set__startWithSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainFlowCoordinator", "_startWithSettings", value));
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::MainFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SoloFreePlayFlowCoordinator _soloFreePlayFlowCoordinator
GlobalNamespace::SoloFreePlayFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__soloFreePlayFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__soloFreePlayFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloFreePlayFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::SoloFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PartyFreePlayFlowCoordinator _partyFreePlayFlowCoordinator
GlobalNamespace::PartyFreePlayFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__partyFreePlayFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__partyFreePlayFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyFreePlayFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::PartyFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CampaignFlowCoordinator _campaignFlowCoordinator
GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__campaignFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__campaignFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SettingsFlowCoordinator _settingsFlowCoordinator
GlobalNamespace::SettingsFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__settingsFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__settingsFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::SettingsFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerModeSelectionFlowCoordinator _multiplayerModeSelectionFlowCoordinator
GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__multiplayerModeSelectionFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__multiplayerModeSelectionFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSelectionFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarFlowCoordinator _editAvatarFlowCoordinator
GlobalNamespace::EditAvatarFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__editAvatarFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__editAvatarFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::EditAvatarFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::MainFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainMenuViewController _mainMenuViewController
GlobalNamespace::MainMenuViewController*& GlobalNamespace::MainFlowCoordinator::dyn__mainMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__mainMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HowToPlayViewController _howToPlayViewController
GlobalNamespace::HowToPlayViewController*& GlobalNamespace::MainFlowCoordinator::dyn__howToPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__howToPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_howToPlayViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HowToPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerOptionsViewController _playerOptionsViewController
GlobalNamespace::PlayerOptionsViewController*& GlobalNamespace::MainFlowCoordinator::dyn__playerOptionsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__playerOptionsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerOptionsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerOptionsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OptionsViewController _optionsViewController
GlobalNamespace::OptionsViewController*& GlobalNamespace::MainFlowCoordinator::dyn__optionsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__optionsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::OptionsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerStatisticsViewController _playerStatisticsViewController
GlobalNamespace::PlayerStatisticsViewController*& GlobalNamespace::MainFlowCoordinator::dyn__playerStatisticsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__playerStatisticsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerStatisticsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerStatisticsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::MainFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
GlobalNamespace::MenuLightsManager*& GlobalNamespace::MainFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
GlobalNamespace::FadeInOutController*& GlobalNamespace::MainFlowCoordinator::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::MainFlowCoordinator::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MainFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::MainFlowCoordinator::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuDestination _menuDestinationRequest
GlobalNamespace::MenuDestination*& GlobalNamespace::MainFlowCoordinator::dyn__menuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__menuDestinationRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuDestinationRequest"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.FlowCoordinator _afterDialogPromptFlowCoordinator
HMUI::FlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__afterDialogPromptFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::dyn__afterDialogPromptFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterDialogPromptFlowCoordinator"))->offset;
  return *reinterpret_cast<HMUI::FlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainFlowCoordinator.PresentFlowCoordinatorOrAskForTutorial
void GlobalNamespace::MainFlowCoordinator::PresentFlowCoordinatorOrAskForTutorial(HMUI::FlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::PresentFlowCoordinatorOrAskForTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentFlowCoordinatorOrAskForTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleMainMenuViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerDidFinish(GlobalNamespace::MainMenuViewController* viewController, GlobalNamespace::MainMenuViewController::MenuButton subMenuType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainMenuViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(subMenuType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, subMenuType);
}
// Autogenerated method: MainFlowCoordinator.HandleOptionsViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleOptionsViewControllerDidFinish(GlobalNamespace::OptionsViewController::OptionsButton optionsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleOptionsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOptionsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionsType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, optionsType);
}
// Autogenerated method: MainFlowCoordinator.HandlePlayerOptionsViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandlePlayerOptionsViewControllerDidFinish(HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandlePlayerOptionsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerOptionsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: MainFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, howToPlayOptions);
}
// Autogenerated method: MainFlowCoordinator.HandleCampaignFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleCampaignFlowCoordinatorDidFinish(GlobalNamespace::CampaignFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleCampaignFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCampaignFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleEditAvatarFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleEditAvatarFlowCoordinatorDidFinish(GlobalNamespace::EditAvatarFlowCoordinator* flowCoordinator, GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleEditAvatarFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator), ::il2cpp_utils::ExtractType(editAvatarType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator, editAvatarType);
}
// Autogenerated method: MainFlowCoordinator.HandleSoloFreePlayFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleSoloFreePlayFlowCoordinatorDidFinish(GlobalNamespace::LevelSelectionFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleSoloFreePlayFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSoloFreePlayFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandlePartyFreePlayFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandlePartyFreePlayFlowCoordinatorDidFinish(GlobalNamespace::LevelSelectionFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandlePartyFreePlayFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyFreePlayFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleSettingsFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleSettingsFlowCoordinatorDidFinish(GlobalNamespace::SettingsFlowCoordinator* settingsFlowCoordinator, GlobalNamespace::SettingsFlowCoordinator::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleSettingsFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSettingsFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsFlowCoordinator), ::il2cpp_utils::ExtractType(finishAction)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, settingsFlowCoordinator, finishAction);
}
// Autogenerated method: MainFlowCoordinator.HandleMultiplayerModeSelectionFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleMultiplayerModeSelectionFlowCoordinatorDidFinish(GlobalNamespace::MultiplayerModeSelectionFlowCoordinator* multiplayerModeSelectionFlowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleMultiplayerModeSelectionFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerModeSelectionFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSelectionFlowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, multiplayerModeSelectionFlowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleMainMenuViewControllerMusicPackPromoButtonWasPressed
void GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerMusicPackPromoButtonWasPressed(GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerMusicPackPromoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainMenuViewControllerMusicPackPromoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapLevelPack);
}
// Autogenerated method: MainFlowCoordinator.ProcessMenuDestinationRequest
void GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequest(GlobalNamespace::MenuDestination* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, destination);
}
// Autogenerated method: MainFlowCoordinator.PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator
void GlobalNamespace::MainFlowCoordinator::PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.ProcessMenuDestinationRequestAfterFrameCoroutine
System::Collections::IEnumerator* GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequestAfterFrameCoroutine(GlobalNamespace::MenuDestination* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequestAfterFrameCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMenuDestinationRequestAfterFrameCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, destination);
}
// Autogenerated method: MainFlowCoordinator.<PresentFlowCoordinatorOrAskForTutorial>b__26_0
void GlobalNamespace::MainFlowCoordinator::$PresentFlowCoordinatorOrAskForTutorial$b__26_0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::<PresentFlowCoordinatorOrAskForTutorial>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentFlowCoordinatorOrAskForTutorial>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.<PresentFlowCoordinatorOrAskForTutorial>b__26_1
void GlobalNamespace::MainFlowCoordinator::$PresentFlowCoordinatorOrAskForTutorial$b__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::<PresentFlowCoordinatorOrAskForTutorial>b__26_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentFlowCoordinatorOrAskForTutorial>b__26_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.<HandleMainMenuViewControllerDidFinish>b__27_0
void GlobalNamespace::MainFlowCoordinator::$HandleMainMenuViewControllerDidFinish$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::<HandleMainMenuViewControllerDidFinish>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainMenuViewControllerDidFinish>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.<HandleMainMenuViewControllerDidFinish>b__27_1
void GlobalNamespace::MainFlowCoordinator::$HandleMainMenuViewControllerDidFinish$b__27_1(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::<HandleMainMenuViewControllerDidFinish>b__27_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainMenuViewControllerDidFinish>b__27_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__39_0
void GlobalNamespace::MainFlowCoordinator::$PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator$b__39_0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.DidActivate
void GlobalNamespace::MainFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MainFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::MainFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MainFlowCoordinator.InitialViewControllerWasPresented
void GlobalNamespace::MainFlowCoordinator::InitialViewControllerWasPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::InitialViewControllerWasPresented");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialViewControllerWasPresented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.DidDeactivate
void GlobalNamespace::MainFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: MainFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MainFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40
#include "GlobalNamespace/MainFlowCoordinator_-ProcessMenuDestinationRequestAfterFrameCoroutine-d__40.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MainFlowCoordinator <>4__this
GlobalNamespace::MainFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuDestination destination
GlobalNamespace::MenuDestination*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::dyn_destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destination"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40.System.IDisposable.Dispose
void GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40.MoveNext
bool GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__40.System.Collections.IEnumerator.Reset
void GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__40::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserFlowCoordinator
#include "GlobalNamespace/GameServerBrowserFlowCoordinator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerBrowserFlowCoordinator.DidActivate
void GlobalNamespace::GameServerBrowserFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerBrowserFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerLobbyFlowCoordinator
#include "GlobalNamespace/GameServerLobbyFlowCoordinator.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass61_0.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_1
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass61_1.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass75_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass75_0.hpp"
// Including type: HMUI.ScreenModeSO
#include "HMUI/ScreenModeSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: ServerPlayerListViewController
#include "GlobalNamespace/ServerPlayerListViewController.hpp"
// Including type: SelectModifiersViewController
#include "GlobalNamespace/SelectModifiersViewController.hpp"
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: MultiplayerResultsViewController
#include "GlobalNamespace/MultiplayerResultsViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: ConnectionErrorDialogViewController
#include "GlobalNamespace/ConnectionErrorDialogViewController.hpp"
// Including type: MultiplayerSettingsPanelController
#include "GlobalNamespace/MultiplayerSettingsPanelController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: LobbySetupViewController
#include "GlobalNamespace/LobbySetupViewController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: HMUI.ScreenModeController
#include "HMUI/ScreenModeController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xF0DBE4
// Autogenerated static field getter
// Get static field: static private System.String kPlayersMissingEntitlementKey
::Il2CppString* GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kPlayersMissingEntitlementKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kPlayersMissingEntitlementKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServerLobbyFlowCoordinator", "kPlayersMissingEntitlementKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayersMissingEntitlementKey
void GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kPlayersMissingEntitlementKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kPlayersMissingEntitlementKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator", "kPlayersMissingEntitlementKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxPredictedStartTimeDifference
float GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kMaxPredictedStartTimeDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kMaxPredictedStartTimeDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameServerLobbyFlowCoordinator", "kMaxPredictedStartTimeDifference"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxPredictedStartTimeDifference
void GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kMaxPredictedStartTimeDifference(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kMaxPredictedStartTimeDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator", "kMaxPredictedStartTimeDifference", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScreenModeSO _screenMode
HMUI::ScreenModeSO*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenMode"))->offset;
  return *reinterpret_cast<HMUI::ScreenModeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _ambienceAudioClip
UnityEngine::AudioClip*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__ambienceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__ambienceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambienceAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ServerPlayerListViewController _serverPlayerListViewController
GlobalNamespace::ServerPlayerListViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__serverPlayerListViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__serverPlayerListViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverPlayerListViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ServerPlayerListViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SelectModifiersViewController _selectModifiersViewController
GlobalNamespace::SelectModifiersViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__selectModifiersViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__selectModifiersViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectModifiersViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectModifiersViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelSelectionFlowCoordinator _multiplayerLevelSelectionFlowCoordinator
GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLevelSelectionFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLevelSelectionFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelSelectionFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerResultsViewController _multiplayerResultsViewController
GlobalNamespace::MultiplayerResultsViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerResultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerResultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerResultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectionErrorDialogViewController _connectionErrorDialogViewController
GlobalNamespace::ConnectionErrorDialogViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__connectionErrorDialogViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__connectionErrorDialogViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionErrorDialogViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ConnectionErrorDialogViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSettingsPanelController _multiplayerSettingsPanelController
GlobalNamespace::MultiplayerSettingsPanelController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerSettingsPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerSettingsPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSettingsPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSettingsPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyController _multiplayerLobbyController
GlobalNamespace::MultiplayerLobbyController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLobbyController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLobbyController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOutController
GlobalNamespace::FadeInOutController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__fadeInOutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__fadeInOutController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOutController"))->offset;
  return *reinterpret_cast<GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CenterStageScreenController _centerStageScreenController
GlobalNamespace::CenterStageScreenController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__centerStageScreenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__centerStageScreenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerStageScreenController"))->offset;
  return *reinterpret_cast<GlobalNamespace::CenterStageScreenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbySetupViewController _lobbySetupViewController
GlobalNamespace::LobbySetupViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbySetupViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::LobbySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ScreenModeController _screenModeController
HMUI::ScreenModeController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenModeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenModeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenModeController"))->offset;
  return *reinterpret_cast<HMUI::ScreenModeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsModel _platformLeaderboardsModel
GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__platformLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__platformLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
GlobalNamespace::IAnalyticsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _lastSimpleLevelSelectionFlowCoordinatorState
GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lastSimpleLevelSelectionFlowCoordinatorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lastSimpleLevelSelectionFlowCoordinatorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSimpleLevelSelectionFlowCoordinatorState"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isAlreadyFinishing
bool& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__isAlreadyFinishing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__isAlreadyFinishing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isAlreadyFinishing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.StringBuilder _stringBuilder
System::Text::StringBuilder*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _canStartGameCts
System::Threading::CancellationTokenSource*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__canStartGameCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__canStartGameCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canStartGameCts"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action willFinishEvent
System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_willFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_willFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishEvent
System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <rejoinQuickPlay>k__BackingField
bool& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_$rejoinQuickPlay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_$rejoinQuickPlay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rejoinQuickPlay>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isPartyOwner
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isPublicGame
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPublicGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPublicGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPublicGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isManaged
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isManaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_isManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isQuickStartServer
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickStartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickStartServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isQuickStartServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isQuickPlayServer
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickPlayServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickPlayServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isQuickPlayServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_rejoinQuickPlay
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_rejoinQuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::get_rejoinQuickPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rejoinQuickPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.set_rejoinQuickPlay
void GlobalNamespace::GameServerLobbyFlowCoordinator::set_rejoinQuickPlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::set_rejoinQuickPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rejoinQuickPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_willFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_willFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::add_willFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_willFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_willFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::remove_willFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_didFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.PresentBackButtonConfirmationDialog
void GlobalNamespace::GameServerLobbyFlowCoordinator::PresentBackButtonConfirmationDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::PresentBackButtonConfirmationDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentBackButtonConfirmationDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.Finish
void GlobalNamespace::GameServerLobbyFlowCoordinator::Finish(System::Action* finishedCallback, bool withFadeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(withFadeOut)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, finishedCallback, withFadeOut);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.GetInitialGameState
void GlobalNamespace::GameServerLobbyFlowCoordinator::GetInitialGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::GetInitialGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitialGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyPlayersDataModelDidChange
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayersDataModelDidChange(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayersDataModelDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayersDataModelDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerSelectBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerSelectBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isActive);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLobbyDisconnected
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLobbyDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLobbyDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLobbyDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel(GlobalNamespace::LevelSelectionFlowCoordinator::State* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerSelectModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerSelectModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerClearSelectedBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerClearSelectedModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerClearSelectedModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStateChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStateChanged(GlobalNamespace::MultiplayerLobbyState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerSelectSuggestedBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedBeatmap(::Il2CppString* levelId, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerSelectSuggestedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, modifiers);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerKickPlayer
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerKickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownStarted
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCountdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownCancelled
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownCancelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCountdownCancelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerStartTimeChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerStartTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerSongStillDownloading
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerSongStillDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerSongStillDownloading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerSongStillDownloading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerStartGameOrReady
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerStartGameOrReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerStartGameOrReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerStartGameOrReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerCancelGameOrUnready
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerCancelGameOrUnready() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerCancelGameOrUnready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerCancelGameOrUnready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCancelStartTime
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCancelStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCancelStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCancelStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStartedPresentView
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStartedPresentView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStartedPresentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStartedPresentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelFinished
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelFinished(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelDidGetDisconnected
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelDidGetDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelDidGetDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLevelDidGetDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerResultsViewControllerBackToLobbyPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToLobbyPressed(GlobalNamespace::MultiplayerResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToLobbyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerResultsViewControllerBackToLobbyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerResultsViewControllerBackToMenuPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToMenuPressed(GlobalNamespace::MultiplayerResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToMenuPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerResultsViewControllerBackToMenuPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetupLobbyWithPermissions
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetupLobbyWithPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::SetupLobbyWithPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLobbyWithPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetLobbyPlayerDataToViews
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetLobbyPlayerDataToViews(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::SetLobbyPlayerDataToViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerDataToViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowSideViewControllers
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowSideViewControllers(bool showSideViewControllers, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::ShowSideViewControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSideViewControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showSideViewControllers), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, showSideViewControllers, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowBackButton
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowBackButton(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::ShowBackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowBackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, show);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.GetLocalizedTitle
::Il2CppString* GlobalNamespace::GameServerLobbyFlowCoordinator::GetLocalizedTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::GetLocalizedTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalizedTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetTitle
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetTitle(HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, newViewController, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowDisconnectDialogAndFinish
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowDisconnectDialogAndFinish(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::ShowDisconnectDialogAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDisconnectDialogAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.UpdateLocalPlayerIsActiveState
void GlobalNamespace::GameServerLobbyFlowCoordinator::UpdateLocalPlayerIsActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::UpdateLocalPlayerIsActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalPlayerIsActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isActive);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameBeforeSceneSwitchCallback
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameBeforeSceneSwitchCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameBeforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameBeforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateStartButtonEnabled
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateStartButtonEnabled(GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cannotStartGameReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel(GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyPlayerPermissionsModelPermissionsChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayerPermissionsModelPermissionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayerPermissionsModelPermissionsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayerPermissionsModelPermissionsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DismissViewControllersAndCoordinators
void GlobalNamespace::GameServerLobbyFlowCoordinator::DismissViewControllersAndCoordinators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::DismissViewControllersAndCoordinators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissViewControllersAndCoordinators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.<PresentBackButtonConfirmationDialog>b__60_0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$PresentBackButtonConfirmationDialog$b__60_0(int btnIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::<PresentBackButtonConfirmationDialog>b__60_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentBackButtonConfirmationDialog>b__60_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnIndex)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, btnIndex);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.<ShowDisconnectDialogAndFinish>b__95_0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$ShowDisconnectDialogAndFinish$b__95_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::<ShowDisconnectDialogAndFinish>b__95_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShowDisconnectDialogAndFinish>b__95_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DidActivate
void GlobalNamespace::GameServerLobbyFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DidDeactivate
void GlobalNamespace::GameServerLobbyFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.InitialViewControllerWasPresented
void GlobalNamespace::GameServerLobbyFlowCoordinator::InitialViewControllerWasPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::InitialViewControllerWasPresented");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialViewControllerWasPresented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TransitionDidStart
void GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TransitionDidFinish
void GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::GameServerLobbyFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass61_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator <>4__this
GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_1
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass61_1.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass61_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.EventSystem eventSystem
UnityEngine::EventSystems::EventSystem*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::dyn_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::dyn_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSystem"))->offset;
  return *reinterpret_cast<UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator/<>c__DisplayClass61_0 CS$<>8__locals1
GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator/<>c__DisplayClass61_1.<Finish>b__0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::$Finish$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass61_1::<Finish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Finish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass75_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass75_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator <>4__this
GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator/<>c__DisplayClass75_0.<HandleServerPlayerListViewControllerKickPlayer>b__0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::$HandleServerPlayerListViewControllerKickPlayer$b__0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass75_0::<HandleServerPlayerListViewControllerKickPlayer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleServerPlayerListViewControllerKickPlayer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, btnId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerModeSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-TryShowModeSelection-d__49.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-ResolveAndPresentNextFlowCoordinator-d__50.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: GameServerBrowserFlowCoordinator
#include "GlobalNamespace/GameServerBrowserFlowCoordinator.hpp"
// Including type: GameServerLobbyFlowCoordinator
#include "GlobalNamespace/GameServerLobbyFlowCoordinator.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
// Including type: CreateServerViewController
#include "GlobalNamespace/CreateServerViewController.hpp"
// Including type: JoinQuickPlayViewController
#include "GlobalNamespace/JoinQuickPlayViewController.hpp"
// Including type: ServerCodeEntryViewController
#include "GlobalNamespace/ServerCodeEntryViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: JoiningLobbyViewController
#include "GlobalNamespace/JoiningLobbyViewController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IMasterServerAvailabilityModel
#include "GlobalNamespace/IMasterServerAvailabilityModel.hpp"
// Including type: IMasterServerQuickPlaySetupModel
#include "GlobalNamespace/IMasterServerQuickPlaySetupModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: MultiplayerModeSelectionViewController/MenuButton
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _ambienceAudioClip
UnityEngine::AudioClip*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__ambienceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__ambienceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambienceAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO _songPackMaskModel
GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameServerBrowserFlowCoordinator _gameServerBrowserFlowCoordinator
GlobalNamespace::GameServerBrowserFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerBrowserFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerBrowserFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerBrowserFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerBrowserFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameServerLobbyFlowCoordinator _gameServerLobbyFlowCoordinator
GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerLobbyFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerLobbyFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerLobbyFlowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerModeSelectionViewController _multiplayerModeSelectionViewController
GlobalNamespace::MultiplayerModeSelectionViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerModeSelectionViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerModeSelectionViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSelectionViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerModeSelectionViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CreateServerViewController _createServerViewController
GlobalNamespace::CreateServerViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__createServerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__createServerViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::CreateServerViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly JoinQuickPlayViewController _joinQuickPlayViewController
GlobalNamespace::JoinQuickPlayViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joinQuickPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joinQuickPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinQuickPlayViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::JoinQuickPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ServerCodeEntryViewController _serverCodeEntryViewController
GlobalNamespace::ServerCodeEntryViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__serverCodeEntryViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__serverCodeEntryViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCodeEntryViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ServerCodeEntryViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly JoiningLobbyViewController _joiningLobbyViewController
GlobalNamespace::JoiningLobbyViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningLobbyViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::JoiningLobbyViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
GlobalNamespace::AvatarDataModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOutController
GlobalNamespace::FadeInOutController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__fadeInOutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__fadeInOutController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOutController"))->offset;
  return *reinterpret_cast<GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyDataModelsManager _lobbyDataModelsManager
GlobalNamespace::LobbyDataModelsManager*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDataModelsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDataModelsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyDataModelsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::LobbyDataModelsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyConnectionController _multiplayerLobbyConnectionController
GlobalNamespace::MultiplayerLobbyConnectionController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerLobbyConnectionController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerLobbyConnectionController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyConnectionController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMasterServerAvailabilityModel _masterServerAvailabilityModel
GlobalNamespace::IMasterServerAvailabilityModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerAvailabilityModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerAvailabilityModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerAvailabilityModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMasterServerAvailabilityModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMasterServerQuickPlaySetupModel _masterServerQuickPlaySetupModel
GlobalNamespace::IMasterServerQuickPlaySetupModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerQuickPlaySetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerQuickPlaySetupModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerQuickPlaySetupModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMasterServerQuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerModeSelectionFlowCoordinator> didFinishEvent
System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _joiningLobbyCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningLobbyCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _transitionFinishedTaskSource
System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__transitionFinishedTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__transitionFinishedTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionFinishedTaskSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServerQuickPlaySetupData _masterServerQuickPlaySetupData
GlobalNamespace::MasterServerQuickPlaySetupData*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerQuickPlaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__masterServerQuickPlaySetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerQuickPlaySetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerQuickPlaySetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectMultiplayerLobbyDestination _lobbyDestination
GlobalNamespace::SelectMultiplayerLobbyDestination*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyDestination"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectMultiplayerLobbyDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::add_didFinishEvent(System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::remove_didFinishEvent(System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.Setup
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::Setup(GlobalNamespace::SelectMultiplayerLobbyDestination* lobbyDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyDestination)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, lobbyDestination);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccess
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionFailed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionFailed(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType connectionType, GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionType), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectionType, reason);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyControllerDidFinish(GlobalNamespace::MultiplayerModeSelectionViewController* viewController, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(menuButton)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController, menuButton);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerBrowserFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerBrowserFlowCoordinatorDidFinish(GlobalNamespace::GameServerBrowserFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerBrowserFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerBrowserFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flowCoordinator);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoiningLobbyViewControllerDidCancel
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoiningLobbyViewControllerDidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoiningLobbyViewControllerDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoiningLobbyViewControllerDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoinQuickPlayViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoinQuickPlayViewControllerDidFinish(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoinQuickPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinQuickPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, success);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleServerCodeEntryViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleServerCodeEntryViewControllerDidFinish(bool success, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleServerCodeEntryViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerCodeEntryViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(code)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, success, code);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleCreateServerViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleCreateServerViewControllerDidFinish(bool success, GlobalNamespace::CreateServerFormData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleCreateServerViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCreateServerViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, success, data);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerLobbyFlowCoordinatorWillFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorWillFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorWillFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorWillFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleConnectedPlayerManagerCreated
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleConnectedPlayerManagerCreated(GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleConnectedPlayerManagerCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, networkPlayerModel);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TryShowModeSelection
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TryShowModeSelection(bool shouldProvideInitialViewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TryShowModeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryShowModeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldProvideInitialViewControllers)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shouldProvideInitialViewControllers);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.ResolveAndPresentNextFlowCoordinator
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ResolveAndPresentNextFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ResolveAndPresentNextFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAndPresentNextFlowCoordinator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentConnectionErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentConnectionErrorDialog(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType connectionType, GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentConnectionErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentConnectionErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionType), ::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectionType, reason);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentMasterServerUnavailableErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentMasterServerUnavailableErrorDialog(GlobalNamespace::MultiplayerUnavailableReason reason, System::Exception* exception, System::Nullable_1<int64_t> maintenanceWindowEndTime, ::Il2CppString* remoteLocalizedMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentMasterServerUnavailableErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMasterServerUnavailableErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason), ::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(maintenanceWindowEndTime), ::il2cpp_utils::ExtractType(remoteLocalizedMessage)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reason, exception, maintenanceWindowEndTime, remoteLocalizedMessage);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.ProcessDeeplinkingToLobby
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ProcessDeeplinkingToLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ProcessDeeplinkingToLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDeeplinkingToLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<ResolveAndPresentNextFlowCoordinator>b__50_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$b__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<ResolveAndPresentNextFlowCoordinator>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveAndPresentNextFlowCoordinator>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__51_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__51_0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentConnectionErrorDialog>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentConnectionErrorDialog>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__51_1
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__51_1(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentConnectionErrorDialog>b__51_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentConnectionErrorDialog>b__51_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentMasterServerUnavailableErrorDialog>b__52_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentMasterServerUnavailableErrorDialog$b__52_0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentMasterServerUnavailableErrorDialog>b__52_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMasterServerUnavailableErrorDialog>b__52_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidActivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidDeactivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-TryShowModeSelection-d__49.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerModeSelectionFlowCoordinator <>4__this
GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServerAvailabilityData <masterServerAvailabilityData>5__2
GlobalNamespace::MasterServerAvailabilityData*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$masterServerAvailabilityData$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$masterServerAvailabilityData$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<masterServerAvailabilityData>5__2"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerAvailabilityData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <exception>5__3
System::Exception*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$exception$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$exception$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<exception>5__3"))->offset;
  return *reinterpret_cast<System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServerAvailabilityData> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::MasterServerAvailabilityData*>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::MasterServerAvailabilityData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServerQuickPlaySetupData> <>u__3
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::MasterServerQuickPlaySetupData*>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::MasterServerQuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49.MoveNext
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49.SetStateMachine
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-ResolveAndPresentNextFlowCoordinator-d__50.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerModeSelectionFlowCoordinator <>4__this
GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50.MoveNext
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50.SetStateMachine
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _notAllowedCharacteristics
::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__notAllowedCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notAllowedCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelSelectionFlowCoordinator/State> didSelectLevelEvent
System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didSelectLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didSelectLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectLevelEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishedEvent
System::Action*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _actionButtonText
::Il2CppString*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__actionButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButtonText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _titleText
::Il2CppString*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask _songPackMask
GlobalNamespace::SongPackMask& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__songPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultyMask _allowedBeatmapDifficultyMask
GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__allowedBeatmapDifficultyMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedBeatmapDifficultyMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _state
GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didSelectLevelEvent(System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didSelectLevelEvent(System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.Setup
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::Setup(GlobalNamespace::LevelSelectionFlowCoordinator::State* state, GlobalNamespace::SongPackMask songPackMask, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Il2CppString* actionText, ::Il2CppString* titleText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(actionText), ::il2cpp_utils::ExtractType(titleText)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, songPackMask, allowedBeatmapDifficultyMask, actionText, titleText);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::HandleLobbyGameStateControllerGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::HandleLobbyGameStateControllerGameStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_actionButtonText
::Il2CppString* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_actionButtonText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_songPackMask
GlobalNamespace::SongPackMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_songPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_enableCustomLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_allowedBeatmapDifficultyMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_notAllowedCharacteristics
::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_notAllowedCharacteristics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_notAllowedCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<GlobalNamespace::BeatmapCharacteristicSO*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_mainTitle
::Il2CppString* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::ActionButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, topViewController);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEaseArcadeFlowCoordinator
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator.hpp"
// Including type: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_-LogoutAsync-d__22.hpp"
// Including type: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_--c__DisplayClass27_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: NetEaseLeaderboardViewController
#include "GlobalNamespace/NetEaseLeaderboardViewController.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: NetEaseManager
#include "GlobalNamespace/NetEaseManager.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetEaseLeaderboardViewController _netEaseLeaderboardViewController
GlobalNamespace::NetEaseLeaderboardViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__netEaseLeaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__netEaseLeaderboardViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netEaseLeaderboardViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetEaseLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController _tabBarViewController
GlobalNamespace::TabBarViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__tabBarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__tabBarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabBarViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::TabBarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetEaseManager _netEaseManager
GlobalNamespace::NetEaseManager*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__netEaseManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__netEaseManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netEaseManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetEaseManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsManager _menuLightsManager
GlobalNamespace::MenuLightsManager*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultsViewController _resultsViewController
GlobalNamespace::ResultsViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalLeaderboardViewController _localLeaderboardViewController
GlobalNamespace::LocalLeaderboardViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__localLeaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__localLeaderboardViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HowToPlayViewController _howToPlayViewController
GlobalNamespace::HowToPlayViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__howToPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__howToPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_howToPlayViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HowToPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.ProcessScore
void GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.AddScoreToLeaderboards
void GlobalNamespace::NetEaseArcadeFlowCoordinator::AddScoreToLeaderboards(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::AddScoreToLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScoreToLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.LogoutAsync
void GlobalNamespace::NetEaseArcadeFlowCoordinator::LogoutAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::LogoutAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, howToPlayOptions);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleHowToPlayTabSelected
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayTabSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayTabSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayTabSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleLogoutTabWasSelected
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleLogoutTabWasSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleLogoutTabWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLogoutTabWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewController);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resultsViewController);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__17_0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$SinglePlayerLevelSelectionFlowCoordinatorDidActivate$b__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.<HandleHowToPlayTabSelected>b__24_0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$HandleHowToPlayTabSelected$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::<HandleHowToPlayTabSelected>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleHowToPlayTabSelected>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::NetEaseArcadeFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::get_showPlayerStatsInDetailView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_-LogoutAsync-d__22.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetEaseArcadeFlowCoordinator <>4__this
GlobalNamespace::NetEaseArcadeFlowCoordinator*& GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetEaseArcadeFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<NetEase.Docker.LogoutData> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<NetEase::Docker::LogoutData>& GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<NetEase::Docker::LogoutData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22.MoveNext
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22.SetStateMachine
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$LogoutAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_--c__DisplayClass27_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NetEaseArcadeFlowCoordinator <>4__this
GlobalNamespace::NetEaseArcadeFlowCoordinator*& GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetEaseArcadeFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ResultsViewController resultsViewController
GlobalNamespace::ResultsViewController*& GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::dyn_resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::dyn_resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultsViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseArcadeFlowCoordinator::$$c__DisplayClass27_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
