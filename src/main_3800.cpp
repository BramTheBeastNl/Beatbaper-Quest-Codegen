// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FirstPersonFlyingController
#include "GlobalNamespace/FirstPersonFlyingController.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSensitivity
float GlobalNamespace::FirstPersonFlyingController::_get__moveSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__moveSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _moveSensitivity
void GlobalNamespace::FirstPersonFlyingController::_set__moveSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__moveSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSensitivity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera* GlobalNamespace::FirstPersonFlyingController::_get__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Camera _camera
void GlobalNamespace::FirstPersonFlyingController::_set__camera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFov
float GlobalNamespace::FirstPersonFlyingController::_get__cameraFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__cameraFov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cameraFov
void GlobalNamespace::FirstPersonFlyingController::_set__cameraFov(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__cameraFov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFov"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRCenterAdjust _centerAdjust
GlobalNamespace::VRCenterAdjust* GlobalNamespace::FirstPersonFlyingController::_get__centerAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__centerAdjust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerAdjust"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRCenterAdjust**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRCenterAdjust _centerAdjust
void GlobalNamespace::FirstPersonFlyingController::_set__centerAdjust(GlobalNamespace::VRCenterAdjust* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__centerAdjust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerAdjust"))->offset;
  *reinterpret_cast<GlobalNamespace::VRCenterAdjust**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
GlobalNamespace::VRController* GlobalNamespace::FirstPersonFlyingController::_get__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRController _controller0
void GlobalNamespace::FirstPersonFlyingController::_set__controller0(GlobalNamespace::VRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
GlobalNamespace::VRController* GlobalNamespace::FirstPersonFlyingController::_get__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRController _controller1
void GlobalNamespace::FirstPersonFlyingController::_set__controller1(GlobalNamespace::VRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.VRInputModule _vrInputModule
VRUIControls::VRInputModule* GlobalNamespace::FirstPersonFlyingController::_get__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRUIControls.VRInputModule _vrInputModule
void GlobalNamespace::FirstPersonFlyingController::_set__vrInputModule(VRUIControls::VRInputModule* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  *reinterpret_cast<VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _controllerModels
::Array<UnityEngine::GameObject*>* GlobalNamespace::FirstPersonFlyingController::_get__controllerModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__controllerModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerModels"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _controllerModels
void GlobalNamespace::FirstPersonFlyingController::_set__controllerModels(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__controllerModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerModels"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MouseLook _mouseLook
GlobalNamespace::MouseLook* GlobalNamespace::FirstPersonFlyingController::_get__mouseLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__mouseLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouseLook"))->offset;
  return *reinterpret_cast<GlobalNamespace::MouseLook**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MouseLook _mouseLook
void GlobalNamespace::FirstPersonFlyingController::_set__mouseLook(GlobalNamespace::MouseLook* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__mouseLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouseLook"))->offset;
  *reinterpret_cast<GlobalNamespace::MouseLook**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _cameraTransform
UnityEngine::Transform* GlobalNamespace::FirstPersonFlyingController::_get__cameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_get__cameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _cameraTransform
void GlobalNamespace::FirstPersonFlyingController::_set__cameraTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::_set__cameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FirstPersonFlyingController.Awake
void GlobalNamespace::FirstPersonFlyingController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Start
void GlobalNamespace::FirstPersonFlyingController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnEnable
void GlobalNamespace::FirstPersonFlyingController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnDisable
void GlobalNamespace::FirstPersonFlyingController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Update
void GlobalNamespace::FirstPersonFlyingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _xSensitivity
float GlobalNamespace::MouseLook::_get__xSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__xSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _xSensitivity
void GlobalNamespace::MouseLook::_set__xSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__xSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSensitivity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ySensitivity
float GlobalNamespace::MouseLook::_get__ySensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__ySensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ySensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _ySensitivity
void GlobalNamespace::MouseLook::_set__ySensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__ySensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ySensitivity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clampVerticalRotation
bool GlobalNamespace::MouseLook::_get__clampVerticalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__clampVerticalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clampVerticalRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _clampVerticalRotation
void GlobalNamespace::MouseLook::_set__clampVerticalRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__clampVerticalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clampVerticalRotation"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minimumX
float GlobalNamespace::MouseLook::_get__minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _minimumX
void GlobalNamespace::MouseLook::_set__minimumX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maximumX
float GlobalNamespace::MouseLook::_get__maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _maximumX
void GlobalNamespace::MouseLook::_set__maximumX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maximumX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _smooth
bool GlobalNamespace::MouseLook::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _smooth
void GlobalNamespace::MouseLook::_set__smooth(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smoothTime
float GlobalNamespace::MouseLook::_get__smoothTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__smoothTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smoothTime
void GlobalNamespace::MouseLook::_set__smoothTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__smoothTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockCursor
bool GlobalNamespace::MouseLook::_get__lockCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__lockCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _lockCursor
void GlobalNamespace::MouseLook::_set__lockCursor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__lockCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockCursor"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _characterTargetRot
UnityEngine::Quaternion GlobalNamespace::MouseLook::_get__characterTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__characterTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterTargetRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Quaternion _characterTargetRot
void GlobalNamespace::MouseLook::_set__characterTargetRot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__characterTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterTargetRot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _cameraTargetRot
UnityEngine::Quaternion GlobalNamespace::MouseLook::_get__cameraTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__cameraTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTargetRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Quaternion _cameraTargetRot
void GlobalNamespace::MouseLook::_set__cameraTargetRot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__cameraTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTargetRot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cursorIsLocked
bool GlobalNamespace::MouseLook::_get__cursorIsLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_get__cursorIsLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorIsLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _cursorIsLocked
void GlobalNamespace::MouseLook::_set__cursorIsLocked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::_set__cursorIsLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorIsLocked"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MouseLook.Init
void GlobalNamespace::MouseLook::Init(UnityEngine::Transform* character, UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.LookRotation
void GlobalNamespace::MouseLook::LookRotation(UnityEngine::Transform* character, UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetCursorLock
void GlobalNamespace::MouseLook::SetCursorLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::SetCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MouseLook.UpdateCursorLock
void GlobalNamespace::MouseLook::UpdateCursorLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::UpdateCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MouseLook.InternalLockUpdate
void GlobalNamespace::MouseLook::InternalLockUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::InternalLockUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MouseLook.ClampRotationAroundXAxis
UnityEngine::Quaternion GlobalNamespace::MouseLook::ClampRotationAroundXAxis(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::ClampRotationAroundXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampRotationAroundXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method, q);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44C60
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap1PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap1PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44C70
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap2PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap2PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private LightmapDataSO _lightmapData
GlobalNamespace::LightmapDataSO* GlobalNamespace::BakedLightDataLoader::_get__lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_get__lightmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapData"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LightmapDataSO _lightmapData
void GlobalNamespace::BakedLightDataLoader::_set__lightmapData(GlobalNamespace::LightmapDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_set__lightmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapData"))->offset;
  *reinterpret_cast<GlobalNamespace::LightmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blackTexture
UnityEngine::Texture2D* GlobalNamespace::BakedLightDataLoader::_get__blackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_get__blackTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackTexture"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Texture2D _blackTexture
void GlobalNamespace::BakedLightDataLoader::_set__blackTexture(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::_set__blackTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackTexture"))->offset;
  *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BakedLightDataLoader.get_lightmapData
GlobalNamespace::LightmapDataSO* GlobalNamespace::BakedLightDataLoader::get_lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::get_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LightmapDataSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.set_lightmapData
void GlobalNamespace::BakedLightDataLoader::set_lightmapData(GlobalNamespace::LightmapDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::set_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BakedLightDataLoader.Start
void GlobalNamespace::BakedLightDataLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.SetTextureDataToShaders
void GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader..cctor
void GlobalNamespace::BakedLightDataLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightDataLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightDataLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: BakedLightTexturePacking
#include "GlobalNamespace/BakedLightTexturePacking.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kBakedLightTexturePackingShaderName
::Il2CppString* GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBakedLightTexturePackingShaderName
void GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44C80
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] _texPropertyIds
::Array<int>* GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "BakedLightTexturePacking", "_texPropertyIds"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] _texPropertyIds
void GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_texPropertyIds", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44C90
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
UnityEngine::Material* GlobalNamespace::BakedLightTexturePacking::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "BakedLightTexturePacking", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::BakedLightTexturePacking::_set__material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_material", value));
}
// Autogenerated method: BakedLightTexturePacking..cctor
void GlobalNamespace::BakedLightTexturePacking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightTexturePacking.PackTextures
UnityEngine::RenderTexture* GlobalNamespace::BakedLightTexturePacking::PackTextures(System::Collections::Generic::IReadOnlyList_1<UnityEngine::RenderTexture*>* textures, UnityEngine::RenderTextureDescriptor descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightTexturePacking::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textures, descriptor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BakedLightUtils
#include "GlobalNamespace/BakedLightUtils.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kMirrorParentNameToIgnore
::Il2CppString* GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BakedLightUtils", "kMirrorParentNameToIgnore"));
}
// Autogenerated static field setter
// Set static field: static public System.String kMirrorParentNameToIgnore
void GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kMirrorParentNameToIgnore", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDepthOnlyShaderName
::Il2CppString* GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BakedLightUtils", "kDepthOnlyShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDepthOnlyShaderName
void GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kDepthOnlyShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44CA0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _zWritePropertyId
int GlobalNamespace::BakedLightUtils::_get__zWritePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get__zWritePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_zWritePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _zWritePropertyId
void GlobalNamespace::BakedLightUtils::_set__zWritePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set__zWritePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_zWritePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44CB0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilRefValuePropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilRefValuePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilRefValuePropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilRefValuePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44CC0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilCompPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilCompPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilCompPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilCompPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44CD0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilPassOpPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilPassOpPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilPassOpPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilPassOpPropertyId", value));
}
// Autogenerated method: BakedLightUtils..cctor
void GlobalNamespace::BakedLightUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightUtils.ValidateLoadedEnvironmentScene
void GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", "ValidateLoadedEnvironmentScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44D6C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44D7C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44D8C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44D9C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DAC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _resolutionBeforeDownsample
int GlobalNamespace::BakedReflectionProbe::_get__resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__resolutionBeforeDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolutionBeforeDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _resolutionBeforeDownsample
void GlobalNamespace::BakedReflectionProbe::_set__resolutionBeforeDownsample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__resolutionBeforeDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolutionBeforeDownsample"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsampleByHalfCount
int GlobalNamespace::BakedReflectionProbe::_get__downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__downsampleByHalfCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampleByHalfCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _downsampleByHalfCount
void GlobalNamespace::BakedReflectionProbe::_set__downsampleByHalfCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__downsampleByHalfCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampleByHalfCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _size
UnityEngine::Vector3 GlobalNamespace::BakedReflectionProbe::_get__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _size
void GlobalNamespace::BakedReflectionProbe::_set__size(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
UnityEngine::Vector3 GlobalNamespace::BakedReflectionProbe::_get__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _offset
void GlobalNamespace::BakedReflectionProbe::_set__offset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ReflectionProbeDataSO _reflectionProbeData
GlobalNamespace::ReflectionProbeDataSO* GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeData"))->offset;
  return *reinterpret_cast<GlobalNamespace::ReflectionProbeDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ReflectionProbeDataSO _reflectionProbeData
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeData(GlobalNamespace::ReflectionProbeDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeData"))->offset;
  *reinterpret_cast<GlobalNamespace::ReflectionProbeDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _blackCubemap
UnityEngine::Cubemap* GlobalNamespace::BakedReflectionProbe::_get__blackCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_get__blackCubemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackCubemap"))->offset;
  return *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Cubemap _blackCubemap
void GlobalNamespace::BakedReflectionProbe::_set__blackCubemap(UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::_set__blackCubemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackCubemap"))->offset;
  *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BakedReflectionProbe.get_reflectionProbeData
GlobalNamespace::ReflectionProbeDataSO* GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ReflectionProbeDataSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.set_reflectionProbeData
void GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData(GlobalNamespace::ReflectionProbeDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: BakedReflectionProbe.get_position
UnityEngine::Vector3 GlobalNamespace::BakedReflectionProbe::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_resolutionBeforeDownsample
int GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolutionBeforeDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_downsampleByHalfCount
int GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downsampleByHalfCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.Start
void GlobalNamespace::BakedReflectionProbe::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.SendDataToShaders
void GlobalNamespace::BakedReflectionProbe::SendDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::SendDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe..cctor
void GlobalNamespace::BakedReflectionProbe::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BakedReflectionProbe::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedReflectionProbe", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CubemapHelpers
#include "GlobalNamespace/CubemapHelpers.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCubemapHelpersShaderName
::Il2CppString* GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "CubemapHelpers", "kCubemapHelpersShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCubemapHelpersShaderName
void GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapHelpersShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DBC
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _cubemapHelpersMaterial
UnityEngine::Material* GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "CubemapHelpers", "_cubemapHelpersMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _cubemapHelpersMaterial
void GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapHelpersMaterial", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DCC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapHelpers::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapHelpers::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DDC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubeFaceNumberId
int GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubeFaceNumberId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubeFaceNumberId
void GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubeFaceNumberId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapDownsamplePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapDownsamplePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapDownsamplePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapDownsamplePass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapTo2DTexturePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapTo2DTexturePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapTo2DTexturePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapTo2DTexturePass", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DEC
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
System::Collections::Generic::Dictionary_2<UnityEngine::CubemapFace, int>* GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<UnityEngine::CubemapFace, int>*>("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
void GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict(System::Collections::Generic::Dictionary_2<UnityEngine::CubemapFace, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44DFC
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
::Array<UnityEngine::CubemapFace>* GlobalNamespace::CubemapHelpers::_get__cubemapFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_get__cubemapFaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::CubemapFace>*>("", "CubemapHelpers", "_cubemapFaces"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
void GlobalNamespace::CubemapHelpers::_set__cubemapFaces(::Array<UnityEngine::CubemapFace>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::_set__cubemapFaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaces", value));
}
// Autogenerated method: CubemapHelpers.get_cubemapHelpersMaterial
UnityEngine::Material* GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "get_cubemapHelpersMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers..cctor
void GlobalNamespace::CubemapHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers.Downsample
void GlobalNamespace::CubemapHelpers::Downsample(UnityEngine::Texture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::Downsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Downsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, dest);
}
// Autogenerated method: CubemapHelpers.CreateDownsampledCubemap
UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap(UnityEngine::RenderTexture* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "CreateDownsampledCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src, count);
}
// Autogenerated method: CubemapHelpers.Create2DTextureFromCubemap
UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap(UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Create2DTextureFromCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src);
}
// Autogenerated method: CubemapHelpers.DrawCubemapFace
void GlobalNamespace::CubemapHelpers::DrawCubemapFace(UnityEngine::Texture* cubemap, UnityEngine::CubemapFace cubemapFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapHelpers::DrawCubemapFace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "DrawCubemapFace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap), ::il2cpp_utils::ExtractType(cubemapFace)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cubemap, cubemapFace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubemapTest
#include "GlobalNamespace/CubemapTest.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE44E3C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapTest::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapTest", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapTest::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapTest", "_cubePropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera* GlobalNamespace::CubemapTest::_get__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Camera _camera
void GlobalNamespace::CubemapTest::_set__camera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _cubemapMaterial
UnityEngine::Material* GlobalNamespace::CubemapTest::_get__cubemapMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__cubemapMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _cubemapMaterial
void GlobalNamespace::CubemapTest::_set__cubemapMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__cubemapMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapMaterial"))->offset;
  *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _flatMaterial
UnityEngine::Material* GlobalNamespace::CubemapTest::_get__flatMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__flatMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _flatMaterial
void GlobalNamespace::CubemapTest::_set__flatMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__flatMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatMaterial"))->offset;
  *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapRenderTexture
UnityEngine::RenderTexture* GlobalNamespace::CubemapTest::_get__cubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__cubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RenderTexture _cubemapRenderTexture
void GlobalNamespace::CubemapTest::_set__cubemapRenderTexture(UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__cubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapRenderTexture"))->offset;
  *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _downsampledCubemapRenderTexture
UnityEngine::RenderTexture* GlobalNamespace::CubemapTest::_get__downsampledCubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__downsampledCubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampledCubemapRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RenderTexture _downsampledCubemapRenderTexture
void GlobalNamespace::CubemapTest::_set__downsampledCubemapRenderTexture(UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__downsampledCubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampledCubemapRenderTexture"))->offset;
  *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapFlatTexture
UnityEngine::RenderTexture* GlobalNamespace::CubemapTest::_get__cubemapFlatTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_get__cubemapFlatTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapFlatTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.RenderTexture _cubemapFlatTexture
void GlobalNamespace::CubemapTest::_set__cubemapFlatTexture(UnityEngine::RenderTexture* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::_set__cubemapFlatTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapFlatTexture"))->offset;
  *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CubemapTest.Start
void GlobalNamespace::CubemapTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CubemapTest.Update
void GlobalNamespace::CubemapTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: CubemapTest..cctor
void GlobalNamespace::CubemapTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CubemapTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableWhenMirrorIsEnabled
#include "GlobalNamespace/DisableWhenMirrorIsEnabled.hpp"
// Including type: Mirror
#include "GlobalNamespace/Mirror.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mirror _mirror
GlobalNamespace::Mirror* GlobalNamespace::DisableWhenMirrorIsEnabled::_get__mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::_get__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  return *reinterpret_cast<GlobalNamespace::Mirror**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Mirror _mirror
void GlobalNamespace::DisableWhenMirrorIsEnabled::_set__mirror(GlobalNamespace::Mirror* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::_set__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  *reinterpret_cast<GlobalNamespace::Mirror**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: DisableWhenMirrorIsEnabled.get_mirror
GlobalNamespace::Mirror* GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Mirror*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.set_mirror
void GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror(GlobalNamespace::Mirror* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.Start
void GlobalNamespace::DisableWhenMirrorIsEnabled::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.OnDestroy
void GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.HandleMirrorDidChangeEnabledState
void GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState(bool isEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMirrorDidChangeEnabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEnabled)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DuplicateMirrorForReflectionProbe
#include "GlobalNamespace/DuplicateMirrorForReflectionProbe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeReflectionDynamicObjectsState
#include "GlobalNamespace/FakeReflectionDynamicObjectsState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Disabled
GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Disabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled(GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Enabled
GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Enabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled(GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Enabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::FakeReflectionDynamicObjectsState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeReflectionDynamicObjectsState::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IgnoreForReflectionProbeBaking
#include "GlobalNamespace/IgnoreForReflectionProbeBaking.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LightBakingPersistentSettingsSO
#include "GlobalNamespace/LightBakingPersistentSettingsSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: LightmapLightWithIds
#include "GlobalNamespace/LightmapLightWithIds.hpp"
// Including type: FakeMirrorObjectsInstaller
#include "GlobalNamespace/FakeMirrorObjectsInstaller.hpp"
// Including type: FakeMirrorSettings
#include "GlobalNamespace/FakeMirrorSettings.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultVrResolutionScale
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultVrResolutionScale
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _reflectionsCount
int GlobalNamespace::LightBakingPersistentSettingsSO::_get__reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__reflectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _reflectionsCount
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__reflectionsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__reflectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionsCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffectToneMappingOff
GlobalNamespace::BloomPrePassEffectSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassEffectToneMappingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassEffectToneMappingOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectToneMappingOff"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomPrePassEffectSO _bloomPrePassEffectToneMappingOff
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassEffectToneMappingOff(GlobalNamespace::BloomPrePassEffectSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassEffectToneMappingOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectToneMappingOff"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainEffectSO _mainEffectForBaking
GlobalNamespace::MainEffectSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectForBaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectForBaking"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainEffectSO _mainEffectForBaking
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectForBaking(GlobalNamespace::MainEffectSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectForBaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectForBaking"))->offset;
  *reinterpret_cast<GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorFromSchemeAlpha
float GlobalNamespace::LightBakingPersistentSettingsSO::_get__colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__colorFromSchemeAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorFromSchemeAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _colorFromSchemeAlpha
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__colorFromSchemeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__colorFromSchemeAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorFromSchemeAlpha"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _bakedLightEditorColors
::Array<UnityEngine::Color>* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedLightEditorColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightEditorColors"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color[] _bakedLightEditorColors
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedLightEditorColors(::Array<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedLightEditorColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightEditorColors"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainSettingsModelSO _mainSettingsModel
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainSettingsModel(GlobalNamespace::MainSettingsModelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
GlobalNamespace::MirrorRendererGraphicsSettingsPresets* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mirrorRendererGraphicsSettingsPresets(GlobalNamespace::MirrorRendererGraphicsSettingsPresets* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  *reinterpret_cast<GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO _mainEffectGraphicsSettingsPresets
GlobalNamespace::MainEffectGraphicsSettingsPresetsSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainEffectGraphicsSettingsPresetsSO _mainEffectGraphicsSettingsPresets
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectGraphicsSettingsPresets(GlobalNamespace::MainEffectGraphicsSettingsPresetsSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectGraphicsSettingsPresets"))->offset;
  *reinterpret_cast<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO _bloomPrePassGraphicsSettingsPresets
GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomPrePassGraphicsSettingsPresetsSO _bloomPrePassGraphicsSettingsPresets
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassGraphicsSettingsPresets(GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassGraphicsSettingsPresets"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
GlobalNamespace::MirrorRendererSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MirrorRendererSO _mirrorRenderer
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mirrorRenderer(GlobalNamespace::MirrorRendererSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  *reinterpret_cast<GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
GlobalNamespace::MainEffectContainerSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainEffectContainerSO _mainEffectContainer
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectContainer(GlobalNamespace::MainEffectContainerSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  *reinterpret_cast<GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
GlobalNamespace::BloomPrePassEffectContainerSO* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassEffectContainer(GlobalNamespace::BloomPrePassEffectContainerSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BakedLightDataLoader _bakedLightDataLoaderPrefab
GlobalNamespace::BakedLightDataLoader* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedLightDataLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightDataLoaderPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BakedLightDataLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BakedLightDataLoader _bakedLightDataLoaderPrefab
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedLightDataLoaderPrefab(GlobalNamespace::BakedLightDataLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedLightDataLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightDataLoaderPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::BakedLightDataLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BakedReflectionProbe _bakedReflectionProbePrefab
GlobalNamespace::BakedReflectionProbe* GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__bakedReflectionProbePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedReflectionProbePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BakedReflectionProbe**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BakedReflectionProbe _bakedReflectionProbePrefab
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedReflectionProbePrefab(GlobalNamespace::BakedReflectionProbe* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__bakedReflectionProbePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedReflectionProbePrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::BakedReflectionProbe**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LightmapLightWithIds _lightmapLightWithIds
GlobalNamespace::LightmapLightWithIds* GlobalNamespace::LightBakingPersistentSettingsSO::_get__lightmapLightWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__lightmapLightWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapLightWithIds"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightmapLightWithIds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LightmapLightWithIds _lightmapLightWithIds
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__lightmapLightWithIds(GlobalNamespace::LightmapLightWithIds* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__lightmapLightWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapLightWithIds"))->offset;
  *reinterpret_cast<GlobalNamespace::LightmapLightWithIds**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorObjectsInstaller _fakeMirrorObjectsInstallerPrefab
GlobalNamespace::FakeMirrorObjectsInstaller* GlobalNamespace::LightBakingPersistentSettingsSO::_get__fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__fakeMirrorObjectsInstallerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorObjectsInstallerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FakeMirrorObjectsInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FakeMirrorObjectsInstaller _fakeMirrorObjectsInstallerPrefab
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__fakeMirrorObjectsInstallerPrefab(GlobalNamespace::FakeMirrorObjectsInstaller* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__fakeMirrorObjectsInstallerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorObjectsInstallerPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::FakeMirrorObjectsInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorSettings _fakeMirrorSettingsPrefab
GlobalNamespace::FakeMirrorSettings* GlobalNamespace::LightBakingPersistentSettingsSO::_get__fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__fakeMirrorSettingsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorSettingsPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FakeMirrorSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FakeMirrorSettings _fakeMirrorSettingsPrefab
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__fakeMirrorSettingsPrefab(GlobalNamespace::FakeMirrorSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__fakeMirrorSettingsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorSettingsPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::FakeMirrorSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultDepthOnlyWriteMaterialForFakeMirror
UnityEngine::Material* GlobalNamespace::LightBakingPersistentSettingsSO::_get__defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_get__defaultDepthOnlyWriteMaterialForFakeMirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultDepthOnlyWriteMaterialForFakeMirror"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Material _defaultDepthOnlyWriteMaterialForFakeMirror
void GlobalNamespace::LightBakingPersistentSettingsSO::_set__defaultDepthOnlyWriteMaterialForFakeMirror(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::_set__defaultDepthOnlyWriteMaterialForFakeMirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultDepthOnlyWriteMaterialForFakeMirror"))->offset;
  *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_reflectionsCount
int GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_reflectionsCount
void GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_colorFromSchemeAlpha
float GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_colorFromSchemeAlpha
void GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightEditorColors
::Array<UnityEngine::Color>* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightEditorColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Color>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_defaultDepthOnlyWriteMaterialForFakeMirror
UnityEngine::Material* GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultDepthOnlyWriteMaterialForFakeMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_mainEffectForBakingIsOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_mainEffectForBakingIsOn
void GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightDataLoaderPrefab
GlobalNamespace::BakedLightDataLoader* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightDataLoaderPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BakedLightDataLoader*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedReflectionProbePrefab
GlobalNamespace::BakedReflectionProbe* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedReflectionProbePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BakedReflectionProbe*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_lightmapLightWithIds
GlobalNamespace::LightmapLightWithIds* GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapLightWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LightmapLightWithIds*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorObjectsInstallerPrefab
GlobalNamespace::FakeMirrorObjectsInstaller* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorObjectsInstallerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::FakeMirrorObjectsInstaller*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorSettingsPrefab
GlobalNamespace::FakeMirrorSettings* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorSettingsPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::FakeMirrorSettings*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetGraphicsSettingsForBaking
void GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphicsSettingsForBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetPlatformGraphics
void GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlatformGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetToneMappingOn
void GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: LightBakingPersistentSettingsSO.IsToneMappingOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap1
UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::_get__lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::_get__lightmap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap1"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Texture2D _lightmap1
void GlobalNamespace::LightmapDataSO::_set__lightmap1(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::_set__lightmap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap1"))->offset;
  *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap2
UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::_get__lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::_get__lightmap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap2"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Texture2D _lightmap2
void GlobalNamespace::LightmapDataSO::_set__lightmap2(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::_set__lightmap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap2"))->offset;
  *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightmapDataSO.get_lightmap1
UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::get_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap1
void GlobalNamespace::LightmapDataSO::set_lightmap1(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::set_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LightmapDataSO.get_lightmap2
UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::get_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap2
void GlobalNamespace::LightmapDataSO::set_lightmap2(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapDataSO::set_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PseudoHDREncoding
#include "GlobalNamespace/PseudoHDREncoding.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE4503C
// Autogenerated static field getter
// Get static field: static private System.String kPseudoHDREncodingShaderName
::Il2CppString* GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPseudoHDREncodingShaderName
void GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE4504C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
UnityEngine::Material* GlobalNamespace::PseudoHDREncoding::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PseudoHDREncoding::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "PseudoHDREncoding", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::PseudoHDREncoding::_set__material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PseudoHDREncoding::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "_material", value));
}
// Autogenerated method: PseudoHDREncoding.CreatePseudoHDREncodedTexture
UnityEngine::RenderTexture* GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture(UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PseudoHDREncoding", "CreatePseudoHDREncodedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap1
UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::_get__reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::_get__reflectionProbeCubemap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap1"))->offset;
  return *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Cubemap _reflectionProbeCubemap1
void GlobalNamespace::ReflectionProbeDataSO::_set__reflectionProbeCubemap1(UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::_set__reflectionProbeCubemap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap1"))->offset;
  *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap2
UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::_get__reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::_get__reflectionProbeCubemap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap2"))->offset;
  return *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Cubemap _reflectionProbeCubemap2
void GlobalNamespace::ReflectionProbeDataSO::_set__reflectionProbeCubemap2(UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::_set__reflectionProbeCubemap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap2"))->offset;
  *reinterpret_cast<UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap1
UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cubemap*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap1
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1(UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap2
UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Cubemap*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap2
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2(UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListExtensions
#include "GlobalNamespace/ListExtensions.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE4507C
// Autogenerated static field getter
// Get static field: static private readonly System.Random _random
System::Random* GlobalNamespace::ListExtensions::_get__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::_get__random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Random*>("", "ListExtensions", "_random"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random _random
void GlobalNamespace::ListExtensions::_set__random(System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::_set__random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListExtensions", "_random", value));
}
// Autogenerated method: ListExtensions..cctor
void GlobalNamespace::ListExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ListExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalizedAudioClipSO
#include "GlobalNamespace/LocalizedAudioClipSO.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo[] _localizedAudioClipInfo
::Array<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>* GlobalNamespace::LocalizedAudioClipSO::_get__localizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::_get__localizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClipInfo"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo[] _localizedAudioClipInfo
void GlobalNamespace::LocalizedAudioClipSO::_set__localizedAudioClipInfo(::Array<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::_set__localizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClipInfo"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo _lastLocalizedAudioClipInfo
GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo* GlobalNamespace::LocalizedAudioClipSO::_get__lastLocalizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::_get__lastLocalizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLocalizedAudioClipInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo _lastLocalizedAudioClipInfo
void GlobalNamespace::LocalizedAudioClipSO::_set__lastLocalizedAudioClipInfo(GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::_set__lastLocalizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLocalizedAudioClipInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LocalizedAudioClipSO.get_localizedAudioClip
UnityEngine::AudioClip* GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
Polyglot::Language GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Polyglot.Language language
void GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_set_language(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip localizedAudioClip
UnityEngine::AudioClip* GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_get_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_get_localizedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.AudioClip localizedAudioClip
void GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_set_localizedAudioClip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::_set_localizedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedAudioClip"))->offset;
  *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
Polyglot::Language GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Polyglot.Language language
void GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::_set_language(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LocalizedAudioClipSO/<>c__DisplayClass4_0.<get_localizedAudioClip>b__0
bool GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::$get_localizedAudioClip$b__0(GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::<get_localizedAudioClip>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedAudioClip>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo[] _textInfos
::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>* GlobalNamespace::LocalizedTextAsset::_get__textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::_get__textInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textInfos"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LocalizedTextAsset/TextInfo[] _textInfos
void GlobalNamespace::LocalizedTextAsset::_set__textInfos(::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::_set__textInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textInfos"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo _lastTextInfo
GlobalNamespace::LocalizedTextAsset::TextInfo* GlobalNamespace::LocalizedTextAsset::_get__lastTextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::_get__lastTextInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTextInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::LocalizedTextAsset::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private LocalizedTextAsset/TextInfo _lastTextInfo
void GlobalNamespace::LocalizedTextAsset::_set__lastTextInfo(GlobalNamespace::LocalizedTextAsset::TextInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::_set__lastTextInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTextInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::LocalizedTextAsset::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LocalizedTextAsset.get_textInfos
::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>* GlobalNamespace::LocalizedTextAsset::get_textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::get_textInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LocalizedTextAsset.get_localizedText
::Il2CppString* GlobalNamespace::LocalizedTextAsset::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
Polyglot::Language GlobalNamespace::LocalizedTextAsset::TextInfo::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::TextInfo::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Polyglot.Language language
void GlobalNamespace::LocalizedTextAsset::TextInfo::_set_language(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::TextInfo::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset localizedText
UnityEngine::TextAsset* GlobalNamespace::LocalizedTextAsset::TextInfo::_get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::TextInfo::_get_localizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedText"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.TextAsset localizedText
void GlobalNamespace::LocalizedTextAsset::TextInfo::_set_localizedText(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::TextInfo::_set_localizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedText"))->offset;
  *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
Polyglot::Language GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::_get_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::_get_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Polyglot.Language language
void GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::_set_language(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::_set_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  *reinterpret_cast<Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LocalizedTextAsset/<>c__DisplayClass6_0.<get_localizedText>b__1
bool GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::$get_localizedText$b__1(GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::<get_localizedText>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LocalizedTextAsset/<>c <>9
GlobalNamespace::LocalizedTextAsset::$$c* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LocalizedTextAsset::$$c*>("", "LocalizedTextAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LocalizedTextAsset/<>c <>9
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9(GlobalNamespace::LocalizedTextAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
System::Func_2<GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>*>("", "LocalizedTextAsset/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0(System::Func_2<GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9__6_0", value)));
}
// Autogenerated method: LocalizedTextAsset/<>c..cctor
void GlobalNamespace::LocalizedTextAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizedTextAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizedTextAsset/<>c.<get_localizedText>b__6_0
bool GlobalNamespace::LocalizedTextAsset::$$c::$get_localizedText$b__6_0(GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c::<get_localizedText>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera* GlobalNamespace::MainCamera::_get__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::_get__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Camera _camera
void GlobalNamespace::MainCamera::_set__camera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::_set__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform* GlobalNamespace::MainCamera::_get__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::_get__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _transform
void GlobalNamespace::MainCamera::_set__transform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::_set__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MainCamera.get_camera
UnityEngine::Camera* GlobalNamespace::MainCamera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.set_enableCamera
void GlobalNamespace::MainCamera::set_enableCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::set_enableCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MainCamera.get_position
UnityEngine::Vector3 GlobalNamespace::MainCamera::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.get_rotation
UnityEngine::Quaternion GlobalNamespace::MainCamera::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.Awake
void GlobalNamespace::MainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.OnEnable
void GlobalNamespace::MainCamera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.Update
void GlobalNamespace::MainCamera::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainCamera.OnDisable
void GlobalNamespace::MainCamera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowDuration
float GlobalNamespace::AveragingValueRecorder::_get__averageWindowDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _averageWindowDuration
void GlobalNamespace::AveragingValueRecorder::_set__averageWindowDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyValuesPerSecond
float GlobalNamespace::AveragingValueRecorder::_get__historyValuesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__historyValuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _historyValuesPerSecond
void GlobalNamespace::AveragingValueRecorder::_set__historyValuesPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__historyValuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesPerSecond"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyValuesCount
int GlobalNamespace::AveragingValueRecorder::_get__historyValuesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__historyValuesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _historyValuesCount
void GlobalNamespace::AveragingValueRecorder::_set__historyValuesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__historyValuesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesCount"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AveragingValueRecorder/AverageValueData> _averageWindowValues
System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>* GlobalNamespace::AveragingValueRecorder::_get__averageWindowValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__averageWindowValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValues"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Queue`1<AveragingValueRecorder/AverageValueData> _averageWindowValues
void GlobalNamespace::AveragingValueRecorder::_set__averageWindowValues(System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__averageWindowValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValues"))->offset;
  *reinterpret_cast<System::Collections::Generic::Queue_1<GlobalNamespace::AveragingValueRecorder::AverageValueData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Single> _historyValues
System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::_get__historyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__historyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValues"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Queue`1<System.Single> _historyValues
void GlobalNamespace::AveragingValueRecorder::_set__historyValues(System::Collections::Generic::Queue_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__historyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValues"))->offset;
  *reinterpret_cast<System::Collections::Generic::Queue_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
float GlobalNamespace::AveragingValueRecorder::_get__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _time
void GlobalNamespace::AveragingValueRecorder::_set__time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyTime
float GlobalNamespace::AveragingValueRecorder::_get__historyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__historyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _historyTime
void GlobalNamespace::AveragingValueRecorder::_set__historyTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__historyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyTime"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageValue
float GlobalNamespace::AveragingValueRecorder::_get__averageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__averageValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _averageValue
void GlobalNamespace::AveragingValueRecorder::_set__averageValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__averageValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowValuesDuration
float GlobalNamespace::AveragingValueRecorder::_get__averageWindowValuesDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__averageWindowValuesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValuesDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _averageWindowValuesDuration
void GlobalNamespace::AveragingValueRecorder::_set__averageWindowValuesDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__averageWindowValuesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValuesDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastValue
float GlobalNamespace::AveragingValueRecorder::_get__lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_get__lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastValue
void GlobalNamespace::AveragingValueRecorder::_set__lastValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::_set__lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValue"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: AveragingValueRecorder.Update
void GlobalNamespace::AveragingValueRecorder::Update(float value, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deltaTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, deltaTime);
}
// Autogenerated method: AveragingValueRecorder.GetAverageValue
float GlobalNamespace::AveragingValueRecorder::GetAverageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetAverageValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetLastValue
float GlobalNamespace::AveragingValueRecorder::GetLastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetLastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetHistoryValues
System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::GetHistoryValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetHistoryValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHistoryValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Queue_1<float>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder/AverageValueData
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <value>k__BackingField
float GlobalNamespace::AveragingValueRecorder::AverageValueData::_get_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::_get_$value$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <value>k__BackingField
void GlobalNamespace::AveragingValueRecorder::AverageValueData::_set_$value$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::_set_$value$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float GlobalNamespace::AveragingValueRecorder::AverageValueData::_get_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::_get_$time$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single <time>k__BackingField
void GlobalNamespace::AveragingValueRecorder::AverageValueData::_set_$time$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::_set_$time$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_value
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_value
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_time
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_time
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFilePath
::Il2CppString* GlobalNamespace::FullVRControllersRecorder::_get__recordingFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__recordingFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFilePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _recordingFilePath
void GlobalNamespace::FullVRControllersRecorder::_set__recordingFilePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__recordingFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFilePath"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder/Mode _mode
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::_get__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FullVRControllersRecorder/Mode _mode
void GlobalNamespace::FullVRControllersRecorder::_set__mode(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOffset
float GlobalNamespace::FullVRControllersRecorder::_get__timeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _timeOffset
void GlobalNamespace::FullVRControllersRecorder::_set__timeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _othersSmooth
float GlobalNamespace::FullVRControllersRecorder::_get__othersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__othersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _othersSmooth
void GlobalNamespace::FullVRControllersRecorder::_set__othersSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__othersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsSmooth
float GlobalNamespace::FullVRControllersRecorder::_get__handsSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__handsSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _handsSmooth
void GlobalNamespace::FullVRControllersRecorder::_set__handsSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__handsSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playbackFloorOffset
float GlobalNamespace::FullVRControllersRecorder::_get__playbackFloorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__playbackFloorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackFloorOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _playbackFloorOffset
void GlobalNamespace::FullVRControllersRecorder::_set__playbackFloorOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__playbackFloorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackFloorOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRController[] _controllers
::Array<GlobalNamespace::VRController*>* GlobalNamespace::FullVRControllersRecorder::_get__controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllers"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRController[] _controllers
void GlobalNamespace::FullVRControllersRecorder::_set__controllers(::Array<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllers"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController* GlobalNamespace::FullVRControllersRecorder::_get__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private AudioTimeSyncController _audioTimeSyncController
void GlobalNamespace::FullVRControllersRecorder::_set__audioTimeSyncController(GlobalNamespace::AudioTimeSyncController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<VRController> didSetControllerTransformEvent
System::Action_1<GlobalNamespace::VRController*>* GlobalNamespace::FullVRControllersRecorder::_get_didSetControllerTransformEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get_didSetControllerTransformEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetControllerTransformEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<VRController> didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::_set_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set_didSetControllerTransformEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetControllerTransformEvent"))->offset;
  *reinterpret_cast<System::Action_1<GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int GlobalNamespace::FullVRControllersRecorder::_get__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _keyframeIndex
void GlobalNamespace::FullVRControllersRecorder::_set__keyframeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorderData _data
GlobalNamespace::VRControllersRecorderData* GlobalNamespace::FullVRControllersRecorder::_get__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_get__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersRecorderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRControllersRecorderData _data
void GlobalNamespace::FullVRControllersRecorder::_set__data(GlobalNamespace::VRControllersRecorderData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::_set__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersRecorderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: FullVRControllersRecorder.add_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.remove_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.Start
void GlobalNamespace::FullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.OnDestroy
void GlobalNamespace::FullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.PlaybackTick
void GlobalNamespace::FullVRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.RecordTick
void GlobalNamespace::FullVRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.Update
void GlobalNamespace::FullVRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.LateUpdate
void GlobalNamespace::FullVRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder/Mode
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Record
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Record
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Playback
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Playback
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Off
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Off
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::FullVRControllersRecorder::Mode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverridePlayerTransformsFromFullVRControllersRecorder
#include "GlobalNamespace/OverridePlayerTransformsFromFullVRControllersRecorder.hpp"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder _fullVRControllersRecorder
GlobalNamespace::FullVRControllersRecorder* GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__fullVRControllersRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__fullVRControllersRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullVRControllersRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FullVRControllersRecorder _fullVRControllersRecorder
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__fullVRControllersRecorder(GlobalNamespace::FullVRControllersRecorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__fullVRControllersRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullVRControllersRecorder"))->offset;
  *reinterpret_cast<GlobalNamespace::FullVRControllersRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms* GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PlayerTransforms _playerTransforms
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__playerTransforms(GlobalNamespace::PlayerTransforms* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager* GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly SaberManager _saberManager
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__saberManager(GlobalNamespace::SaberManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerVRControllersManager _playerVRControllersManager
GlobalNamespace::PlayerVRControllersManager* GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__playerVRControllersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_get__playerVRControllersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerVRControllersManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerVRControllersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly PlayerVRControllersManager _playerVRControllersManager
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__playerVRControllersManager(GlobalNamespace::PlayerVRControllersManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::_set__playerVRControllersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerVRControllersManager"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerVRControllersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.Start
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.OnDestroy
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.HandleFullVRControllersRecorderDidSetControllerTransform
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform(GlobalNamespace::VRController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayableDirectorTimer
#include "GlobalNamespace/PlayableDirectorTimer.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
UnityEngine::Playables::PlayableDirector* GlobalNamespace::PlayableDirectorTimer::_get__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::_get__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
void GlobalNamespace::PlayableDirectorTimer::_set__playableDirector(UnityEngine::Playables::PlayableDirector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::_set__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController* GlobalNamespace::PlayableDirectorTimer::_get__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::_get__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private AudioTimeSyncController _audioTimeSyncController
void GlobalNamespace::PlayableDirectorTimer::_set__audioTimeSyncController(GlobalNamespace::AudioTimeSyncController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::_set__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PlayableDirectorTimer.Update
void GlobalNamespace::PlayableDirectorTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleVRNodeRecorder
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
GlobalNamespace::FloatSO* GlobalNamespace::SimpleVRNodeRecorder::_get__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FloatSO _songTime
void GlobalNamespace::SimpleVRNodeRecorder::_set__songTime(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
::Il2CppString* GlobalNamespace::SimpleVRNodeRecorder::_get__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _saveFilename
void GlobalNamespace::SimpleVRNodeRecorder::_set__saveFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SimpleVRNodeRecorder/RecordMode _mode
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::_get__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleVRNodeRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SimpleVRNodeRecorder/RecordMode _mode
void GlobalNamespace::SimpleVRNodeRecorder::_set__mode(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  *reinterpret_cast<GlobalNamespace::SimpleVRNodeRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode _node
UnityEngine::XR::XRNode GlobalNamespace::SimpleVRNodeRecorder::_get__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.XR.XRNode _node
void GlobalNamespace::SimpleVRNodeRecorder::_set__node(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playbackTransform
UnityEngine::Transform* GlobalNamespace::SimpleVRNodeRecorder::_get__playbackTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__playbackTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _playbackTransform
void GlobalNamespace::SimpleVRNodeRecorder::_set__playbackTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__playbackTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float GlobalNamespace::SimpleVRNodeRecorder::_get__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _smooth
void GlobalNamespace::SimpleVRNodeRecorder::_set__smooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forwardOffset
float GlobalNamespace::SimpleVRNodeRecorder::_get__forwardOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__forwardOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _forwardOffset
void GlobalNamespace::SimpleVRNodeRecorder::_set__forwardOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__forwardOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper* GlobalNamespace::SimpleVRNodeRecorder::_get__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private IVRPlatformHelper _vrPlatformHelper
void GlobalNamespace::SimpleVRNodeRecorder::_set__vrPlatformHelper(GlobalNamespace::IVRPlatformHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SimpleVRNodeRecorder/SavedData/NodeKeyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>* GlobalNamespace::SimpleVRNodeRecorder::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<SimpleVRNodeRecorder/SavedData/NodeKeyframe> _keyframes
void GlobalNamespace::SimpleVRNodeRecorder::_set__keyframes(System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int GlobalNamespace::SimpleVRNodeRecorder::_get__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _keyframeIndex
void GlobalNamespace::SimpleVRNodeRecorder::_set__keyframeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::_get__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _prevPos
void GlobalNamespace::SimpleVRNodeRecorder::_set__prevPos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _prevRot
UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::_get__prevRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_get__prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Quaternion _prevRot
void GlobalNamespace::SimpleVRNodeRecorder::_set__prevRot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::_set__prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SimpleVRNodeRecorder.Awake
void GlobalNamespace::SimpleVRNodeRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.OnDestroy
void GlobalNamespace::SimpleVRNodeRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.RecordNewKeyFrame
void GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordNewKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Update
void GlobalNamespace::SimpleVRNodeRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Save
void GlobalNamespace::SimpleVRNodeRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Load
void GlobalNamespace::SimpleVRNodeRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleVRNodeRecorder/SavedData
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleVRNodeRecorder/SavedData/NodeKeyframe[] keyframes
::Array<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>* GlobalNamespace::SimpleVRNodeRecorder::SavedData::_get_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::_get_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public SimpleVRNodeRecorder/SavedData/NodeKeyframe[] keyframes
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::_set_keyframes(::Array<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::_set_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posX
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posY
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posZ
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotX
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotY
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotZ
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotW
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotW(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_get_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single time
void GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::_set_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_pos
UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_rot
UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/RecordMode
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Record
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Record
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Playback
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Playback
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Off
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Off
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _recordingTextAsset
UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::_get__recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__recordingTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingTextAsset"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.TextAsset _recordingTextAsset
void GlobalNamespace::VRControllersRecorder::_set__recordingTextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__recordingTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingTextAsset"))->offset;
  *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFileName
::Il2CppString* GlobalNamespace::VRControllersRecorder::_get__recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _recordingFileName
void GlobalNamespace::VRControllersRecorder::_set__recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorder/Mode _mode
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::_get__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRControllersRecorder/Mode _mode
void GlobalNamespace::VRControllersRecorder::_set__mode(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  *reinterpret_cast<GlobalNamespace::VRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontMoveHead
bool GlobalNamespace::VRControllersRecorder::_get__dontMoveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__dontMoveHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontMoveHead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _dontMoveHead
void GlobalNamespace::VRControllersRecorder::_set__dontMoveHead(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__dontMoveHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontMoveHead"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::_get__changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__changeToNonVRCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeToNonVRCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::_set__changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__changeToNonVRCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeToNonVRCamera"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _adjustSabersPositionBasedOnHeadPosition
bool GlobalNamespace::VRControllersRecorder::_get__adjustSabersPositionBasedOnHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__adjustSabersPositionBasedOnHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustSabersPositionBasedOnHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _adjustSabersPositionBasedOnHeadPosition
void GlobalNamespace::VRControllersRecorder::_set__adjustSabersPositionBasedOnHeadPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__adjustSabersPositionBasedOnHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustSabersPositionBasedOnHeadPosition"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headRotationOffset
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorder::_get__headRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headRotationOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _headRotationOffset
void GlobalNamespace::VRControllersRecorder::_set__headRotationOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headRotationOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPositionOffset
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorder::_get__headPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPositionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _headPositionOffset
void GlobalNamespace::VRControllersRecorder::_set__headPositionOffset(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPositionOffset"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headSmooth
float GlobalNamespace::VRControllersRecorder::_get__headSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__headSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _headSmooth
void GlobalNamespace::VRControllersRecorder::_set__headSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__headSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFOV
float GlobalNamespace::VRControllersRecorder::_get__cameraFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__cameraFOV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFOV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _cameraFOV
void GlobalNamespace::VRControllersRecorder::_set__cameraFOV(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__cameraFOV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFOV"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersTimeOffset
float GlobalNamespace::VRControllersRecorder::_get__controllersTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__controllersTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _controllersTimeOffset
void GlobalNamespace::VRControllersRecorder::_set__controllersTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__controllersTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersTimeOffset"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersSmooth
float GlobalNamespace::VRControllersRecorder::_get__controllersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__controllersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _controllersSmooth
void GlobalNamespace::VRControllersRecorder::_set__controllersSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__controllersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersSmooth"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
GlobalNamespace::VRController* GlobalNamespace::VRControllersRecorder::_get__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRController _controller0
void GlobalNamespace::VRControllersRecorder::_set__controller0(GlobalNamespace::VRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
GlobalNamespace::VRController* GlobalNamespace::VRControllersRecorder::_get__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRController _controller1
void GlobalNamespace::VRControllersRecorder::_set__controller1(GlobalNamespace::VRController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
UnityEngine::Transform* GlobalNamespace::VRControllersRecorder::_get__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _headTransform
void GlobalNamespace::VRControllersRecorder::_set__headTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera* GlobalNamespace::VRControllersRecorder::_get__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Camera _camera
void GlobalNamespace::VRControllersRecorder::_set__camera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _recorderCamera
UnityEngine::Camera* GlobalNamespace::VRControllersRecorder::_get__recorderCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__recorderCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderCamera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Camera _recorderCamera
void GlobalNamespace::VRControllersRecorder::_set__recorderCamera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__recorderCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderCamera"))->offset;
  *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnRotationTransform
UnityEngine::Transform* GlobalNamespace::VRControllersRecorder::_get__spawnRotationTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__spawnRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _spawnRotationTransform
void GlobalNamespace::VRControllersRecorder::_set__spawnRotationTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__spawnRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
UnityEngine::Transform* GlobalNamespace::VRControllersRecorder::_get__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _originTransform
void GlobalNamespace::VRControllersRecorder::_set__originTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController* GlobalNamespace::VRControllersRecorder::_get__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly AudioTimeSyncController _audioTimeSyncController
void GlobalNamespace::VRControllersRecorder::_set__audioTimeSyncController(GlobalNamespace::AudioTimeSyncController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRControllersRecorder/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>* GlobalNamespace::VRControllersRecorder::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<VRControllersRecorder/Keyframe> _keyframes
void GlobalNamespace::VRControllersRecorder::_set__keyframes(System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int GlobalNamespace::VRControllersRecorder::_get__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_get__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _keyframeIndex
void GlobalNamespace::VRControllersRecorder::_set__keyframeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::_set__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: VRControllersRecorder.get_mode
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorder::Mode, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::Il2CppString* GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(UnityEngine::Transform* transf, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transf), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(targetRot), ::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::Il2CppString* recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingfilePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>* GlobalNamespace::VRControllersRecorder::SavedData::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
void GlobalNamespace::VRControllersRecorder::SavedData::_set__keyframes(::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xPos1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yPos1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zPos1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xPos2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yPos2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zPos2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xPos3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yPos3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zPos3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xRot1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yRot1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zRot1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot1
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _wRot1
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot1(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot1"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xRot2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yRot2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zRot2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot2
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _wRot2
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot2(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot2"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__xRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xRot3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__xRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__yRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yRot3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__yRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__zRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zRot3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__zRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot3
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__wRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _wRot3
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot3(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__wRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot3"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_get__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _time
void GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::_set__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Mode
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Record
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Record
void GlobalNamespace::VRControllersRecorder::Mode::_set_Record(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Playback
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Playback
void GlobalNamespace::VRControllersRecorder::Mode::_set_Playback(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Off
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Off
void GlobalNamespace::VRControllersRecorder::Mode::_set_Off(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::VRControllersRecorder::Mode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::VRControllersRecorder::Mode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos1
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos1"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _pos1
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos1(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos1"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos2
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos2"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _pos2
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos2(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos2"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos3
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__pos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos3"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _pos3
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos3(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__pos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos3"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot1
UnityEngine::Quaternion GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot1"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Quaternion _rot1
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot1(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot1"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot2
UnityEngine::Quaternion GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot2"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Quaternion _rot2
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot2(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot2"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot3
UnityEngine::Quaternion GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__rot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot3"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Quaternion _rot3
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot3(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__rot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot3"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float GlobalNamespace::VRControllersRecorder::Keyframe::_get__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_get__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _time
void GlobalNamespace::VRControllersRecorder::Keyframe::_set__time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Keyframe::_set__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/NodeInfo[] nodesInfo
::Array<GlobalNamespace::VRControllersRecorderData::NodeInfo*>* GlobalNamespace::VRControllersRecorderData::_get_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::_get_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderData::NodeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly VRControllersRecorderData/NodeInfo[] nodesInfo
void GlobalNamespace::VRControllersRecorderData::_set_nodesInfo(::Array<GlobalNamespace::VRControllersRecorderData::NodeInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::_set_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderData::NodeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VRControllersRecorderData/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>* GlobalNamespace::VRControllersRecorderData::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<VRControllersRecorderData/Keyframe> _keyframes
void GlobalNamespace::VRControllersRecorderData::_set__keyframes(System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRControllersRecorderData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: VRControllersRecorderData.get_numberOfKeyframes
int GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRControllersRecorderData.AddKeyFrame
void GlobalNamespace::VRControllersRecorderData::AddKeyFrame(::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>* positionsAndRotations, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::AddKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionsAndRotations), ::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, positionsAndRotations, time);
}
// Autogenerated method: VRControllersRecorderData.GetPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation(int frameIdx, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(___instance_arg, ___internal__method, frameIdx, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetLerpedPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation(int frameIdx, float t, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLerpedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(___instance_arg, ___internal__method, frameIdx, t, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetFrameTime
float GlobalNamespace::VRControllersRecorderData::GetFrameTime(int frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, frameIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 pos
UnityEngine::Vector3 GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_get_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly UnityEngine.Vector3 pos
void GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_set_pos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_set_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rot
UnityEngine::Quaternion GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_get_rot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly UnityEngine.Quaternion rot
void GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_set_rot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::_set_rot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: VRControllersRecorderData/PositionAndRotation.Lerp
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp(GlobalNamespace::VRControllersRecorderData::PositionAndRotation a, GlobalNamespace::VRControllersRecorderData::PositionAndRotation b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderData/PositionAndRotation", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/PositionAndRotation[] positionsAndRotations
::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>* GlobalNamespace::VRControllersRecorderData::Keyframe::_get_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::_get_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly VRControllersRecorderData/PositionAndRotation[] positionsAndRotations
void GlobalNamespace::VRControllersRecorderData::Keyframe::_set_positionsAndRotations(::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::_set_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float GlobalNamespace::VRControllersRecorderData::Keyframe::_get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::_get_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Single time
void GlobalNamespace::VRControllersRecorderData::Keyframe::_set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::Keyframe::_set_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.XR.XRNode nodeType
UnityEngine::XR::XRNode GlobalNamespace::VRControllersRecorderData::NodeInfo::_get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::_get_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly UnityEngine.XR.XRNode nodeType
void GlobalNamespace::VRControllersRecorderData::NodeInfo::_set_nodeType(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::_set_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 nodeIdx
int GlobalNamespace::VRControllersRecorderData::NodeInfo::_get_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::_get_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Int32 nodeIdx
void GlobalNamespace::VRControllersRecorderData::NodeInfo::_set_nodeIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::NodeInfo::_set_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveAndLoad
#include "GlobalNamespace/VRControllersRecorderSaveAndLoad.hpp"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromFile
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromTextAsset
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset(UnityEngine::TextAsset* textAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textAsset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textAsset);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadFromFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.SaveToFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/NodeInfo[] nodesInfo
::Array<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>* GlobalNamespace::VRControllersRecorderSaveData::_get_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::_get_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRControllersRecorderSaveData/NodeInfo[] nodesInfo
void GlobalNamespace::VRControllersRecorderSaveData::_set_nodesInfo(::Array<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::_set_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/Keyframe[] keyframes
::Array<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>* GlobalNamespace::VRControllersRecorderSaveData::_get_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::_get_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRControllersRecorderSaveData/Keyframe[] keyframes
void GlobalNamespace::VRControllersRecorderSaveData::_set_keyframes(::Array<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::_set_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posX
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posY
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single posZ
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotX
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotY
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotZ
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_get_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single rotW
void GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotW(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::_set_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/PositionAndRotation[] positionsAndRotations
::Array<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>* GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_get_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_get_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRControllersRecorderSaveData/PositionAndRotation[] positionsAndRotations
void GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_set_positionsAndRotations(::Array<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_set_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_get_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single time
void GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::Keyframe::_set_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode nodeType
UnityEngine::XR::XRNode GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_get_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_get_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.XR.XRNode nodeType
void GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_set_nodeType(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_set_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeIdx
int GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_get_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_get_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 nodeIdx
void GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_set_nodeIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::_set_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
GlobalNamespace::FloatSO* GlobalNamespace::VRTrackersRecorder::_get__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FloatSO _songTime
void GlobalNamespace::VRTrackersRecorder::_set__songTime(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
::Il2CppString* GlobalNamespace::VRTrackersRecorder::_get__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _saveFilename
void GlobalNamespace::VRTrackersRecorder::_set__saveFilename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private VRTrackersRecorder/RecordMode _mode
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::_get__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRTrackersRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private VRTrackersRecorder/RecordMode _mode
void GlobalNamespace::VRTrackersRecorder::_set__mode(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  *reinterpret_cast<GlobalNamespace::VRTrackersRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
UnityEngine::Transform* GlobalNamespace::VRTrackersRecorder::_get__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _originTransform
void GlobalNamespace::VRTrackersRecorder::_set__originTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _playbackTransforms
::Array<UnityEngine::Transform*>* GlobalNamespace::VRTrackersRecorder::_get__playbackTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__playbackTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransforms"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform[] _playbackTransforms
void GlobalNamespace::VRTrackersRecorder::_set__playbackTransforms(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__playbackTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransforms"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRTrackersRecorder/Keyframe> _keyframes
System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>* GlobalNamespace::VRTrackersRecorder::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<VRTrackersRecorder/Keyframe> _keyframes
void GlobalNamespace::VRTrackersRecorder::_set__keyframes(System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::VRTrackersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int GlobalNamespace::VRTrackersRecorder::_get__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _keyframeIndex
void GlobalNamespace::VRTrackersRecorder::_set__keyframeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private SteamVR_Events/Action _newPosesAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::VRTrackersRecorder::_get__newPosesAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__newPosesAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPosesAction"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamVR_Events::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private SteamVR_Events/Action _newPosesAction
void GlobalNamespace::VRTrackersRecorder::_set__newPosesAction(GlobalNamespace::SteamVR_Events::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__newPosesAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPosesAction"))->offset;
  *reinterpret_cast<GlobalNamespace::SteamVR_Events::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _loadedOriginPos
UnityEngine::Vector3 GlobalNamespace::VRTrackersRecorder::_get__loadedOriginPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__loadedOriginPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _loadedOriginPos
void GlobalNamespace::VRTrackersRecorder::_set__loadedOriginPos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__loadedOriginPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginPos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _loadedOriginRot
UnityEngine::Quaternion GlobalNamespace::VRTrackersRecorder::_get__loadedOriginRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_get__loadedOriginRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Quaternion _loadedOriginRot
void GlobalNamespace::VRTrackersRecorder::_set__loadedOriginRot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::_set__loadedOriginRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginRot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::Array<Valve::VR::TrackedDevicePose_t>* poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable[] _keyframes
::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>* GlobalNamespace::VRTrackersRecorder::SavedData::_get__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::_get__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable[] _keyframes
void GlobalNamespace::VRTrackersRecorder::SavedData::_set__keyframes(::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::_set__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable[] _transforms
::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>* GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_get__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_get__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable[] _transforms
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_set__transforms(::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_set__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_get__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_get__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _time
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_set__time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::_set__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__xPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__xPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xPos
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__xPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__xPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__yPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__yPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yPos
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__yPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__yPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__zPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__zPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zPos
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__zPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__zPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__xRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__xRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _xRot
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__xRot(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__xRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__yRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__yRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _yRot
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__yRot(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__yRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__zRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__zRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _zRot
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__zRot(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__zRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot
float GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__wRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__wRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _wRot
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__wRot(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__wRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_get__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _valid
void GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__valid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::_set__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::VRTrackersRecorder::RecordMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/Keyframe/KeyframeTransform[] _transforms
::Array<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>* GlobalNamespace::VRTrackersRecorder::Keyframe::_get__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::_get__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public VRTrackersRecorder/Keyframe/KeyframeTransform[] _transforms
void GlobalNamespace::VRTrackersRecorder::Keyframe::_set__transforms(::Array<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::_set__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float GlobalNamespace::VRTrackersRecorder::Keyframe::_get__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::_get__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _time
void GlobalNamespace::VRTrackersRecorder::Keyframe::_set__time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::_set__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos
UnityEngine::Vector3 GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _pos
void GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__pos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot
UnityEngine::Quaternion GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Quaternion _rot
void GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__rot(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot"))->offset;
  *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_get__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _valid
void GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__valid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::_set__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerTimelineMock
#include "GlobalNamespace/MultiplayerTimelineMock.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerIntroAnimators
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerIntroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerIntroAnimators"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _connectedPlayerIntroAnimators
void GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerIntroAnimators(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerIntroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerIntroAnimators"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerScoreRingItems
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerScoreRingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerScoreRingItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerScoreRingItems"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _connectedPlayerScoreRingItems
void GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerScoreRingItems(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerScoreRingItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerScoreRingItems"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerOutroAnimators
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__connectedPlayerOutroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerOutroAnimators"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _connectedPlayerOutroAnimators
void GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerOutroAnimators(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__connectedPlayerOutroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerOutroAnimators"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _localPlayerIntroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerIntroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerIntroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerScoreRingItem
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerScoreRingItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerScoreRingItem"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _localPlayerScoreRingItem
void GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerScoreRingItem(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerScoreRingItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerScoreRingItem"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__localPlayerOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _localPlayerOutroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerOutroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__localPlayerOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerOutroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__connectedDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _connectedDuelIntroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__connectedDuelIntroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__connectedDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelIntroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__connectedDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _connectedDuelOutroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__connectedDuelOutroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__connectedDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelOutroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__localDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelIntroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _localDuelIntroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__localDuelIntroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__localDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelIntroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__localDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelOutroAnimator"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _localDuelOutroAnimator
void GlobalNamespace::MultiplayerTimelineMock::_set__localDuelOutroAnimator(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__localDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelOutroAnimator"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _resultAvatars
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::_get__resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__resultAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultAvatars"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _resultAvatars
void GlobalNamespace::MultiplayerTimelineMock::_set__resultAvatars(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__resultAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultAvatars"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _badgeTimelines
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::_get__badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__badgeTimelines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badgeTimelines"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject[] _badgeTimelines
void GlobalNamespace::MultiplayerTimelineMock::_set__badgeTimelines(::Array<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__badgeTimelines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badgeTimelines"))->offset;
  *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _resultsMocks
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__resultsMocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsMocks"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _resultsMocks
void GlobalNamespace::MultiplayerTimelineMock::_set__resultsMocks(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__resultsMocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsMocks"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _ringsGroup
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__ringsGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__ringsGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringsGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _ringsGroup
void GlobalNamespace::MultiplayerTimelineMock::_set__ringsGroup(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__ringsGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringsGroup"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _playersGroup
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__playersGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__playersGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _playersGroup
void GlobalNamespace::MultiplayerTimelineMock::_set__playersGroup(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__playersGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersGroup"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _duelGroup
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::_get__duelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_get__duelGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelGroup"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.GameObject _duelGroup
void GlobalNamespace::MultiplayerTimelineMock::_set__duelGroup(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::_set__duelGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelGroup"))->offset;
  *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerIntroAnimators
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerIntroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerScoreRings
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerScoreRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerOutroAnimators
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerOutroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerScoreRingItem
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerScoreRingItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelIntroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelOutroAnimator
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultAvatars
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultAvatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_badgeTimelines
::Array<UnityEngine::GameObject*>* GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badgeTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultsMocks
UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsMocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.HandleActivations
void GlobalNamespace::MultiplayerTimelineMock::HandleActivations(bool isDuel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerTimelineMock::HandleActivations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleActivations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDuel)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isDuel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
GlobalNamespace::Vector3SO* GlobalNamespace::VRCenterAdjust::_get__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_get__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private Vector3SO _roomCenter
void GlobalNamespace::VRCenterAdjust::_set__roomCenter(GlobalNamespace::Vector3SO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_set__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  *reinterpret_cast<GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _roomRotation
GlobalNamespace::FloatSO* GlobalNamespace::VRCenterAdjust::_get__roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_get__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private FloatSO _roomRotation
void GlobalNamespace::VRCenterAdjust::_set__roomRotation(GlobalNamespace::FloatSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_set__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO* GlobalNamespace::VRCenterAdjust::_get__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_get__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainSettingsModelSO _mainSettingsModel
void GlobalNamespace::VRCenterAdjust::_set__mainSettingsModel(GlobalNamespace::MainSettingsModelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::_set__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArrayPositionTween
#include "GlobalNamespace/ArrayPositionTween.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*> GlobalNamespace::ArrayPositionTween::_get_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_get_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
void GlobalNamespace::ArrayPositionTween::_set_arrayReference(UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_set_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float GlobalNamespace::ArrayPositionTween::_get_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_get_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single elementDelay
void GlobalNamespace::ArrayPositionTween::_set_elementDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_set_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
GlobalNamespace::CustomTweenBehaviour* GlobalNamespace::ArrayPositionTween::_get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_get_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public CustomTweenBehaviour template
void GlobalNamespace::ArrayPositionTween::_set_template(GlobalNamespace::CustomTweenBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::_set_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: ArrayPositionTween.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::ArrayPositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ArrayPositionTween.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::ArrayPositionTween::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArrayPositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorAsset
#include "GlobalNamespace/AvatarColorAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
GlobalNamespace::AvatarColorBehaviour* GlobalNamespace::AvatarColorAsset::_get__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::_get__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public AvatarColorBehaviour _template
void GlobalNamespace::AvatarColorAsset::_set__template(GlobalNamespace::AvatarColorBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::_set__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: AvatarColorAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::AvatarColorAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarColorAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::AvatarColorAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _startColor
UnityEngine::Color GlobalNamespace::AvatarColorBehaviour::_get__startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_get__startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color _startColor
void GlobalNamespace::AvatarColorBehaviour::_set__startColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_set__startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _endColor
UnityEngine::Color GlobalNamespace::AvatarColorBehaviour::_get__endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_get__endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Color _endColor
void GlobalNamespace::AvatarColorBehaviour::_set__endColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_set__endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType _easeType
Tweening::EaseType GlobalNamespace::AvatarColorBehaviour::_get__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_get__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Tweening.EaseType _easeType
void GlobalNamespace::AvatarColorBehaviour::_set__easeType(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_set__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
GlobalNamespace::AvatarVisualController* GlobalNamespace::AvatarColorBehaviour::_get__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_get__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private AvatarVisualController _avatarVisualController
void GlobalNamespace::AvatarColorBehaviour::_set__avatarVisualController(GlobalNamespace::AvatarVisualController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_set__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  *reinterpret_cast<GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float GlobalNamespace::AvatarColorBehaviour::_get__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_get__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _duration
void GlobalNamespace::AvatarColorBehaviour::_set__duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::_set__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: AvatarColorBehaviour.OnGraphStart
void GlobalNamespace::AvatarColorBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated method: AvatarColorBehaviour.ProcessFrame
void GlobalNamespace::AvatarColorBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated method: AvatarColorBehaviour.OnPlayableDestroy
void GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorTrack
#include "GlobalNamespace/AvatarColorTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogParamsAsset
#include "GlobalNamespace/BloomFogParamsAsset.hpp"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomFogParamsBehaviour _template
GlobalNamespace::BloomFogParamsBehaviour* GlobalNamespace::BloomFogParamsAsset::_get__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::_get__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogParamsBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BloomFogParamsBehaviour _template
void GlobalNamespace::BloomFogParamsAsset::_set__template(GlobalNamespace::BloomFogParamsBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::_set__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomFogParamsBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BloomFogParamsAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::BloomFogParamsAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BloomFogParamsAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::BloomFogParamsAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _bloomFogParams
GlobalNamespace::BloomFogEnvironmentParams* GlobalNamespace::BloomFogParamsBehaviour::_get__bloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__bloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomFogEnvironmentParams _bloomFogParams
void GlobalNamespace::BloomFogParamsBehaviour::_set__bloomFogParams(GlobalNamespace::BloomFogEnvironmentParams* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__bloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogParams"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _blend
float GlobalNamespace::BloomFogParamsBehaviour::_get__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _blend
void GlobalNamespace::BloomFogParamsBehaviour::_set__blend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public BloomFogSO _editorBloomFogSO
GlobalNamespace::BloomFogSO* GlobalNamespace::BloomFogParamsBehaviour::_get__editorBloomFogSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__editorBloomFogSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorBloomFogSO"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public BloomFogSO _editorBloomFogSO
void GlobalNamespace::BloomFogParamsBehaviour::_set__editorBloomFogSO(GlobalNamespace::BloomFogSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__editorBloomFogSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorBloomFogSO"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::BloomFogParamsBehaviour::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::BloomFogParamsBehaviour::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _originalBloomFogParams
GlobalNamespace::BloomFogEnvironmentParams* GlobalNamespace::BloomFogParamsBehaviour::_get__originalBloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__originalBloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalBloomFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomFogEnvironmentParams _originalBloomFogParams
void GlobalNamespace::BloomFogParamsBehaviour::_set__originalBloomFogParams(GlobalNamespace::BloomFogEnvironmentParams* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__originalBloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalBloomFogParams"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool GlobalNamespace::BloomFogParamsBehaviour::_get__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_get__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _finished
void GlobalNamespace::BloomFogParamsBehaviour::_set__finished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::_set__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: BloomFogParamsBehaviour.ProcessFrame
void GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated method: BloomFogParamsBehaviour.OnPlayableDestroy
void GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlPlayableAsset
#include "GlobalNamespace/CustomControlPlayableAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
GlobalNamespace::AvatarColorBehaviour* GlobalNamespace::CustomControlPlayableAsset::_get__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::_get__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public AvatarColorBehaviour _template
void GlobalNamespace::CustomControlPlayableAsset::_set__template(GlobalNamespace::AvatarColorBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::_set__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  *reinterpret_cast<GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::CustomControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlTrack
#include "GlobalNamespace/CustomControlTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTimelineTween
#include "GlobalNamespace/CustomTimelineTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] transforms
::Array<UnityEngine::Transform*>* GlobalNamespace::CustomTimelineTween::_get_transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::_get_transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transforms"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform[] transforms
void GlobalNamespace::CustomTimelineTween::_set_transforms(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::_set_transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transforms"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] startPositions
::Array<UnityEngine::Vector3>* GlobalNamespace::CustomTimelineTween::_get_startPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::_get_startPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPositions"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3[] startPositions
void GlobalNamespace::CustomTimelineTween::_set_startPositions(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::_set_startPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPositions"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomTimelineTween.OnValidate
void GlobalNamespace::CustomTimelineTween::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transforms
::Array<UnityEngine::Transform*>* GlobalNamespace::CustomTweenBehaviour::_get__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform[] _transforms
void GlobalNamespace::CustomTweenBehaviour::_set__transforms(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startLocationCurrentPosition
bool GlobalNamespace::CustomTweenBehaviour::_get_startLocationCurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_startLocationCurrentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocationCurrentPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean startLocationCurrentPosition
void GlobalNamespace::CustomTweenBehaviour::_set_startLocationCurrentPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_startLocationCurrentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocationCurrentPosition"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startLocalPos
UnityEngine::Vector3 GlobalNamespace::CustomTweenBehaviour::_get_startLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_startLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 startLocalPos
void GlobalNamespace::CustomTweenBehaviour::_set_startLocalPos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_startLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocalPos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endLocalPos
UnityEngine::Vector3 GlobalNamespace::CustomTweenBehaviour::_get_endLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_endLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 endLocalPos
void GlobalNamespace::CustomTweenBehaviour::_set_endLocalPos(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_endLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocalPos"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType easeType
Tweening::EaseType GlobalNamespace::CustomTweenBehaviour::_get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Tweening.EaseType easeType
void GlobalNamespace::CustomTweenBehaviour::_set_easeType(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endXRelativeToSelfRotation
bool GlobalNamespace::CustomTweenBehaviour::_get_endXRelativeToSelfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_endXRelativeToSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXRelativeToSelfRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean endXRelativeToSelfRotation
void GlobalNamespace::CustomTweenBehaviour::_set_endXRelativeToSelfRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_endXRelativeToSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXRelativeToSelfRotation"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float GlobalNamespace::CustomTweenBehaviour::_get_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single elementDelay
void GlobalNamespace::CustomTweenBehaviour::_set_elementDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockX
bool GlobalNamespace::CustomTweenBehaviour::_get__lockX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _lockX
void GlobalNamespace::CustomTweenBehaviour::_set__lockX(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockY
bool GlobalNamespace::CustomTweenBehaviour::_get__lockY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _lockY
void GlobalNamespace::CustomTweenBehaviour::_set__lockY(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockZ
bool GlobalNamespace::CustomTweenBehaviour::_get__lockZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _lockZ
void GlobalNamespace::CustomTweenBehaviour::_set__lockZ(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeOrder
bool GlobalNamespace::CustomTweenBehaviour::_get__randomizeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__randomizeOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeOrder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _randomizeOrder
void GlobalNamespace::CustomTweenBehaviour::_set__randomizeOrder(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__randomizeOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeOrder"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _randomizedMinDurationMultiplier
float GlobalNamespace::CustomTweenBehaviour::_get__randomizedMinDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__randomizedMinDurationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedMinDurationMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _randomizedMinDurationMultiplier
void GlobalNamespace::CustomTweenBehaviour::_set__randomizedMinDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__randomizedMinDurationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedMinDurationMultiplier"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float GlobalNamespace::CustomTweenBehaviour::_get__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _duration
void GlobalNamespace::CustomTweenBehaviour::_set__duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _perItemDuration
float GlobalNamespace::CustomTweenBehaviour::_get__perItemDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__perItemDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perItemDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _perItemDuration
void GlobalNamespace::CustomTweenBehaviour::_set__perItemDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__perItemDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perItemDuration"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _originalLocalPos
::Array<UnityEngine::Vector3>* GlobalNamespace::CustomTweenBehaviour::_get__originalLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__originalLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLocalPos"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3[] _originalLocalPos
void GlobalNamespace::CustomTweenBehaviour::_set__originalLocalPos(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__originalLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLocalPos"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::CustomTweenBehaviour::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::CustomTweenBehaviour::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _randomizedOrder
::Array<int>* GlobalNamespace::CustomTweenBehaviour::_get__randomizedOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__randomizedOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedOrder"))->offset;
  return *reinterpret_cast<::Array<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32[] _randomizedOrder
void GlobalNamespace::CustomTweenBehaviour::_set__randomizedOrder(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__randomizedOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedOrder"))->offset;
  *reinterpret_cast<::Array<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _randomizedDuration
::Array<float>* GlobalNamespace::CustomTweenBehaviour::_get__randomizedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_get__randomizedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedDuration"))->offset;
  return *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single[] _randomizedDuration
void GlobalNamespace::CustomTweenBehaviour::_set__randomizedDuration(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::_set__randomizedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedDuration"))->offset;
  *reinterpret_cast<::Array<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: CustomTweenBehaviour.OnGraphStart
void GlobalNamespace::CustomTweenBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.ProcessFrame
void GlobalNamespace::CustomTweenBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated method: CustomTweenBehaviour.OnPlayableDestroy
void GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.OnBehaviourPlay
void GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CustomTweenBehaviour/<>c <>9
GlobalNamespace::CustomTweenBehaviour::$$c* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::CustomTweenBehaviour::$$c*>("", "CustomTweenBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CustomTweenBehaviour/<>c <>9
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9(GlobalNamespace::CustomTweenBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
System::Func_2<int, float>* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<int, float>*>("", "CustomTweenBehaviour/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0(System::Func_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9__21_0", value)));
}
// Autogenerated method: CustomTweenBehaviour/<>c..cctor
void GlobalNamespace::CustomTweenBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CustomTweenBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CustomTweenBehaviour/<>c.<OnBehaviourPlay>b__21_0
float GlobalNamespace::CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::<OnBehaviourPlay>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectAsset
#include "GlobalNamespace/GhostEffectAsset.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectAsset::_get__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_get__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
void GlobalNamespace::GhostEffectAsset::_set__ghostEffectType(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_set__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*> GlobalNamespace::GhostEffectAsset::_get_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_get_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
void GlobalNamespace::GhostEffectAsset::_set_arrayReference(UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_set_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  *reinterpret_cast<UnityEngine::ExposedReference_1<GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour template
GlobalNamespace::GhostEffectBehaviour* GlobalNamespace::GhostEffectAsset::_get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_get_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GhostEffectBehaviour template
void GlobalNamespace::GhostEffectAsset::_set_template(GlobalNamespace::GhostEffectBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::_set_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: GhostEffectAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::GhostEffectAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GhostEffectAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::GhostEffectAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostEffectBehaviour
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve alphaCurve
UnityEngine::AnimationCurve* GlobalNamespace::GhostEffectBehaviour::_get_alphaCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get_alphaCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.AnimationCurve alphaCurve
void GlobalNamespace::GhostEffectBehaviour::_set_alphaCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set_alphaCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaCurve"))->offset;
  *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve sizeCurve
UnityEngine::AnimationCurve* GlobalNamespace::GhostEffectBehaviour::_get_sizeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get_sizeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.AnimationCurve sizeCurve
void GlobalNamespace::GhostEffectBehaviour::_set_sizeCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set_sizeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeCurve"))->offset;
  *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve distanceCurve
UnityEngine::AnimationCurve* GlobalNamespace::GhostEffectBehaviour::_get_distanceCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get_distanceCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.AnimationCurve distanceCurve
void GlobalNamespace::GhostEffectBehaviour::_set_distanceCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set_distanceCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceCurve"))->offset;
  *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _distanceMultiplier
UnityEngine::Vector3 GlobalNamespace::GhostEffectBehaviour::_get__distanceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__distanceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceMultiplier"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _distanceMultiplier
void GlobalNamespace::GhostEffectBehaviour::_set__distanceMultiplier(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__distanceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceMultiplier"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useStartTransform
bool GlobalNamespace::GhostEffectBehaviour::_get__useStartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__useStartTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStartTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _useStartTransform
void GlobalNamespace::GhostEffectBehaviour::_set__useStartTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__useStartTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStartTransform"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useEndTransform
bool GlobalNamespace::GhostEffectBehaviour::_get__useEndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__useEndTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEndTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _useEndTransform
void GlobalNamespace::GhostEffectBehaviour::_set__useEndTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__useEndTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEndTransform"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _startLocalPosition
UnityEngine::Vector3 GlobalNamespace::GhostEffectBehaviour::_get__startLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__startLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _startLocalPosition
void GlobalNamespace::GhostEffectBehaviour::_set__startLocalPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__startLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPosition"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _startTransform
UnityEngine::Transform* GlobalNamespace::GhostEffectBehaviour::_get__startTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__startTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform _startTransform
void GlobalNamespace::GhostEffectBehaviour::_set__startTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__startTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _endLocalPosition
UnityEngine::Vector3 GlobalNamespace::GhostEffectBehaviour::_get__endLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__endLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Vector3 _endLocalPosition
void GlobalNamespace::GhostEffectBehaviour::_set__endLocalPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__endLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLocalPosition"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _endTransform
UnityEngine::Transform* GlobalNamespace::GhostEffectBehaviour::_get__endTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__endTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform _endTransform
void GlobalNamespace::GhostEffectBehaviour::_set__endTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__endTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public Tweening.EaseType _positionEasing
Tweening::EaseType GlobalNamespace::GhostEffectBehaviour::_get__positionEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__positionEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionEasing"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public Tweening.EaseType _positionEasing
void GlobalNamespace::GhostEffectBehaviour::_set__positionEasing(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__positionEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionEasing"))->offset;
  *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/EndBehavior _endBehavior
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::_get__endBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__endBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endBehavior"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::EndBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GhostEffectBehaviour/EndBehavior _endBehavior
void GlobalNamespace::GhostEffectBehaviour::_set__endBehavior(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__endBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endBehavior"))->offset;
  *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::EndBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single progress
float GlobalNamespace::GhostEffectBehaviour::_get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single progress
void GlobalNamespace::GhostEffectBehaviour::_set_progress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] textMeshPros
::Array<TMPro::TextMeshPro*>* GlobalNamespace::GhostEffectBehaviour::_get_textMeshPros() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get_textMeshPros");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMeshPros"))->offset;
  return *reinterpret_cast<::Array<TMPro::TextMeshPro*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TMPro.TextMeshPro[] textMeshPros
void GlobalNamespace::GhostEffectBehaviour::_set_textMeshPros(::Array<TMPro::TextMeshPro*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set_textMeshPros");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMeshPros"))->offset;
  *reinterpret_cast<::Array<TMPro::TextMeshPro*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroups
::Array<UnityEngine::CanvasGroup*>* GlobalNamespace::GhostEffectBehaviour::_get__canvasGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__canvasGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroups"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::CanvasGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.CanvasGroup[] _canvasGroups
void GlobalNamespace::GhostEffectBehaviour::_set__canvasGroups(::Array<UnityEngine::CanvasGroup*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__canvasGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroups"))->offset;
  *reinterpret_cast<::Array<UnityEngine::CanvasGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::_get__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
void GlobalNamespace::GhostEffectBehaviour::_set__ghostEffectType(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  *reinterpret_cast<GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _ghostEffectTransform
UnityEngine::Transform* GlobalNamespace::GhostEffectBehaviour::_get__ghostEffectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__ghostEffectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform _ghostEffectTransform
void GlobalNamespace::GhostEffectBehaviour::_set__ghostEffectTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__ghostEffectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectTransform"))->offset;
  *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _direction
UnityEngine::Vector3 GlobalNamespace::GhostEffectBehaviour::_get__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Vector3 _direction
void GlobalNamespace::GhostEffectBehaviour::_set__direction(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool GlobalNamespace::GhostEffectBehaviour::_get__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_get__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _finished
void GlobalNamespace::GhostEffectBehaviour::_set__finished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::_set__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: GhostEffectBehaviour.EnableObjects
void GlobalNamespace::GhostEffectBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, on);
}
// Autogenerated method: GhostEffectBehaviour.OnBehaviourPlay
void GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info);
}
// Autogenerated method: GhostEffectBehaviour.ProcessFrame
void GlobalNamespace::GhostEffectBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/EndBehavior
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableAll
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableAll"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableAll
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableAll", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableCopies"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableCopies", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior Nothing
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior Nothing
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "Nothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/GhostEffectType
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType Canvas
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType Canvas
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "Canvas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePositionTween
#include "GlobalNamespace/SinglePositionTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.Transform> transformReference
UnityEngine::ExposedReference_1<UnityEngine::Transform*> GlobalNamespace::SinglePositionTween::_get_transformReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::_get_transformReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformReference"))->offset;
  return *reinterpret_cast<UnityEngine::ExposedReference_1<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.ExposedReference`1<UnityEngine.Transform> transformReference
void GlobalNamespace::SinglePositionTween::_set_transformReference(UnityEngine::ExposedReference_1<UnityEngine::Transform*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::_set_transformReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformReference"))->offset;
  *reinterpret_cast<UnityEngine::ExposedReference_1<UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
GlobalNamespace::CustomTweenBehaviour* GlobalNamespace::SinglePositionTween::_get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::_get_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public CustomTweenBehaviour template
void GlobalNamespace::SinglePositionTween::_set_template(GlobalNamespace::CustomTweenBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::_set_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  *reinterpret_cast<GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: SinglePositionTween.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::SinglePositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SinglePositionTween.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::SinglePositionTween::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TimelineArrayReference/ArrayTypes arrayType
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::_get_arrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  return *reinterpret_cast<GlobalNamespace::TimelineArrayReference::ArrayTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TimelineArrayReference/ArrayTypes arrayType
void GlobalNamespace::TimelineArrayReference::_set_arrayType(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  *reinterpret_cast<GlobalNamespace::TimelineArrayReference::ArrayTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public TubeBloomPrePassLight[] _tubeLightArray
::Array<GlobalNamespace::TubeBloomPrePassLight*>* GlobalNamespace::TimelineArrayReference::_get__tubeLightArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get__tubeLightArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLightArray"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TubeBloomPrePassLight[] _tubeLightArray
void GlobalNamespace::TimelineArrayReference::_set__tubeLightArray(::Array<GlobalNamespace::TubeBloomPrePassLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set__tubeLightArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLightArray"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroupArray
::Array<UnityEngine::CanvasGroup*>* GlobalNamespace::TimelineArrayReference::_get__canvasGroupArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get__canvasGroupArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroupArray"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::CanvasGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.CanvasGroup[] _canvasGroupArray
void GlobalNamespace::TimelineArrayReference::_set__canvasGroupArray(::Array<UnityEngine::CanvasGroup*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set__canvasGroupArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroupArray"))->offset;
  *reinterpret_cast<::Array<UnityEngine::CanvasGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] _tmproArray
::Array<TMPro::TextMeshPro*>* GlobalNamespace::TimelineArrayReference::_get__tmproArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get__tmproArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmproArray"))->offset;
  return *reinterpret_cast<::Array<TMPro::TextMeshPro*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TMPro.TextMeshPro[] _tmproArray
void GlobalNamespace::TimelineArrayReference::_set__tmproArray(::Array<TMPro::TextMeshPro*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set__tmproArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmproArray"))->offset;
  *reinterpret_cast<::Array<TMPro::TextMeshPro*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transformArray
::Array<UnityEngine::Transform*>* GlobalNamespace::TimelineArrayReference::_get__transformArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get__transformArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformArray"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Transform[] _transformArray
void GlobalNamespace::TimelineArrayReference::_set__transformArray(::Array<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set__transformArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformArray"))->offset;
  *reinterpret_cast<::Array<UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public DirectionalLight[] _directionalLights
::Array<GlobalNamespace::DirectionalLight*>* GlobalNamespace::TimelineArrayReference::_get__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_get__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public DirectionalLight[] _directionalLights
void GlobalNamespace::TimelineArrayReference::_set__directionalLights(::Array<GlobalNamespace::DirectionalLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::_set__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference/ArrayTypes
#include "GlobalNamespace/TimelineArrayReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TubeLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TubeLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TubeLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TubeLight", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Transform
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Transform"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Transform
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Transform", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Canvas
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Canvas
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Canvas", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "DirectionalLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "DirectionalLight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightAsset
#include "GlobalNamespace/TubeLightAsset.hpp"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightBehaviour _template
GlobalNamespace::TubeLightBehaviour* GlobalNamespace::TubeLightAsset::_get__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::_get__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeLightBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TubeLightBehaviour _template
void GlobalNamespace::TubeLightAsset::_set__template(GlobalNamespace::TubeLightBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::_set__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  *reinterpret_cast<GlobalNamespace::TubeLightBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TubeLightAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TubeLightAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool GlobalNamespace::TubeLightBehaviour::_get__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _noPredefinedStartValue
void GlobalNamespace::TubeLightBehaviour::_set__noPredefinedStartValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public ColorSO startColor
GlobalNamespace::ColorSO* GlobalNamespace::TubeLightBehaviour::_get_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get_startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public ColorSO startColor
void GlobalNamespace::TubeLightBehaviour::_set_startColor(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set_startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColor"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public ColorSO endColor
GlobalNamespace::ColorSO* GlobalNamespace::TubeLightBehaviour::_get_endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get_endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public ColorSO endColor
void GlobalNamespace::TubeLightBehaviour::_set_endColor(GlobalNamespace::ColorSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set_endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endColor"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single blend
float GlobalNamespace::TubeLightBehaviour::_get_blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get_blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single blend
void GlobalNamespace::TubeLightBehaviour::_set_blend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set_blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blend"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::TubeLightBehaviour::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::TubeLightBehaviour::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _originalColor
UnityEngine::Color GlobalNamespace::TubeLightBehaviour::_get__originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _originalColor
void GlobalNamespace::TubeLightBehaviour::_set__originalColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::Array<GlobalNamespace::TubeBloomPrePassLight*>* GlobalNamespace::TubeLightBehaviour::_get__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TubeBloomPrePassLight[] _tubeLights
void GlobalNamespace::TubeLightBehaviour::_set__tubeLights(::Array<GlobalNamespace::TubeBloomPrePassLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::Array<GlobalNamespace::DirectionalLight*>* GlobalNamespace::TubeLightBehaviour::_get__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private DirectionalLight[] _directionalLights
void GlobalNamespace::TubeLightBehaviour::_set__directionalLights(::Array<GlobalNamespace::DirectionalLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean started
bool GlobalNamespace::TubeLightBehaviour::_get_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean started
void GlobalNamespace::TubeLightBehaviour::_set_started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _firstFrameColor
UnityEngine::Color GlobalNamespace::TubeLightBehaviour::_get__firstFrameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_get__firstFrameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Color _firstFrameColor
void GlobalNamespace::TubeLightBehaviour::_set__firstFrameColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::_set__firstFrameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameColor"))->offset;
  *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TubeLightBehaviour.ProcessFrame
void GlobalNamespace::TubeLightBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType Values
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "Values"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType Values
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "Values", value));
}
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType References
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "References"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType References
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "References", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::TubeLightBehaviour::ParameterType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityAsset
#include "GlobalNamespace/TubeLightIntensityAsset.hpp"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightIntensityBehaviour _template
GlobalNamespace::TubeLightIntensityBehaviour* GlobalNamespace::TubeLightIntensityAsset::_get__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::_get__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeLightIntensityBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public TubeLightIntensityBehaviour _template
void GlobalNamespace::TubeLightIntensityAsset::_set__template(GlobalNamespace::TubeLightIntensityBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::_set__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  *reinterpret_cast<GlobalNamespace::TubeLightIntensityBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TubeLightIntensityAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightIntensityAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TubeLightIntensityAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightIntensityAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(___instance_arg, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool GlobalNamespace::TubeLightIntensityBehaviour::_get__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _noPredefinedStartValue
void GlobalNamespace::TubeLightIntensityBehaviour::_set__noPredefinedStartValue(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLightIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__startLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__startLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _startLightIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__startLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__startLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLightIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLaserIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__startLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__startLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _startLaserIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__startLaserIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__startLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLaserIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLightIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__endLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__endLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _endLightIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__endLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__endLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLightIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLaserIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__endLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__endLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _endLaserIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__endLaserIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__endLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLaserIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _disableWhenFinished
bool GlobalNamespace::TubeLightIntensityBehaviour::_get__disableWhenFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__disableWhenFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableWhenFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean _disableWhenFinished
void GlobalNamespace::TubeLightIntensityBehaviour::_set__disableWhenFinished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__disableWhenFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableWhenFinished"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public System.Single _blend
float GlobalNamespace::TubeLightIntensityBehaviour::_get__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public System.Single _blend
void GlobalNamespace::TubeLightIntensityBehaviour::_set__blend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::TubeLightIntensityBehaviour::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::TubeLightIntensityBehaviour::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLightIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__originalLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__originalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _originalLightIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__originalLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__originalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLightIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLaserIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__originalLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__originalLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _originalLaserIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__originalLaserIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__originalLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLaserIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::Array<GlobalNamespace::TubeBloomPrePassLight*>* GlobalNamespace::TubeLightIntensityBehaviour::_get__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private TubeBloomPrePassLight[] _tubeLights
void GlobalNamespace::TubeLightIntensityBehaviour::_set__tubeLights(::Array<GlobalNamespace::TubeBloomPrePassLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::TubeBloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::Array<GlobalNamespace::DirectionalLight*>* GlobalNamespace::TubeLightIntensityBehaviour::_get__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private DirectionalLight[] _directionalLights
void GlobalNamespace::TubeLightIntensityBehaviour::_set__directionalLights(::Array<GlobalNamespace::DirectionalLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::DirectionalLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool GlobalNamespace::TubeLightIntensityBehaviour::_get__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _started
void GlobalNamespace::TubeLightIntensityBehaviour::_set__started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool GlobalNamespace::TubeLightIntensityBehaviour::_get__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _finished
void GlobalNamespace::TubeLightIntensityBehaviour::_set__finished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLightIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__firstFrameLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__firstFrameLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _firstFrameLightIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__firstFrameLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__firstFrameLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLightIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLaserIntensity
float GlobalNamespace::TubeLightIntensityBehaviour::_get__firstFrameLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_get__firstFrameLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Single _firstFrameLaserIntensity
void GlobalNamespace::TubeLightIntensityBehaviour::_set__firstFrameLaserIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::_set__firstFrameLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLaserIntensity"))->offset;
  *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: TubeLightIntensityBehaviour.EnableObjects
void GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, on);
}
// Autogenerated method: TubeLightIntensityBehaviour.ProcessFrame
void GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightIntensityBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityTrack
#include "GlobalNamespace/TubeLightIntensityTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightTrack
#include "GlobalNamespace/TubeLightTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSceneSetupData _sceneSetupData
GlobalNamespace::EnvironmentSceneSetupData* GlobalNamespace::EnvironmentSceneSetup::_get__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::_get__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly EnvironmentSceneSetupData _sceneSetupData
void GlobalNamespace::EnvironmentSceneSetup::_set__sceneSetupData(GlobalNamespace::EnvironmentSceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::_set__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::EventsTestSceneSetup::_get__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_get__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSO _beatmapLevel
void GlobalNamespace::EventsTestSceneSetup::_set__beatmapLevel(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_set__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::EventsTestSceneSetup::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::EventsTestSceneSetup::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::EventsTestSceneSetup::_get__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_get__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _beatmapDifficulty
void GlobalNamespace::EventsTestSceneSetup::_set__beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_set__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::EventsTestSceneSetup::_get__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_get__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSchemeSO _colorScheme
void GlobalNamespace::EventsTestSceneSetup::_set__colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::_set__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureAfterDelay _screenCaptureAfterDelayPrefab
GlobalNamespace::ScreenCaptureAfterDelay* GlobalNamespace::GameCoreSceneSetup::_get__screenCaptureAfterDelayPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get__screenCaptureAfterDelayPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureAfterDelayPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ScreenCaptureAfterDelay _screenCaptureAfterDelayPrefab
void GlobalNamespace::GameCoreSceneSetup::_set__screenCaptureAfterDelayPrefab(GlobalNamespace::ScreenCaptureAfterDelay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set__screenCaptureAfterDelayPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureAfterDelayPrefab"))->offset;
  *reinterpret_cast<GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO* GlobalNamespace::GameCoreSceneSetup::_get__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MainSettingsModelSO _mainSettingsModel
void GlobalNamespace::GameCoreSceneSetup::_set__mainSettingsModel(GlobalNamespace::MainSettingsModelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO* GlobalNamespace::GameCoreSceneSetup::_get__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BloomFogSO _bloomFog
void GlobalNamespace::GameCoreSceneSetup::_set__bloomFog(GlobalNamespace::BloomFogSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningSceneSetupData _sceneSetupData
GlobalNamespace::HealthWarningSceneSetupData* GlobalNamespace::HealthWarningSceneSetup::_get__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::_get__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HealthWarningSceneSetupData _sceneSetupData
void GlobalNamespace::HealthWarningSceneSetup::_set__sceneSetupData(GlobalNamespace::HealthWarningSceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::_set__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningFlowCoordinator _healthWarninglowCoordinator
GlobalNamespace::HealthWarningFlowCoordinator* GlobalNamespace::HealthWarningSceneStart::_get__healthWarninglowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_get__healthWarninglowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarninglowCoordinator"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HealthWarningFlowCoordinator _healthWarninglowCoordinator
void GlobalNamespace::HealthWarningSceneStart::_set__healthWarninglowCoordinator(GlobalNamespace::HealthWarningFlowCoordinator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_set__healthWarninglowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarninglowCoordinator"))->offset;
  *reinterpret_cast<GlobalNamespace::HealthWarningFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager* GlobalNamespace::HealthWarningSceneStart::_get__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_get__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameScenesManager _gameScenesManager
void GlobalNamespace::HealthWarningSceneStart::_set__gameScenesManager(GlobalNamespace::GameScenesManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_set__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HierarchyManager _hierarchyManager
HMUI::HierarchyManager* GlobalNamespace::HealthWarningSceneStart::_get__hierarchyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_get__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  return *reinterpret_cast<HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.HierarchyManager _hierarchyManager
void GlobalNamespace::HealthWarningSceneStart::_set__hierarchyManager(HMUI::HierarchyManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::_set__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  *reinterpret_cast<HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HealthWarningSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public HealthWarningSceneStart <>4__this
GlobalNamespace::HealthWarningSceneStart* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningSceneStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public HealthWarningSceneStart <>4__this
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$4__this(GlobalNamespace::HealthWarningSceneStart* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::HealthWarningSceneStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingSceneSetup
#include "GlobalNamespace/LightmappingSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::LightmappingSceneSetup::_get__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_get__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSO _beatmapLevel
void GlobalNamespace::LightmappingSceneSetup::_set__beatmapLevel(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_set__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LightmappingSceneSetup::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::LightmappingSceneSetup::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LightmappingSceneSetup::_get__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_get__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _beatmapDifficulty
void GlobalNamespace::LightmappingSceneSetup::_set__beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_set__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::LightmappingSceneSetup::_get__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_get__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSchemeSO _colorScheme
void GlobalNamespace::LightmappingSceneSetup::_set__colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::_set__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: LightmappingSceneSetup.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::LightmappingSceneSetup::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LightmappingSceneSetup.set_colorScheme
void GlobalNamespace::LightmappingSceneSetup::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LightmappingSceneSetup.InstallBindings
void GlobalNamespace::LightmappingSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuSceneSetup
#include "GlobalNamespace/MenuSceneSetup.hpp"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.FlowCoordinator _rootFlowCoordinator
HMUI::FlowCoordinator* GlobalNamespace::MenuSceneSetup::_get__rootFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_get__rootFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootFlowCoordinator"))->offset;
  return *reinterpret_cast<HMUI::FlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HMUI.FlowCoordinator _rootFlowCoordinator
void GlobalNamespace::MenuSceneSetup::_set__rootFlowCoordinator(HMUI::FlowCoordinator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_set__rootFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootFlowCoordinator"))->offset;
  *reinterpret_cast<HMUI::FlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager* GlobalNamespace::MenuSceneSetup::_get__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_get__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly GameScenesManager _gameScenesManager
void GlobalNamespace::MenuSceneSetup::_set__gameScenesManager(GlobalNamespace::GameScenesManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_set__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.HierarchyManager _hierarchyManager
HMUI::HierarchyManager* GlobalNamespace::MenuSceneSetup::_get__hierarchyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_get__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  return *reinterpret_cast<HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private readonly HMUI.HierarchyManager _hierarchyManager
void GlobalNamespace::MenuSceneSetup::_set__hierarchyManager(HMUI::HierarchyManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::_set__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  *reinterpret_cast<HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MenuSceneSetup.Start
System::Collections::IEnumerator* GlobalNamespace::MenuSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: public MenuSceneSetup <>4__this
GlobalNamespace::MenuSceneSetup* GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_get_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MenuSceneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: public MenuSceneSetup <>4__this
void GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$4__this(GlobalNamespace::MenuSceneSetup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::_set_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  *reinterpret_cast<GlobalNamespace::MenuSceneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.MoveNext
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningNoTransitionInstaller
#include "GlobalNamespace/HealthWarningNoTransitionInstaller.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningSceneSetupData _healthWarningSceneSetupData
GlobalNamespace::HealthWarningSceneSetupData* GlobalNamespace::HealthWarningNoTransitionInstaller::_get__healthWarningSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::_get__healthWarningSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HealthWarningSceneSetupData _healthWarningSceneSetupData
void GlobalNamespace::HealthWarningNoTransitionInstaller::_set__healthWarningSceneSetupData(GlobalNamespace::HealthWarningSceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::_set__healthWarningSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningSceneSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private HealthWarningScenesTransitionSetupDataSO _scenesTransitionSetupData
GlobalNamespace::HealthWarningScenesTransitionSetupDataSO* GlobalNamespace::HealthWarningNoTransitionInstaller::_get__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::_get__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::HealthWarningScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private HealthWarningScenesTransitionSetupDataSO _scenesTransitionSetupData
void GlobalNamespace::HealthWarningNoTransitionInstaller::_set__scenesTransitionSetupData(GlobalNamespace::HealthWarningScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::_set__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::HealthWarningScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: HealthWarningNoTransitionInstaller.InstallBindings
void GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoTransitionColorSchemeProvider
#include "GlobalNamespace/INoTransitionColorSchemeProvider.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoTransitionColorSchemeProvider.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::INoTransitionColorSchemeProvider::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoTransitionColorSchemeProvider::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: INoTransitionColorSchemeProvider.set_colorScheme
void GlobalNamespace::INoTransitionColorSchemeProvider::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoTransitionColorSchemeProvider::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelNoTransitionInstaller
#include "GlobalNamespace/MissionLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSO _beatmapLevel
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapLevel(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _beatmapDifficulty
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSchemeSO _colorScheme
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective[] _missionObjectives
::Array<GlobalNamespace::MissionObjective*>* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::MissionObjective*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionObjective[] _missionObjectives
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__missionObjectives(::Array<GlobalNamespace::MissionObjective*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  *reinterpret_cast<::Array<GlobalNamespace::MissionObjective*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameplayModifiers _gameplayModifiers
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PlayerSpecificSettings _playerSpecificSettings
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__playerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _backButtonText
::Il2CppString* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _backButtonText
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__backButtonText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* GlobalNamespace::MissionLevelNoTransitionInstaller::_get__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_get__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private MissionLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
void GlobalNamespace::MissionLevelNoTransitionInstaller::_set__scenesTransitionSetupData(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::_set__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: MissionLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelNoTransitionInstaller
#include "GlobalNamespace/MultiplayerLevelNoTransitionInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightNoTransitionInstaller
#include "GlobalNamespace/PatternFightNoTransitionInstaller.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PatternFightNoTransitionInstaller::_get__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::_get__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PlayerSpecificSettings _playerSpecificSettings
void GlobalNamespace::PatternFightNoTransitionInstaller::_set__playerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::_set__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PatternFightScenesTransitionSetupDataSO _scenesTransitionSetupData
GlobalNamespace::PatternFightScenesTransitionSetupDataSO* GlobalNamespace::PatternFightNoTransitionInstaller::_get__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::_get__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::PatternFightScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PatternFightScenesTransitionSetupDataSO _scenesTransitionSetupData
void GlobalNamespace::PatternFightNoTransitionInstaller::_set__scenesTransitionSetupData(GlobalNamespace::PatternFightScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::_set__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::PatternFightScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: PatternFightNoTransitionInstaller.InstallBindings
void GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelNoTransitionInstaller
#include "GlobalNamespace/StandardLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSO _beatmapLevel
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapLevel(GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty _beatmapDifficulty
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  *reinterpret_cast<GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private ColorSchemeSO _colorScheme
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private EnvironmentInfoSO _environmentInfo
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__environmentInfo(GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  *reinterpret_cast<GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private GameplayModifiers _gameplayModifiers
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PlayerSpecificSettings _playerSpecificSettings
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__playerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private PracticeSettings _practiceSettings
GlobalNamespace::PracticeSettings* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private PracticeSettings _practiceSettings
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__practiceSettings(GlobalNamespace::PracticeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceSettings"))->offset;
  *reinterpret_cast<GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.String _backButtonText
::Il2CppString* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.String _backButtonText
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__backButtonText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useTestNoteCutSoundEffects
bool GlobalNamespace::StandardLevelNoTransitionInstaller::_get__useTestNoteCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__useTestNoteCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useTestNoteCutSoundEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _useTestNoteCutSoundEffects
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__useTestNoteCutSoundEffects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__useTestNoteCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useTestNoteCutSoundEffects"))->offset;
  *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* GlobalNamespace::StandardLevelNoTransitionInstaller::_get__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_get__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field setter
// Set instance field: private StandardLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
void GlobalNamespace::StandardLevelNoTransitionInstaller::_set__scenesTransitionSetupData(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::_set__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  *reinterpret_cast<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset) = value;
}
// Autogenerated method: StandardLevelNoTransitionInstaller.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::StandardLevelNoTransitionInstaller::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.set_colorScheme
void GlobalNamespace::StandardLevelNoTransitionInstaller::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container);
}
