// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPAPluginsDirDeleter
#include "GlobalNamespace/IPAPluginsDirDeleter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SavWav
#include "GlobalNamespace/SavWav.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 HeaderSize
uint GlobalNamespace::SavWav::_get_HeaderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::_get_HeaderSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "SavWav", "HeaderSize"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HeaderSize
void GlobalNamespace::SavWav::_set_HeaderSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::_set_HeaderSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SavWav", "HeaderSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single RescaleFactor
float GlobalNamespace::SavWav::_get_RescaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::_get_RescaleFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SavWav", "RescaleFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RescaleFactor
void GlobalNamespace::SavWav::_set_RescaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::_set_RescaleFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SavWav", "RescaleFactor", value));
}
// Autogenerated method: SavWav.Save
void GlobalNamespace::SavWav::Save(::Il2CppString* filepath, UnityEngine::AudioClip* clip, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filepath, clip, start, duration);
}
// Autogenerated method: SavWav.GetWav
::Array<uint8_t>* GlobalNamespace::SavWav::GetWav(UnityEngine::AudioClip* clip, ByRef<uint> length, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::GetWav");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "GetWav", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip, byref(length), start, duration);
}
// Autogenerated method: SavWav.ConvertAndWrite
::Array<uint8_t>* GlobalNamespace::SavWav::ConvertAndWrite(UnityEngine::AudioClip* clip, ByRef<uint> length, ByRef<uint> samplesAfterTrimming, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::ConvertAndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "ConvertAndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip, byref(length), byref(samplesAfterTrimming), start, duration);
}
// Autogenerated method: SavWav.AddDataToBuffer
void GlobalNamespace::SavWav::AddDataToBuffer(::Array<uint8_t>* buffer, ByRef<uint> offset, ::Array<uint8_t>* addBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::AddDataToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "AddDataToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(addBytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, byref(offset), addBytes);
}
// Autogenerated method: SavWav.WriteHeader
void GlobalNamespace::SavWav::WriteHeader(::Array<uint8_t>* stream, UnityEngine::AudioClip* clip, uint length, uint samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SavWav::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stream, clip, length, samples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleTextureLoader
#include "GlobalNamespace/SimpleTextureLoader.hpp"
// Including type: SimpleTextureLoader/<LoadTextureCoroutine>d__2
#include "GlobalNamespace/SimpleTextureLoader_-LoadTextureCoroutine-d__2.hpp"
// Including type: HMCache`2
#include "GlobalNamespace/HMCache_2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private HMCache`2<System.String,UnityEngine.Texture2D> _cache
GlobalNamespace::HMCache_2<::Il2CppString*, UnityEngine::Texture2D*>* GlobalNamespace::SimpleTextureLoader::_get__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::_get__cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::HMCache_2<::Il2CppString*, UnityEngine::Texture2D*>*>("", "SimpleTextureLoader", "_cache")));
}
// Autogenerated static field setter
// Set static field: static private HMCache`2<System.String,UnityEngine.Texture2D> _cache
void GlobalNamespace::SimpleTextureLoader::_set__cache(GlobalNamespace::HMCache_2<::Il2CppString*, UnityEngine::Texture2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::_set__cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleTextureLoader", "_cache", value));
}
// Autogenerated method: SimpleTextureLoader..cctor
void GlobalNamespace::SimpleTextureLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SimpleTextureLoader.LoadTexture
void GlobalNamespace::SimpleTextureLoader::LoadTexture(::Il2CppString* filePath, bool useCache, System::Action_1<UnityEngine::Texture2D*>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::LoadTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", "LoadTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(useCache), ::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, useCache, finishedCallback);
}
// Autogenerated method: SimpleTextureLoader.LoadTextureCoroutine
System::Collections::IEnumerator* GlobalNamespace::SimpleTextureLoader::LoadTextureCoroutine(::Il2CppString* filePath, bool useCache, System::Action_1<UnityEngine::Texture2D*>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::LoadTextureCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", "LoadTextureCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(useCache), ::il2cpp_utils::ExtractType(finishedCallback)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, useCache, finishedCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleTextureLoader/<LoadTextureCoroutine>d__2
#include "GlobalNamespace/SimpleTextureLoader_-LoadTextureCoroutine-d__2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useCache
bool& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_useCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_useCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCache"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
::Il2CppString*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Texture2D> finishedCallback
System::Action_1<UnityEngine::Texture2D*>*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <uwr>5__2
UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$uwr$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$uwr$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<uwr>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.IDisposable.Dispose
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.MoveNext
bool GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.<>m__Finally1
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeAnimationPlayer
#include "GlobalNamespace/SongTimeAnimationPlayer.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
GlobalNamespace::FloatSO*& GlobalNamespace::SongTimeAnimationPlayer::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeAnimationPlayer::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _animationClip
UnityEngine::AnimationClip*& GlobalNamespace::SongTimeAnimationPlayer::dyn__animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeAnimationPlayer::dyn__animationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClip"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeAnimationPlayer.Update
void GlobalNamespace::SongTimeAnimationPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeAnimationPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITimeProvider.get_time
float GlobalNamespace::ITimeProvider::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ITimeProvider::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SyncTimeProvider
#include "GlobalNamespace/SyncTimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SyncTimeProvider::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncTimeProvider::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SyncTimeProvider.get_time
float GlobalNamespace::SyncTimeProvider::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncTimeProvider::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseViewControllersInstaller
#include "GlobalNamespace/BaseViewControllersInstaller.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SimpleDialogPromptViewController _simpleDialogPromptViewControllerPrefab
GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::BaseViewControllersInstaller::dyn__simpleDialogPromptViewControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseViewControllersInstaller::dyn__simpleDialogPromptViewControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseViewControllersInstaller.InstallBindings
void GlobalNamespace::BaseViewControllersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseViewControllersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInstaller
#include "GlobalNamespace/BeatmapObjectsInstaller.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameNoteController _normalBasicNotePrefab
GlobalNamespace::GameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__normalBasicNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__normalBasicNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalBasicNotePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameNoteController _proModeNotePrefab
GlobalNamespace::GameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__proModeNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__proModeNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proModeNotePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombNoteController _bombNotePrefab
GlobalNamespace::BombNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__bombNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__bombNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _obstaclePrefab
GlobalNamespace::ObstacleController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__obstaclePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__obstaclePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineConnectionController _noteLineConnectionControllerPrefab
GlobalNamespace::NoteLineConnectionController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__noteLineConnectionControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__noteLineConnectionControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteLineConnectionControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteLineConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatLine _beatLinePrefab
GlobalNamespace::BeatLine*& GlobalNamespace::BeatmapObjectsInstaller::dyn__beatLinePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__beatLinePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLinePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::BeatmapObjectsInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsInstaller.InstallBindings
void GlobalNamespace::BeatmapObjectsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorManagerInstaller
#include "GlobalNamespace/ColorManagerInstaller.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _menuColorScheme
GlobalNamespace::ColorSchemeSO*& GlobalNamespace::ColorManagerInstaller::dyn__menuColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManagerInstaller::dyn__menuColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuColorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorManagerInstaller.InstallBindings
void GlobalNamespace::ColorManagerInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManagerInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: FlyingTextEffect
#include "GlobalNamespace/FlyingTextEffect.hpp"
// Including type: FlyingScoreEffect
#include "GlobalNamespace/FlyingScoreEffect.hpp"
// Including type: BeatEffect
#include "GlobalNamespace/BeatEffect.hpp"
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
// Including type: BombCutSoundEffect
#include "GlobalNamespace/BombCutSoundEffect.hpp"
// Including type: FlyingSpriteEffect
#include "GlobalNamespace/FlyingSpriteEffect.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: NoteDebris
#include "GlobalNamespace/NoteDebris.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingTextEffect _flyingTextEffectPrefab
GlobalNamespace::FlyingTextEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingTextEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingTextEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingTextEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlyingScoreEffect _flyingScoreEffectPrefab
GlobalNamespace::FlyingScoreEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingScoreEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingScoreEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingScoreEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingScoreEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatEffect _beatEffectPrefab
GlobalNamespace::BeatEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__beatEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__beatEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatEffect _shortBeatEffectPrefab
GlobalNamespace::BeatEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__shortBeatEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__shortBeatEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortBeatEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _noteCutSoundEffectPrefab
GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__noteCutSoundEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__noteCutSoundEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombCutSoundEffect _bombCutSoundEffectPrefab
GlobalNamespace::BombCutSoundEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__bombCutSoundEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__bombCutSoundEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombCutSoundEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BombCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlyingSpriteEffect _flyingSpriteEffectPrefab
GlobalNamespace::FlyingSpriteEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingSpriteEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingSpriteEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingSpriteEffectPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingSpriteEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _noteDebrisHDConditionVariable
GlobalNamespace::BoolSO*& GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisHDConditionVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisHDConditionVariable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisHDConditionVariable"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _noteDebrisHDPrefab
GlobalNamespace::NoteDebris*& GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisHDPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisHDPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisHDPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _noteDebrisLWPrefab
GlobalNamespace::NoteDebris*& GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisLWPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::dyn__noteDebrisLWPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisLWPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EffectPoolsManualInstaller.ManualInstallBindings
void GlobalNamespace::EffectPoolsManualInstaller::ManualInstallBindings(Zenject::DiContainer* container, bool shortBeatEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EffectPoolsManualInstaller::ManualInstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualInstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(shortBeatEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, container, shortBeatEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorObjectsInstaller
#include "GlobalNamespace/FakeMirrorObjectsInstaller.hpp"
// Including type: FakeMirrorObjectsInstaller/<>c
#include "GlobalNamespace/FakeMirrorObjectsInstaller_--c.hpp"
// Including type: MirroredCubeNoteController
#include "GlobalNamespace/MirroredCubeNoteController.hpp"
// Including type: MirroredBombNoteController
#include "GlobalNamespace/MirroredBombNoteController.hpp"
// Including type: MirroredObstacleController
#include "GlobalNamespace/MirroredObstacleController.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MirroredCubeNoteController _mirroredGameNoteControllerPrefab
GlobalNamespace::MirroredCubeNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredGameNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredGameNoteControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirroredCubeNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredBombNoteController _mirroredBombNoteControllerPrefab
GlobalNamespace::MirroredBombNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBombNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBombNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBombNoteControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirroredBombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredObstacleController _mirroredObstacleControllerPrefab
GlobalNamespace::MirroredObstacleController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredObstacleControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredObstacleControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredObstacleControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirroredObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntSO _mirrorGraphicsSettings
GlobalNamespace::IntSO*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
GlobalNamespace::MirrorRendererGraphicsSettingsPresets*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FakeMirrorObjectsInstaller.get_mirroredGameNoteControllerPrefab
GlobalNamespace::MirroredCubeNoteController* GlobalNamespace::FakeMirrorObjectsInstaller::get_mirroredGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::get_mirroredGameNoteControllerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirroredGameNoteControllerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MirroredCubeNoteController*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FakeMirrorObjectsInstaller.InstallBindings
void GlobalNamespace::FakeMirrorObjectsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorObjectsInstaller/<>c
#include "GlobalNamespace/FakeMirrorObjectsInstaller_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly FakeMirrorObjectsInstaller/<>c <>9
GlobalNamespace::FakeMirrorObjectsInstaller::$$c* GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::FakeMirrorObjectsInstaller::$$c*>("", "FakeMirrorObjectsInstaller/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly FakeMirrorObjectsInstaller/<>c <>9
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9(GlobalNamespace::FakeMirrorObjectsInstaller::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "FakeMirrorObjectsInstaller/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.BindingId,System.Boolean> <>9__7_0
System::Func_2<Zenject::BindingId, bool>* GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::BindingId, bool>*>("", "FakeMirrorObjectsInstaller/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.BindingId,System.Boolean> <>9__7_0
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9__7_0(System::Func_2<Zenject::BindingId, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "FakeMirrorObjectsInstaller/<>c", "<>9__7_0", value)));
}
// Autogenerated method: FakeMirrorObjectsInstaller/<>c..cctor
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FakeMirrorObjectsInstaller/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: FakeMirrorObjectsInstaller/<>c.<InstallBindings>b__7_0
bool GlobalNamespace::FakeMirrorObjectsInstaller::$$c::$InstallBindings$b__7_0(Zenject::BindingId t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FakeMirrorObjectsInstaller::$$c::<InstallBindings>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InstallBindings>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreInstaller
#include "GlobalNamespace/GameplayCoreInstaller.hpp"
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: NoteCutScoreSpawner
#include "GlobalNamespace/NoteCutScoreSpawner.hpp"
// Including type: BadNoteCutEffectSpawner
#include "GlobalNamespace/BadNoteCutEffectSpawner.hpp"
// Including type: MissedNoteEffectSpawner
#include "GlobalNamespace/MissedNoteEffectSpawner.hpp"
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: PerceivedLoudnessPerLevelModel
#include "GlobalNamespace/PerceivedLoudnessPerLevelModel.hpp"
// Including type: RelativeSfxVolumePerLevelModel
#include "GlobalNamespace/RelativeSfxVolumePerLevelModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatLineManager _beatLineManagerPrefab
GlobalNamespace::BeatLineManager*& GlobalNamespace::GameplayCoreInstaller::dyn__beatLineManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__beatLineManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLineManagerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatLineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.SongTimeTweeningManager _songTimeTweeningManager
Tweening::SongTimeTweeningManager*& GlobalNamespace::GameplayCoreInstaller::dyn__songTimeTweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__songTimeTweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeTweeningManager"))->offset;
  return *reinterpret_cast<Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
GlobalNamespace::AudioManagerSO*& GlobalNamespace::GameplayCoreInstaller::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectSpawnControllerPlayerHeightSetter _beatmapObjectSpawnControllerPlayerHeightSetterPrefab
GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter*& GlobalNamespace::GameplayCoreInstaller::dyn__beatmapObjectSpawnControllerPlayerHeightSetterPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__beatmapObjectSpawnControllerPlayerHeightSetterPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnControllerPlayerHeightSetterPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerHeightDetector _playerHeightDetectorPrefab
GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::GameplayCoreInstaller::dyn__playerHeightDetectorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__playerHeightDetectorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetectorPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutScoreSpawner _noteCutScoreSpawnerPrefab
GlobalNamespace::NoteCutScoreSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__noteCutScoreSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__noteCutScoreSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutScoreSpawnerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutScoreSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BadNoteCutEffectSpawner _badNoteCutEffectSpawnerPrefab
GlobalNamespace::BadNoteCutEffectSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__badNoteCutEffectSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__badNoteCutEffectSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badNoteCutEffectSpawnerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BadNoteCutEffectSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissedNoteEffectSpawner _missedNoteEffectSpawnerPrefab
GlobalNamespace::MissedNoteEffectSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__missedNoteEffectSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__missedNoteEffectSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedNoteEffectSpawnerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissedNoteEffectSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EffectPoolsManualInstaller _effectPoolsManualInstaller
GlobalNamespace::EffectPoolsManualInstaller*& GlobalNamespace::GameplayCoreInstaller::dyn__effectPoolsManualInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__effectPoolsManualInstaller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectPoolsManualInstaller"))->offset;
  return *reinterpret_cast<GlobalNamespace::EffectPoolsManualInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _screenDisplacementEffectsEnabled
GlobalNamespace::BoolSO*& GlobalNamespace::GameplayCoreInstaller::dyn__screenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__screenDisplacementEffectsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenDisplacementEffectsEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::GameplayCoreInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PerceivedLoudnessPerLevelModel _perceivedLoudnessPerLevelModel
GlobalNamespace::PerceivedLoudnessPerLevelModel*& GlobalNamespace::GameplayCoreInstaller::dyn__perceivedLoudnessPerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__perceivedLoudnessPerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perceivedLoudnessPerLevelModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PerceivedLoudnessPerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RelativeSfxVolumePerLevelModel _relativeSfxVolumePerLevelModel
GlobalNamespace::RelativeSfxVolumePerLevelModel*& GlobalNamespace::GameplayCoreInstaller::dyn__relativeSfxVolumePerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::dyn__relativeSfxVolumePerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevelModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::RelativeSfxVolumePerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayCoreInstaller.InstallBindings
void GlobalNamespace::GameplayCoreInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayCoreInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayFacade
#include "GlobalNamespace/GameplayFacade.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallback.hpp"
// Including type: BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapEventCallbackData.hpp"
// Including type: BeatmapEventCallback
#include "GlobalNamespace/BeatmapEventCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
GlobalNamespace::BeatmapObjectSpawnController*& GlobalNamespace::GameplayFacade::dyn__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController*& GlobalNamespace::GameplayFacade::dyn__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BasicSpectrogramData _spectrogramData
GlobalNamespace::BasicSpectrogramData*& GlobalNamespace::GameplayFacade::dyn__spectrogramData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__spectrogramData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectrogramData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BasicSpectrogramData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::GameplayFacade::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameplayFacade::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IDifficultyBeatmap _difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::GameplayFacade::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayFacade.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::GameplayFacade::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_songTime
float GlobalNamespace::GameplayFacade::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_songTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_lastFrameDeltaSongTime
float GlobalNamespace::GameplayFacade::get_lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_lastFrameDeltaSongTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_songEndTime
float GlobalNamespace::GameplayFacade::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_songEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_isReady
bool GlobalNamespace::GameplayFacade::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_isInitialized
bool GlobalNamespace::GameplayFacade::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_moveDuration
float GlobalNamespace::GameplayFacade::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_jumpDuration
float GlobalNamespace::GameplayFacade::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_ProcessedSamples
System::Collections::Generic::List_1<float>* GlobalNamespace::GameplayFacade::get_ProcessedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_ProcessedSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessedSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<float>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_leftSaber
GlobalNamespace::Saber* GlobalNamespace::GameplayFacade::get_leftSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_leftSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Saber*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.get_rightSaber
GlobalNamespace::Saber* GlobalNamespace::GameplayFacade::get_rightSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::get_rightSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Saber*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameplayFacade.add_didInitEvent
void GlobalNamespace::GameplayFacade::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameplayFacade.remove_didInitEvent
void GlobalNamespace::GameplayFacade::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameplayFacade.add_beatmapEventDidTriggerEvent
void GlobalNamespace::GameplayFacade::add_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::add_beatmapEventDidTriggerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameplayFacade.remove_beatmapEventDidTriggerEvent
void GlobalNamespace::GameplayFacade::remove_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::remove_beatmapEventDidTriggerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameplayFacade.AddBeatmapObjectCallback
GlobalNamespace::BeatmapObjectCallbackData* GlobalNamespace::GameplayFacade::AddBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::AddBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(aheadTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectCallbackData*, false>(___instance_arg, ___internal__method, callback, aheadTime);
}
// Autogenerated method: GameplayFacade.RemoveBeatmapObjectCallback
void GlobalNamespace::GameplayFacade::RemoveBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::RemoveBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callbackData);
}
// Autogenerated method: GameplayFacade.AddBeatmapEventCallback
GlobalNamespace::BeatmapEventCallbackData* GlobalNamespace::GameplayFacade::AddBeatmapEventCallback(GlobalNamespace::BeatmapEventCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::AddBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(aheadTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapEventCallbackData*, false>(___instance_arg, ___internal__method, callback, aheadTime);
}
// Autogenerated method: GameplayFacade.RemoveBeatmapEventCallback
void GlobalNamespace::GameplayFacade::RemoveBeatmapEventCallback(GlobalNamespace::BeatmapEventCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayFacade::RemoveBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callbackData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelInstaller
#include "GlobalNamespace/LobbyDataModelInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyDataModelInstaller.InstallBindings
void GlobalNamespace::LobbyDataModelInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsMenuViewControllersInstaller
#include "GlobalNamespace/MainSettingsMenuViewControllersInstaller.hpp"
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _defaultSettingsMenuViewController
GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__defaultSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__defaultSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSettingsMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _oculusPCSettingsMenuViewController
GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__oculusPCSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__oculusPCSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusPCSettingsMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _questSettingsMenuViewController
GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__questSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__questSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_questSettingsMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _psvrSettingsMenuViewController
GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__psvrSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__psvrSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_psvrSettingsMenuViewController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController _tabBarViewControllerPrefab
GlobalNamespace::TabBarViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__tabBarViewControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__tabBarViewControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabBarViewControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::TabBarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainSettingsMenuViewControllersInstaller.InstallBindings
void GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionGameplayInstaller
#include "GlobalNamespace/MissionGameplayInstaller.hpp"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MissionGameplaySceneSetupData _sceneSetupData
GlobalNamespace::MissionGameplaySceneSetupData*& GlobalNamespace::MissionGameplayInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionGameplayInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionGameplayInstaller.InstallBindings
void GlobalNamespace::MissionGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerCoreInstaller
#include "GlobalNamespace/MultiplayerCoreInstaller.hpp"
// Including type: ScoreSyncStateManager
#include "GlobalNamespace/ScoreSyncStateManager.hpp"
// Including type: MultiplayerBadgesModelSO
#include "GlobalNamespace/MultiplayerBadgesModelSO.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScoreSyncStateManager _scoreSyncStateManagerPrefab
GlobalNamespace::ScoreSyncStateManager*& GlobalNamespace::MultiplayerCoreInstaller::dyn__scoreSyncStateManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::dyn__scoreSyncStateManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreSyncStateManagerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ScoreSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerBadgesModelSO _multiplayerBadgesModel
GlobalNamespace::MultiplayerBadgesModelSO*& GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerBadgesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerBadgesModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerBadgesModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerBadgesModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::MultiplayerCoreInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerCoreInstaller.InstallBindings
void GlobalNamespace::MultiplayerCoreInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyInstaller
#include "GlobalNamespace/MultiplayerLobbyInstaller.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyAvatarController _multiplayerLobbyAvatarControllerPrefab
GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerLobbyAvatarControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerLobbyAvatarControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyAvatarControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyAvatarPlace _multiplayerAvatarPlacePrefab
GlobalNamespace::MultiplayerLobbyAvatarPlace*& GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerAvatarPlacePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerAvatarPlacePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerAvatarPlacePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarPlace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyInstaller.InstallBindings
void GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalPlayerInstaller
#include "GlobalNamespace/MultiplayerLocalPlayerInstaller.hpp"
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelSceneSetupData _levelSceneSetupData
GlobalNamespace::MultiplayerLevelSceneSetupData*& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__levelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__levelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerPlayerStartState _startState
GlobalNamespace::MultiplayerPlayerStartState& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__startState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__startState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startState"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerPlayerStartState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLocalPlayerInstaller.InstallBindings
void GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuInstaller
#include "GlobalNamespace/MultiplayerMenuInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMenuInstaller.InstallBindings
void GlobalNamespace::MultiplayerMenuInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerMenuInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardGameplayInstaller
#include "GlobalNamespace/StandardGameplayInstaller.hpp"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly StandardGameplaySceneSetupData _standardSceneSetupData
GlobalNamespace::StandardGameplaySceneSetupData*& GlobalNamespace::StandardGameplayInstaller::dyn__standardSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardGameplayInstaller::dyn__standardSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardGameplayInstaller.InstallBindings
void GlobalNamespace::StandardGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectPoolsInstaller
#include "GlobalNamespace/TutorialBeatmapObjectPoolsInstaller.hpp"
// Including type: TutorialNoteController
#include "GlobalNamespace/TutorialNoteController.hpp"
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TutorialNoteController _basicNotePrefab
GlobalNamespace::TutorialNoteController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__basicNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__basicNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_basicNotePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombNoteController _bombNotePrefab
GlobalNamespace::BombNoteController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__bombNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__bombNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _obstaclePrefab
GlobalNamespace::ObstacleController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__obstaclePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__obstaclePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineConnectionController _noteLineConnectionControllerPrefab
GlobalNamespace::NoteLineConnectionController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__noteLineConnectionControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__noteLineConnectionControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteLineConnectionControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteLineConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialBeatmapObjectPoolsInstaller.InstallBindings
void GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialInstaller
#include "GlobalNamespace/TutorialInstaller.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
UnityEngine::AudioClip*& GlobalNamespace::TutorialInstaller::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songBPM
float& GlobalNamespace::TutorialInstaller::dyn__songBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__songBPM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBPM"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectSpawnControllerPlayerHeightSetter _beatmapObjectSpawnControllerPlayerHeightSetterPrefab
GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter*& GlobalNamespace::TutorialInstaller::dyn__beatmapObjectSpawnControllerPlayerHeightSetterPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__beatmapObjectSpawnControllerPlayerHeightSetterPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnControllerPlayerHeightSetterPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerHeightDetector _playerHeightDetectorPrefab
GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::TutorialInstaller::dyn__playerHeightDetectorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__playerHeightDetectorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetectorPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EffectPoolsManualInstaller _effectPoolsManualInstaller
GlobalNamespace::EffectPoolsManualInstaller*& GlobalNamespace::TutorialInstaller::dyn__effectPoolsManualInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__effectPoolsManualInstaller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectPoolsManualInstaller"))->offset;
  return *reinterpret_cast<GlobalNamespace::EffectPoolsManualInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSceneSetupData _sceneSetupData
GlobalNamespace::TutorialSceneSetupData*& GlobalNamespace::TutorialInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialInstaller.InstallBindings
void GlobalNamespace::TutorialInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BasicUIAudioManager
#include "GlobalNamespace/BasicUIAudioManager.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal[] _buttonClickEvents
::Array<GlobalNamespace::Signal*>*& GlobalNamespace::BasicUIAudioManager::dyn__buttonClickEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__buttonClickEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonClickEvents"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::Signal*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::BasicUIAudioManager::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _clickSounds
::Array<UnityEngine::AudioClip*>*& GlobalNamespace::BasicUIAudioManager::dyn__clickSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__clickSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clickSounds"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minPitch
float& GlobalNamespace::BasicUIAudioManager::dyn__minPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__minPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPitch
float& GlobalNamespace::BasicUIAudioManager::dyn__maxPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__maxPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomSoundPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>*& GlobalNamespace::BasicUIAudioManager::dyn__randomSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::dyn__randomSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSoundPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicUIAudioManager.Start
void GlobalNamespace::BasicUIAudioManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnEnable
void GlobalNamespace::BasicUIAudioManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnDisable
void GlobalNamespace::BasicUIAudioManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.HandleButtonClickEvent
void GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::VisualMetronome::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _leftPadding
float& GlobalNamespace::VisualMetronome::dyn__leftPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__leftPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPadding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rightPadding
float& GlobalNamespace::VisualMetronome::dyn__rightPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__rightPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPadding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _ticker
UnityEngine::RectTransform*& GlobalNamespace::VisualMetronome::dyn__ticker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__ticker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ticker"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _movingTicker
UnityEngine::RectTransform*& GlobalNamespace::VisualMetronome::dyn__movingTicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__movingTicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movingTicker"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _tickerImage
UnityEngine::UI::Image*& GlobalNamespace::VisualMetronome::dyn__tickerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__tickerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickerImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _movingTickerImage
UnityEngine::UI::Image*& GlobalNamespace::VisualMetronome::dyn__movingTickerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__movingTickerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movingTickerImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _metronomeInterval
float& GlobalNamespace::VisualMetronome::dyn__metronomeInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__metronomeInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metronomeInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _normalTickerSize
UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__normalTickerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__normalTickerSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalTickerSize"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _tickTickerSize0
UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__tickTickerSize0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__tickTickerSize0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickTickerSize0"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _tickTickerSize1
UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__tickTickerSize1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__tickTickerSize1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickTickerSize1"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::VisualMetronome::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevAudioTime
float& GlobalNamespace::VisualMetronome::dyn__prevAudioTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__prevAudioTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevAudioTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _zeroOffset
float& GlobalNamespace::VisualMetronome::dyn__zeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__zeroOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zeroOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _direction
float& GlobalNamespace::VisualMetronome::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontTickThisFrame
bool& GlobalNamespace::VisualMetronome::dyn__dontTickThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::dyn__dontTickThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontTickThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VisualMetronome.set_tickerColor
void GlobalNamespace::VisualMetronome::set_tickerColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_tickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.set_movingTickerColor
void GlobalNamespace::VisualMetronome::set_movingTickerColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_movingTickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movingTickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.get_zeroOffset
float GlobalNamespace::VisualMetronome::get_zeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::get_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VisualMetronome.set_zeroOffset
void GlobalNamespace::VisualMetronome::set_zeroOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.Awake
void GlobalNamespace::VisualMetronome::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnEnable
void GlobalNamespace::VisualMetronome::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnDisable
void GlobalNamespace::VisualMetronome::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VisualMetronome.Update
void GlobalNamespace::VisualMetronome::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: VisualMetronome.SetMovingTickerNormalizedPosition
void GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMovingTickerNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _darkColor
UnityEngine::Color& GlobalNamespace::ColorHueSlider::dyn__darkColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::dyn__darkColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
UnityEngine::Color& GlobalNamespace::ColorHueSlider::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<ColorHueSlider,System.Single,ColorChangeUIEventType> colorHueDidChangeEvent
System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::ColorHueSlider::dyn_colorHueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::dyn_colorHueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorHueDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorHueSlider.add_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent(System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.remove_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent(System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange(HMUI::CircleSlider* slider, float normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorHueSlider.Awake
void GlobalNamespace::ColorHueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnDestroy
void GlobalNamespace::ColorHueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorHueSlider.UpdateVisuals
void GlobalNamespace::ColorHueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnPointerUp
void GlobalNamespace::ColorHueSlider::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _hue
float& GlobalNamespace::ColorSaturationValueSlider::dyn__hue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::dyn__hue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _graphics
::Array<UnityEngine::UI::Graphic*>*& GlobalNamespace::ColorSaturationValueSlider::dyn__graphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::dyn__graphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphics"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::UI::Graphic*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _darkColor
UnityEngine::Color& GlobalNamespace::ColorSaturationValueSlider::dyn__darkColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::dyn__darkColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
UnityEngine::Color& GlobalNamespace::ColorSaturationValueSlider::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<ColorSaturationValueSlider,UnityEngine.Vector2,ColorChangeUIEventType> colorSaturationOrValueDidChangeEvent
System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::ColorSaturationValueSlider::dyn_colorSaturationOrValueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::dyn_colorSaturationOrValueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSaturationOrValueDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSaturationValueSlider.add_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent(System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.remove_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent(System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.SetHue
void GlobalNamespace::ColorSaturationValueSlider::SetHue(float hue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::SetHue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hue);
}
// Autogenerated method: ColorSaturationValueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange(HMUI::Slider2D* slider, UnityEngine::Vector2 normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorSaturationValueSlider.Awake
void GlobalNamespace::ColorSaturationValueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnDestroy
void GlobalNamespace::ColorSaturationValueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.UpdateVisuals
void GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnPointerUp
void GlobalNamespace::ColorSaturationValueSlider::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _colorGraphics
::Array<UnityEngine::UI::Graphic*>*& GlobalNamespace::ColorSchemeColorToggleController::dyn__colorGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::dyn__colorGraphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorGraphics"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::UI::Graphic*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _toggle
UnityEngine::UI::Toggle*& GlobalNamespace::ColorSchemeColorToggleController::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeColorToggleController.get_toggle
UnityEngine::UI::Toggle* GlobalNamespace::ColorSchemeColorToggleController::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Toggle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.get_color
UnityEngine::Color GlobalNamespace::ColorSchemeColorToggleController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.set_color
void GlobalNamespace::ColorSchemeColorToggleController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _saberAColorToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberAColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberAColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberAColorToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _saberBColorToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberBColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberBColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBColorToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _environmentColor0ToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor0ToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor0ToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0ToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _environmentColor1ToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor1ToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor1ToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1ToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _obstaclesColorToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__obstaclesColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__obstaclesColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclesColorToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> selectedColorDidChangeEvent
System::Action_1<UnityEngine::Color>*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn_selectedColorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn_selectedColorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedColorDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
HMUI::ToggleBinder*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _selectedColorToggleController
GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__selectedColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__selectedColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColorToggleController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorScheme _colorScheme
GlobalNamespace::ColorScheme*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.get_color
UnityEngine::Color GlobalNamespace::ColorSchemeColorsToggleGroup::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.set_color
void GlobalNamespace::ColorSchemeColorsToggleGroup::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.add_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.remove_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.SetColorScheme
void GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.Awake
void GlobalNamespace::ColorSchemeColorsToggleGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.OnDestroy
void GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.HandleToggleWasSelected
void GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected(GlobalNamespace::ColorSchemeColorToggleController* toggleController, bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleToggleWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggleController), ::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toggleController, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.CreateColorSchemeFromEditedColors
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateColorSchemeFromEditedColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_0
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_1
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_2
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_3
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_4
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::ColorSchemeDropdown::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeView _colorSchemeView
GlobalNamespace::ColorSchemeView*& GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemeView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeView"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeTableCell _cellPrefab
GlobalNamespace::ColorSchemeTableCell*& GlobalNamespace::ColorSchemeDropdown::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cellReuseIdentifier
::Il2CppString*& GlobalNamespace::ColorSchemeDropdown::dyn__cellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__cellReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellReuseIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
float& GlobalNamespace::ColorSchemeDropdown::dyn__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<ColorScheme> _colorSchemes
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::ColorScheme*>*& GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemes"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::ColorScheme*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::ColorSchemeDropdown::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeDropdown.LazyInit
void GlobalNamespace::ColorSchemeDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.SetData
void GlobalNamespace::ColorSchemeDropdown::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::ColorScheme*>* colorSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemes)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorSchemes);
}
// Autogenerated method: ColorSchemeDropdown.CellSize
float GlobalNamespace::ColorSchemeDropdown::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.NumberOfCells
int GlobalNamespace::ColorSchemeDropdown::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.CellForIdx
HMUI::TableCell* GlobalNamespace::ColorSchemeDropdown::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(___instance_arg, ___internal__method, tableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.HandleDidSelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.RefreshUI
void GlobalNamespace::ColorSchemeDropdown::RefreshUI(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeDropdown.OnDestroy
void GlobalNamespace::ColorSchemeDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.Init
void GlobalNamespace::ColorSchemeDropdown::Init(HMUI::TableView::IDataSource* initTableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initTableViewDataSource)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, initTableViewDataSource);
}
// Autogenerated method: ColorSchemeDropdown.SelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::ColorSchemeTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeView _colorSchemeView
GlobalNamespace::ColorSchemeView*& GlobalNamespace::ColorSchemeTableCell::dyn__colorSchemeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::dyn__colorSchemeView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeView"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _editIcon
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeTableCell::dyn__editIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::dyn__editIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editIcon"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeTableCell.get_text
::Il2CppString* GlobalNamespace::ColorSchemeTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorSchemeTableCell.set_text
void GlobalNamespace::ColorSchemeTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.set_showEditIcon
void GlobalNamespace::ColorSchemeTableCell::set_showEditIcon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::set_showEditIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showEditIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.SetColors
void GlobalNamespace::ColorSchemeTableCell::SetColors(UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environment0Color, UnityEngine::Color environment1Color, UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _saberAColorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__saberAColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::dyn__saberAColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberAColorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _saberBColorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__saberBColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::dyn__saberBColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBColorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _environment0ColorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__environment0ColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::dyn__environment0ColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environment0ColorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _environment1ColorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__environment1ColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::dyn__environment1ColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environment1ColorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _obstacleColorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__obstacleColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::dyn__obstacleColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleColorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeView.SetColors
void GlobalNamespace::ColorSchemeView::SetColors(UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environment0Color, UnityEngine::Color environment1Color, UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorsOverrideSettingsPanelController
#include "GlobalNamespace/ColorsOverrideSettingsPanelController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _overrideColorsToggle
UnityEngine::UI::Toggle*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__overrideColorsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__overrideColorsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideColorsToggle"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _detailsPanelGO
UnityEngine::GameObject*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__detailsPanelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__detailsPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsPanelGO"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeDropdown _colorSchemeDropDown
GlobalNamespace::ColorSchemeDropdown*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemeDropDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemeDropDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeDropDown"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditColorSchemeController _editColorSchemeController
GlobalNamespace::EditColorSchemeController*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeController"))->offset;
  return *reinterpret_cast<GlobalNamespace::EditColorSchemeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _editColorSchemeModalView
HMUI::ModalView*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeModalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeModalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeModalView"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editColorSchemeButton
UnityEngine::UI::Button*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
HMUI::PanelAnimationSO*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
HMUI::PanelAnimationSO*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
GlobalNamespace::IAnalyticsModel*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemesSettings _colorSchemesSettings
GlobalNamespace::ColorSchemesSettings*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemesSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemesSettings"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemesSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.get_colorSchemesSettings
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemesSettings*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.SetData
void GlobalNamespace::ColorsOverrideSettingsPanelController::SetData(GlobalNamespace::ColorSchemesSettings* colorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemesSettings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorSchemesSettings);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDisable
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.Refresh
void GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleOverrideColorsToggleValueChanged
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideColorsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isOn);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeButtonWasPressed
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidFinish
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidChangeColorScheme
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidChangeColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorScheme);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.<HandleOverrideColorsToggleValueChanged>b__19_0
void GlobalNamespace::ColorsOverrideSettingsPanelController::$HandleOverrideColorsToggleValueChanged$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::<HandleOverrideColorsToggleValueChanged>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideColorsToggleValueChanged>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorController
#include "GlobalNamespace/EditColorController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HSVPanelController _hsvPanelController
GlobalNamespace::HSVPanelController*& GlobalNamespace::EditColorController::dyn__hsvPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__hsvPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HSVPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PreviousColorPanelController _previousColorPanelController
GlobalNamespace::PreviousColorPanelController*& GlobalNamespace::EditColorController::dyn__previousColorPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__previousColorPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousColorPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PreviousColorPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
UnityEngine::UI::Button*& GlobalNamespace::EditColorController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _applyButton
UnityEngine::UI::Button*& GlobalNamespace::EditColorController::dyn__applyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__applyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> didChangeColorEvent
System::Action_1<UnityEngine::Color>*& GlobalNamespace::EditColorController::dyn_didChangeColorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn_didChangeColorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeColorEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didFinishEvent
System::Action_1<bool>*& GlobalNamespace::EditColorController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> _colorCallback
System::Action_1<UnityEngine::Color>*& GlobalNamespace::EditColorController::dyn__colorCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__colorCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorCallback"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _initialColor
UnityEngine::Color& GlobalNamespace::EditColorController::dyn__initialColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__initialColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _colorChanged
bool& GlobalNamespace::EditColorController::dyn__colorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::dyn__colorChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditColorController.add_didChangeColorEvent
void GlobalNamespace::EditColorController::add_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::add_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didChangeColorEvent
void GlobalNamespace::EditColorController::remove_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::remove_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorController.add_didFinishEvent
void GlobalNamespace::EditColorController::add_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didFinishEvent
void GlobalNamespace::EditColorController::remove_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorController.SetColorCallback
void GlobalNamespace::EditColorController::SetColorCallback(System::Action_1<UnityEngine::Color>* colorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::SetColorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorCallback);
}
// Autogenerated method: EditColorController.SetColor
void GlobalNamespace::EditColorController::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleCancelButtonWasPressed
void GlobalNamespace::EditColorController::HandleCancelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleCancelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EditColorController.HandleApplyButtonWasPressed
void GlobalNamespace::EditColorController::HandleApplyButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleApplyButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EditColorController.ChangeColor
void GlobalNamespace::EditColorController::ChangeColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::ChangeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditColorController.DidActivate
void GlobalNamespace::EditColorController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EditColorController.DidDeactivate
void GlobalNamespace::EditColorController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorsToggleGroup _colorSchemeColorsToggleGroup
GlobalNamespace::ColorSchemeColorsToggleGroup*& GlobalNamespace::EditColorSchemeController::dyn__colorSchemeColorsToggleGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__colorSchemeColorsToggleGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeColorsToggleGroup"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeColorsToggleGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RGBPanelController _rgbPanelController
GlobalNamespace::RGBPanelController*& GlobalNamespace::EditColorSchemeController::dyn__rgbPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__rgbPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgbPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::RGBPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HSVPanelController _hsvPanelController
GlobalNamespace::HSVPanelController*& GlobalNamespace::EditColorSchemeController::dyn__hsvPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__hsvPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::HSVPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PreviousColorPanelController _previousColorPanelController
GlobalNamespace::PreviousColorPanelController*& GlobalNamespace::EditColorSchemeController::dyn__previousColorPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__previousColorPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousColorPanelController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PreviousColorPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _closeButton
UnityEngine::UI::Button*& GlobalNamespace::EditColorSchemeController::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishEvent
System::Action*& GlobalNamespace::EditColorSchemeController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ColorScheme> didChangeColorSchemeEvent
System::Action_1<GlobalNamespace::ColorScheme*>*& GlobalNamespace::EditColorSchemeController::dyn_didChangeColorSchemeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn_didChangeColorSchemeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeColorSchemeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ColorScheme*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::EditColorSchemeController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditColorSchemeController.add_didFinishEvent
void GlobalNamespace::EditColorSchemeController::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didFinishEvent
void GlobalNamespace::EditColorSchemeController::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.add_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent(System::Action_1<GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent(System::Action_1<GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.SetColorScheme
void GlobalNamespace::EditColorSchemeController::SetColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colorScheme);
}
// Autogenerated method: EditColorSchemeController.Start
void GlobalNamespace::EditColorSchemeController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.OnDestroy
void GlobalNamespace::EditColorSchemeController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.HandleColorSchemeColorsToggleGroupSelectedColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSchemeColorsToggleGroupSelectedColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.HandleRGBPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRGBPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.<Start>b__13_0
void GlobalNamespace::EditColorSchemeController::$Start$b__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::<Start>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSaturationValueSlider _colorSaturationValueSlider
GlobalNamespace::ColorSaturationValueSlider*& GlobalNamespace::HSVPanelController::dyn__colorSaturationValueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::dyn__colorSaturationValueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSaturationValueSlider"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSaturationValueSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorHueSlider _colorHueSlider
GlobalNamespace::ColorHueSlider*& GlobalNamespace::HSVPanelController::dyn__colorHueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::dyn__colorHueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorHueSlider"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorHueSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<UnityEngine.Color,ColorChangeUIEventType> colorDidChangeEvent
System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::HSVPanelController::dyn_colorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::dyn_colorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _hsvColor
UnityEngine::Vector3& GlobalNamespace::HSVPanelController::dyn__hsvColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::dyn__hsvColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvColor"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HSVPanelController.get_color
UnityEngine::Color GlobalNamespace::HSVPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HSVPanelController.set_color
void GlobalNamespace::HSVPanelController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.add_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::add_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.remove_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.Awake
void GlobalNamespace::HSVPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HSVPanelController.OnDestroy
void GlobalNamespace::HSVPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HSVPanelController.HandleColorSaturationOrValueDidChange
void GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange(GlobalNamespace::ColorSaturationValueSlider* slider, UnityEngine::Vector2 colorSaturationAndValue, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSaturationOrValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(colorSaturationAndValue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slider, colorSaturationAndValue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.HandleColorHueDidChange
void GlobalNamespace::HSVPanelController::HandleColorHueDidChange(GlobalNamespace::ColorHueSlider* slider, float hue, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::HandleColorHueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorHueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(hue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slider, hue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.RefreshSlidersValues
void GlobalNamespace::HSVPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HSVPanelController.RefreshSlidersColors
void GlobalNamespace::HSVPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxColors
int GlobalNamespace::PreviousColorPanelController::_get_kMaxColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::_get_kMaxColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PreviousColorPanelController", "kMaxColors"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxColors
void GlobalNamespace::PreviousColorPanelController::_set_kMaxColors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::_set_kMaxColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PreviousColorPanelController", "kMaxColors", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _graphics
::Array<UnityEngine::UI::Graphic*>*& GlobalNamespace::PreviousColorPanelController::dyn__graphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn__graphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphics"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::UI::Graphic*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::PreviousColorPanelController::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> colorWasSelectedEvent
System::Action_1<UnityEngine::Color>*& GlobalNamespace::PreviousColorPanelController::dyn_colorWasSelectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn_colorWasSelectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorWasSelectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::PreviousColorPanelController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::PreviousColorPanelController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphicsColor
UnityEngine::Color& GlobalNamespace::PreviousColorPanelController::dyn__graphicsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::dyn__graphicsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphicsColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PreviousColorPanelController.add_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.remove_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.Awake
void GlobalNamespace::PreviousColorPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.OnDestroy
void GlobalNamespace::PreviousColorPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.AddColor
void GlobalNamespace::PreviousColorPanelController::AddColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::AddColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: PreviousColorPanelController.DiscardUpcomingColor
void GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardUpcomingColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.<Awake>b__9_0
void GlobalNamespace::PreviousColorPanelController::$Awake$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::<Awake>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HMUI.ColorGradientSlider
#include "HMUI/ColorGradientSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _redSlider
HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__redSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::dyn__redSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redSlider"))->offset;
  return *reinterpret_cast<HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _greenSlider
HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__greenSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::dyn__greenSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_greenSlider"))->offset;
  return *reinterpret_cast<HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _blueSlider
HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__blueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::dyn__blueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueSlider"))->offset;
  return *reinterpret_cast<HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<UnityEngine.Color,ColorChangeUIEventType> colorDidChangeEvent
System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::RGBPanelController::dyn_colorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::dyn_colorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::RGBPanelController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RGBPanelController.get_color
UnityEngine::Color GlobalNamespace::RGBPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RGBPanelController.set_color
void GlobalNamespace::RGBPanelController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.add_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::add_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.remove_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.Awake
void GlobalNamespace::RGBPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RGBPanelController.OnDestroy
void GlobalNamespace::RGBPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RGBPanelController.HandleSliderColorDidChange
void GlobalNamespace::RGBPanelController::HandleSliderColorDidChange(HMUI::ColorGradientSlider* slider, UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::HandleSliderColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, slider, color, colorChangeUIEventType);
}
// Autogenerated method: RGBPanelController.RefreshSlidersValues
void GlobalNamespace::RGBPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RGBPanelController.RefreshSlidersColors
void GlobalNamespace::RGBPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell.hpp"
// Including type: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell_-RefreshAvailabilityAsync-d__23.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _infoText
TMPro::TextMeshProUGUI*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_infoText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _coverImage
HMUI::ImageView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _selectionImage
HMUI::ImageView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _newPromoRibbonObjects
::Array<UnityEngine::GameObject*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__newPromoRibbonObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__newPromoRibbonObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPromoRibbonObjects"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _downloadIconObject
UnityEngine::GameObject*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__downloadIconObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__downloadIconObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadIconObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor0
UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor1
UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightedColor0
UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor0"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightedColor1
UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor1"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <cellIndex>k__BackingField
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn_$cellIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn_$cellIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cellIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IAnnotatedBeatmapLevelCollection _annotatedBeatmapLevelCollection
GlobalNamespace::IAnnotatedBeatmapLevelCollection*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__annotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__annotatedBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotatedBeatmapLevelCollection"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAnnotatedBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.get_cellIndex
int GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::get_cellIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::get_cellIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.set_cellIndex
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_cellIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_cellIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.set_showNewRibbon
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_showNewRibbon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_showNewRibbon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showNewRibbon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetData(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, annotatedBeatmapLevelCollection);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.RefreshVisuals
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.GetInfoText
::Il2CppString* GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::GetInfoText(::Il2CppString* name, int songs, int purchased) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::GetInfoText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInfoText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(songs), ::il2cpp_utils::ExtractType(purchased)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, name, songs, purchased);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.RefreshAvailabilityAsync
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, contentModel);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SetDownloadIconVisible
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetDownloadIconVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetDownloadIconVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDownloadIconVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, visible);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.InternalToggle
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SelectionDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.HighlightDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell_-RefreshAvailabilityAsync-d__23.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AnnotatedBeatmapLevelCollectionCell <>4__this
GlobalNamespace::AnnotatedBeatmapLevelCollectionCell*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AnnotatedBeatmapLevelCollectionCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel contentModel
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numberOfOwnedLevels>5__3
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numberOfOwnedLevels>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <error>5__4
bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<error>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel[] <>7__wrap4
::Array<GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap5
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.MoveNext
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.SetStateMachine
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _selectionImage
UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgNormalColor
UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgNormalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgHighlightColor
UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SetData
void GlobalNamespace::BeatmapCharacteristicTableCell::SetData(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicTableCell.RefreshVisuals
void GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SelectionDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: BeatmapCharacteristicTableCell.HighlightDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::ColorPickerButtonController::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _colorImage
UnityEngine::UI::Image*& GlobalNamespace::ColorPickerButtonController::dyn__colorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::dyn__colorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorPickerButtonController.get_button
UnityEngine::UI::Button* GlobalNamespace::ColorPickerButtonController::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorPickerButtonController.SetColor
void GlobalNamespace::ColorPickerButtonController::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _decButton
UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__decButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__decButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _incButton
UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__incButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__incButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _valueImage
HMUI::ImageView*& GlobalNamespace::ColorStepValuePicker::dyn__valueImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn__valueImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action decButtonWasPressedEvent
System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action incButtonWasPressedEvent
System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorStepValuePicker.get_color
UnityEngine::Color GlobalNamespace::ColorStepValuePicker::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.set_color
void GlobalNamespace::ColorStepValuePicker::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_decButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_incButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.OnEnable
void GlobalNamespace::ColorStepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.OnDisable
void GlobalNamespace::ColorStepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.IncButtonPressed
void GlobalNamespace::ColorStepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.DecButtonPressed
void GlobalNamespace::ColorStepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _difficultyText
TMPro::TextMeshProUGUI*& GlobalNamespace::DifficultyTableCell::dyn__difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__difficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FillIndicator _fillIndicator
GlobalNamespace::FillIndicator*& GlobalNamespace::DifficultyTableCell::dyn__fillIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::dyn__fillIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fillIndicator"))->offset;
  return *reinterpret_cast<GlobalNamespace::FillIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyTableCell.get_difficultyText
::Il2CppString* GlobalNamespace::DifficultyTableCell::get_difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::get_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: DifficultyTableCell.set_difficultyText
void GlobalNamespace::DifficultyTableCell::set_difficultyText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.set_difficultyValue
void GlobalNamespace::DifficultyTableCell::set_difficultyValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.SelectionDidChange
void GlobalNamespace::DifficultyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: DifficultyTableCell.HighlightDidChange
void GlobalNamespace::DifficultyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FillIndicator.get_fillAmount
float GlobalNamespace::FillIndicator::get_fillAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::get_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FillIndicator.set_fillAmount
void GlobalNamespace::FillIndicator::set_fillAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::set_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinServerButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinServerButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action joinServerButtonWasPressedEvent
System::Action*& GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinServerButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListDetailTableCell.add_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.remove_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.<Start>b__5_0
void GlobalNamespace::GameServerListDetailTableCell::$Start$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerListDetailTableCell.Start
void GlobalNamespace::GameServerListDetailTableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _serverName
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverName"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _difficultiesText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__difficultiesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__difficultiesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultiesText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _musicPackText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__musicPackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__musicPackText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerCount
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__playerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCount"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _passwordProtected
UnityEngine::GameObject*& GlobalNamespace::GameServerListTableCell::dyn__passwordProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__passwordProtected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passwordProtected"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMasksModel _songPackMasksModel
GlobalNamespace::SongPackMasksModel*& GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMasksModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPackMasksModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListTableCell.SetData
void GlobalNamespace::GameServerListTableCell::SetData(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: GameServerPlayerTableCell/<>c__DisplayClass29_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass29_0.hpp"
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__35.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: HMUI.ButtonSpriteSwapToggle
#include "HMUI/ButtonSpriteSwapToggle.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerNameText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _localPlayerBackgroundImage
UnityEngine::UI::Image*& GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerBackgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _suggestedLevelText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedLevelText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _suggestedCharacteristicIcon
HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedCharacteristicIcon"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _suggestedDifficultyText
TMPro::TextMeshProUGUI*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedDifficultyText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedLevelText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedLevelText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _suggestedModifiersList
GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedModifiersList"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedModifiersText
HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedModifiersText"))->offset;
  return *reinterpret_cast<HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _mutePlayerButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__mutePlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__mutePlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutePlayerButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _kickPlayerButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kickPlayerButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useBeatmapButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useModifiersButton
UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useModifiersButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _useBeatmapButtonHoverHint
HMUI::HoverHint*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButtonHoverHint"))->offset;
  return *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonSpriteSwapToggle _muteToggle
HMUI::ButtonSpriteSwapToggle*& GlobalNamespace::GameServerPlayerTableCell::dyn__muteToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__muteToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muteToggle"))->offset;
  return *reinterpret_cast<HMUI::ButtonSpriteSwapToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _statusImageView
HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statusImageView"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _readyIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _spectatingIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _hostIcon
UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hostIcon"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiers
GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> kickPlayerEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useBeatmapEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useBeatmapEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useModifiersEvent
System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useModifiersEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _getLevelEntitlementCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getLevelEntitlementCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.SetData
void GlobalNamespace::GameServerPlayerTableCell::SetData(GlobalNamespace::IConnectedPlayer* connectedPlayer, GlobalNamespace::ILobbyPlayerData* playerData, bool hasKickPermissions, bool allowSelection, System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(hasKickPermissions), ::il2cpp_utils::ExtractType(allowSelection), ::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer, playerData, hasKickPermissions, allowSelection, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell.Awake
void GlobalNamespace::GameServerPlayerTableCell::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleKickPlayerButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayerButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseBeatmapButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseBeatmapButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseModifiersButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseModifiersButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.SetBeatmapUseButtonEnabledAsync
void GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync(System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapUseButtonEnabledAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, getLevelEntitlementTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<>c__DisplayClass29_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass29_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifiersList
System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::dyn_modifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::dyn_modifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiersList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<>c__DisplayClass29_0.<SetData>b__0
void GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::$SetData$b__0(int id, GlobalNamespace::GameplayModifierInfoListItem* listItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::<SetData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(listItem)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, id, listItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__35.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameServerPlayerTableCell <>4__this
GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<AdditionalContentModel/EntitlementStatus> getLevelEntitlementTask
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_getLevelEntitlementTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_getLevelEntitlementTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getLevelEntitlementTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35.MoveNext
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35.SetStateMachine
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _hoverHint
HMUI::HoverHint*& GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  return *reinterpret_cast<HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
UnityEngine::UI::Image*& GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierInfoListItem.SetModifier
void GlobalNamespace::GameplayModifierInfoListItem::SetModifier(GlobalNamespace::GameplayModifierParamsSO* modifierParam, bool showName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParam), ::il2cpp_utils::ExtractType(showName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, modifierParam, showName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageWithHintItemsList
#include "GlobalNamespace/ImageWithHintItemsList.hpp"
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IncDecColorController
#include "GlobalNamespace/IncDecColorController.hpp"
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorStepValuePicker _stepValuePicker
GlobalNamespace::ColorStepValuePicker*& GlobalNamespace::IncDecColorController::dyn__stepValuePicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::dyn__stepValuePicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepValuePicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorStepValuePicker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IncDecColorController.set_enableDec
void GlobalNamespace::IncDecColorController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_enableInc
void GlobalNamespace::IncDecColorController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_color
void GlobalNamespace::IncDecColorController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.Awake
void GlobalNamespace::IncDecColorController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.OnDestroy
void GlobalNamespace::IncDecColorController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.IncButtonPressed
void GlobalNamespace::IncDecColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: IncDecColorController.DecButtonPressed
void GlobalNamespace::IncDecColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerNameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _fullComboText
TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardTableCell::dyn__fullComboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__fullComboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullComboText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
UnityEngine::Color& GlobalNamespace::LeaderboardTableCell::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _specialScoreColor
UnityEngine::Color& GlobalNamespace::LeaderboardTableCell::dyn__specialScoreColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__specialScoreColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialScoreColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _separatorImage
UnityEngine::UI::Image*& GlobalNamespace::LeaderboardTableCell::dyn__separatorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::dyn__separatorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separatorImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableCell.set_rank
void GlobalNamespace::LeaderboardTableCell::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_playerName
void GlobalNamespace::LeaderboardTableCell::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_score
void GlobalNamespace::LeaderboardTableCell::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showSeparator
void GlobalNamespace::LeaderboardTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showFullCombo
void GlobalNamespace::LeaderboardTableCell::set_showFullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showFullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showFullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_specialScore
void GlobalNamespace::LeaderboardTableCell::set_specialScore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_specialScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_specialScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup*& GlobalNamespace::LevelListTableCell::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _coverImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songNameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songNameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songAuthorText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songAuthorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songAuthorText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songAuthorText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _favoritesBadgeImage
UnityEngine::UI::Image*& GlobalNamespace::LevelListTableCell::dyn__favoritesBadgeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__favoritesBadgeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoritesBadgeImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songDurationText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songDurationText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songDurationText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDurationText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songBpmText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelListTableCell::dyn__songBpmText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__songBpmText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBpmText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__highlightBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__highlightBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__selectedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__selectedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedAndHighlightedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelListTableCell::dyn__selectedAndHighlightedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__selectedAndHighlightedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _notOwnedAlpha
float& GlobalNamespace::LevelListTableCell::dyn__notOwnedAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__notOwnedAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notOwnedAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _refreshingAvailabilityCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshingAvailabilityCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _settingDataCancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::LevelListTableCell::dyn__settingDataCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__settingDataCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingDataCancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _notOwned
bool& GlobalNamespace::LevelListTableCell::dyn__notOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__notOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _refreshingAvailabilityLevelID
::Il2CppString*& GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityLevelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__refreshingAvailabilityLevelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshingAvailabilityLevelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _settingDataFromLevelId
::Il2CppString*& GlobalNamespace::LevelListTableCell::dyn__settingDataFromLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::dyn__settingDataFromLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingDataFromLevelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell.SetDataFromLevelAsync
void GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* level, bool isFavorite) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataFromLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(isFavorite)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, level, isFavorite);
}
// Autogenerated method: LevelListTableCell.RefreshVisuals
void GlobalNamespace::LevelListTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelListTableCell.RefreshAvailabilityAsync
void GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel, ::Il2CppString* levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel), ::il2cpp_utils::ExtractType(levelID)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, contentModel, levelID);
}
// Autogenerated method: LevelListTableCell.CancelAsyncOperations
void GlobalNamespace::LevelListTableCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelListTableCell.SelectionDidChange
void GlobalNamespace::LevelListTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.HighlightDidChange
void GlobalNamespace::LevelListTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.WasPreparedForReuse
void GlobalNamespace::LevelListTableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelListTableCell <>4__this
GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFavorite
bool& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_isFavorite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_isFavorite");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFavorite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>& GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.MoveNext
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.SetStateMachine
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelListTableCell <>4__this
GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
::Il2CppString*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_levelID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel contentModel
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_contentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_contentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
System::Threading::CancellationToken& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.MoveNext
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.SetStateMachine
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI*& GlobalNamespace::LevelPackHeaderTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
UnityEngine::UI::Image*& GlobalNamespace::LevelPackHeaderTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__highlightBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__highlightBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedAndHighlightedBackgroundColor
UnityEngine::Color& GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedAndHighlightedBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::dyn__selectedAndHighlightedBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedBackgroundColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelPackHeaderTableCell.SetData
void GlobalNamespace::LevelPackHeaderTableCell::SetData(::Il2CppString* headerText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerText)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headerText);
}
// Autogenerated method: LevelPackHeaderTableCell.RefreshVisuals
void GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LevelPackHeaderTableCell.SelectionDidChange
void GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: LevelPackHeaderTableCell.HighlightDidChange
void GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListColorController
#include "GlobalNamespace/ListColorController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _idx
int& GlobalNamespace::ListColorController::dyn__idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::dyn__idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
int& GlobalNamespace::ListColorController::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListColorController.GetInitValues
bool GlobalNamespace::ListColorController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: ListColorController.ApplyValue
void GlobalNamespace::ListColorController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: ListColorController.ColorForValue
UnityEngine::Color GlobalNamespace::ListColorController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: ListColorController.OnEnable
void GlobalNamespace::ListColorController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.RefreshUI
void GlobalNamespace::ListColorController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.Refresh
void GlobalNamespace::ListColorController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, applyValue);
}
// Autogenerated method: ListColorController.IncButtonPressed
void GlobalNamespace::ListColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ListColorController.DecButtonPressed
void GlobalNamespace::ListColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _loadingContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__loadingContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__loadingContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _loadingText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__loadingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__loadingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadingText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _refreshText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__refreshText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _refreshButton
UnityEngine::UI::Button*& GlobalNamespace::LoadingControl::dyn__refreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _refreshContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__refreshContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__refreshContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refreshContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _downloadingContainer
UnityEngine::GameObject*& GlobalNamespace::LoadingControl::dyn__downloadingContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__downloadingContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadingContainer"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _downloadingText
TMPro::TextMeshProUGUI*& GlobalNamespace::LoadingControl::dyn__downloadingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__downloadingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadingText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _donwloadingProgressImage
UnityEngine::UI::Image*& GlobalNamespace::LoadingControl::dyn__donwloadingProgressImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__donwloadingProgressImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_donwloadingProgressImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPressRefreshButtonEvent
System::Action*& GlobalNamespace::LoadingControl::dyn_didPressRefreshButtonEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn_didPressRefreshButtonEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPressRefreshButtonEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
HMUI::ButtonBinder*& GlobalNamespace::LoadingControl::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LoadingControl.get_isLoading
bool GlobalNamespace::LoadingControl::get_isLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::get_isLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.add_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LoadingControl.remove_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: LoadingControl.Awake
void GlobalNamespace::LoadingControl::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.OnDestroy
void GlobalNamespace::LoadingControl::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.ShowLoading
void GlobalNamespace::LoadingControl::ShowLoading(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: LoadingControl.ShowText
void GlobalNamespace::LoadingControl::ShowText(::Il2CppString* text, bool showRefreshButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(showRefreshButton)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, showRefreshButton);
}
// Autogenerated method: LoadingControl.ShowDownloadingProgress
void GlobalNamespace::LoadingControl::ShowDownloadingProgress(::Il2CppString* text, float downloadingProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowDownloadingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDownloadingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(downloadingProgress)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, downloadingProgress);
}
// Autogenerated method: LoadingControl.Hide
void GlobalNamespace::LoadingControl::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: LoadingControl.<Awake>b__14_0
void GlobalNamespace::LoadingControl::$Awake$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NamedColorListController/ColorValuePair[] _textValuePairs
::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>*& GlobalNamespace::NamedColorListController::dyn__textValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn__textValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textValuePairs"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
int& GlobalNamespace::NamedColorListController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> valueChangedEvent
System::Action_1<int>*& GlobalNamespace::NamedColorListController::dyn_valueChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::dyn_valueChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedColorListController.add_valueChangedEvent
void GlobalNamespace::NamedColorListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.remove_valueChangedEvent
void GlobalNamespace::NamedColorListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.Init
void GlobalNamespace::NamedColorListController::Init(::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* values, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, values, value);
}
// Autogenerated method: NamedColorListController.SetValue
void GlobalNamespace::NamedColorListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.GetInitValues
bool GlobalNamespace::NamedColorListController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: NamedColorListController.ApplyValue
void GlobalNamespace::NamedColorListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: NamedColorListController.ColorForValue
UnityEngine::Color GlobalNamespace::NamedColorListController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::NamedColorListController::ColorValuePair::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorValuePair::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
int& GlobalNamespace::NamedColorListController::ColorValuePair::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorValuePair::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NamedIntListController/TextValuePair[] _textValuePairs
::Array<GlobalNamespace::NamedIntListController::TextValuePair*>*& GlobalNamespace::NamedIntListController::dyn__textValuePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn__textValuePairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textValuePairs"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::NamedIntListController::TextValuePair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
int& GlobalNamespace::NamedIntListController::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> valueChangedEvent
System::Action_1<int>*& GlobalNamespace::NamedIntListController::dyn_valueChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::dyn_valueChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListController.add_valueChangedEvent
void GlobalNamespace::NamedIntListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.remove_valueChangedEvent
void GlobalNamespace::NamedIntListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.InitValues
void GlobalNamespace::NamedIntListController::InitValues(::Array<GlobalNamespace::NamedIntListController::TextValuePair*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::InitValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, values);
}
// Autogenerated method: NamedIntListController.SetValue
void GlobalNamespace::NamedIntListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.GetInitValues
bool GlobalNamespace::NamedIntListController::GetInitValues(ByRef<int> idx, ByRef<int> numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(idx), byref(numberOfElements));
}
// Autogenerated method: NamedIntListController.ApplyValue
void GlobalNamespace::NamedIntListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated method: NamedIntListController.TextForValue
::Il2CppString* GlobalNamespace::NamedIntListController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String localizationKey
::Il2CppString*& GlobalNamespace::NamedIntListController::TextValuePair::dyn_localizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::dyn_localizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizationKey"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value
int& GlobalNamespace::NamedIntListController::TextValuePair::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NamedIntListController/TextValuePair.get_localizedText
::Il2CppString* GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PackLevelListHeaderTableCell
#include "GlobalNamespace/PackLevelListHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedHighlightElementsColor
UnityEngine::Color& GlobalNamespace::PackLevelListHeaderTableCell::dyn__selectedHighlightElementsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__selectedHighlightElementsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedHighlightElementsColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _arrowImage
UnityEngine::UI::Image*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__arrowImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__arrowImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrowImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
System::Threading::CancellationTokenSource*& GlobalNamespace::PackLevelListHeaderTableCell::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PackLevelListHeaderTableCell.get_text
::Il2CppString* GlobalNamespace::PackLevelListHeaderTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.set_text
void GlobalNamespace::PackLevelListHeaderTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PackLevelListHeaderTableCell.RefreshVisuals
void GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.SelectionDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: PackLevelListHeaderTableCell.HighlightDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SafeAreaRectChecker
#include "GlobalNamespace/SafeAreaRectChecker.hpp"
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _minAngleX
float& GlobalNamespace::SafeAreaRectChecker::dyn__minAngleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__minAngleX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAngleX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngleX
float& GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngleX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minAngleY
float& GlobalNamespace::SafeAreaRectChecker::dyn__minAngleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__minAngleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAngleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAngleY
float& GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__maxAngleY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAngleY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _activeObjectWhenInsideSafeArea
UnityEngine::GameObject*& GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenInsideSafeArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenInsideSafeArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeObjectWhenInsideSafeArea"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _activeObjectWhenNotInsideSafeArea
UnityEngine::GameObject*& GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenNotInsideSafeArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__activeObjectWhenNotInsideSafeArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeObjectWhenNotInsideSafeArea"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransformToCheck
UnityEngine::RectTransform*& GlobalNamespace::SafeAreaRectChecker::dyn__rectTransformToCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__rectTransformToCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransformToCheck"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] _corners
::Array<UnityEngine::Vector3>*& GlobalNamespace::SafeAreaRectChecker::dyn__corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__corners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_corners"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
GlobalNamespace::MainCamera*& GlobalNamespace::SafeAreaRectChecker::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SafeAreaRectChecker/InitData _initData
GlobalNamespace::SafeAreaRectChecker::InitData*& GlobalNamespace::SafeAreaRectChecker::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SafeAreaRectChecker::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SafeAreaRectChecker.Start
void GlobalNamespace::SafeAreaRectChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SafeAreaRectChecker.Update
void GlobalNamespace::SafeAreaRectChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean checkingEnabled
bool& GlobalNamespace::SafeAreaRectChecker::InitData::dyn_checkingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::InitData::dyn_checkingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonBackgroundController
#include "GlobalNamespace/StartMiddleEndButtonBackgroundController.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _startSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__startSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__startSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _middleSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__middleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__middleSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_middleSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _endSprite
UnityEngine::Sprite*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__endSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__endSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _image
HMUI::ImageView*& GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetStartSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetMiddleSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMiddleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetEndSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonsGroup
#include "GlobalNamespace/StartMiddleEndButtonsGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutHorizontal
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutVertical
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _decButton
UnityEngine::UI::Button*& GlobalNamespace::StepValuePicker::dyn__decButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__decButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _incButton
UnityEngine::UI::Button*& GlobalNamespace::StepValuePicker::dyn__incButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__incButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _valueText
TMPro::TextMeshProUGUI*& GlobalNamespace::StepValuePicker::dyn__valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action decButtonWasPressedEvent
System::Action*& GlobalNamespace::StepValuePicker::dyn_decButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn_decButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action incButtonWasPressedEvent
System::Action*& GlobalNamespace::StepValuePicker::dyn_incButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::dyn_incButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StepValuePicker.get_text
::Il2CppString* GlobalNamespace::StepValuePicker::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.set_text
void GlobalNamespace::StepValuePicker::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_decButtonInteractable
void GlobalNamespace::StepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_incButtonInteractable
void GlobalNamespace::StepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.OnEnable
void GlobalNamespace::StepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.OnDisable
void GlobalNamespace::StepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.IncButtonPressed
void GlobalNamespace::StepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StepValuePicker.DecButtonPressed
void GlobalNamespace::StepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextButton
#include "GlobalNamespace/TextButton.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _text
UnityEngine::UI::Text*& GlobalNamespace::TextButton::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::TextButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextButton.get_text
UnityEngine::UI::Text* GlobalNamespace::TextButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::TextMeshProButton::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
UnityEngine::UI::Button*& GlobalNamespace::TextMeshProButton::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextMeshProButton.get_text
TMPro::TextMeshProUGUI* GlobalNamespace::TextMeshProButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextMeshProUGUI*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextMeshProButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextMeshProButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TextOnlyTableCell
#include "GlobalNamespace/TextOnlyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedHighlightColor
UnityEngine::Color& GlobalNamespace::TextOnlyTableCell::dyn__selectedHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__selectedHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedHighlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
TMPro::TextMeshProUGUI*& GlobalNamespace::TextOnlyTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _bgImage
HMUI::ImageView*& GlobalNamespace::TextOnlyTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _highlightImage
HMUI::ImageView*& GlobalNamespace::TextOnlyTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextOnlyTableCell.get_text
::Il2CppString* GlobalNamespace::TextOnlyTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.set_text
void GlobalNamespace::TextOnlyTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TextOnlyTableCell.RefreshVisuals
void GlobalNamespace::TextOnlyTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.SelectionDidChange
void GlobalNamespace::TextOnlyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated method: TextOnlyTableCell.HighlightDidChange
void GlobalNamespace::TextOnlyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseStateTransition
#include "GlobalNamespace/BaseStateTransition.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected SelectableStateController _selectableStateController
GlobalNamespace::SelectableStateController*& GlobalNamespace::BaseStateTransition::dyn__selectableStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::dyn__selectableStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectableStateController"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectableStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseStateTransition.get_tweeningManager
Tweening::TimeTweeningManager* GlobalNamespace::BaseStateTransition::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::TimeTweeningManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::BaseStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetState
void GlobalNamespace::BaseStateTransition::SetState(GlobalNamespace::SelectableStateController::ViewState viewState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, viewState);
}
// Autogenerated method: BaseStateTransition.OnEnable
void GlobalNamespace::BaseStateTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.OnDisable
void GlobalNamespace::BaseStateTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.HandleSelectableStateControllerStateDidChange
void GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange(GlobalNamespace::SelectableStateController::ViewState state, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableStateControllerStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, animated);
}
// Autogenerated method: BaseStateTransition.TransitionToNormalState
void GlobalNamespace::BaseStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToPressedState
void GlobalNamespace::BaseStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToDisabledState
void GlobalNamespace::BaseStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetNormalState
void GlobalNamespace::BaseStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetHighlightedState
void GlobalNamespace::BaseStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetPressedState
void GlobalNamespace::BaseStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetDisabledState
void GlobalNamespace::BaseStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedState
void GlobalNamespace::BaseStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TransitionTimingSO _transitionTiming
GlobalNamespace::TransitionTimingSO*& GlobalNamespace::BaseTransitionSO::dyn__transitionTiming() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::dyn__transitionTiming");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionTiming"))->offset;
  return *reinterpret_cast<GlobalNamespace::TransitionTimingSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseTransitionSO.get_easeType
Tweening::EaseType GlobalNamespace::BaseTransitionSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: BaseTransitionSO.get_easeDuration
float GlobalNamespace::BaseTransitionSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorGraphicStateTransition
#include "GlobalNamespace/ColorGraphicStateTransition.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorTransitionSO _transition
GlobalNamespace::ColorTransitionSO*& GlobalNamespace::ColorGraphicStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTween
Tweening::ColorTween*& GlobalNamespace::ColorGraphicStateTransition::dyn__colorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::dyn__colorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTween"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorGraphicStateTransition.StartTween
void GlobalNamespace::ColorGraphicStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorGraphicStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToNormalState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToPressedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetNormalState
void GlobalNamespace::ColorGraphicStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetPressedState
void GlobalNamespace::ColorGraphicStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetDisabledState
void GlobalNamespace::ColorGraphicStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTMPTextStateTransition
#include "GlobalNamespace/ColorTMPTextStateTransition.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorTransitionSO _transition
GlobalNamespace::ColorTransitionSO*& GlobalNamespace::ColorTMPTextStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTween
Tweening::ColorTween*& GlobalNamespace::ColorTMPTextStateTransition::dyn__colorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::dyn__colorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTween"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorTMPTextStateTransition.StartTween
void GlobalNamespace::ColorTMPTextStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorTMPTextStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToNormalState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToPressedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetNormalState
void GlobalNamespace::ColorTMPTextStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetPressedState
void GlobalNamespace::ColorTMPTextStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__highlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__pressedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor
GlobalNamespace::ColorSO*& GlobalNamespace::ColorTransitionSO::dyn__selectedAndHighlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::dyn__selectedAndHighlightedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorTransitionSO.get_normalColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_normalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_highlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_highlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_pressedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_pressedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_disabledColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_disabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedAndHighlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _normalState
bool& GlobalNamespace::EnabledTransitionSO::dyn__normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__normalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlightedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__highlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pressedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__pressedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disabledState
bool& GlobalNamespace::EnabledTransitionSO::dyn__disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__disabledState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__selectedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selectedAndHighlightedState
bool& GlobalNamespace::EnabledTransitionSO::dyn__selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::dyn__selectedAndHighlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnabledTransitionSO.get_normalState
bool GlobalNamespace::EnabledTransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_highlightedState
bool GlobalNamespace::EnabledTransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_pressedState
bool GlobalNamespace::EnabledTransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_disabledState
bool GlobalNamespace::EnabledTransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedAndHighlightedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledViewStateTransition
#include "GlobalNamespace/EnabledViewStateTransition.hpp"
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnabledTransitionSO _transition
GlobalNamespace::EnabledTransitionSO*& GlobalNamespace::EnabledViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::EnabledTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnabledViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::EnabledViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToNormalState
void GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToPressedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToDisabledState
void GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetNormalState
void GlobalNamespace::EnabledViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetPressedState
void GlobalNamespace::EnabledViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetDisabledState
void GlobalNamespace::EnabledViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientImageViewStateTransition
#include "GlobalNamespace/GradientImageViewStateTransition.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GradientTransitionSO _transition
GlobalNamespace::GradientTransitionSO*& GlobalNamespace::GradientImageViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::GradientTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTweenA
Tweening::ColorTween*& GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenA() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTweenA"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTweenB
Tweening::ColorTween*& GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenB() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::dyn__colorTweenB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTweenB"))->offset;
  return *reinterpret_cast<Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GradientImageViewStateTransition.StartTweens
void GlobalNamespace::GradientImageViewStateTransition::StartTweens(UnityEngine::Color endColor1, UnityEngine::Color endColor2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor1), ::il2cpp_utils::ExtractType(endColor2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endColor1, endColor2);
}
// Autogenerated method: GradientImageViewStateTransition.StartTween
void GlobalNamespace::GradientImageViewStateTransition::StartTween(UnityEngine::Color startColor, UnityEngine::Color endColor, System::Action_1<UnityEngine::Color>* tweenAction, System::Action* onCompleteAction, ByRef<Tweening::ColorTween*> colorTween) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor), ::il2cpp_utils::ExtractType(tweenAction), ::il2cpp_utils::ExtractType(onCompleteAction), ::il2cpp_utils::ExtractType(colorTween)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startColor, endColor, tweenAction, onCompleteAction, byref(colorTween));
}
// Autogenerated method: GradientImageViewStateTransition.SetColors
void GlobalNamespace::GradientImageViewStateTransition::SetColors(UnityEngine::Color startColor, UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startColor, endColor);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color1CompleteAction|17_0
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color1CompleteAction_17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color1CompleteAction|17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color1CompleteAction|17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color2CompleteAction|17_1
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color2CompleteAction_17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color2CompleteAction|17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color2CompleteAction|17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_2
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_2(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_3
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_3(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::GradientImageViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToNormalState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToPressedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToDisabledState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetNormalState
void GlobalNamespace::GradientImageViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetPressedState
void GlobalNamespace::GradientImageViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetDisabledState
void GlobalNamespace::GradientImageViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__normalColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__normalColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _normalColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__normalColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__normalColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__highlightColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__highlightColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__pressedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__pressedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _pressedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__pressedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__pressedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__disabledColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__disabledColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _disabledColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__disabledColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__disabledColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor1
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor1"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _selectedAndHighlightedColor2
GlobalNamespace::ColorSO*& GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::dyn__selectedAndHighlightedColor2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedColor2"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GradientTransitionSO.get_normalColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_normalColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PositionRectTransformViewStateTransition
#include "GlobalNamespace/PositionRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3TransitionSO _transition
GlobalNamespace::Vector3TransitionSO*& GlobalNamespace::PositionRectTransformViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3TransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector3Tween _vectorTween
Tweening::Vector3Tween*& GlobalNamespace::PositionRectTransformViewStateTransition::dyn__vectorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::dyn__vectorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorTween"))->offset;
  return *reinterpret_cast<Tweening::Vector3Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PositionRectTransformViewStateTransition.StartTween
void GlobalNamespace::PositionRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPosition);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::PositionRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScaleRectTransformViewStateTransition
#include "GlobalNamespace/ScaleRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3TransitionSO _transition
GlobalNamespace::Vector3TransitionSO*& GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::Vector3TransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector3Tween _vectorTween
Tweening::Vector3Tween*& GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__vectorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::dyn__vectorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vectorTween"))->offset;
  return *reinterpret_cast<Tweening::Vector3Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.StartTween
void GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endScale);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pos);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController
#include "GlobalNamespace/SelectableStateController.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
Tweening::TimeTweeningManager*& GlobalNamespace::SelectableStateController::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SelectableStateController/ViewState,System.Boolean> stateDidChangeEvent
System::Action_2<GlobalNamespace::SelectableStateController::ViewState, bool>*& GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::SelectableStateController::ViewState, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectableStateController/ViewState <currentViewState>k__BackingField
GlobalNamespace::SelectableStateController::ViewState& GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentViewState>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SelectableStateController::ViewState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectableStateController.get_tweeningManager
Tweening::TimeTweeningManager* GlobalNamespace::SelectableStateController::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::TimeTweeningManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableStateController.get_currentViewState
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::get_currentViewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectableStateController::ViewState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableStateController.set_currentViewState
void GlobalNamespace::SelectableStateController::set_currentViewState(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::set_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.add_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::add_stateDidChangeEvent(System::Action_2<GlobalNamespace::SelectableStateController::ViewState, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.remove_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent(System::Action_2<GlobalNamespace::SelectableStateController::ViewState, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.SetState
void GlobalNamespace::SelectableStateController::SetState(GlobalNamespace::SelectableStateController::ViewState state, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(animated)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, animated);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController/ViewState
#include "GlobalNamespace/SelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Normal
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Normal
void GlobalNamespace::SelectableStateController::ViewState::_set_Normal(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Highlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Highlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Pressed
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Pressed
void GlobalNamespace::SelectableStateController::ViewState::_set_Pressed(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Disabled
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Disabled
void GlobalNamespace::SelectableStateController::ViewState::_set_Disabled(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Selected
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Selected
void GlobalNamespace::SelectableStateController::ViewState::_set_Selected(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState SelectedAndHighlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "SelectedAndHighlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState SelectedAndHighlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "SelectedAndHighlighted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::SelectableStateController::ViewState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoTransitionButtonSelectableStateController
#include "GlobalNamespace/NoTransitionButtonSelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoTransitionButtonSelectableStateController.OnEnable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.OnDisable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.HandleNoTransitionButtonSelectionStateDidChange
void GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTransitionButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectableCellSelectableStateController
#include "GlobalNamespace/SelectableCellSelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectableCellSelectableStateController.OnEnable
void GlobalNamespace::SelectableCellSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableCellSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableCellSelectableStateController.OnDisable
void GlobalNamespace::SelectableCellSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableCellSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SelectableCellSelectableStateController.HandleSelectableCellHighlightDidChange
void GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellHighlightDidChange(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellHighlightDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableCellHighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType);
}
// Autogenerated method: SelectableCellSelectableStateController.HandleSelectableCellSelectionStateDidChange
void GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellSelectionStateDidChange(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableCellSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(owner)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType, owner);
}
// Autogenerated method: SelectableCellSelectableStateController.ResolveState
void GlobalNamespace::SelectableCellSelectableStateController::ResolveState(HMUI::SelectableCell* selectableCell, HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableCellSelectableStateController::ResolveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectableCell, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapGraphicViewStateTransition
#include "GlobalNamespace/SpriteSwapGraphicViewStateTransition.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SpriteSwapTransitionSO _transition
GlobalNamespace::SpriteSwapTransitionSO*& GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<GlobalNamespace::SpriteSwapTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _normalSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _highlightedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _pressedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _disabledSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedAndHighlightedSprite
UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapTransitionSO.get_normalSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_highlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_pressedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_disabledSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedAndHighlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Tweening.EaseType _easeType
Tweening::EaseType& GlobalNamespace::TransitionTimingSO::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _easeDuration
float& GlobalNamespace::TransitionTimingSO::dyn__easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::dyn__easeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransitionTimingSO.get_easeType
Tweening::EaseType GlobalNamespace::TransitionTimingSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TransitionTimingSO.get_easeDuration
float GlobalNamespace::TransitionTimingSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _normalState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__normalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _highlightedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__highlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _pressedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__pressedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _disabledState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__disabledState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__selectedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedAndHighlightedState
UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedState"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vector3TransitionSO.get_normalState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_highlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_pressedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_disabledState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedAndHighlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TextMeshProButton _keyButtonPrefab
GlobalNamespace::TextMeshProButton*& GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyButtonPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::TextMeshProButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Char> textKeyWasPressedEvent
System::Action_1<::Il2CppChar>*& GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textKeyWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action deleteButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deleteButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action okButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelButtonWasPressedEvent
System::Action*& GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _okButtonInteractivity
bool& GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButtonInteractivity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hideCancelButton
bool& GlobalNamespace::UIKeyboard::dyn__hideCancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::dyn__hideCancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideCancelButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard.set_enableOkButtonInteractivity
void GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableOkButtonInteractivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.set_hideCancelButton
void GlobalNamespace::UIKeyboard::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.Awake
void GlobalNamespace::UIKeyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_0
void GlobalNamespace::UIKeyboard::$Awake$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_1
void GlobalNamespace::UIKeyboard::$Awake$b__21_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_2
void GlobalNamespace::UIKeyboard::$Awake$b__21_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_3
void GlobalNamespace::UIKeyboard::$Awake$b__21_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
::Il2CppString*& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UIKeyboard <>4__this
GlobalNamespace::UIKeyboard*& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard/<>c__DisplayClass21_0.<Awake>b__4
void GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::$Awake$b__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::<Awake>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboardManager
#include "GlobalNamespace/UIKeyboardManager.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kKeyboardTopOffset
float GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UIKeyboardManager", "kKeyboardTopOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kKeyboardTopOffset
void GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UIKeyboardManager", "kKeyboardTopOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
HMUI::UIKeyboard*& GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _keyboardModalView
HMUI::ModalView*& GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardModalView"))->offset;
  return *reinterpret_cast<HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _keyboardContainerTransform
UnityEngine::RectTransform*& GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardContainerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentContainerTransform
UnityEngine::Transform*& GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentContainerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VRUIControls.VRInputModule _vrInputModule
VRUIControls::VRInputModule*& GlobalNamespace::UIKeyboardManager::dyn__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _selectedInput
HMUI::InputFieldView*& GlobalNamespace::UIKeyboardManager::dyn__selectedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::dyn__selectedInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInput"))->offset;
  return *reinterpret_cast<HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboardManager.get_keyboard
HMUI::UIKeyboard* GlobalNamespace::UIKeyboardManager::get_keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::get_keyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<HMUI::UIKeyboard*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.Start
void GlobalNamespace::UIKeyboardManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnEnable
void GlobalNamespace::UIKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDisable
void GlobalNamespace::UIKeyboardManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDestroy
void GlobalNamespace::UIKeyboardManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OpenKeyboardFor
void GlobalNamespace::UIKeyboardManager::OpenKeyboardFor(HMUI::InputFieldView* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OpenKeyboardFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenKeyboardFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: UIKeyboardManager.CloseKeyboard
void GlobalNamespace::UIKeyboardManager::CloseKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::CloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.TransferKeyboardTo
void GlobalNamespace::UIKeyboardManager::TransferKeyboardTo(HMUI::InputFieldView* nextInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::TransferKeyboardTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferKeyboardTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextInput)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, nextInput);
}
// Autogenerated method: UIKeyboardManager.ShouldCloseKeyboard
bool GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldCloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, root);
}
// Autogenerated method: UIKeyboardManager.ProcessMousePress
void GlobalNamespace::UIKeyboardManager::ProcessMousePress(UnityEngine::GameObject* currentOverGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentOverGo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, currentOverGo);
}
// Autogenerated method: UIKeyboardManager.HandleKeyboardOkButton
void GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboardOkButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
