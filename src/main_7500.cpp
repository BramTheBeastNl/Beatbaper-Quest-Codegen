// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient/<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Http.NtlmClient/<>c <>9
Mono::Http::NtlmClient::$$c* Mono::Http::NtlmClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Mono::Http::NtlmClient::$$c*>("Mono.Http", "NtlmClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Http.NtlmClient/<>c <>9
void Mono::Http::NtlmClient::$$c::_set_$$9(Mono::Http::NtlmClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback* Mono::Http::NtlmClient::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback*>("Mono.Http", "NtlmClient/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
void Mono::Http::NtlmClient::$$c::_set_$$9__1_0(typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Mono.Http.NtlmClient/<>c..cctor
void Mono::Http::NtlmClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient/<>c.<Authenticate>b__1_0
Mono::Http::NtlmSession* Mono::Http::NtlmClient::$$c::$Authenticate$b__1_0(System::Net::HttpWebRequest* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Http::NtlmClient::$$c::<Authenticate>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Authenticate>b__1_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Mono::Http::NtlmSession*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.NativeMethods
#include "Microsoft/Win32/NativeMethods.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::SafeHandle* hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeWaitHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::HandleRef hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeProcessHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcess
System::IntPtr Microsoft::Win32::NativeMethods::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(System::IntPtr processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(System::IntPtr processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(System::IntPtr handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcessId
int Microsoft::Win32::NativeMethods::GetCurrentProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::GetCurrentProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcessId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.CloseProcess
bool Microsoft::Win32::NativeMethods::CloseProcess(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::NativeMethods::CloseProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "CloseProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::SafeHandles::SafeProcessHandle*>("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle(Microsoft::Win32::SafeHandles::SafeProcessHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle", value));
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle..cctor
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeProcessHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeProcessHandle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriBuilder.Init
void System::UriBuilder::Init(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.set_Host
void System::UriBuilder::set_Host(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::set_Host");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Path
void System::UriBuilder::set_Path(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::set_Path");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Port
void System::UriBuilder::set_Port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::set_Port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Query
void System::UriBuilder::set_Query(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::set_Query");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Query", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Scheme
void System::UriBuilder::set_Scheme(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Uri
System::Uri* System::UriBuilder::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::get_Uri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.SetFieldsFromUri
void System::UriBuilder::SetFieldsFromUri(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::SetFieldsFromUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFieldsFromUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.Equals
bool System::UriBuilder::Equals(::Il2CppObject* rparam) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rparam)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rparam);
}
// Autogenerated method: System.UriBuilder.GetHashCode
int System::UriBuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.ToString
::Il2CppString* System::UriBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriBuilder::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IriHelper
#include "System/IriHelper.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar unicode, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicode, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar highSurr, ::Il2CppChar lowSurr, bool& surrogatePair, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highSurr, lowSurr, surrogatePair, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highSurr, lowSurr, surrogatePair, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIsReserved
bool System::IriHelper::CheckIsReserved(::Il2CppChar ch, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IriHelper::CheckIsReserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIsReserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, component)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, component);
}
// Autogenerated method: System.IriHelper.EscapeUnescapeIri
::Il2CppString* System::IriHelper::EscapeUnescapeIri(::Il2CppChar* pInput, int start, int end, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IriHelper::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pInput, start, end, component)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pInput, start, end, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/Offset
#include "System/Uri_Offset.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFile
::Il2CppString* System::Uri::_get_UriSchemeFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeFile"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFile
void System::Uri::_set_UriSchemeFile(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFtp
::Il2CppString* System::Uri::_get_UriSchemeFtp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeFtp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeFtp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFtp
void System::Uri::_set_UriSchemeFtp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeFtp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFtp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeGopher
::Il2CppString* System::Uri::_get_UriSchemeGopher() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeGopher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeGopher"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeGopher
void System::Uri::_set_UriSchemeGopher(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeGopher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeGopher", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttp
::Il2CppString* System::Uri::_get_UriSchemeHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeHttp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttp
void System::Uri::_set_UriSchemeHttp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttps
::Il2CppString* System::Uri::_get_UriSchemeHttps() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeHttps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeHttps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttps
void System::Uri::_set_UriSchemeHttps(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeHttps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWs
::Il2CppString* System::Uri::_get_UriSchemeWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeWs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeWs"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWs
void System::Uri::_set_UriSchemeWs(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeWs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWs", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWss
::Il2CppString* System::Uri::_get_UriSchemeWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeWss"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWss
void System::Uri::_set_UriSchemeWss(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeMailto
::Il2CppString* System::Uri::_get_UriSchemeMailto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeMailto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeMailto"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeMailto
void System::Uri::_set_UriSchemeMailto(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeMailto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeMailto", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNews
::Il2CppString* System::Uri::_get_UriSchemeNews() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeNews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNews"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNews
void System::Uri::_set_UriSchemeNews(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeNews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNews", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNntp
::Il2CppString* System::Uri::_get_UriSchemeNntp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeNntp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNntp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNntp
void System::Uri::_set_UriSchemeNntp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeNntp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNntp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetTcp
::Il2CppString* System::Uri::_get_UriSchemeNetTcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeNetTcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNetTcp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetTcp
void System::Uri::_set_UriSchemeNetTcp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeNetTcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetTcp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetPipe
::Il2CppString* System::Uri::_get_UriSchemeNetPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_UriSchemeNetPipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNetPipe"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetPipe
void System::Uri::_set_UriSchemeNetPipe(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_UriSchemeNetPipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetPipe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SchemeDelimiter
::Il2CppString* System::Uri::_get_SchemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_SchemeDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "SchemeDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SchemeDelimiter
void System::Uri::_set_SchemeDelimiter(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_SchemeDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "SchemeDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitialized
bool System::Uri::_get_s_ConfigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_s_ConfigInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitialized
void System::Uri::_set_s_ConfigInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_s_ConfigInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitializing
bool System::Uri::_get_s_ConfigInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_s_ConfigInitializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitializing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitializing
void System::Uri::_set_s_ConfigInitializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_s_ConfigInitializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitializing", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriIdnScope s_IdnScope
System::UriIdnScope System::Uri::_get_s_IdnScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_s_IdnScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "Uri", "s_IdnScope"));
}
// Autogenerated static field setter
// Set static field: static private System.UriIdnScope s_IdnScope
void System::Uri::_set_s_IdnScope(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_s_IdnScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IdnScope", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_IriParsing
bool System::Uri::_get_s_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_s_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_IriParsing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_IriParsing
void System::Uri::_set_s_IriParsing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_s_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IriParsing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useDotNetRelativeOrAbsolute
bool System::Uri::_get_useDotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_useDotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "useDotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useDotNetRelativeOrAbsolute
void System::Uri::_set_useDotNetRelativeOrAbsolute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_useDotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "useDotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsFileSystem
bool System::Uri::_get_IsWindowsFileSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_IsWindowsFileSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "IsWindowsFileSystem"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsFileSystem
void System::Uri::_set_IsWindowsFileSystem(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_IsWindowsFileSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "IsWindowsFileSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_initLock
::Il2CppObject* System::Uri::_get_s_initLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_s_initLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Uri", "s_initLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_initLock
void System::Uri::_set_s_initLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_s_initLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_initLock", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] HexLowerChars
::Array<::Il2CppChar>* System::Uri::_get_HexLowerChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get_HexLowerChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Uri", "HexLowerChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] HexLowerChars
void System::Uri::_set_HexLowerChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set_HexLowerChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "HexLowerChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _WSchars
::Array<::Il2CppChar>* System::Uri::_get__WSchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_get__WSchars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Uri", "_WSchars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _WSchars
void System::Uri::_set__WSchars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::_set__WSchars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "_WSchars", value));
}
// Autogenerated method: System.Uri.get_IsImplicitFile
bool System::Uri::get_IsImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsImplicitFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsImplicitFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncOrDosPath
bool System::Uri::get_IsUncOrDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsUncOrDosPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUncOrDosPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDosPath
bool System::Uri::get_IsDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsDosPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDosPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncPath
bool System::Uri::get_IsUncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsUncPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUncPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostType
System::Uri::Flags System::Uri::get_HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_HostType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HostType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::Flags, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Syntax
System::UriParser* System::Uri::get_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Syntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Syntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsNotAbsoluteUri
bool System::Uri::get_IsNotAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsNotAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNotAbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IriParsingStatic
bool System::Uri::IriParsingStatic(System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IriParsingStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IriParsingStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_AllowIdn
bool System::Uri::get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_AllowIdn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllowIdn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.AllowIdnStatic
bool System::Uri::AllowIdnStatic(System::UriParser* syntax, System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::AllowIdnStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AllowIdnStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax, flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, syntax, flags);
}
// Autogenerated method: System.Uri.IsIntranet
bool System::Uri::IsIntranet(::Il2CppString* schemeHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsIntranet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsIntranet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(schemeHost)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, schemeHost);
}
// Autogenerated method: System.Uri.get_UserDrivenParsing
bool System::Uri::get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_UserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserDrivenParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.SetUserDrivenParsing
void System::Uri::SetUserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::SetUserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUserDrivenParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_SecuredPathIndex
uint16_t System::Uri::get_SecuredPathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_SecuredPathIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SecuredPathIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.NotAny
bool System::Uri::NotAny(System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::NotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.InFact
bool System::Uri::InFact(System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::InFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.StaticNotAny
bool System::Uri::StaticNotAny(System::Uri::Flags allFlags, System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::StaticNotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticNotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allFlags, checkFlags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.StaticInFact
bool System::Uri::StaticInFact(System::Uri::Flags allFlags, System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::StaticInFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticInFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allFlags, checkFlags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.EnsureUriInfo
System::Uri::UriInfo* System::Uri::EnsureUriInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::EnsureUriInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureUriInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::UriInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureParseRemaining
void System::Uri::EnsureParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::EnsureParseRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureParseRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureHostString
void System::Uri::EnsureHostString(bool allowDnsOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::EnsureHostString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureHostString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allowDnsOptimization)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, allowDnsOptimization);
}
// Autogenerated method: System.Uri.CreateUri
void System::Uri::CreateUri(System::Uri* baseUri, ::Il2CppString* relativeUri, bool dontEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, dontEscape)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, baseUri, relativeUri, dontEscape);
}
// Autogenerated method: System.Uri.GetCombinedString
System::ParsingError System::Uri::GetCombinedString(System::Uri* baseUri, ::Il2CppString* relativeStr, bool dontEscape, ::Il2CppString*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetCombinedString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "GetCombinedString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeStr, dontEscape, result)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseUri, relativeStr, dontEscape, result);
}
// Autogenerated method: System.Uri.GetException
System::UriFormatException* System::Uri::GetException(System::ParsingError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(err)));
  return ::il2cpp_utils::RunMethodThrow<System::UriFormatException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, err);
}
// Autogenerated method: System.Uri.GetObjectData
void System::Uri::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.get_AbsolutePath
::Il2CppString* System::Uri::get_AbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_AbsolutePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbsolutePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PrivateAbsolutePath
::Il2CppString* System::Uri::get_PrivateAbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_PrivateAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PrivateAbsolutePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsoluteUri
::Il2CppString* System::Uri::get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_AbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_LocalPath
::Il2CppString* System::Uri::get_LocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_LocalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Authority
::Il2CppString* System::Uri::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Authority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Authority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostNameType
System::UriHostNameType System::Uri::get_HostNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_HostNameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HostNameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriHostNameType, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDefaultPort
bool System::Uri::get_IsDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsDefaultPort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDefaultPort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsFile
bool System::Uri::get_IsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsLoopback
bool System::Uri::get_IsLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsLoopback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsLoopback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PathAndQuery
::Il2CppString* System::Uri::get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_PathAndQuery");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PathAndQuery", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUnc
bool System::Uri::get_IsUnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsUnc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUnc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Host
::Il2CppString* System::Uri::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Host");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.StaticIsFile
bool System::Uri::StaticIsFile(System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::StaticIsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticIsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_InitializeLock
::Il2CppObject* System::Uri::get_InitializeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_InitializeLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "get_InitializeLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.InitializeUriConfig
void System::Uri::InitializeUriConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::InitializeUriConfig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "InitializeUriConfig", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.GetLocalPath
::Il2CppString* System::Uri::GetLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetLocalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLocalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Port
int System::Uri::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Query
::Il2CppString* System::Uri::get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Query");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Query", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Fragment
::Il2CppString* System::Uri::get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Fragment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Fragment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Scheme
::Il2CppString* System::Uri::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalStringSwitched
bool System::Uri::get_OriginalStringSwitched() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_OriginalStringSwitched");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OriginalStringSwitched", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalString
::Il2CppString* System::Uri::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_OriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_DnsSafeHost
::Il2CppString* System::Uri::get_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_DnsSafeHost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DnsSafeHost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsAbsoluteUri
bool System::Uri::get_IsAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_IsAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserEscaped
bool System::Uri::get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_UserEscaped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserEscaped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserInfo
::Il2CppString* System::Uri::get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_UserInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsGenDelim
bool System::Uri::IsGenDelim(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsGenDelim");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsGenDelim", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.CheckSchemeName
bool System::Uri::CheckSchemeName(::Il2CppString* schemeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckSchemeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(schemeName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, schemeName);
}
// Autogenerated method: System.Uri.IsHexDigit
bool System::Uri::IsHexDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsHexDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsHexDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.FromHex
int System::Uri::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::FromHex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "FromHex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(digit)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Uri.CheckForColonInFirstPathSegment
bool System::Uri::CheckForColonInFirstPathSegment(::Il2CppString* uriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckForColonInFirstPathSegment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckForColonInFirstPathSegment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString);
}
// Autogenerated method: System.Uri.InternalEscapeString
::Il2CppString* System::Uri::InternalEscapeString(::Il2CppString* rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::InternalEscapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "InternalEscapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawString)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Uri.ParseScheme
System::ParsingError System::Uri::ParseScheme(::Il2CppString* uriString, System::Uri::Flags& flags, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ParseScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ParseScheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, flags, syntax)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, flags, syntax);
}
// Autogenerated method: System.Uri.ParseMinimal
System::UriFormatException* System::Uri::ParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ParseMinimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseMinimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriFormatException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimal
System::ParsingError System::Uri::PrivateParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::PrivateParseMinimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrivateParseMinimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimalIri
void System::Uri::PrivateParseMinimalIri(::Il2CppString* newHost, uint16_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::PrivateParseMinimalIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrivateParseMinimalIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newHost, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newHost, idx);
}
// Autogenerated method: System.Uri.CreateUriInfo
void System::Uri::CreateUriInfo(System::Uri::Flags cF) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateUriInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUriInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cF)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cF);
}
// Autogenerated method: System.Uri.CreateHostString
void System::Uri::CreateHostString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateHostString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateHostString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CreateHostStringHelper
::Il2CppString* System::Uri::CreateHostStringHelper(::Il2CppString* str, uint16_t idx, uint16_t end, System::Uri::Flags& flags, ::Il2CppString*& scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateHostStringHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CreateHostStringHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, flags, scopeId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, idx, end, flags, scopeId);
}
// Autogenerated method: System.Uri.GetHostViaCustomSyntax
void System::Uri::GetHostViaCustomSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetHostViaCustomSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHostViaCustomSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.GetParts
::Il2CppString* System::Uri::GetParts(System::UriComponents uriParts, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.GetEscapedParts
::Il2CppString* System::Uri::GetEscapedParts(System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetEscapedParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEscapedParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.GetUnescapedParts
::Il2CppString* System::Uri::GetUnescapedParts(System::UriComponents uriParts, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetUnescapedParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUnescapedParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.ReCreateParts
::Il2CppString* System::Uri::ReCreateParts(System::UriComponents parts, uint16_t nonCanonical, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ReCreateParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReCreateParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parts, nonCanonical, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, parts, nonCanonical, formatAs);
}
// Autogenerated method: System.Uri.GetUriPartsFromUserString
::Il2CppString* System::Uri::GetUriPartsFromUserString(System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetUriPartsFromUserString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUriPartsFromUserString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.ParseRemaining
void System::Uri::ParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ParseRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ParseSchemeCheckImplicitFile
uint16_t System::Uri::ParseSchemeCheckImplicitFile(::Il2CppChar* uriString, uint16_t length, System::ParsingError& err, System::Uri::Flags& flags, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ParseSchemeCheckImplicitFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ParseSchemeCheckImplicitFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, length, err, flags, syntax)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, length, err, flags, syntax);
}
// Autogenerated method: System.Uri.CheckKnownSchemes
bool System::Uri::CheckKnownSchemes(int64_t* lptr, uint16_t nChars, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckKnownSchemes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckKnownSchemes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lptr, nChars, syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lptr, nChars, syntax);
}
// Autogenerated method: System.Uri.CheckSchemeSyntax
System::ParsingError System::Uri::CheckSchemeSyntax(::Il2CppChar* ptr, uint16_t length, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckSchemeSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr, length, syntax)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, length, syntax);
}
// Autogenerated method: System.Uri.CheckAuthorityHelper
uint16_t System::Uri::CheckAuthorityHelper(::Il2CppChar* pString, uint16_t idx, uint16_t length, System::ParsingError& err, System::Uri::Flags& flags, System::UriParser* syntax, ::Il2CppString*& newHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckAuthorityHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, idx, length, err, flags, syntax, newHost)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, pString, idx, length, err, flags, syntax, newHost);
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleDnsIri
void System::Uri::CheckAuthorityHelperHandleDnsIri(::Il2CppChar* pString, uint16_t start, int end, int startInput, bool iriParsing, bool hasUnicode, System::UriParser* syntax, ::Il2CppString* userInfoString, System::Uri::Flags& flags, bool& justNormalized, ::Il2CppString*& newHost, System::ParsingError& err) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckAuthorityHelperHandleDnsIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleDnsIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, flags, justNormalized, newHost, err)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, flags, justNormalized, newHost, err);
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleAnyHostIri
void System::Uri::CheckAuthorityHelperHandleAnyHostIri(::Il2CppChar* pString, int startInput, int end, bool iriParsing, bool hasUnicode, System::UriParser* syntax, System::Uri::Flags& flags, ::Il2CppString*& newHost, System::ParsingError& err) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckAuthorityHelperHandleAnyHostIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleAnyHostIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, startInput, end, iriParsing, hasUnicode, syntax, flags, newHost, err)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pString, startInput, end, iriParsing, hasUnicode, syntax, flags, newHost, err);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppString* input, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, idx, end, delim)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, idx, end, delim);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppChar* str, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, delim)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, str, idx, end, delim);
}
// Autogenerated method: System.Uri.CheckCanonical
System::Uri::Check System::Uri::CheckCanonical(::Il2CppChar* str, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckCanonical");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckCanonical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, delim)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::Check, false>(this, ___internal__method, str, idx, end, delim);
}
// Autogenerated method: System.Uri.GetCanonicalPath
::Array<::Il2CppChar>* System::Uri::GetCanonicalPath(::Array<::Il2CppChar>* dest, int& pos, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, pos, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method, dest, pos, formatAs);
}
// Autogenerated method: System.Uri.UnescapeOnly
void System::Uri::UnescapeOnly(::Il2CppChar* pch, int start, int& end, ::Il2CppChar ch1, ::Il2CppChar ch2, ::Il2CppChar ch3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::UnescapeOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "UnescapeOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pch, start, end, ch1, ch2, ch3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pch, start, end, ch1, ch2, ch3);
}
// Autogenerated method: System.Uri.Compress
::Array<::Il2CppChar>* System::Uri::Compress(::Array<::Il2CppChar>* dest, uint16_t start, int& destLength, System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Compress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "Compress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, start, destLength, syntax)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, start, destLength, syntax);
}
// Autogenerated method: System.Uri.CalculateCaseInsensitiveHashCode
int System::Uri::CalculateCaseInsensitiveHashCode(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CalculateCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CalculateCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Uri.CombineUri
::Il2CppString* System::Uri::CombineUri(System::Uri* basePart, ::Il2CppString* relativePart, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CombineUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CombineUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(basePart, relativePart, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, basePart, relativePart, uriFormat);
}
// Autogenerated method: System.Uri.get_HasAuthority
bool System::Uri::get_HasAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::get_HasAuthority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasAuthority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsLWS
bool System::Uri::IsLWS(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsLWS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsLWS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsAsciiLetter
bool System::Uri::IsAsciiLetter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsAsciiLetterOrDigit
bool System::Uri::IsAsciiLetterOrDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsAsciiLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetterOrDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsBidiControlCharacter
bool System::Uri::IsBidiControlCharacter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsBidiControlCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.StripBidiControlCharacter
::Il2CppString* System::Uri::StripBidiControlCharacter(::Il2CppChar* strToClean, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::StripBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StripBidiControlCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strToClean, start, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strToClean, start, length);
}
// Autogenerated method: System.Uri.CreateThis
void System::Uri::CreateThis(::Il2CppString* uri, bool dontEscape, System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateThis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateThis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, dontEscape, uriKind)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri, dontEscape, uriKind);
}
// Autogenerated method: System.Uri.InitializeUri
void System::Uri::InitializeUri(System::ParsingError err, System::UriKind uriKind, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::InitializeUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(err, uriKind, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, err, uriKind, e);
}
// Autogenerated method: System.Uri.CheckForConfigLoad
bool System::Uri::CheckForConfigLoad(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckForConfigLoad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForConfigLoad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForUnicode
bool System::Uri::CheckForUnicode(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckForUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForEscapedUnreserved
bool System::Uri::CheckForEscapedUnreserved(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CheckForEscapedUnreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForEscapedUnreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::Il2CppString* uriString, System::UriKind uriKind, System::Uri*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, uriKind, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, uriKind, result);
}
// Autogenerated method: System.Uri.GetComponents
::Il2CppString* System::Uri::GetComponents(System::UriComponents components, System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(components, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, components, format);
}
// Autogenerated method: System.Uri.IsWellFormedOriginalString
bool System::Uri::IsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsWellFormedUriString
bool System::Uri::IsWellFormedUriString(::Il2CppString* uriString, System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::IsWellFormedUriString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsWellFormedUriString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, uriKind)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, uriKind);
}
// Autogenerated method: System.Uri.InternalIsWellFormedOriginalString
bool System::Uri::InternalIsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.UnescapeDataString
::Il2CppString* System::Uri::UnescapeDataString(::Il2CppString* stringToUnescape) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::UnescapeDataString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "UnescapeDataString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringToUnescape)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringToUnescape);
}
// Autogenerated method: System.Uri.EscapeUnescapeIri
::Il2CppString* System::Uri::EscapeUnescapeIri(::Il2CppString* input, int start, int end, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, component)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, input, start, end, component);
}
// Autogenerated method: System.Uri.CreateHelper
System::Uri* System::Uri::CreateHelper(::Il2CppString* uriString, bool dontEscape, System::UriKind uriKind, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CreateHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, dontEscape, uriKind, e)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, dontEscape, uriKind, e);
}
// Autogenerated method: System.Uri.ResolveHelper
System::Uri* System::Uri::ResolveHelper(System::Uri* baseUri, System::Uri* relativeUri, ::Il2CppString*& newUriString, bool& userEscaped, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ResolveHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ResolveHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, newUriString, userEscaped, e)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseUri, relativeUri, newUriString, userEscaped, e);
}
// Autogenerated method: System.Uri.GetRelativeSerializationString
::Il2CppString* System::Uri::GetRelativeSerializationString(System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetRelativeSerializationString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRelativeSerializationString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Uri.GetComponentsHelper
::Il2CppString* System::Uri::GetComponentsHelper(System::UriComponents uriComponents, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetComponentsHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponentsHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriComponents, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriComponents, uriFormat);
}
// Autogenerated method: System.Uri.CreateThisFromUri
void System::Uri::CreateThisFromUri(System::Uri* otherUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::CreateThisFromUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateThisFromUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherUri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherUri);
}
// Autogenerated method: System.Uri..cctor
void System::Uri::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Uri::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.GetHashCode
int System::Uri::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ToString
::Il2CppString* System::Uri::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.Equals
bool System::Uri::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparand)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Uri.op_Equality
bool System::operator ==(System::Uri* uri1, System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri1, &uri2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated method: System.Uri.op_Inequality
bool System::operator !=(System::Uri* uri1, System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri1, &uri2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/Flags
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags Zero
System::Uri::Flags System::Uri::Flags::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags Zero
void System::Uri::Flags::_set_Zero(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags SchemeNotCanonical
System::Uri::Flags System::Uri::Flags::_get_SchemeNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_SchemeNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "SchemeNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags SchemeNotCanonical
void System::Uri::Flags::_set_SchemeNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_SchemeNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "SchemeNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserNotCanonical
System::Uri::Flags System::Uri::Flags::_get_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserNotCanonical
void System::Uri::Flags::_set_UserNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotCanonical
System::Uri::Flags System::Uri::Flags::_get_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotCanonical
void System::Uri::Flags::_set_HostNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PortNotCanonical
System::Uri::Flags System::Uri::Flags::_get_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PortNotCanonical
void System::Uri::Flags::_set_PortNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathNotCanonical
System::Uri::Flags System::Uri::Flags::_get_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathNotCanonical
void System::Uri::Flags::_set_PathNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryNotCanonical
System::Uri::Flags System::Uri::Flags::_get_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryNotCanonical
void System::Uri::Flags::_set_QueryNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentNotCanonical
System::Uri::Flags System::Uri::Flags::_get_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentNotCanonical
void System::Uri::Flags::_set_FragmentNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CannotDisplayCanonical
System::Uri::Flags System::Uri::Flags::_get_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CannotDisplayCanonical
void System::Uri::Flags::_set_CannotDisplayCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_UserNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_UserNotCanonical
void System::Uri::Flags::_set_E_UserNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_HostNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_HostNotCanonical
void System::Uri::Flags::_set_E_HostNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PortNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PortNotCanonical
void System::Uri::Flags::_set_E_PortNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PathNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PathNotCanonical
void System::Uri::Flags::_set_E_PathNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_QueryNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_QueryNotCanonical
void System::Uri::Flags::_set_E_QueryNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_FragmentNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_FragmentNotCanonical
void System::Uri::Flags::_set_E_FragmentNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_CannotDisplayCanonical
System::Uri::Flags System::Uri::Flags::_get_E_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_E_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_CannotDisplayCanonical
void System::Uri::Flags::_set_E_CannotDisplayCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_E_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ShouldBeCompressed
System::Uri::Flags System::Uri::Flags::_get_ShouldBeCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_ShouldBeCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ShouldBeCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ShouldBeCompressed
void System::Uri::Flags::_set_ShouldBeCompressed(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_ShouldBeCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ShouldBeCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FirstSlashAbsent
System::Uri::Flags System::Uri::Flags::_get_FirstSlashAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_FirstSlashAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FirstSlashAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FirstSlashAbsent
void System::Uri::Flags::_set_FirstSlashAbsent(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_FirstSlashAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FirstSlashAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BackslashInPath
System::Uri::Flags System::Uri::Flags::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BackslashInPath
void System::Uri::Flags::_set_BackslashInPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IndexMask
System::Uri::Flags System::Uri::Flags::_get_IndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IndexMask
void System::Uri::Flags::_set_IndexMask(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostTypeMask
System::Uri::Flags System::Uri::Flags::_get_HostTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HostTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostTypeMask
void System::Uri::Flags::_set_HostTypeMask(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HostTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotParsed
System::Uri::Flags System::Uri::Flags::_get_HostNotParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HostNotParsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostNotParsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotParsed
void System::Uri::Flags::_set_HostNotParsed(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HostNotParsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotParsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv6HostType
System::Uri::Flags System::Uri::Flags::_get_IPv6HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IPv6HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IPv6HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv6HostType
void System::Uri::Flags::_set_IPv6HostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IPv6HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv6HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv4HostType
System::Uri::Flags System::Uri::Flags::_get_IPv4HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IPv4HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IPv4HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv4HostType
void System::Uri::Flags::_set_IPv4HostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IPv4HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv4HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DnsHostType
System::Uri::Flags System::Uri::Flags::_get_DnsHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_DnsHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "DnsHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DnsHostType
void System::Uri::Flags::_set_DnsHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_DnsHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DnsHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncHostType
System::Uri::Flags System::Uri::Flags::_get_UncHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UncHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UncHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncHostType
void System::Uri::Flags::_set_UncHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UncHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BasicHostType
System::Uri::Flags System::Uri::Flags::_get_BasicHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_BasicHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "BasicHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BasicHostType
void System::Uri::Flags::_set_BasicHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_BasicHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BasicHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnusedHostType
System::Uri::Flags System::Uri::Flags::_get_UnusedHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UnusedHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnusedHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnusedHostType
void System::Uri::Flags::_set_UnusedHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UnusedHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnusedHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnknownHostType
System::Uri::Flags System::Uri::Flags::_get_UnknownHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UnknownHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnknownHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnknownHostType
void System::Uri::Flags::_set_UnknownHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UnknownHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnknownHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserEscaped
System::Uri::Flags System::Uri::Flags::_get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UserEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserEscaped
void System::Uri::Flags::_set_UserEscaped(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UserEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AuthorityFound
System::Uri::Flags System::Uri::Flags::_get_AuthorityFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_AuthorityFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "AuthorityFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AuthorityFound
void System::Uri::Flags::_set_AuthorityFound(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_AuthorityFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AuthorityFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUserInfo
System::Uri::Flags System::Uri::Flags::_get_HasUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HasUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HasUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUserInfo
void System::Uri::Flags::_set_HasUserInfo(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HasUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags LoopbackHost
System::Uri::Flags System::Uri::Flags::_get_LoopbackHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_LoopbackHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "LoopbackHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags LoopbackHost
void System::Uri::Flags::_set_LoopbackHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_LoopbackHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "LoopbackHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags NotDefaultPort
System::Uri::Flags System::Uri::Flags::_get_NotDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_NotDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "NotDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags NotDefaultPort
void System::Uri::Flags::_set_NotDefaultPort(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_NotDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "NotDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserDrivenParsing
System::Uri::Flags System::Uri::Flags::_get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UserDrivenParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserDrivenParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserDrivenParsing
void System::Uri::Flags::_set_UserDrivenParsing(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UserDrivenParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserDrivenParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CanonicalDnsHost
System::Uri::Flags System::Uri::Flags::_get_CanonicalDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_CanonicalDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CanonicalDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CanonicalDnsHost
void System::Uri::Flags::_set_CanonicalDnsHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_CanonicalDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CanonicalDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ErrorOrParsingRecursion
System::Uri::Flags System::Uri::Flags::_get_ErrorOrParsingRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_ErrorOrParsingRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ErrorOrParsingRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ErrorOrParsingRecursion
void System::Uri::Flags::_set_ErrorOrParsingRecursion(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_ErrorOrParsingRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ErrorOrParsingRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DosPath
System::Uri::Flags System::Uri::Flags::_get_DosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_DosPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "DosPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DosPath
void System::Uri::Flags::_set_DosPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_DosPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DosPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncPath
System::Uri::Flags System::Uri::Flags::_get_UncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UncPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UncPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncPath
void System::Uri::Flags::_set_UncPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UncPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ImplicitFile
System::Uri::Flags System::Uri::Flags::_get_ImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_ImplicitFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ImplicitFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ImplicitFile
void System::Uri::Flags::_set_ImplicitFile(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_ImplicitFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ImplicitFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags MinimalUriInfoSet
System::Uri::Flags System::Uri::Flags::_get_MinimalUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_MinimalUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "MinimalUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags MinimalUriInfoSet
void System::Uri::Flags::_set_MinimalUriInfoSet(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_MinimalUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "MinimalUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AllUriInfoSet
System::Uri::Flags System::Uri::Flags::_get_AllUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_AllUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "AllUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AllUriInfoSet
void System::Uri::Flags::_set_AllUriInfoSet(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_AllUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AllUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IdnHost
System::Uri::Flags System::Uri::Flags::_get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IdnHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IdnHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IdnHost
void System::Uri::Flags::_set_IdnHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IdnHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IdnHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUnicode
System::Uri::Flags System::Uri::Flags::_get_HasUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HasUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HasUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUnicode
void System::Uri::Flags::_set_HasUnicode(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HasUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostUnicodeNormalized
System::Uri::Flags System::Uri::Flags::_get_HostUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_HostUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostUnicodeNormalized
void System::Uri::Flags::_set_HostUnicodeNormalized(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_HostUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags RestUnicodeNormalized
System::Uri::Flags System::Uri::Flags::_get_RestUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_RestUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "RestUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags RestUnicodeNormalized
void System::Uri::Flags::_set_RestUnicodeNormalized(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_RestUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "RestUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnicodeHost
System::Uri::Flags System::Uri::Flags::_get_UnicodeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UnicodeHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnicodeHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnicodeHost
void System::Uri::Flags::_set_UnicodeHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UnicodeHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnicodeHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IntranetUri
System::Uri::Flags System::Uri::Flags::_get_IntranetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IntranetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IntranetUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IntranetUri
void System::Uri::Flags::_set_IntranetUri(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IntranetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IntranetUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UseOrigUncdStrOffset
System::Uri::Flags System::Uri::Flags::_get_UseOrigUncdStrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UseOrigUncdStrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UseOrigUncdStrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UseOrigUncdStrOffset
void System::Uri::Flags::_set_UseOrigUncdStrOffset(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UseOrigUncdStrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UseOrigUncdStrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserIriCanonical
System::Uri::Flags System::Uri::Flags::_get_UserIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_UserIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserIriCanonical
void System::Uri::Flags::_set_UserIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_UserIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathIriCanonical
System::Uri::Flags System::Uri::Flags::_get_PathIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_PathIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PathIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathIriCanonical
void System::Uri::Flags::_set_PathIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_PathIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryIriCanonical
System::Uri::Flags System::Uri::Flags::_get_QueryIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_QueryIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "QueryIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryIriCanonical
void System::Uri::Flags::_set_QueryIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_QueryIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentIriCanonical
System::Uri::Flags System::Uri::Flags::_get_FragmentIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_FragmentIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FragmentIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentIriCanonical
void System::Uri::Flags::_set_FragmentIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_FragmentIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IriCanonical
System::Uri::Flags System::Uri::Flags::_get_IriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_IriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IriCanonical
void System::Uri::Flags::_set_IriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_IriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CompressedSlashes
System::Uri::Flags System::Uri::Flags::_get_CompressedSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_get_CompressedSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CompressedSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CompressedSlashes
void System::Uri::Flags::_set_CompressedSlashes(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Flags::_set_CompressedSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CompressedSlashes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Check None
System::Uri::Check System::Uri::Check::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check None
void System::Uri::Check::_set_None(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check EscapedCanonical
System::Uri::Check System::Uri::Check::_get_EscapedCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_EscapedCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "EscapedCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check EscapedCanonical
void System::Uri::Check::_set_EscapedCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_EscapedCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "EscapedCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DisplayCanonical
System::Uri::Check System::Uri::Check::_get_DisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_DisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DisplayCanonical
void System::Uri::Check::_set_DisplayCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_DisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashAttn
System::Uri::Check System::Uri::Check::_get_DotSlashAttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_DotSlashAttn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DotSlashAttn"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashAttn
void System::Uri::Check::_set_DotSlashAttn(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_DotSlashAttn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashAttn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashEscaped
System::Uri::Check System::Uri::Check::_get_DotSlashEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_DotSlashEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DotSlashEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashEscaped
void System::Uri::Check::_set_DotSlashEscaped(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_DotSlashEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check BackslashInPath
System::Uri::Check System::Uri::Check::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check BackslashInPath
void System::Uri::Check::_set_BackslashInPath(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check ReservedFound
System::Uri::Check System::Uri::Check::_get_ReservedFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_ReservedFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "ReservedFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check ReservedFound
void System::Uri::Check::_set_ReservedFound(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_ReservedFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "ReservedFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check NotIriCanonical
System::Uri::Check System::Uri::Check::_get_NotIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_NotIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "NotIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check NotIriCanonical
void System::Uri::Check::_set_NotIriCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_NotIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "NotIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check FoundNonAscii
System::Uri::Check System::Uri::Check::_get_FoundNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_get_FoundNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "FoundNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check FoundNonAscii
void System::Uri::Check::_set_FoundNonAscii(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Uri::Check::_set_FoundNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "FoundNonAscii", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriFormatException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::UriFormatException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormatException::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriKind
#include "System/UriKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriKind RelativeOrAbsolute
System::UriKind System::UriKind::_get_RelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_get_RelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "RelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind RelativeOrAbsolute
void System::UriKind::_set_RelativeOrAbsolute(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_set_RelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "RelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Absolute
System::UriKind System::UriKind::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Absolute
void System::UriKind::_set_Absolute(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Relative
System::UriKind System::UriKind::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Relative
void System::UriKind::_set_Relative(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriKind::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Relative", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriComponents Scheme
System::UriComponents System::UriComponents::_get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Scheme"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Scheme
void System::UriComponents::_set_Scheme(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents UserInfo
System::UriComponents System::UriComponents::_get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_UserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "UserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents UserInfo
void System::UriComponents::_set_UserInfo(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_UserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "UserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Host
System::UriComponents System::UriComponents::_get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Host
void System::UriComponents::_set_Host(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Port
System::UriComponents System::UriComponents::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Port
void System::UriComponents::_set_Port(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Path
System::UriComponents System::UriComponents::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Path
void System::UriComponents::_set_Path(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Query
System::UriComponents System::UriComponents::_get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Query");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Query"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Query
void System::UriComponents::_set_Query(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Query");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Query", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Fragment
System::UriComponents System::UriComponents::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Fragment
void System::UriComponents::_set_Fragment(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongPort
System::UriComponents System::UriComponents::_get_StrongPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_StrongPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "StrongPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongPort
void System::UriComponents::_set_StrongPort(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_StrongPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents NormalizedHost
System::UriComponents System::UriComponents::_get_NormalizedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_NormalizedHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "NormalizedHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents NormalizedHost
void System::UriComponents::_set_NormalizedHost(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_NormalizedHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "NormalizedHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents KeepDelimiter
System::UriComponents System::UriComponents::_get_KeepDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_KeepDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "KeepDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents KeepDelimiter
void System::UriComponents::_set_KeepDelimiter(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_KeepDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "KeepDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SerializationInfoString
System::UriComponents System::UriComponents::_get_SerializationInfoString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_SerializationInfoString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "SerializationInfoString"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SerializationInfoString
void System::UriComponents::_set_SerializationInfoString(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_SerializationInfoString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SerializationInfoString", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents AbsoluteUri
System::UriComponents System::UriComponents::_get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_AbsoluteUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "AbsoluteUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents AbsoluteUri
void System::UriComponents::_set_AbsoluteUri(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_AbsoluteUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "AbsoluteUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HostAndPort
System::UriComponents System::UriComponents::_get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_HostAndPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "HostAndPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HostAndPort
void System::UriComponents::_set_HostAndPort(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_HostAndPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HostAndPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongAuthority
System::UriComponents System::UriComponents::_get_StrongAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_StrongAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "StrongAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongAuthority
void System::UriComponents::_set_StrongAuthority(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_StrongAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SchemeAndServer
System::UriComponents System::UriComponents::_get_SchemeAndServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_SchemeAndServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "SchemeAndServer"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SchemeAndServer
void System::UriComponents::_set_SchemeAndServer(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_SchemeAndServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SchemeAndServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HttpRequestUrl
System::UriComponents System::UriComponents::_get_HttpRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_HttpRequestUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "HttpRequestUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HttpRequestUrl
void System::UriComponents::_set_HttpRequestUrl(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_HttpRequestUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HttpRequestUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents PathAndQuery
System::UriComponents System::UriComponents::_get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_get_PathAndQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "PathAndQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents PathAndQuery
void System::UriComponents::_set_PathAndQuery(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriComponents::_set_PathAndQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "PathAndQuery", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriFormat UriEscaped
System::UriFormat System::UriFormat::_get_UriEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_get_UriEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "UriEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat UriEscaped
void System::UriFormat::_set_UriEscaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_set_UriEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "UriEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat Unescaped
System::UriFormat System::UriFormat::_get_Unescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_get_Unescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "Unescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat Unescaped
void System::UriFormat::_set_Unescaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_set_Unescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "Unescaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat SafeUnescaped
System::UriFormat System::UriFormat::_get_SafeUnescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_get_SafeUnescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "SafeUnescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat SafeUnescaped
void System::UriFormat::_set_SafeUnescaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriFormat::_set_SafeUnescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "SafeUnescaped", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriIdnScope
#include "System/UriIdnScope.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope None
System::UriIdnScope System::UriIdnScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope None
void System::UriIdnScope::_set_None(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope AllExceptIntranet
System::UriIdnScope System::UriIdnScope::_get_AllExceptIntranet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_get_AllExceptIntranet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "AllExceptIntranet"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope AllExceptIntranet
void System::UriIdnScope::_set_AllExceptIntranet(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_set_AllExceptIntranet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "AllExceptIntranet", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope All
System::UriIdnScope System::UriIdnScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope All
void System::UriIdnScope::_set_All(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriIdnScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParsingError None
System::ParsingError System::ParsingError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError None
void System::ParsingError::_set_None(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadFormat
System::ParsingError System::ParsingError::_get_BadFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadFormat
void System::ParsingError::_set_BadFormat(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadScheme
System::ParsingError System::ParsingError::_get_BadScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadScheme"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadScheme
void System::ParsingError::_set_BadScheme(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadScheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthority
System::ParsingError System::ParsingError::_get_BadAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthority
void System::ParsingError::_set_BadAuthority(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError EmptyUriString
System::ParsingError System::ParsingError::_get_EmptyUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_EmptyUriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "EmptyUriString"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError EmptyUriString
void System::ParsingError::_set_EmptyUriString(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_EmptyUriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "EmptyUriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError LastRelativeUriOkErrIndex
System::ParsingError System::ParsingError::_get_LastRelativeUriOkErrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_LastRelativeUriOkErrIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "LastRelativeUriOkErrIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError LastRelativeUriOkErrIndex
void System::ParsingError::_set_LastRelativeUriOkErrIndex(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_LastRelativeUriOkErrIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "LastRelativeUriOkErrIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SchemeLimit
System::ParsingError System::ParsingError::_get_SchemeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_SchemeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "SchemeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SchemeLimit
void System::ParsingError::_set_SchemeLimit(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_SchemeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SchemeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SizeLimit
System::ParsingError System::ParsingError::_get_SizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_SizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "SizeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SizeLimit
void System::ParsingError::_set_SizeLimit(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_SizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError MustRootedPath
System::ParsingError System::ParsingError::_get_MustRootedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_MustRootedPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "MustRootedPath"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError MustRootedPath
void System::ParsingError::_set_MustRootedPath(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_MustRootedPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "MustRootedPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadHostName
System::ParsingError System::ParsingError::_get_BadHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadHostName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadHostName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadHostName
void System::ParsingError::_set_BadHostName(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadHostName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadHostName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError NonEmptyHost
System::ParsingError System::ParsingError::_get_NonEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_NonEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "NonEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError NonEmptyHost
void System::ParsingError::_set_NonEmptyHost(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_NonEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "NonEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadPort
System::ParsingError System::ParsingError::_get_BadPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadPort"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadPort
void System::ParsingError::_set_BadPort(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthorityTerminator
System::ParsingError System::ParsingError::_get_BadAuthorityTerminator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_BadAuthorityTerminator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadAuthorityTerminator"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthorityTerminator
void System::ParsingError::_set_BadAuthorityTerminator(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_BadAuthorityTerminator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthorityTerminator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError CannotCreateRelative
System::ParsingError System::ParsingError::_get_CannotCreateRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_get_CannotCreateRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "CannotCreateRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError CannotCreateRelative
void System::ParsingError::_set_CannotCreateRelative(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParsingError::_set_CannotCreateRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "CannotCreateRelative", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode CopyOnly
System::UnescapeMode System::UnescapeMode::_get_CopyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_CopyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "CopyOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode CopyOnly
void System::UnescapeMode::_set_CopyOnly(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_CopyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "CopyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Escape
System::UnescapeMode System::UnescapeMode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Escape
void System::UnescapeMode::_set_Escape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Unescape
System::UnescapeMode System::UnescapeMode::_get_Unescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_Unescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "Unescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Unescape
void System::UnescapeMode::_set_Unescape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_Unescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Unescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode EscapeUnescape
System::UnescapeMode System::UnescapeMode::_get_EscapeUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_EscapeUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "EscapeUnescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode EscapeUnescape
void System::UnescapeMode::_set_EscapeUnescape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_EscapeUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "EscapeUnescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode V1ToStringFlag
System::UnescapeMode System::UnescapeMode::_get_V1ToStringFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_V1ToStringFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "V1ToStringFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode V1ToStringFlag
void System::UnescapeMode::_set_V1ToStringFlag(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_V1ToStringFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "V1ToStringFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAll
System::UnescapeMode System::UnescapeMode::_get_UnescapeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_UnescapeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "UnescapeAll"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAll
void System::UnescapeMode::_set_UnescapeAll(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_UnescapeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAllOrThrow
System::UnescapeMode System::UnescapeMode::_get_UnescapeAllOrThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_get_UnescapeAllOrThrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "UnescapeAllOrThrow"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAllOrThrow
void System::UnescapeMode::_set_UnescapeAllOrThrow(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnescapeMode::_set_UnescapeAllOrThrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAllOrThrow", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriHelper
#include "System/UriHelper.hpp"
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HexUpperChars
::Array<::Il2CppChar>* System::UriHelper::_get_HexUpperChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::_get_HexUpperChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "UriHelper", "HexUpperChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HexUpperChars
void System::UriHelper::_set_HexUpperChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::_set_HexUpperChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHelper", "HexUpperChars", value));
}
// Autogenerated method: System.UriHelper.EscapeString
::Array<::Il2CppChar>* System::UriHelper::EscapeString(::Il2CppString* input, int start, int end, ::Array<::Il2CppChar>* dest, int& destPos, bool isUriString, ::Il2CppChar force1, ::Il2CppChar force2, ::Il2CppChar rsvd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::EscapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, dest, destPos, isUriString, force1, force2, rsvd)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, start, end, dest, destPos, isUriString, force1, force2, rsvd);
}
// Autogenerated method: System.UriHelper.EnsureDestinationSize
::Array<::Il2CppChar>* System::UriHelper::EnsureDestinationSize(::Il2CppChar* pStr, ::Array<::Il2CppChar>* dest, int currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, int& destPos, int prevInputPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::EnsureDestinationSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EnsureDestinationSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pStr, dest, currentInputPos, charsToAdd, minReallocateChars, destPos, prevInputPos)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pStr, dest, currentInputPos, charsToAdd, minReallocateChars, destPos, prevInputPos);
}
// Autogenerated method: System.UriHelper.UnescapeString
::Array<::Il2CppChar>* System::UriHelper::UnescapeString(::Il2CppString* input, int start, int end, ::Array<::Il2CppChar>* dest, int& destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, System::UnescapeMode unescapeMode, System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.UnescapeString
::Array<::Il2CppChar>* System::UriHelper::UnescapeString(::Il2CppChar* pStr, int start, int end, ::Array<::Il2CppChar>* dest, int& destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, System::UnescapeMode unescapeMode, System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pStr, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pStr, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.MatchUTF8Sequence
void System::UriHelper::MatchUTF8Sequence(::Il2CppChar* pDest, ::Array<::Il2CppChar>* dest, int& destOffset, ::Array<::Il2CppChar>* unescapedChars, int charCount, ::Array<uint8_t>* bytes, int byteCount, bool isQuery, bool iriParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::MatchUTF8Sequence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "MatchUTF8Sequence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pDest, dest, destOffset, unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDest, dest, destOffset, unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing);
}
// Autogenerated method: System.UriHelper.EscapeAsciiChar
void System::UriHelper::EscapeAsciiChar(::Il2CppChar ch, ::Array<::Il2CppChar>* to, int& pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::EscapeAsciiChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeAsciiChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, to, pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, to, pos);
}
// Autogenerated method: System.UriHelper.EscapedAscii
::Il2CppChar System::UriHelper::EscapedAscii(::Il2CppChar digit, ::Il2CppChar next) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::EscapedAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapedAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(digit, next)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digit, next);
}
// Autogenerated method: System.UriHelper.IsNotSafeForUnescape
bool System::UriHelper::IsNotSafeForUnescape(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::IsNotSafeForUnescape");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsNotSafeForUnescape", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.UriHelper.IsReservedUnreservedOrHash
bool System::UriHelper::IsReservedUnreservedOrHash(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::IsReservedUnreservedOrHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsReservedUnreservedOrHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.IsUnreserved
bool System::UriHelper::IsUnreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::IsUnreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsUnreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.Is3986Unreserved
bool System::UriHelper::Is3986Unreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::Is3986Unreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "Is3986Unreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper..cctor
void System::UriHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Unknown
System::UriHostNameType System::UriHostNameType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Unknown
void System::UriHostNameType::_set_Unknown(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Basic
System::UriHostNameType System::UriHostNameType::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Basic
void System::UriHostNameType::_set_Basic(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Dns
System::UriHostNameType System::UriHostNameType::_get_Dns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_get_Dns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Dns"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Dns
void System::UriHostNameType::_set_Dns(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_set_Dns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Dns", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv4
System::UriHostNameType System::UriHostNameType::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv4
void System::UriHostNameType::_set_IPv4(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv6
System::UriHostNameType System::UriHostNameType::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv6
void System::UriHostNameType::_set_IPv6(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriHostNameType::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv6", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* System::UriParser::_get_m_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_m_Table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>*>("System", "UriParser", "m_Table")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
void System::UriParser::_set_m_Table(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_m_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_Table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* System::UriParser::_get_m_TempTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_m_TempTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>*>("System", "UriParser", "m_TempTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
void System::UriParser::_set_m_TempTable(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_m_TempTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_TempTable", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpUri
System::UriParser* System::UriParser::_get_HttpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_HttpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "HttpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpUri
void System::UriParser::_set_HttpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_HttpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpsUri
System::UriParser* System::UriParser::_get_HttpsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_HttpsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "HttpsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpsUri
void System::UriParser::_set_HttpsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_HttpsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WsUri
System::UriParser* System::UriParser::_get_WsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_WsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "WsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WsUri
void System::UriParser::_set_WsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_WsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WssUri
System::UriParser* System::UriParser::_get_WssUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_WssUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "WssUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WssUri
void System::UriParser::_set_WssUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_WssUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WssUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FtpUri
System::UriParser* System::UriParser::_get_FtpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_FtpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "FtpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FtpUri
void System::UriParser::_set_FtpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_FtpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FileUri
System::UriParser* System::UriParser::_get_FileUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_FileUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "FileUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FileUri
void System::UriParser::_set_FileUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_FileUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser GopherUri
System::UriParser* System::UriParser::_get_GopherUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_GopherUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "GopherUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser GopherUri
void System::UriParser::_set_GopherUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_GopherUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NntpUri
System::UriParser* System::UriParser::_get_NntpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_NntpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NntpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NntpUri
void System::UriParser::_set_NntpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_NntpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NewsUri
System::UriParser* System::UriParser::_get_NewsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_NewsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NewsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NewsUri
void System::UriParser::_set_NewsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_NewsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser MailToUri
System::UriParser* System::UriParser::_get_MailToUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_MailToUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "MailToUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser MailToUri
void System::UriParser::_set_MailToUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_MailToUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailToUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser UuidUri
System::UriParser* System::UriParser::_get_UuidUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_UuidUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "UuidUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser UuidUri
void System::UriParser::_set_UuidUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_UuidUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UuidUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser TelnetUri
System::UriParser* System::UriParser::_get_TelnetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_TelnetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "TelnetUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser TelnetUri
void System::UriParser::_set_TelnetUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_TelnetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser LdapUri
System::UriParser* System::UriParser::_get_LdapUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_LdapUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "LdapUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser LdapUri
void System::UriParser::_set_LdapUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_LdapUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetTcpUri
System::UriParser* System::UriParser::_get_NetTcpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_NetTcpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NetTcpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetTcpUri
void System::UriParser::_set_NetTcpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_NetTcpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetPipeUri
System::UriParser* System::UriParser::_get_NetPipeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_NetPipeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NetPipeUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetPipeUri
void System::UriParser::_set_NetPipeUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_NetPipeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser VsMacrosUri
System::UriParser* System::UriParser::_get_VsMacrosUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_VsMacrosUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "VsMacrosUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser VsMacrosUri
void System::UriParser::_set_VsMacrosUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_VsMacrosUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsMacrosUri", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
System::UriParser::UriQuirksVersion System::UriParser::_get_s_QuirksVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_s_QuirksVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser", "s_QuirksVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
void System::UriParser::_set_s_QuirksVersion(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_s_QuirksVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "s_QuirksVersion", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
System::UriSyntaxFlags System::UriParser::_get_HttpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_HttpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriParser", "HttpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
void System::UriParser::_set_HttpSyntaxFlags(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_HttpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
System::UriSyntaxFlags System::UriParser::_get_FileSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_get_FileSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriParser", "FileSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
void System::UriParser::_set_FileSyntaxFlags(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::_set_FileSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileSyntaxFlags", value));
}
// Autogenerated method: System.UriParser.get_SchemeName
::Il2CppString* System::UriParser::get_SchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::get_SchemeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SchemeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_DefaultPort
int System::UriParser::get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::get_DefaultPort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultPort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.OnNewUri
System::UriParser* System::UriParser::OnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::OnNewUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNewUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InitializeAndValidate
void System::UriParser::InitializeAndValidate(System::Uri* uri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InitializeAndValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeAndValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, parsingError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri, parsingError);
}
// Autogenerated method: System.UriParser.Resolve
::Il2CppString* System::UriParser::Resolve(System::Uri* baseUri, System::Uri* relativeUri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, parsingError)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, baseUri, relativeUri, parsingError);
}
// Autogenerated method: System.UriParser.GetComponents
::Il2CppString* System::UriParser::GetComponents(System::Uri* uri, System::UriComponents components, System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::GetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, components, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uri, components, format);
}
// Autogenerated method: System.UriParser.IsWellFormedOriginalString
bool System::UriParser::IsWellFormedOriginalString(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriParser.get_ShouldUseLegacyV2Quirks
bool System::UriParser::get_ShouldUseLegacyV2Quirks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::get_ShouldUseLegacyV2Quirks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "get_ShouldUseLegacyV2Quirks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser..cctor
void System::UriParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.get_Flags
System::UriSyntaxFlags System::UriParser::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::get_Flags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriSyntaxFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.NotAny
bool System::UriParser::NotAny(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::NotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.InFact
bool System::UriParser::InFact(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsAllSet
bool System::UriParser::IsAllSet(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::IsAllSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAllSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsFullMatch
bool System::UriParser::IsFullMatch(System::UriSyntaxFlags flags, System::UriSyntaxFlags expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::IsFullMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsFullMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, expected)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags, expected);
}
// Autogenerated method: System.UriParser.FindOrFetchAsUnknownV1Syntax
System::UriParser* System::UriParser::FindOrFetchAsUnknownV1Syntax(::Il2CppString* lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::FindOrFetchAsUnknownV1Syntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "FindOrFetchAsUnknownV1Syntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lwrCaseScheme)));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.GetSyntax
System::UriParser* System::UriParser::GetSyntax(::Il2CppString* lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::GetSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "GetSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lwrCaseScheme)));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.get_IsSimple
bool System::UriParser::get_IsSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::get_IsSimple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSimple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalOnNewUri
System::UriParser* System::UriParser::InternalOnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InternalOnNewUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalOnNewUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalValidate
void System::UriParser::InternalValidate(System::Uri* thisUri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InternalValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri, parsingError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thisUri, parsingError);
}
// Autogenerated method: System.UriParser.InternalResolve
::Il2CppString* System::UriParser::InternalResolve(System::Uri* thisBaseUri, System::Uri* uriLink, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InternalResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisBaseUri, uriLink, parsingError)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, thisBaseUri, uriLink, parsingError);
}
// Autogenerated method: System.UriParser.InternalGetComponents
::Il2CppString* System::UriParser::InternalGetComponents(System::Uri* thisUri, System::UriComponents uriComponents, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InternalGetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri, uriComponents, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, thisUri, uriComponents, uriFormat);
}
// Autogenerated method: System.UriParser.InternalIsWellFormedOriginalString
bool System::UriParser::InternalIsWellFormedOriginalString(System::Uri* thisUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, thisUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/UriQuirksVersion
#include "System/UriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V2
System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::UriQuirksVersion::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V2
void System::UriParser::UriQuirksVersion::_set_V2(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::UriQuirksVersion::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V3
System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::UriQuirksVersion::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V3
void System::UriParser::UriQuirksVersion::_set_V3(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriParser::UriQuirksVersion::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V3", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DomainNameHelper
#include "System/DomainNameHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::Il2CppString* System::DomainNameHelper::ParseCanonicalName(::Il2CppString* str, int start, int end, bool& loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end, loopback)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end, loopback);
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, pos, returnedEnd, notCanonical, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, pos, returnedEnd, notCanonical, notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsValidByIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidByIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, pos, returnedEnd, notCanonical, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, pos, returnedEnd, notCanonical, notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, atLeastOneValidIdn)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, atLeastOneValidIdn);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, ::Il2CppString*& bidiStrippedHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, bidiStrippedHost)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, bidiStrippedHost);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppString* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppString* idnHost, ::Il2CppChar* hostname, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idnHost, hostname, start, end)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, idnHost, hostname, start, end);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, atLeastOneValidIdn)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, atLeastOneValidIdn);
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, bool& notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsASCIILetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsASCIILetterOrDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, notCanonical)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character, notCanonical);
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, bool& notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DomainNameHelper::IsValidDomainLabelCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidDomainLabelCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, notCanonical)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character, notCanonical);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IPv4AddressHelper
#include "System/IPv4AddressHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv4AddressHelper.ParseCanonicalName
::Il2CppString* System::IPv4AddressHelper::ParseCanonicalName(::Il2CppString* str, int start, int end, bool& isLoopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end, isLoopback)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end, isLoopback);
}
// Autogenerated method: System.IPv4AddressHelper.ParseHostNumber
int System::IPv4AddressHelper::ParseHostNumber(::Il2CppString* str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::ParseHostNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseHostNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.IsValid
bool System::IPv4AddressHelper::IsValid(::Il2CppChar* name, int start, int& end, bool allowIPv6, bool notImplicitFile, bool unknownScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end, allowIPv6, notImplicitFile, unknownScheme)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end, allowIPv6, notImplicitFile, unknownScheme);
}
// Autogenerated method: System.IPv4AddressHelper.IsValidCanonical
bool System::IPv4AddressHelper::IsValidCanonical(::Il2CppChar* name, int start, int& end, bool allowIPv6, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::IsValidCanonical");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValidCanonical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end, allowIPv6, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end, allowIPv6, notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.ParseNonCanonical
int64_t System::IPv4AddressHelper::ParseNonCanonical(::Il2CppChar* name, int start, int& end, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::ParseNonCanonical");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseNonCanonical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end, notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.Parse
bool System::IPv4AddressHelper::Parse(::Il2CppString* name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, numbers, start, end)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.ParseCanonical
bool System::IPv4AddressHelper::ParseCanonical(::Il2CppString* name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv4AddressHelper::ParseCanonical");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, numbers, start, end)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IPv6AddressHelper
#include "System/IPv6AddressHelper.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv6AddressHelper.ParseCanonicalName
::Il2CppString* System::IPv6AddressHelper::ParseCanonicalName(::Il2CppString* str, int start, bool& isLoopback, ::Il2CppString*& scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, isLoopback, scopeId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, isLoopback, scopeId);
}
// Autogenerated method: System.IPv6AddressHelper.CreateCanonicalName
::Il2CppString* System::IPv6AddressHelper::CreateCanonicalName(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::CreateCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "CreateCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numbers)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.FindCompressionRange
System::Collections::Generic::KeyValuePair_2<int, int> System::IPv6AddressHelper::FindCompressionRange(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::FindCompressionRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "FindCompressionRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numbers)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::KeyValuePair_2<int, int>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.ShouldHaveIpv4Embedded
bool System::IPv6AddressHelper::ShouldHaveIpv4Embedded(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::ShouldHaveIpv4Embedded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ShouldHaveIpv4Embedded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numbers)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.InternalIsValid
bool System::IPv6AddressHelper::InternalIsValid(::Il2CppChar* name, int start, int& end, bool validateStrictAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::InternalIsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "InternalIsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end, validateStrictAddress)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end, validateStrictAddress);
}
// Autogenerated method: System.IPv6AddressHelper.IsValid
bool System::IPv6AddressHelper::IsValid(::Il2CppChar* name, int start, int& end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end);
}
// Autogenerated method: System.IPv6AddressHelper.IsValidStrict
bool System::IPv6AddressHelper::IsValidStrict(::Il2CppChar* name, int start, int& end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::IsValidStrict");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValidStrict", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, end)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, end);
}
// Autogenerated method: System.IPv6AddressHelper.Parse
bool System::IPv6AddressHelper::Parse(::Il2CppString* address, uint16_t* numbers, int start, ::Il2CppString*& scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IPv6AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(address, numbers, start, scopeId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, address, numbers, start, scopeId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UncNameHelper
#include "System/UncNameHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UncNameHelper.ParseCanonicalName
::Il2CppString* System::UncNameHelper::ParseCanonicalName(::Il2CppString* str, int start, int end, bool& loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UncNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UncNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end, loopback)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end, loopback);
}
// Autogenerated method: System.UncNameHelper.IsValid
bool System::UncNameHelper::IsValid(::Il2CppChar* name, uint16_t start, int& returnedEnd, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UncNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UncNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, start, returnedEnd, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, start, returnedEnd, notImplicitFile);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriSyntaxFlags
#include "System/UriSyntaxFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags None
System::UriSyntaxFlags System::UriSyntaxFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags None
void System::UriSyntaxFlags::_set_None(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MustHaveAuthority
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MustHaveAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MustHaveAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MustHaveAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MustHaveAuthority
void System::UriSyntaxFlags::_set_MustHaveAuthority(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MustHaveAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MustHaveAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags OptionalAuthority
System::UriSyntaxFlags System::UriSyntaxFlags::_get_OptionalAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_OptionalAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "OptionalAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags OptionalAuthority
void System::UriSyntaxFlags::_set_OptionalAuthority(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_OptionalAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "OptionalAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveUserInfo
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MayHaveUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveUserInfo
void System::UriSyntaxFlags::_set_MayHaveUserInfo(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MayHaveUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePort
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MayHavePort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePort
void System::UriSyntaxFlags::_set_MayHavePort(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MayHavePort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePath
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MayHavePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePath
void System::UriSyntaxFlags::_set_MayHavePath(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MayHavePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveQuery
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MayHaveQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveQuery
void System::UriSyntaxFlags::_set_MayHaveQuery(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MayHaveQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveFragment
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MayHaveFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveFragment
void System::UriSyntaxFlags::_set_MayHaveFragment(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MayHaveFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowEmptyHost
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowEmptyHost
void System::UriSyntaxFlags::_set_AllowEmptyHost(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowUncHost
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowUncHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowUncHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowUncHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowUncHost
void System::UriSyntaxFlags::_set_AllowUncHost(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowUncHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowUncHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDnsHost
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDnsHost
void System::UriSyntaxFlags::_set_AllowDnsHost(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv4Host
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv4Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowIPv4Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv4Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv4Host
void System::UriSyntaxFlags::_set_AllowIPv4Host(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowIPv4Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv4Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv6Host
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv6Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowIPv6Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv6Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv6Host
void System::UriSyntaxFlags::_set_AllowIPv6Host(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowIPv6Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv6Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnInternetHost
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnInternetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowAnInternetHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnInternetHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnInternetHost
void System::UriSyntaxFlags::_set_AllowAnInternetHost(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowAnInternetHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnInternetHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnyOtherHost
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnyOtherHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowAnyOtherHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnyOtherHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnyOtherHost
void System::UriSyntaxFlags::_set_AllowAnyOtherHost(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowAnyOtherHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnyOtherHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags FileLikeUri
System::UriSyntaxFlags System::UriSyntaxFlags::_get_FileLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_FileLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "FileLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags FileLikeUri
void System::UriSyntaxFlags::_set_FileLikeUri(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_FileLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "FileLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MailToLikeUri
System::UriSyntaxFlags System::UriSyntaxFlags::_get_MailToLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_MailToLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MailToLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MailToLikeUri
void System::UriSyntaxFlags::_set_MailToLikeUri(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_MailToLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MailToLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags V1_UnknownUri
System::UriSyntaxFlags System::UriSyntaxFlags::_get_V1_UnknownUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_V1_UnknownUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "V1_UnknownUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags V1_UnknownUri
void System::UriSyntaxFlags::_set_V1_UnknownUri(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_V1_UnknownUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "V1_UnknownUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags SimpleUserSyntax
System::UriSyntaxFlags System::UriSyntaxFlags::_get_SimpleUserSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_SimpleUserSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "SimpleUserSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags SimpleUserSyntax
void System::UriSyntaxFlags::_set_SimpleUserSyntax(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_SimpleUserSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "SimpleUserSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags BuiltInSyntax
System::UriSyntaxFlags System::UriSyntaxFlags::_get_BuiltInSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_BuiltInSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "BuiltInSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags BuiltInSyntax
void System::UriSyntaxFlags::_set_BuiltInSyntax(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_BuiltInSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "BuiltInSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ParserSchemeOnly
System::UriSyntaxFlags System::UriSyntaxFlags::_get_ParserSchemeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_ParserSchemeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ParserSchemeOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ParserSchemeOnly
void System::UriSyntaxFlags::_set_ParserSchemeOnly(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_ParserSchemeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ParserSchemeOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDOSPath
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDOSPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowDOSPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDOSPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDOSPath
void System::UriSyntaxFlags::_set_AllowDOSPath(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowDOSPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDOSPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags PathIsRooted
System::UriSyntaxFlags System::UriSyntaxFlags::_get_PathIsRooted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_PathIsRooted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "PathIsRooted"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags PathIsRooted
void System::UriSyntaxFlags::_set_PathIsRooted(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_PathIsRooted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "PathIsRooted", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ConvertPathSlashes
System::UriSyntaxFlags System::UriSyntaxFlags::_get_ConvertPathSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_ConvertPathSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ConvertPathSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ConvertPathSlashes
void System::UriSyntaxFlags::_set_ConvertPathSlashes(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_ConvertPathSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ConvertPathSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CompressPath
System::UriSyntaxFlags System::UriSyntaxFlags::_get_CompressPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_CompressPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CompressPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CompressPath
void System::UriSyntaxFlags::_set_CompressPath(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_CompressPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CompressPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
System::UriSyntaxFlags System::UriSyntaxFlags::_get_CanonicalizeAsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_CanonicalizeAsFilePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CanonicalizeAsFilePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
void System::UriSyntaxFlags::_set_CanonicalizeAsFilePath(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_CanonicalizeAsFilePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CanonicalizeAsFilePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
System::UriSyntaxFlags System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
void System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIdn
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowIdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIdn"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIdn
void System::UriSyntaxFlags::_set_AllowIdn(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowIdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIriParsing
System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_get_AllowIriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIriParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIriParsing
void System::UriSyntaxFlags::_set_AllowIriParsing(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UriSyntaxFlags::_set_AllowIriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIriParsing", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.EnvironmentHelpers
#include "System/EnvironmentHelpers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.EnvironmentHelpers.IsWindowsVistaOrAbove
bool System::EnvironmentHelpers::IsWindowsVistaOrAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::EnvironmentHelpers::IsWindowsVistaOrAbove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "EnvironmentHelpers", "IsWindowsVistaOrAbove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOOperation
#include "System/IOOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IOOperation Read
System::IOOperation System::IOOperation::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOOperation::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOOperation>("System", "IOOperation", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Read
void System::IOOperation::_set_Read(System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOOperation::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IOOperation Write
System::IOOperation System::IOOperation::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOOperation::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOOperation>("System", "IOOperation", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Write
void System::IOOperation::_set_Write(System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOOperation::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Write", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOAsyncCallback.Invoke
void System::IOAsyncCallback::Invoke(System::IOAsyncResult* ioares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ioares)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ioares);
}
// Autogenerated method: System.IOAsyncCallback.BeginInvoke
System::IAsyncResult* System::IOAsyncCallback::BeginInvoke(System::IOAsyncResult* ioares, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ioares, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ioares, callback, object);
}
// Autogenerated method: System.IOAsyncCallback.EndInvoke
void System::IOAsyncCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOAsyncResult.Init
void System::IOAsyncResult::Init(System::AsyncCallback* async_callback, ::Il2CppObject* async_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(async_callback, async_state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, async_callback, async_state);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncCallback
System::AsyncCallback* System::IOAsyncResult::get_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::get_AsyncCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AsyncCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_CompletedSynchronously
void System::IOAsyncResult::set_CompletedSynchronously(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::set_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.set_IsCompleted
void System::IOAsyncResult::set_IsCompleted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::set_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.CompleteDisposed
void System::IOAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::CompleteDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompleteDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncState
::Il2CppObject* System::IOAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::get_AsyncState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::IOAsyncResult::System_IAsyncResult_get_AsyncState() {
  return System::IOAsyncResult::get_AsyncState();
}
// Autogenerated method: System.IOAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IOAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::get_AsyncWaitHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
System::Threading::WaitHandle* System::IOAsyncResult::System_IAsyncResult_get_AsyncWaitHandle() {
  return System::IOAsyncResult::get_AsyncWaitHandle();
}
// Autogenerated method: System.IOAsyncResult.get_CompletedSynchronously
bool System::IOAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::get_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::IOAsyncResult::System_IAsyncResult_get_CompletedSynchronously() {
  return System::IOAsyncResult::get_CompletedSynchronously();
}
// Autogenerated method: System.IOAsyncResult.get_IsCompleted
bool System::IOAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOAsyncResult::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::IOAsyncResult::System_IAsyncResult_get_IsCompleted() {
  return System::IOAsyncResult::get_IsCompleted();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOSelectorJob.MarkDisposed
void System::IOSelectorJob::MarkDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOSelectorJob::MarkDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_MarkAborted(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.MarkAborted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tae)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelector
#include "System/IOSelector.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOSelector.Add
void System::IOSelector::Add(System::IntPtr handle, System::IOSelectorJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IOSelector::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IOSelector", "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, job)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, job);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Platform
#include "System/Platform.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean checkedOS
bool System::Platform::_get_checkedOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_get_checkedOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "checkedOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean checkedOS
void System::Platform::_set_checkedOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_set_checkedOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "checkedOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isMacOS
bool System::Platform::_get_isMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_get_isMacOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isMacOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isMacOS
void System::Platform::_set_isMacOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_set_isMacOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isMacOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isFreeBSD
bool System::Platform::_get_isFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_get_isFreeBSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isFreeBSD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isFreeBSD
void System::Platform::_set_isFreeBSD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::_set_isFreeBSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isFreeBSD", value));
}
// Autogenerated method: System.Platform.uname
int System::Platform::uname(System::IntPtr buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::uname");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Platform", "uname", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buf)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buf);
}
// Autogenerated method: System.Platform.CheckOS
void System::Platform::CheckOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::CheckOS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Platform", "CheckOS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsMacOS
bool System::Platform::get_IsMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::get_IsMacOS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Platform", "get_IsMacOS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsFreeBSD
bool System::Platform::get_IsFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Platform::get_IsFreeBSD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Platform", "get_IsFreeBSD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriTypeConverter
#include "System/UriTypeConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan MaximumMatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan MaximumMatchTimeout
void System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteMatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteMatchTimeout
void System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan DefaultMatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan DefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
System::Collections::Generic::LinkedList_1<System::Text::RegularExpressions::CachedCodeEntry*>* System::Text::RegularExpressions::Regex::_get_livecode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_livecode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::LinkedList_1<System::Text::RegularExpressions::CachedCodeEntry*>*>("System.Text.RegularExpressions", "Regex", "livecode"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
void System::Text::RegularExpressions::Regex::_set_livecode(System::Collections::Generic::LinkedList_1<System::Text::RegularExpressions::CachedCodeEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_livecode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "livecode", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 cacheSize
int System::Text::RegularExpressions::Regex::_get_cacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_get_cacheSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "cacheSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 cacheSize
void System::Text::RegularExpressions::Regex::_set_cacheSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::_set_cacheSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "cacheSize", value));
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ValidateMatchTimeout
void System::Text::RegularExpressions::Regex::ValidateMatchTimeout(System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::ValidateMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "ValidateMatchTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(matchTimeout)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "InitDefaultMatchTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_Options
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::Regex::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::get_Options");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_MatchTimeout
System::TimeSpan System::Text::RegularExpressions::Regex::get_MatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::get_MatchTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MatchTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_RightToLeft
bool System::Text::RegularExpressions::Regex::get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::get_RightToLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RightToLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GroupNameFromNumber
::Il2CppString* System::Text::RegularExpressions::Regex::GroupNameFromNumber(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::GroupNameFromNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GroupNameFromNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::Il2CppString* input, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, pattern)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::Il2CppString* input, ::Il2CppString* pattern, System::Text::RegularExpressions::RegexOptions options, System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, pattern, options, matchTimeout)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::Il2CppString* input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, startat)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::Il2CppString* input, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, pattern)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::Il2CppString* input, ::Il2CppString* pattern, System::Text::RegularExpressions::RegexOptions options, System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, pattern, options, matchTimeout)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::Il2CppString* input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, startat)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::Il2CppString* System::Text::RegularExpressions::Regex::Replace(::Il2CppString* input, System::Text::RegularExpressions::MatchEvaluator* evaluator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, evaluator)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, input, evaluator);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::Il2CppString* System::Text::RegularExpressions::Regex::Replace(::Il2CppString* input, System::Text::RegularExpressions::MatchEvaluator* evaluator, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, evaluator, count, startat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, input, evaluator, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitializeReferences
void System::Text::RegularExpressions::Regex::InitializeReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::InitializeReferences");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeReferences", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Run
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Run(bool quick, int prevlen, ::Il2CppString* input, int beginning, int length, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(quick, prevlen, input, beginning, length, startat)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick, prevlen, input, beginning, length, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.LookupCachedAndUpdate
System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::LookupCachedAndUpdate(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::LookupCachedAndUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "LookupCachedAndUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::CachedCodeEntry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.CacheCode
System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::CacheCode(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::CacheCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CacheCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::CachedCodeEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionR
bool System::Text::RegularExpressions::Regex::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionInvariant
bool System::Text::RegularExpressions::Regex::UseOptionInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::UseOptionInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex..cctor
void System::Text::RegularExpressions::Regex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::Regex::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* si, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(si, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ToString
::Il2CppString* System::Text::RegularExpressions::Regex::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Regex::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.Invoke
::Il2CppString* System::Text::RegularExpressions::MatchEvaluator::Invoke(System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::MatchEvaluator::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(match)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, match);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.BeginInvoke
System::IAsyncResult* System::Text::RegularExpressions::MatchEvaluator::BeginInvoke(System::Text::RegularExpressions::Match* match, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::MatchEvaluator::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(match, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, match, callback, object);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.EndInvoke
::Il2CppString* System::Text::RegularExpressions::MatchEvaluator::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::MatchEvaluator::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Get
::Il2CppObject* System::Text::RegularExpressions::ExclusiveReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::ExclusiveReference::Get");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Release
void System::Text::RegularExpressions::ExclusiveReference::Release(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::ExclusiveReference::Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern
bool System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern(::Il2CppString* text, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, index);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.IsMatch
bool System::Text::RegularExpressions::RegexBoyerMoore::IsMatch(::Il2CppString* text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexBoyerMoore::IsMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, beglimit, endlimit)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.Scan
int System::Text::RegularExpressions::RegexBoyerMoore::Scan(::Il2CppString* text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexBoyerMoore::Scan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, beglimit, endlimit)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.ToString
::Il2CppString* System::Text::RegularExpressions::RegexBoyerMoore::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexBoyerMoore::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Index
int System::Text::RegularExpressions::Capture::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::get_Index");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Length
int System::Text::RegularExpressions::Capture::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Value
::Il2CppString* System::Text::RegularExpressions::Capture::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.ToString
::Il2CppString* System::Text::RegularExpressions::Capture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Capture::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String InternalRegexIgnoreCase
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String InternalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Space
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Space
void System::Text::RegularExpressions::RegexCharClass::_set_Space(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotSpace
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_NotSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotSpace
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpace(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_NotSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Word
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_Word() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_Word");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "Word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Word
void System::Text::RegularExpressions::RegexCharClass::_set_Word(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_Word");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotWord
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_NotWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotWord
void System::Text::RegularExpressions::RegexCharClass::_set_NotWord(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_NotWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWord", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String SpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotSpaceClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String WordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_WordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_WordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotWordClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_DigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_DigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotDigitClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__definedCategories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get__definedCategories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set__definedCategories(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set__definedCategories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[,] _propTable
::Array<::Il2CppString*>* System::Text::RegularExpressions::RegexCharClass::_get__propTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get__propTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Text.RegularExpressions", "RegexCharClass", "_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[,] _propTable
void System::Text::RegularExpressions::RegexCharClass::_set__propTable(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set__propTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* System::Text::RegularExpressions::RegexCharClass::_get__lcTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_get__lcTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>*>("System.Text.RegularExpressions", "RegexCharClass", "_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping[] _lcTable
void System::Text::RegularExpressions::RegexCharClass::_set__lcTable(::Array<System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::_set__lcTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_lcTable", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::get_CanMerge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanMerge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::set_Negate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Negate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(System::Text::RegularExpressions::RegexCharClass* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddCharClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCharClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(System::Text::RegularExpressions::RegexCharClass* sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddSubtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSubtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sub)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(first, last)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::Il2CppString* categoryName, bool invert, bool caseInsensitive, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCategoryFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(categoryName, invert, caseInsensitive, pattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, categoryName, invert, caseInsensitive, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::Il2CppString* category) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddLowercase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLowercase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddLowercaseRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chMin, chMax, culture)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chMin, chMax, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::AddDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ecma, negate, pattern)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ecma, negate, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::SingletonChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsMergeable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsSingleton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsSubtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsNegated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::IsWordChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::Il2CppString* set) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::CharInClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::Il2CppString* set, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::CharInClassInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start, mySetLength, myCategoryLength)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::Il2CppString* set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::CharInCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, set, start, mySetLength, myCategoryLength)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, System::Globalization::UnicodeCategory chcategory, ::Il2CppString* category, int& i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, chcategory, category, i)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, chcategory, category, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::NegateCategory(::Il2CppString* category) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::NegateCategory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(category)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::Il2CppString* charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::Il2CppString* charClass, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::ParseRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(charClass, start)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, charClass, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::RangeCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RangeCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::ToStringClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToStringClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
System::Text::RegularExpressions::RegexCharClass::SingleRange* System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::GetRangeAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRangeAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass::SingleRange*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::Canonicalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::Il2CppString* System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::Il2CppString* capname, bool invert, ::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::SetFromProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capname, invert, pattern)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capname, invert, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/SingleRangeComparer.Compare
int System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare(System::Text::RegularExpressions::RegexCharClass::SingleRange* x, System::Text::RegularExpressions::RegexCharClass::SingleRange* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexCode.OpcodeBacktracks
bool System::Text::RegularExpressions::RegexCode::OpcodeBacktracks(int Op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexCode::OpcodeBacktracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCode", "OpcodeBacktracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(Op)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexFCD
#include "System/Text/RegularExpressions/RegexFCD.hpp"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FirstChars
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::FirstChars(System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::FirstChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "FirstChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Prefix
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::Prefix(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::Prefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Prefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Anchors
int System::Text::RegularExpressions::RegexFCD::Anchors(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::Anchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Anchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.AnchorFromType
int System::Text::RegularExpressions::RegexFCD::AnchorFromType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::AnchorFromType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "AnchorFromType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushInt
void System::Text::RegularExpressions::RegexFCD::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::PushInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.IntIsEmpty
bool System::Text::RegularExpressions::RegexFCD::IntIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::IntIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IntIsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopInt
int System::Text::RegularExpressions::RegexFCD::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::PopInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushFC
void System::Text::RegularExpressions::RegexFCD::PushFC(System::Text::RegularExpressions::RegexFC* fc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::PushFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushFC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FCIsEmpty
bool System::Text::RegularExpressions::RegexFCD::FCIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::FCIsEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FCIsEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopFC
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::PopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::PopFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopFC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.TopFC
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::TopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::TopFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TopFC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree
System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegexFCFromRegexTree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.SkipChild
void System::Text::RegularExpressions::RegexFCD::SkipChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::SkipChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SkipChild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.CalculateFC
void System::Text::RegularExpressions::RegexFCD::CalculateFC(int NodeType, System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFCD::CalculateFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateFC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(NodeType, node, CurIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, NodeType, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexFC.AddFC
bool System::Text::RegularExpressions::RegexFC::AddFC(System::Text::RegularExpressions::RegexFC* fc, bool concatenate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFC::AddFC");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFC", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fc, concatenate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fc, concatenate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.GetFirstChars
::Il2CppString* System::Text::RegularExpressions::RegexFC::GetFirstChars(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFC::GetFirstChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFirstChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.IsCaseInsensitive
bool System::Text::RegularExpressions::RegexFC::IsCaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexFC::IsCaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCaseInsensitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.RegexPrefix _empty
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexPrefix*>("System.Text.RegularExpressions", "RegexPrefix", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.RegexPrefix _empty
void System::Text::RegularExpressions::RegexPrefix::_set__empty(System::Text::RegularExpressions::RegexPrefix* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexPrefix", "_empty", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Prefix
::Il2CppString* System::Text::RegularExpressions::RegexPrefix::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Empty
System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::get_Empty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", "get_Empty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..cctor
void System::Text::RegularExpressions::RegexPrefix::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexPrefix::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Group _emptygroup
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::_get__emptygroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Group::_get__emptygroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Group*>("System.Text.RegularExpressions", "Group", "_emptygroup"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Group _emptygroup
void System::Text::RegularExpressions::Group::_set__emptygroup(System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Group::_set__emptygroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Group", "_emptygroup", value));
}
// Autogenerated method: System.Text.RegularExpressions.Group.get_Success
bool System::Text::RegularExpressions::Group::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Group::get_Success");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Success", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..cctor
void System::Text::RegularExpressions::Group::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Group::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Group", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Item
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::get_Item(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(groupnum)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroup
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroup(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::GetGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(groupnum)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroupImpl
System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroupImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::GetGroupImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGroupImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(groupnum)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Count
int System::Text::RegularExpressions::GroupCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Text::RegularExpressions::GroupCollection::System_Collections_ICollection_get_Count() {
  return System::Text::RegularExpressions::GroupCollection::get_Count();
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.CopyTo
void System::Text::RegularExpressions::GroupCollection::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Text::RegularExpressions::GroupCollection::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Text::RegularExpressions::GroupCollection::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetEnumerator
System::Collections::IEnumerator* System::Text::RegularExpressions::GroupCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Text::RegularExpressions::GroupCollection::System_Collections_IEnumerable_GetEnumerator() {
  return System::Text::RegularExpressions::GroupCollection::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupEnumerator
#include "System/Text/RegularExpressions/GroupEnumerator.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Capture
System::Text::RegularExpressions::Capture* System::Text::RegularExpressions::GroupEnumerator::get_Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupEnumerator::get_Capture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Capture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Capture*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.MoveNext
bool System::Text::RegularExpressions::GroupEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Text::RegularExpressions::GroupEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Text::RegularExpressions::GroupEnumerator::MoveNext();
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::GroupEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Text::RegularExpressions::GroupEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Text::RegularExpressions::GroupEnumerator::get_Current();
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.Reset
void System::Text::RegularExpressions::GroupEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::GroupEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Text::RegularExpressions::GroupEnumerator::System_Collections_IEnumerator_Reset() {
  System::Text::RegularExpressions::GroupEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexInterpreter
#include "System/Text/RegularExpressions/RegexInterpreter.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Goto
void System::Text::RegularExpressions::RegexInterpreter::Goto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Goto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Goto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newpos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textto
void System::Text::RegularExpressions::RegexInterpreter::Textto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Textto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newpos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackto
void System::Text::RegularExpressions::RegexInterpreter::Trackto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Trackto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Trackto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newpos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textstart
int System::Text::RegularExpressions::RegexInterpreter::Textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Textstart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Textstart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textpos
int System::Text::RegularExpressions::RegexInterpreter::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Textpos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackpos
int System::Text::RegularExpressions::RegexInterpreter::Trackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Trackpos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Trackpos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1, I2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2, int I3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1, I2, I3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1, I2, I3);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1, I2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backtrack
void System::Text::RegularExpressions::RegexInterpreter::Backtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Backtrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Backtrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.SetOperator
void System::Text::RegularExpressions::RegexInterpreter::SetOperator(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::SetOperator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOperator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(op)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(framesize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I1, I2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(framesize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operator
int System::Text::RegularExpressions::RegexInterpreter::Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Operator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Operator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operand
int System::Text::RegularExpressions::RegexInterpreter::Operand(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Operand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Operand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Leftchars
int System::Text::RegularExpressions::RegexInterpreter::Leftchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Leftchars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Leftchars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Rightchars
int System::Text::RegularExpressions::RegexInterpreter::Rightchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Rightchars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Rightchars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Bump
int System::Text::RegularExpressions::RegexInterpreter::Bump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Bump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Bump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardchars
int System::Text::RegularExpressions::RegexInterpreter::Forwardchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Forwardchars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Forwardchars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardcharnext
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Forwardcharnext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Stringmatch
bool System::Text::RegularExpressions::RegexInterpreter::Stringmatch(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Stringmatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stringmatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Refmatch
bool System::Text::RegularExpressions::RegexInterpreter::Refmatch(int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Refmatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refmatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, len)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, len);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backwardnext
void System::Text::RegularExpressions::RegexInterpreter::Backwardnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Backwardnext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Backwardnext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::CharAt(int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::CharAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(j)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, j);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.InitTrackCount
void System::Text::RegularExpressions::RegexInterpreter::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::InitTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.FindFirstChar
bool System::Text::RegularExpressions::RegexInterpreter::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::FindFirstChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Go
void System::Text::RegularExpressions::RegexInterpreter::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexInterpreter::Go");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Match _empty
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Match*>("System.Text.RegularExpressions", "Match", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Match _empty
void System::Text::RegularExpressions::Match::_set__empty(System::Text::RegularExpressions::Match* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Match", "_empty", value));
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Empty
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::get_Empty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", "get_Empty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Reset
void System::Text::RegularExpressions::Match::Reset(System::Text::RegularExpressions::Regex* regex, ::Il2CppString* text, int textbeg, int textend, int textstart) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(regex, text, textbeg, textend, textstart)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, regex, text, textbeg, textend, textstart);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Groups
System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::Match::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::get_Groups");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.NextMatch
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::NextMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::NextMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NextMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.AddMatch
void System::Text::RegularExpressions::Match::AddMatch(int cap, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::AddMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap, start, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cap, start, len);
}
// Autogenerated method: System.Text.RegularExpressions.Match.BalanceMatch
void System::Text::RegularExpressions::Match::BalanceMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::BalanceMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BalanceMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.RemoveMatch
void System::Text::RegularExpressions::Match::RemoveMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::RemoveMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.IsMatched
bool System::Text::RegularExpressions::Match::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::IsMatched");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchIndex
int System::Text::RegularExpressions::Match::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::MatchIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchLength
int System::Text::RegularExpressions::Match::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::MatchLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Tidy
void System::Text::RegularExpressions::Match::Tidy(int textpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::Tidy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Tidy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textpos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textpos);
}
// Autogenerated method: System.Text.RegularExpressions.Match..cctor
void System::Text::RegularExpressions::Match::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::Match::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchSparse
#include "System/Text/RegularExpressions/MatchSparse.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.MatchSparse.get_Groups
System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::MatchSparse::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::MatchSparse::get_Groups");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexMatchTimeoutException
#include "System/Text/RegularExpressions/RegexMatchTimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init(::Il2CppString* input, ::Il2CppString* pattern, System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, pattern, timeout)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, pattern, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::RegexMatchTimeoutException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* si, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexMatchTimeoutException::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(si, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexNode.UseOptionR
bool System::Text::RegularExpressions::RegexNode::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReverseLeft
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReverseLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReverseLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReverseLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeRep
void System::Text::RegularExpressions::RegexNode::MakeRep(int type, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::MakeRep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeRep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, min, max)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Reduce
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::Reduce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.StripEnation
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::StripEnation(int emptyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::StripEnation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StripEnation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(emptyType)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, emptyType);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceGroup
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReduceGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReduceGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceRep
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReduceRep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReduceRep", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceSet
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReduceSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReduceSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceAlternation
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceAlternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReduceAlternation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReduceAlternation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceConcatenation
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceConcatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ReduceConcatenation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReduceConcatenation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeQuantifier
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::MakeQuantifier(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::MakeQuantifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeQuantifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lazy, min, max)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.AddChild
void System::Text::RegularExpressions::RegexNode::AddChild(System::Text::RegularExpressions::RegexNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newChild)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Child
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Child(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::Child");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Child", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ChildCount
int System::Text::RegularExpressions::RegexNode::ChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::ChildCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChildCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Type
int System::Text::RegularExpressions::RegexNode::Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexNode::Type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions None
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions None
void System::Text::RegularExpressions::RegexOptions::_set_None(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
void System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Multiline
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Multiline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_Multiline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Multiline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Multiline
void System::Text::RegularExpressions::RegexOptions::_set_Multiline(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_Multiline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Multiline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
void System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Compiled
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Compiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_Compiled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Compiled"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Compiled
void System::Text::RegularExpressions::RegexOptions::_set_Compiled(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_Compiled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Compiled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Singleline
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Singleline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_Singleline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Singleline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Singleline
void System::Text::RegularExpressions::RegexOptions::_set_Singleline(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_Singleline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Singleline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
void System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
void System::Text::RegularExpressions::RegexOptions::_set_RightToLeft(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ECMAScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_ECMAScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ECMAScript"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
void System::Text::RegularExpressions::RegexOptions::_set_ECMAScript(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_ECMAScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ECMAScript", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
void System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant(System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexParser
#include "System/Text/RegularExpressions/RegexParser.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] _category
::Array<uint8_t>* System::Text::RegularExpressions::RegexParser::_get__category() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::_get__category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Text.RegularExpressions", "RegexParser", "_category"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] _category
void System::Text::RegularExpressions::RegexParser::_set__category(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::_set__category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexParser", "_category", value));
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Parse
System::Text::RegularExpressions::RegexTree* System::Text::RegularExpressions::RegexParser::Parse(::Il2CppString* re, System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(re, op)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexTree*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, re, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.SetPattern
void System::Text::RegularExpressions::RegexParser::SetPattern(::Il2CppString* Re) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::SetPattern");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPattern", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(Re)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, Re);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Reset
void System::Text::RegularExpressions::RegexParser::Reset(System::Text::RegularExpressions::RegexOptions topopts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(topopts)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topopts);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanRegex
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanRegex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanRegex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(caseInsensitive)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive, bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(caseInsensitive, scanOnly)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanGroupOpen
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanGroupOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanGroupOpen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanGroupOpen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBlank
void System::Text::RegularExpressions::RegexParser::ScanBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanBlank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanBlank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBackslash
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanBackslash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanBackslash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBasicBackslash
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBasicBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanBasicBackslash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanBasicBackslash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCapname
::Il2CppString* System::Text::RegularExpressions::RegexParser::ScanCapname() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanCapname");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanCapname", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOctal
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanOctal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanOctal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanOctal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDecimal
int System::Text::RegularExpressions::RegexParser::ScanDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanHex
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanHex(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanHex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanHex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.HexDigit
int System::Text::RegularExpressions::RegexParser::HexDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::HexDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "HexDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanControl
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanControl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanControl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsOnlyTopOption
bool System::Text::RegularExpressions::RegexParser::IsOnlyTopOption(System::Text::RegularExpressions::RegexOptions option) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsOnlyTopOption");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOnlyTopOption", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(option)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, option);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOptions
void System::Text::RegularExpressions::RegexParser::ScanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharEscape
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanCharEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ScanCharEscape");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ScanCharEscape", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseProperty
::Il2CppString* System::Text::RegularExpressions::RegexParser::ParseProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::ParseProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.TypeFromCode
int System::Text::RegularExpressions::RegexParser::TypeFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::TypeFromCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TypeFromCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.OptionFromCode
System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexParser::OptionFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::OptionFromCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "OptionFromCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexOptions, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CountCaptures
void System::Text::RegularExpressions::RegexParser::CountCaptures() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::CountCaptures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CountCaptures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureSlot
void System::Text::RegularExpressions::RegexParser::NoteCaptureSlot(int i, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::NoteCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteCaptureSlot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureName
void System::Text::RegularExpressions::RegexParser::NoteCaptureName(::Il2CppString* name, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::NoteCaptureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteCaptureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AssignNameSlots
void System::Text::RegularExpressions::RegexParser::AssignNameSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AssignNameSlots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssignNameSlots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CaptureSlotFromName
int System::Text::RegularExpressions::RegexParser::CaptureSlotFromName(::Il2CppString* capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::CaptureSlotFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CaptureSlotFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capname)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureSlot
bool System::Text::RegularExpressions::RegexParser::IsCaptureSlot(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCaptureSlot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureName
bool System::Text::RegularExpressions::RegexParser::IsCaptureName(::Il2CppString* capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsCaptureName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCaptureName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capname)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionN
bool System::Text::RegularExpressions::RegexParser::UseOptionN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionI
bool System::Text::RegularExpressions::RegexParser::UseOptionI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionM
bool System::Text::RegularExpressions::RegexParser::UseOptionM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionM");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionM", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionS
bool System::Text::RegularExpressions::RegexParser::UseOptionS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionX
bool System::Text::RegularExpressions::RegexParser::UseOptionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionX");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionX", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionE
bool System::Text::RegularExpressions::RegexParser::UseOptionE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::UseOptionE");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UseOptionE", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpecial
bool System::Text::RegularExpressions::RegexParser::IsSpecial(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsSpecial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpecial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsStopperX
bool System::Text::RegularExpressions::RegexParser::IsStopperX(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsStopperX");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsStopperX", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsQuantifier
bool System::Text::RegularExpressions::RegexParser::IsQuantifier(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsQuantifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsQuantifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsTrueQuantifier
bool System::Text::RegularExpressions::RegexParser::IsTrueQuantifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsTrueQuantifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTrueQuantifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpace
bool System::Text::RegularExpressions::RegexParser::IsSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::IsSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(int pos, int cch, bool isReplacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos, cch, isReplacement)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, cch, isReplacement);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushGroup
void System::Text::RegularExpressions::RegexParser::PushGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::PushGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopGroup
void System::Text::RegularExpressions::RegexParser::PopGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::PopGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyStack
bool System::Text::RegularExpressions::RegexParser::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.StartGroup
void System::Text::RegularExpressions::RegexParser::StartGroup(System::Text::RegularExpressions::RegexNode* openGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::StartGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(openGroup)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, openGroup);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddAlternate
void System::Text::RegularExpressions::RegexParser::AddAlternate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddAlternate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddAlternate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lazy, min, max)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Unit
System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::Unit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitOne
void System::Text::RegularExpressions::RegexParser::AddUnitOne(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddUnitOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddUnitOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNotone
void System::Text::RegularExpressions::RegexParser::AddUnitNotone(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddUnitNotone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddUnitNotone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitSet
void System::Text::RegularExpressions::RegexParser::AddUnitSet(::Il2CppString* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddUnitSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddUnitSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cc)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNode
void System::Text::RegularExpressions::RegexParser::AddUnitNode(System::Text::RegularExpressions::RegexNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddUnitNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddUnitNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitType
void System::Text::RegularExpressions::RegexParser::AddUnitType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddUnitType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddUnitType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddGroup
void System::Text::RegularExpressions::RegexParser::AddGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::AddGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushOptions
void System::Text::RegularExpressions::RegexParser::PushOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::PushOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopOptions
void System::Text::RegularExpressions::RegexParser::PopOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::PopOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyOptionsStack
bool System::Text::RegularExpressions::RegexParser::EmptyOptionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::EmptyOptionsStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EmptyOptionsStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopKeepOptions
void System::Text::RegularExpressions::RegexParser::PopKeepOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::PopKeepOptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopKeepOptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MakeException
System::ArgumentException* System::Text::RegularExpressions::RegexParser::MakeException(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::MakeException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textpos
int System::Text::RegularExpressions::RegexParser::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::Textpos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textto
void System::Text::RegularExpressions::RegexParser::Textto(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::Textto");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRightGetChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::MoveRightGetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::MoveRightGetChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveRightGetChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveLeft
void System::Text::RegularExpressions::RegexParser::MoveLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexParser::CharAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::CharAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharsRight
int System::Text::RegularExpressions::RegexParser::CharsRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::CharsRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CharsRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser..cctor
void System::Text::RegularExpressions::RegexParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.Replace
::Il2CppString* System::Text::RegularExpressions::RegexReplacement::Replace(System::Text::RegularExpressions::MatchEvaluator* evaluator, System::Text::RegularExpressions::Regex* regex, ::Il2CppString* input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexReplacement::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexReplacement", "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(evaluator, regex, input, count, startat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, evaluator, regex, input, count, startat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Scan
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::Scan(System::Text::RegularExpressions::Regex* regex, ::Il2CppString* text, int textbeg, int textend, int textstart, int prevlen, bool quick, System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Scan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(regex, text, textbeg, textend, textstart, prevlen, quick, timeout)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, regex, text, textbeg, textend, textstart, prevlen, quick, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.StartTimeoutWatch
void System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartTimeoutWatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.CheckTimeout
void System::Text::RegularExpressions::RegexRunner::CheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::CheckTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoCheckTimeout
void System::Text::RegularExpressions::RegexRunner::DoCheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::DoCheckTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoCheckTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Go
void System::Text::RegularExpressions::RegexRunner::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Go");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.FindFirstChar
bool System::Text::RegularExpressions::RegexRunner::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::FindFirstChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitTrackCount
void System::Text::RegularExpressions::RegexRunner::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::InitTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitMatch
void System::Text::RegularExpressions::RegexRunner::InitMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::InitMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TidyMatch
System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::TidyMatch(bool quick) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::TidyMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TidyMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(quick)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.EnsureStorage
void System::Text::RegularExpressions::RegexRunner::EnsureStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::EnsureStorage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureStorage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsBoundary
bool System::Text::RegularExpressions::RegexRunner::IsBoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::IsBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, startpos, endpos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsECMABoundary
bool System::Text::RegularExpressions::RegexRunner::IsECMABoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::IsECMABoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsECMABoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, startpos, endpos)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleTrack
void System::Text::RegularExpressions::RegexRunner::DoubleTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::DoubleTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleStack
void System::Text::RegularExpressions::RegexRunner::DoubleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::DoubleStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
void System::Text::RegularExpressions::RegexRunner::DoubleCrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::DoubleCrawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoubleCrawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawl
void System::Text::RegularExpressions::RegexRunner::Crawl(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Crawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Crawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Popcrawl
int System::Text::RegularExpressions::RegexRunner::Popcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Popcrawl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Popcrawl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawlpos
int System::Text::RegularExpressions::RegexRunner::Crawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Crawlpos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Crawlpos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Capture
void System::Text::RegularExpressions::RegexRunner::Capture(int capnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Capture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Capture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capnum, start, end)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TransferCapture
void System::Text::RegularExpressions::RegexRunner::TransferCapture(int capnum, int uncapnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::TransferCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TransferCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capnum, uncapnum, start, end)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capnum, uncapnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Uncapture
void System::Text::RegularExpressions::RegexRunner::Uncapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::Uncapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Uncapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsMatched
bool System::Text::RegularExpressions::RegexRunner::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::IsMatched");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchIndex
int System::Text::RegularExpressions::RegexRunner::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::MatchIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchLength
int System::Text::RegularExpressions::RegexRunner::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunner::MatchLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cap)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
System::Text::RegularExpressions::RegexRunner* System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexRunner*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.RegexWriter
#include "System/Text/RegularExpressions/RegexWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Write
System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::Write(System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexWriter", "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCode*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PushInt
void System::Text::RegularExpressions::RegexWriter::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::PushInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(I)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmptyStack
bool System::Text::RegularExpressions::RegexWriter::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PopInt
int System::Text::RegularExpressions::RegexWriter::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::PopInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.CurPos
int System::Text::RegularExpressions::RegexWriter::CurPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::CurPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CurPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PatchJump
void System::Text::RegularExpressions::RegexWriter::PatchJump(int Offset, int jumpDest) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::PatchJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PatchJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(Offset, jumpDest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, Offset, jumpDest);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(op)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(op, opd1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, op, opd1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1, int opd2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(op, opd1, opd2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, op, opd1, opd2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.StringCode
int System::Text::RegularExpressions::RegexWriter::StringCode(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::StringCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StringCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MakeException
System::ArgumentException* System::Text::RegularExpressions::RegexWriter::MakeException(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::MakeException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  return ::il2cpp_utils::RunMethodThrow<System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MapCapnum
int System::Text::RegularExpressions::RegexWriter::MapCapnum(int capnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::MapCapnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MapCapnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capnum)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, capnum);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree
System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree(System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegexCodeFromRegexTree", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tree)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::RegexCode*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmitFragment
void System::Text::RegularExpressions::RegexWriter::EmitFragment(int nodetype, System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Text::RegularExpressions::RegexWriter::EmitFragment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EmitFragment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodetype, node, CurIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nodetype, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debug
#include "System/Diagnostics/Debug.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Debug.Assert
void System::Diagnostics::Debug::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debug::Assert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debug", "Assert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(condition)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceInternal
#include "System/Diagnostics/TraceInternal.hpp"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String appName
::Il2CppString* System::Diagnostics::TraceInternal::_get_appName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_appName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "TraceInternal", "appName"));
}
// Autogenerated static field setter
// Set static field: static private System.String appName
void System::Diagnostics::TraceInternal::_set_appName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_appName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "appName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.TraceListenerCollection listeners
System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::_get_listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_listeners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::TraceListenerCollection*>("System.Diagnostics", "TraceInternal", "listeners"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.TraceListenerCollection listeners
void System::Diagnostics::TraceInternal::_set_listeners(System::Diagnostics::TraceListenerCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_listeners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "listeners", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean autoFlush
bool System::Diagnostics::TraceInternal::_get_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_autoFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "autoFlush"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean autoFlush
void System::Diagnostics::TraceInternal::_set_autoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_autoFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "autoFlush", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useGlobalLock
bool System::Diagnostics::TraceInternal::_get_useGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_useGlobalLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "useGlobalLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useGlobalLock
void System::Diagnostics::TraceInternal::_set_useGlobalLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_useGlobalLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "useGlobalLock", value));
}
// [ThreadStaticAttribute] Offset: 0xCB7B58
// Autogenerated static field getter
// Get static field: static private System.Int32 indentLevel
int System::Diagnostics::TraceInternal::_get_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_indentLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentLevel
void System::Diagnostics::TraceInternal::_set_indentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_indentLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentSize
int System::Diagnostics::TraceInternal::_get_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_indentSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentSize
void System::Diagnostics::TraceInternal::_set_indentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_indentSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentSize", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Object critSec
::Il2CppObject* System::Diagnostics::TraceInternal::_get_critSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_get_critSec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Diagnostics", "TraceInternal", "critSec"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object critSec
void System::Diagnostics::TraceInternal::_set_critSec(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::_set_critSec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "critSec", value));
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_Listeners
System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::get_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::get_Listeners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_Listeners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::TraceListenerCollection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_AutoFlush
bool System::Diagnostics::TraceInternal::get_AutoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::get_AutoFlush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_AutoFlush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_UseGlobalLock
bool System::Diagnostics::TraceInternal::get_UseGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::get_UseGlobalLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_UseGlobalLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentLevel
int System::Diagnostics::TraceInternal::get_IndentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::get_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentSize
int System::Diagnostics::TraceInternal::get_IndentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::get_IndentSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Assert
void System::Diagnostics::TraceInternal::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::Assert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Assert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(condition)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Fail
void System::Diagnostics::TraceInternal::Fail(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Fail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceInternal.InitializeSettings
void System::Diagnostics::TraceInternal::InitializeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::InitializeSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "InitializeSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal..cctor
void System::Diagnostics::TraceInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.TraceListener.get_IsThreadSafe
bool System::Diagnostics::TraceListener::get_IsThreadSafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::get_IsThreadSafe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsThreadSafe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.TraceListener.Flush
void System::Diagnostics::TraceListener::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentLevel
void System::Diagnostics::TraceListener::set_IndentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::set_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IndentLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentSize
void System::Diagnostics::TraceListener::set_IndentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::set_IndentSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IndentSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_NeedIndent
bool System::Diagnostics::TraceListener::get_NeedIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::get_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_NeedIndent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_NeedIndent
void System::Diagnostics::TraceListener::set_NeedIndent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::set_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_NeedIndent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::Il2CppString* message, ::Il2CppString* detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, detailMessage)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.TraceListener.Write
void System::Diagnostics::TraceListener::Write(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteIndent
void System::Diagnostics::TraceListener::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteLine
void System::Diagnostics::TraceListener::WriteLine(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListener::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Diagnostics::TraceListener::System_IDisposable_Dispose() {
  System::Diagnostics::TraceListener::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Add
int System::Diagnostics::TraceListenerCollection::Add(System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.InitializeListener
void System::Diagnostics::TraceListenerCollection::InitializeListener(System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::InitializeListener");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeListener", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.get_Count
int System::Diagnostics::TraceListenerCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_get_Count() {
  return System::Diagnostics::TraceListenerCollection::get_Count();
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Clear
void System::Diagnostics::TraceListenerCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Clear() {
  System::Diagnostics::TraceListenerCollection::Clear();
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.GetEnumerator
System::Collections::IEnumerator* System::Diagnostics::TraceListenerCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Diagnostics::TraceListenerCollection::System_Collections_IEnumerable_GetEnumerator() {
  return System::Diagnostics::TraceListenerCollection::GetEnumerator();
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.RemoveAt
void System::Diagnostics::TraceListenerCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_RemoveAt(int index) {
  System::Diagnostics::TraceListenerCollection::RemoveAt(index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.set_Item
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsReadOnly
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.IList.Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo
void System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Close
void System::Diagnostics::AsyncStreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::AsyncStreamReader::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Dispose
void System::Diagnostics::AsyncStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::AsyncStreamReader::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.CancelOperation
void System::Diagnostics::AsyncStreamReader::CancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::AsyncStreamReader::CancelOperation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelOperation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.Diagnostics.Process/State
#include "System/Diagnostics/Process_State.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.Diagnostics.ProcessThreadCollection
#include "System/Diagnostics/ProcessThreadCollection.hpp"
// Including type: System.Diagnostics.ProcessModuleCollection
#include "System/Diagnostics/ProcessModuleCollection.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.Diagnostics.ProcessInfo
#include "System/Diagnostics/ProcessInfo.hpp"
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Process.get_Associated
bool System::Diagnostics::Process::get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_Associated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Associated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_HasExited
bool System::Diagnostics::Process::get_HasExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_HasExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessTimes
System::Diagnostics::ProcessThreadTimes* System::Diagnostics::Process::GetProcessTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::ProcessThreadTimes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Id
int System::Diagnostics::Process::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_SynchronizingObject
System::ComponentModel::ISynchronizeInvoke* System::Diagnostics::Process::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_TotalProcessorTime
System::TimeSpan System::Diagnostics::Process::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ReleaseProcessHandle
void System::Diagnostics::Process::ReleaseProcessHandle(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::ReleaseProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.Close
void System::Diagnostics::Process::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::Close");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.EnsureState
void System::Diagnostics::Process::EnsureState(System::Diagnostics::Process::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::EnsureState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Diagnostics.Process.GetCurrentProcess
System::Diagnostics::Process* System::Diagnostics::Process::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Process*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.OnExited
void System::Diagnostics::Process::OnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::OnExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access, bool throwIfExited) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(access, throwIfExited)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access, throwIfExited);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(access)));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.Refresh
void System::Diagnostics::Process::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::Refresh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Kill
void System::Diagnostics::Process::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::Kill");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StopWatchingForExit
void System::Diagnostics::Process::StopWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StopWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopWatchingForExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::Il2CppString* System::Diagnostics::Process::ProcessName_internal(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::Il2CppString* System::Diagnostics::Process::ProcessName_internal(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.get_ProcessName
::Il2CppString* System::Diagnostics::Process::get_ProcessName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::get_ProcessName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ProcessName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.RaiseOnExited
void System::Diagnostics::Process::RaiseOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::RaiseOnExited");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RaiseOnExited", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Dispose
void System::Diagnostics::Process::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Process.ToString
::Il2CppString* System::Diagnostics::Process::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/StreamReadMode
#include "System/Diagnostics/Process.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode undefined
System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_get_undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "undefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode undefined
void System::Diagnostics::Process::StreamReadMode::_set_undefined(System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_set_undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "undefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode syncMode
System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_syncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_get_syncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "syncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode syncMode
void System::Diagnostics::Process::StreamReadMode::_set_syncMode(System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_set_syncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "syncMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/StreamReadMode asyncMode
System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_asyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_get_asyncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "asyncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/StreamReadMode asyncMode
void System::Diagnostics::Process::StreamReadMode::_set_asyncMode(System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::StreamReadMode::_set_asyncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "asyncMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/State
#include "System/Diagnostics/Process_State.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveId
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_HaveId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveId
void System::Diagnostics::Process::State::_set_HaveId(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_HaveId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsLocal
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_IsLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsLocal
void System::Diagnostics::Process::State::_set_IsLocal(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_IsLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsNt
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_IsNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsNt"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsNt
void System::Diagnostics::Process::State::_set_IsNt(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_IsNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveProcessInfo
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_HaveProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveProcessInfo
void System::Diagnostics::Process::State::_set_HaveProcessInfo(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_HaveProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveProcessInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State Exited
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_Exited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Exited"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State Exited
void System::Diagnostics::Process::State::_set_Exited(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_Exited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Exited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State Associated
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_Associated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Associated"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State Associated
void System::Diagnostics::Process::State::_set_Associated(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_Associated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Associated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State IsWin2k
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsWin2k() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_IsWin2k");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsWin2k"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State IsWin2k
void System::Diagnostics::Process::State::_set_IsWin2k(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_IsWin2k");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsWin2k", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/State HaveNtProcessInfo
System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveNtProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_get_HaveNtProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveNtProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/State HaveNtProcessInfo
void System::Diagnostics::Process::State::_set_HaveNtProcessInfo(System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Process::State::_set_HaveNtProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveNtProcessInfo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.ProcessThreadTimes.get_TotalProcessorTime
System::TimeSpan System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWaitHandle
#include "System/Diagnostics/ProcessWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DefaultTraceListener
#include "System/Diagnostics/DefaultTraceListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean OnWin32
bool System::Diagnostics::DefaultTraceListener::_get_OnWin32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_get_OnWin32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "DefaultTraceListener", "OnWin32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean OnWin32
void System::Diagnostics::DefaultTraceListener::_set_OnWin32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_set_OnWin32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "OnWin32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTracePrefix
::Il2CppString* System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTracePrefix
void System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTraceFile
::Il2CppString* System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTraceFile
void System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile", value));
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener..cctor
void System::Diagnostics::DefaultTraceListener::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.GetPrefix
::Il2CppString* System::Diagnostics::DefaultTraceListener::GetPrefix(::Il2CppString* var, ::Il2CppString* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "GetPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(var, target)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, var, target);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.get_LogFileName
::Il2CppString* System::Diagnostics::DefaultTraceListener::get_LogFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::get_LogFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LogFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteWindowsDebugString
void System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "WriteWindowsDebugString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteDebugString
void System::Diagnostics::DefaultTraceListener::WriteDebugString(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteDebugString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteDebugString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteMonoTrace
void System::Diagnostics::DefaultTraceListener::WriteMonoTrace(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteMonoTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMonoTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WritePrefix
void System::Diagnostics::DefaultTraceListener::WritePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WritePrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WritePrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteImpl
void System::Diagnostics::DefaultTraceListener::WriteImpl(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLogFile
void System::Diagnostics::DefaultTraceListener::WriteLogFile(::Il2CppString* message, ::Il2CppString* logFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteLogFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLogFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, logFile)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, logFile);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::Il2CppString* message, ::Il2CppString* detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, detailMessage)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Write
void System::Diagnostics::DefaultTraceListener::Write(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLine
void System::Diagnostics::DefaultTraceListener::WriteLine(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DefaultTraceListener::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.MonitoringDescriptionAttribute
#include "System/Diagnostics/MonitoringDescriptionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.MonitoringDescriptionAttribute.get_Description
::Il2CppString* System::Diagnostics::MonitoringDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::MonitoringDescriptionAttribute::get_Description");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::_get_IsHighResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::_set_IsHighResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "GetTimestamp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::get_Elapsed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Elapsed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::get_ElapsedTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ElapsedTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_IsRunning
bool System::Diagnostics::Stopwatch::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Reset
void System::Diagnostics::Stopwatch::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Stop
void System::Diagnostics::Stopwatch::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Stopwatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ArrayConverter
#include "System/ComponentModel/ArrayConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.BooleanConverter
#include "System/ComponentModel/BooleanConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.TypeConverter/StandardValuesCollection values
System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::_get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BooleanConverter::_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::TypeConverter::StandardValuesCollection*>("System.ComponentModel", "BooleanConverter", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.TypeConverter/StandardValuesCollection values
void System::ComponentModel::BooleanConverter::_set_values(System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BooleanConverter::_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BooleanConverter", "values", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BrowsableAttribute
#include "System/ComponentModel/BrowsableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
void System::ComponentModel::BrowsableAttribute::_set_Yes(System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute No
System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute No
void System::ComponentModel::BrowsableAttribute::_set_No(System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Default
System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Default
void System::ComponentModel::BrowsableAttribute::_set_Default(System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.get_Browsable
bool System::ComponentModel::BrowsableAttribute::get_Browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::get_Browsable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Browsable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute..cctor
void System::ComponentModel::BrowsableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "BrowsableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.Equals
bool System::ComponentModel::BrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.GetHashCode
int System::ComponentModel::BrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::BrowsableAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CollectionConverter
#include "System/ComponentModel/CollectionConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object EventDisposed
::Il2CppObject* System::ComponentModel::Component::_get_EventDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::_get_EventDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "Component", "EventDisposed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object EventDisposed
void System::ComponentModel::Component::_set_EventDisposed(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::_set_EventDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "Component", "EventDisposed", value));
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEvents
bool System::ComponentModel::Component::get_CanRaiseEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::get_CanRaiseEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRaiseEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEventsInternal
bool System::ComponentModel::Component::get_CanRaiseEventsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::get_CanRaiseEventsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRaiseEventsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.Component.GetService
::Il2CppObject* System::ComponentModel::Component::GetService(System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::GetService");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetService", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(service)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.Component.get_DesignMode
bool System::ComponentModel::Component::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::get_DesignMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DesignMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component..cctor
void System::ComponentModel::Component::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "Component", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Finalize
void System::ComponentModel::Component::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::ComponentModel::Component::System_IDisposable_Dispose() {
  System::ComponentModel::Component::Dispose();
}
// Autogenerated method: System.ComponentModel.Component.ToString
::Il2CppString* System::ComponentModel::Component::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::Component::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultEventAttribute
#include "System/ComponentModel/DefaultEventAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
System::ComponentModel::DefaultEventAttribute* System::ComponentModel::DefaultEventAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DefaultEventAttribute*>("System.ComponentModel", "DefaultEventAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
void System::ComponentModel::DefaultEventAttribute::_set_Default(System::ComponentModel::DefaultEventAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultEventAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.get_Name
::Il2CppString* System::ComponentModel::DefaultEventAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute..cctor
void System::ComponentModel::DefaultEventAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultEventAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.Equals
bool System::ComponentModel::DefaultEventAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.GetHashCode
int System::ComponentModel::DefaultEventAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultEventAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultPropertyAttribute
#include "System/ComponentModel/DefaultPropertyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
System::ComponentModel::DefaultPropertyAttribute* System::ComponentModel::DefaultPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DefaultPropertyAttribute*>("System.ComponentModel", "DefaultPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
void System::ComponentModel::DefaultPropertyAttribute::_set_Default(System::ComponentModel::DefaultPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultPropertyAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.get_Name
::Il2CppString* System::ComponentModel::DefaultPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute..cctor
void System::ComponentModel::DefaultPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.Equals
bool System::ComponentModel::DefaultPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultPropertyAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultValueAttribute
#include "System/ComponentModel/DefaultValueAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultValueAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.Equals
bool System::ComponentModel::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultValueAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.GetHashCode
int System::ComponentModel::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DefaultValueAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::Il2CppString* System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::get_Description");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::Il2CppString* System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DescriptionAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerAttribute
#include "System/ComponentModel/DesignerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DesignerAttribute.Equals
bool System::ComponentModel::DesignerAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.GetHashCode
int System::ComponentModel::DesignerAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerCategoryAttribute
#include "System/ComponentModel/DesignerCategoryAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Component"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
void System::ComponentModel::DesignerCategoryAttribute::_set_Component(System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Component", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
void System::ComponentModel::DesignerCategoryAttribute::_set_Default(System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_get_Form");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Form"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
void System::ComponentModel::DesignerCategoryAttribute::_set_Form(System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_set_Form");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Form", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
void System::ComponentModel::DesignerCategoryAttribute::_set_Generic(System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Generic", value));
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute..cctor
void System::ComponentModel::DesignerCategoryAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerCategoryAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.Equals
bool System::ComponentModel::DesignerCategoryAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.GetHashCode
int System::ComponentModel::DesignerCategoryAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerCategoryAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
void System::ComponentModel::DesignerSerializationVisibility::_set_Hidden(System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
void System::ComponentModel::DesignerSerializationVisibility::_set_Visible(System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Content
System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Content
void System::ComponentModel::DesignerSerializationVisibility::_set_Content(System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibility::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Content", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerSerializationVisibilityAttribute
#include "System/ComponentModel/DesignerSerializationVisibilityAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content(System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden(System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible(System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default(System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.get_Visibility
System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Visibility", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute..cctor
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerSerializationVisibilityAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode
int System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DisplayNameAttribute
#include "System/ComponentModel/DisplayNameAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
System::ComponentModel::DisplayNameAttribute* System::ComponentModel::DisplayNameAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ComponentModel::DisplayNameAttribute*>("System.ComponentModel", "DisplayNameAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
void System::ComponentModel::DisplayNameAttribute::_set_Default(System::ComponentModel::DisplayNameAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DisplayNameAttribute", "Default", value));
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayName
::Il2CppString* System::ComponentModel::DisplayNameAttribute::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayNameValue
::Il2CppString* System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayNameValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute..cctor
void System::ComponentModel::DisplayNameAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.ComponentModel", "DisplayNameAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.Equals
bool System::ComponentModel::DisplayNameAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.GetHashCode
int System::ComponentModel::DisplayNameAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::DisplayNameAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::EditorBrowsableAttribute::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
