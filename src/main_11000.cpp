// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByInstanceGetter
#include "Zenject/SubContainerCreatorByInstanceGetter.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByInstanceGetter.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByInstanceGetter::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByInstanceGetter::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethodBase
#include "Zenject/SubContainerCreatorByMethodBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethodBase::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated method: Zenject.SubContainerCreatorByMethodBase.CreateEmptySubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethodBase::CreateEmptySubContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethodBase::CreateEmptySubContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmptySubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByMethod
#include "Zenject/SubContainerCreatorByMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByMethod.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByMethod::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByMethod::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectDynamicContext
#include "Zenject/SubContainerCreatorByNewGameObjectDynamicContext.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewGameObjectDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectDynamicContext::CreateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectInstaller::AddInstallers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewGameObjectInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewGameObjectInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectInstaller::$$c__DisplayClass3_0::<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewGameObjectMethod
#include "Zenject/SubContainerCreatorByNewGameObjectMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewGameObjectMethod.AddInstallers
void Zenject::SubContainerCreatorByNewGameObjectMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewGameObjectMethod::AddInstallers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefab
#include "Zenject/SubContainerCreatorByNewPrefab.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefab.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefab::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefab::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(parentContext)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabDynamicContext
#include "Zenject/SubContainerCreatorByNewPrefabDynamicContext.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorByNewPrefabDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabDynamicContext::CreateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller
#include "Zenject/SubContainerCreatorByNewPrefabInstaller.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabInstaller::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabInstaller::AddInstallers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0
#include "Zenject/SubContainerCreatorByNewPrefabInstaller_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabInstaller/<>c__DisplayClass3_0.<AddInstallers>b__0
void Zenject::SubContainerCreatorByNewPrefabInstaller::$$c__DisplayClass3_0::$AddInstallers$b__0(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabInstaller::$$c__DisplayClass3_0::<AddInstallers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddInstallers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabMethod
#include "Zenject/SubContainerCreatorByNewPrefabMethod.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabMethod.AddInstallers
void Zenject::SubContainerCreatorByNewPrefabMethod::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabMethod::AddInstallers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams
#include "Zenject/SubContainerCreatorByNewPrefabWithParams.hpp"
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IPrefabProvider
#include "Zenject/IPrefabProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateTempContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateTempContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::CreateTempContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTempContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorByNewPrefabWithParams::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(parentContext)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0
#include "Zenject/SubContainerCreatorByNewPrefabWithParams_--c__DisplayClass7_0.hpp"
// Including type: Zenject.InjectableInfo
#include "Zenject/InjectableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__0
bool Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__0(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::<CreateTempContainer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SubContainerCreatorByNewPrefabWithParams/<>c__DisplayClass7_0.<CreateTempContainer>b__1
int Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::$CreateTempContainer$b__1(Zenject::InjectableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorByNewPrefabWithParams::$$c__DisplayClass7_0::<CreateTempContainer>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTempContainer>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorCached.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorCached::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorCached::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorDynamicContext
#include "Zenject/SubContainerCreatorDynamicContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.get_Container
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateSubContainer
Zenject::DiContainer* Zenject::SubContainerCreatorDynamicContext::CreateSubContainer(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::InjectContext* parentContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::CreateSubContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(parentContext)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, args, parentContext);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.AddInstallers
void Zenject::SubContainerCreatorDynamicContext::AddInstallers(System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, Zenject::GameObjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::AddInstallers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args, context);
}
// Autogenerated method: Zenject.SubContainerCreatorDynamicContext.CreateGameObject
UnityEngine::GameObject* Zenject::SubContainerCreatorDynamicContext::CreateGameObject(bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorDynamicContext::CreateGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, shouldMakeActive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerCreatorUtil
#include "Zenject/SubContainerCreatorUtil.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerCreatorUtil.ApplyBindSettings
void Zenject::SubContainerCreatorUtil::ApplyBindSettings(Zenject::SubContainerCreatorBindInfo* subContainerBindInfo, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerCreatorUtil::ApplyBindSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerCreatorUtil", "ApplyBindSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainerBindInfo), ::il2cpp_utils::ExtractType(subContainer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, subContainerBindInfo, subContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerDependencyProvider
#include "Zenject/SubContainerDependencyProvider.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_IsCached
bool Zenject::SubContainerDependencyProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::get_IsCached");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.get_TypeVariesBasedOnMemberType
bool Zenject::SubContainerDependencyProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::get_TypeVariesBasedOnMemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetInstanceType
System::Type* Zenject::SubContainerDependencyProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::GetInstanceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.CreateSubContext
Zenject::InjectContext* Zenject::SubContainerDependencyProvider::CreateSubContext(Zenject::InjectContext* parent, Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(subContainer)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, parent, subContainer);
}
// Autogenerated method: Zenject.SubContainerDependencyProvider.GetAllInstancesWithInjectSplit
void Zenject::SubContainerDependencyProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerDependencyProvider::GetAllInstancesWithInjectSplit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractIndependentType<System::Action*&>(), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider
#include "Zenject/TransientProvider.hpp"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider.get_IsCached
bool Zenject::TransientProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::get_IsCached");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.get_TypeVariesBasedOnMemberType
bool Zenject::TransientProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::get_TypeVariesBasedOnMemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeVariesBasedOnMemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransientProvider.GetInstanceType
System::Type* Zenject::TransientProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetInstanceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.TransientProvider.GetAllInstancesWithInjectSplit
void Zenject::TransientProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetAllInstancesWithInjectSplit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllInstancesWithInjectSplit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractIndependentType<System::Action*&>(), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
// Autogenerated method: Zenject.TransientProvider.GetTypeToCreate
System::Type* Zenject::TransientProvider::GetTypeToCreate(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::GetTypeToCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeToCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TransientProvider/<>c__DisplayClass11_0
#include "Zenject/TransientProvider_--c__DisplayClass11_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TransientProvider/<>c__DisplayClass11_0.<GetAllInstancesWithInjectSplit>b__0
void Zenject::TransientProvider::$$c__DisplayClass11_0::$GetAllInstancesWithInjectSplit$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TransientProvider::$$c__DisplayClass11_0::<GetAllInstancesWithInjectSplit>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAllInstancesWithInjectSplit>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorIkHandlerManager
#include "Zenject/AnimatorIkHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorIkHandlerManager.Construct
void Zenject::AnimatorIkHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorIkHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorIkHandlerManager::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handlers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorIkHandlerManager.OnAnimatorIk
void Zenject::AnimatorIkHandlerManager::OnAnimatorIk() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorIkHandlerManager::OnAnimatorIk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorInstaller
#include "Zenject/AnimatorInstaller.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorInstaller.InstallBindings
void Zenject::AnimatorInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.AnimatorMoveHandlerManager
#include "Zenject/AnimatorMoveHandlerManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.Construct
void Zenject::AnimatorMoveHandlerManager::Construct(System::Collections::Generic::List_1<Zenject::IAnimatorMoveHandler*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorMoveHandlerManager::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handlers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handlers);
}
// Autogenerated method: Zenject.AnimatorMoveHandlerManager.OnAnimatorMove
void Zenject::AnimatorMoveHandlerManager::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::AnimatorMoveHandlerManager::OnAnimatorMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorIkHandler
#include "Zenject/IAnimatorIkHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorIkHandler.OnAnimatorIk
void Zenject::IAnimatorIkHandler::OnAnimatorIk() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IAnimatorIkHandler::OnAnimatorIk");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimatorIk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IAnimatorMoveHandler
#include "Zenject/IAnimatorMoveHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IAnimatorMoveHandler.OnAnimatorMove
void Zenject::IAnimatorMoveHandler::OnAnimatorMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IAnimatorMoveHandler::OnAnimatorMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAnimatorMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.Add
void Zenject::DisposableManager::Add(System::IDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.AddLate
void Zenject::DisposableManager::AddLate(Zenject::ILateDisposable* disposable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable, priority);
}
// Autogenerated method: Zenject.DisposableManager.Remove
void Zenject::DisposableManager::Remove(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.DisposableManager.LateDispose
void Zenject::DisposableManager::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::LateDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager.Dispose
void Zenject::DisposableManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_0
#include "Zenject/DisposableManager_--c__DisplayClass4_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_0.<.ctor>b__0
bool Zenject::DisposableManager::$$c__DisplayClass4_0::$_ctor$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass4_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass4_1
#include "Zenject/DisposableManager_--c__DisplayClass4_1.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass4_1.<.ctor>b__2
bool Zenject::DisposableManager::$$c__DisplayClass4_1::$_ctor$b__2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass4_1::<.ctor>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c
#include "Zenject/DisposableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DisposableManager/LateDisposableInfo
#include "Zenject/DisposableManager_LateDisposableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.DisposableManager/<>c <>9
Zenject::DisposableManager::$$c* Zenject::DisposableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DisposableManager::$$c*>("Zenject", "DisposableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.DisposableManager/<>c <>9
void Zenject::DisposableManager::$$c::_set_$$9(Zenject::DisposableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_1
void Zenject::DisposableManager::$$c::_set_$$9__4_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::DisposableManager::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "DisposableManager/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__4_3
void Zenject::DisposableManager::$$c::_set_$$9__4_3(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* Zenject::DisposableManager::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>*>("Zenject", "DisposableManager/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/LateDisposableInfo,System.Int32> <>9__10_0
void Zenject::DisposableManager::$$c::_set_$$9__10_0(System::Func_2<Zenject::DisposableManager::LateDisposableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* Zenject::DisposableManager::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DisposableManager::DisposableInfo, int>*>("Zenject", "DisposableManager/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.DisposableManager/DisposableInfo,System.Int32> <>9__11_0
void Zenject::DisposableManager::$$c::_set_$$9__11_0(System::Func_2<Zenject::DisposableManager::DisposableInfo, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "DisposableManager/<>c", "<>9__11_0", value)));
}
// Autogenerated method: Zenject.DisposableManager/<>c..cctor
void Zenject::DisposableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "DisposableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_1
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<.ctor>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<.ctor>b__4_3
System::Nullable_1<int> Zenject::DisposableManager::$$c::$_ctor$b__4_3(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<.ctor>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__4_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<LateDispose>b__10_0
int Zenject::DisposableManager::$$c::$LateDispose$b__10_0(Zenject::DisposableManager::LateDisposableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<LateDispose>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LateDispose>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.DisposableManager/<>c.<Dispose>b__11_0
int Zenject::DisposableManager::$$c::$Dispose$b__11_0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c::<Dispose>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Dispose>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DisposableManager/<>c__DisplayClass9_0
#include "Zenject/DisposableManager_--c__DisplayClass9_0.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Zenject.DisposableManager/DisposableInfo
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.DisposableManager/<>c__DisplayClass9_0.<Remove>b__0
bool Zenject::DisposableManager::$$c__DisplayClass9_0::$Remove$b__0(Zenject::DisposableManager::DisposableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DisposableManager::$$c__DisplayClass9_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager
#include "Zenject/GuiRenderableManager.hpp"
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.GuiRenderableManager/<>c
#include "Zenject/GuiRenderableManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager.OnGui
void Zenject::GuiRenderableManager::OnGui() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::OnGui");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGui", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/<>c__DisplayClass1_0
#include "Zenject/GuiRenderableManager_--c__DisplayClass1_0.hpp"
// Including type: Zenject.IGuiRenderable
#include "Zenject/IGuiRenderable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderableManager/<>c__DisplayClass1_0.<.ctor>b__1
bool Zenject::GuiRenderableManager::$$c__DisplayClass1_0::$_ctor$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c__DisplayClass1_0::<.ctor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderableManager/<>c
#include "Zenject/GuiRenderableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.GuiRenderableManager/RenderableInfo
#include "Zenject/GuiRenderableManager_RenderableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.GuiRenderableManager/<>c <>9
Zenject::GuiRenderableManager::$$c* Zenject::GuiRenderableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::GuiRenderableManager::$$c*>("Zenject", "GuiRenderableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.GuiRenderableManager/<>c <>9
void Zenject::GuiRenderableManager::$$c::_set_$$9(Zenject::GuiRenderableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__1_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::GuiRenderableManager::$$c::_get_$$9__1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9__1_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "GuiRenderableManager/<>c", "<>9__1_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__1_2
void Zenject::GuiRenderableManager::$$c::_set_$$9__1_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9__1_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9__1_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.GuiRenderableManager/RenderableInfo,System.Int32> <>9__1_0
System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>* Zenject::GuiRenderableManager::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>*>("Zenject", "GuiRenderableManager/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.GuiRenderableManager/RenderableInfo,System.Int32> <>9__1_0
void Zenject::GuiRenderableManager::$$c::_set_$$9__1_0(System::Func_2<Zenject::GuiRenderableManager::RenderableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "GuiRenderableManager/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c..cctor
void Zenject::GuiRenderableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GuiRenderableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c.<.ctor>b__1_2
int Zenject::GuiRenderableManager::$$c::$_ctor$b__1_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::<.ctor>b__1_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.GuiRenderableManager/<>c.<.ctor>b__1_0
int Zenject::GuiRenderableManager::$$c::$_ctor$b__1_0(Zenject::GuiRenderableManager::RenderableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderableManager::$$c::<.ctor>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GuiRenderer
#include "Zenject/GuiRenderer.hpp"
// Including type: Zenject.GuiRenderableManager
#include "Zenject/GuiRenderableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.GuiRenderer.Construct
void Zenject::GuiRenderer::Construct(Zenject::GuiRenderableManager* renderableManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderer::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderableManager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderableManager);
}
// Autogenerated method: Zenject.GuiRenderer.OnGUI
void Zenject::GuiRenderer::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GuiRenderer::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
// Including type: Zenject.InitializableManager/<>c__DisplayClass2_0
#include "Zenject/InitializableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.InitializableManager/<>c
#include "Zenject/InitializableManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InitializableManager.Add
void Zenject::InitializableManager::Add(Zenject::IInitializable* initializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initializable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initializable);
}
// Autogenerated method: Zenject.InitializableManager.Add
void Zenject::InitializableManager::Add(Zenject::IInitializable* initializable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initializable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initializable, priority);
}
// Autogenerated method: Zenject.InitializableManager.Initialize
void Zenject::InitializableManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/<>c__DisplayClass2_0
#include "Zenject/InitializableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InitializableManager/<>c__DisplayClass2_0.<.ctor>b__0
bool Zenject::InitializableManager::$$c__DisplayClass2_0::$_ctor$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c__DisplayClass2_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InitializableManager/<>c
#include "Zenject/InitializableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InitializableManager/InitializableInfo
#include "Zenject/InitializableManager_InitializableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.InitializableManager/<>c <>9
Zenject::InitializableManager::$$c* Zenject::InitializableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InitializableManager::$$c*>("Zenject", "InitializableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.InitializableManager/<>c <>9
void Zenject::InitializableManager::$$c::_set_$$9(Zenject::InitializableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__2_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::InitializableManager::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "InitializableManager/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__2_1
void Zenject::InitializableManager::$$c::_set_$$9__2_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.InitializableManager/InitializableInfo,System.Int32> <>9__5_0
System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>* Zenject::InitializableManager::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>*>("Zenject", "InitializableManager/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.InitializableManager/InitializableInfo,System.Int32> <>9__5_0
void Zenject::InitializableManager::$$c::_set_$$9__5_0(System::Func_2<Zenject::InitializableManager::InitializableInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InitializableManager/<>c", "<>9__5_0", value)));
}
// Autogenerated method: Zenject.InitializableManager/<>c..cctor
void Zenject::InitializableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InitializableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.InitializableManager/<>c.<.ctor>b__2_1
int Zenject::InitializableManager::$$c::$_ctor$b__2_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.InitializableManager/<>c.<Initialize>b__5_0
int Zenject::InitializableManager::$$c::$Initialize$b__5_0(Zenject::InitializableManager::InitializableInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InitializableManager::$$c::<Initialize>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Initialize>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DefaultGameObjectKernel
#include "Zenject/DefaultGameObjectKernel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Kernel.Initialize
void Zenject::Kernel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.Dispose
void Zenject::Kernel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.LateDispose
void Zenject::Kernel::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::LateDispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.Tick
void Zenject::Kernel::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::Tick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.LateTick
void Zenject::Kernel::LateTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::LateTick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Kernel.FixedTick
void Zenject::Kernel::FixedTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Kernel::FixedTick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.InitializableManager
#include "Zenject/InitializableManager.hpp"
// Including type: Zenject.DisposableManager
#include "Zenject/DisposableManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.MonoKernel.get_IsDestroyed
bool Zenject::MonoKernel::get_IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::get_IsDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Start
void Zenject::MonoKernel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Initialize
void Zenject::MonoKernel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.Update
void Zenject::MonoKernel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.FixedUpdate
void Zenject::MonoKernel::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.LateUpdate
void Zenject::MonoKernel::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::LateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoKernel.OnDestroy
void Zenject::MonoKernel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoKernel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProjectKernel
#include "Zenject/ProjectKernel.hpp"
// Including type: Zenject.ProjectKernel/<>c__DisplayClass4_0
#include "Zenject/ProjectKernel_--c__DisplayClass4_0.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProjectKernel.OnApplicationQuit
void Zenject::ProjectKernel::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectKernel.DestroyEverythingInOrder
void Zenject::ProjectKernel::DestroyEverythingInOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::DestroyEverythingInOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyEverythingInOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectKernel.ForceUnloadAllScenes
void Zenject::ProjectKernel::ForceUnloadAllScenes(bool immediate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::ForceUnloadAllScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceUnloadAllScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProjectKernel/<>c__DisplayClass4_0
#include "Zenject/ProjectKernel_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ProjectKernel/<>c__DisplayClass4_0.<ForceUnloadAllScenes>b__0
int Zenject::ProjectKernel::$$c__DisplayClass4_0::$ForceUnloadAllScenes$b__0(Zenject::SceneContext* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectKernel::$$c__DisplayClass4_0::<ForceUnloadAllScenes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ForceUnloadAllScenes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneKernel
#include "Zenject/SceneKernel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager
#include "Zenject/PoolableManager.hpp"
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass2_0
#include "Zenject/PoolableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.PoolableManager/<>c
#include "Zenject/PoolableManager_--c.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass3_0
#include "Zenject/PoolableManager_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager.CreatePoolableInfo
Zenject::PoolableManager::PoolableInfo Zenject::PoolableManager::CreatePoolableInfo(Zenject::IPoolable* poolable, System::Collections::Generic::List_1<ModestTree::Util::ValuePair_2<System::Type*, int>*>* priorities) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::CreatePoolableInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePoolableInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poolable), ::il2cpp_utils::ExtractType(priorities)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolableManager::PoolableInfo, false>(this, ___internal__method, poolable, priorities);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnSpawned
void Zenject::PoolableManager::TriggerOnSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::TriggerOnSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerOnSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnDespawned
void Zenject::PoolableManager::TriggerOnDespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::TriggerOnDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerOnDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c__DisplayClass2_0
#include "Zenject/PoolableManager_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager/<>c__DisplayClass2_0.<.ctor>b__0
Zenject::PoolableManager::PoolableInfo Zenject::PoolableManager::$$c__DisplayClass2_0::$_ctor$b__0(Zenject::IPoolable* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c__DisplayClass2_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolableManager::PoolableInfo, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c
#include "Zenject/PoolableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.PoolableManager/<>c <>9
Zenject::PoolableManager::$$c* Zenject::PoolableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PoolableManager::$$c*>("Zenject", "PoolableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.PoolableManager/<>c <>9
void Zenject::PoolableManager::$$c::_set_$$9(Zenject::PoolableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,System.Int32> <>9__2_1
System::Func_2<Zenject::PoolableManager::PoolableInfo, int>* Zenject::PoolableManager::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::PoolableManager::PoolableInfo, int>*>("Zenject", "PoolableManager/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,System.Int32> <>9__2_1
void Zenject::PoolableManager::$$c::_set_$$9__2_1(System::Func_2<Zenject::PoolableManager::PoolableInfo, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__2_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,Zenject.IPoolable> <>9__2_2
System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>* Zenject::PoolableManager::$$c::_get_$$9__2_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__2_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>*>("Zenject", "PoolableManager/<>c", "<>9__2_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.PoolableManager/PoolableInfo,Zenject.IPoolable> <>9__2_2
void Zenject::PoolableManager::$$c::_set_$$9__2_2(System::Func_2<Zenject::PoolableManager::PoolableInfo, Zenject::IPoolable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__2_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__2_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__3_1
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* Zenject::PoolableManager::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>*>("Zenject", "PoolableManager/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Nullable`1<System.Int32>> <>9__3_1
void Zenject::PoolableManager::$$c::_set_$$9__3_1(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Nullable_1<int>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolableManager/<>c", "<>9__3_1", value)));
}
// Autogenerated method: Zenject.PoolableManager/<>c..cctor
void Zenject::PoolableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<.ctor>b__2_1
int Zenject::PoolableManager::$$c::$_ctor$b__2_1(Zenject::PoolableManager::PoolableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<.ctor>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<.ctor>b__2_2
Zenject::IPoolable* Zenject::PoolableManager::$$c::$_ctor$b__2_2(Zenject::PoolableManager::PoolableInfo x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<.ctor>b__2_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IPoolable*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.PoolableManager/<>c.<CreatePoolableInfo>b__3_1
System::Nullable_1<int> Zenject::PoolableManager::$$c::$CreatePoolableInfo$b__3_1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c::<CreatePoolableInfo>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePoolableInfo>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager/<>c__DisplayClass3_0
#include "Zenject/PoolableManager_--c__DisplayClass3_0.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager/<>c__DisplayClass3_0.<CreatePoolableInfo>b__0
bool Zenject::PoolableManager::$$c__DisplayClass3_0::$CreatePoolableInfo$b__0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolableManager::$$c__DisplayClass3_0::<CreatePoolableInfo>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePoolableInfo>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContextRegistry.get_SceneContexts
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::SceneContextRegistry::get_SceneContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::get_SceneContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SceneContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContextRegistry.Add
void Zenject::SceneContextRegistry::Add(Zenject::SceneContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::GetSceneContextForScene(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneContextForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::GetSceneContextForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneContextForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::TryGetSceneContextForScene(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSceneContextForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetSceneContextForScene
Zenject::SceneContext* Zenject::SceneContextRegistry::TryGetSceneContextForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetSceneContextForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSceneContextForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.GetContainerForScene
Zenject::DiContainer* Zenject::SceneContextRegistry::GetContainerForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::GetContainerForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContainerForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.TryGetContainerForScene
Zenject::DiContainer* Zenject::SceneContextRegistry::TryGetContainerForScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::TryGetContainerForScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetContainerForScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContextRegistry.Remove
void Zenject::SceneContextRegistry::Remove(Zenject::SceneContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistry::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContextRegistryAdderAndRemover
#include "Zenject/SceneContextRegistryAdderAndRemover.hpp"
// Including type: Zenject.SceneContextRegistry
#include "Zenject/SceneContextRegistry.hpp"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SceneContextRegistryAdderAndRemover.Initialize
void Zenject::SceneContextRegistryAdderAndRemover::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistryAdderAndRemover::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContextRegistryAdderAndRemover.Dispose
void Zenject::SceneContextRegistryAdderAndRemover::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContextRegistryAdderAndRemover::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickablesTaskUpdater
#include "Zenject/TickablesTaskUpdater.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickablesTaskUpdater.UpdateItem
void Zenject::TickablesTaskUpdater::UpdateItem(Zenject::ITickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickablesTaskUpdater::UpdateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.LateTickablesTaskUpdater
#include "Zenject/LateTickablesTaskUpdater.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.LateTickablesTaskUpdater.UpdateItem
void Zenject::LateTickablesTaskUpdater::UpdateItem(Zenject::ILateTickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::LateTickablesTaskUpdater::UpdateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FixedTickablesTaskUpdater
#include "Zenject/FixedTickablesTaskUpdater.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.FixedTickablesTaskUpdater.UpdateItem
void Zenject::FixedTickablesTaskUpdater::UpdateItem(Zenject::IFixedTickable* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::FixedTickablesTaskUpdater::UpdateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager
#include "Zenject/TickableManager.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass17_0
#include "Zenject/TickableManager_--c__DisplayClass17_0.hpp"
// Including type: Zenject.TickableManager/<>c
#include "Zenject/TickableManager_--c.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass18_0
#include "Zenject/TickableManager_--c__DisplayClass18_0.hpp"
// Including type: Zenject.TickableManager/<>c__DisplayClass19_0
#include "Zenject/TickableManager_--c__DisplayClass19_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.TickablesTaskUpdater
#include "Zenject/TickablesTaskUpdater.hpp"
// Including type: Zenject.FixedTickablesTaskUpdater
#include "Zenject/FixedTickablesTaskUpdater.hpp"
// Including type: Zenject.LateTickablesTaskUpdater
#include "Zenject/LateTickablesTaskUpdater.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager.get_Tickables
System::Collections::Generic::IEnumerable_1<Zenject::ITickable*>* Zenject::TickableManager::get_Tickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::get_Tickables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tickables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ITickable*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.get_IsPaused
bool Zenject::TickableManager::get_IsPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::get_IsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.set_IsPaused
void Zenject::TickableManager::set_IsPaused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::set_IsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.TickableManager.Initialize
void Zenject::TickableManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitFixedTickables
void Zenject::TickableManager::InitFixedTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitFixedTickables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitFixedTickables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitTickables
void Zenject::TickableManager::InitTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitTickables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTickables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.InitLateTickables
void Zenject::TickableManager::InitLateTickables() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::InitLateTickables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitLateTickables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.Add
void Zenject::TickableManager::Add(Zenject::ITickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.Add
void Zenject::TickableManager::Add(Zenject::ITickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.AddLate
void Zenject::TickableManager::AddLate(Zenject::ILateTickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.AddLate
void Zenject::TickableManager::AddLate(Zenject::ILateTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.AddFixed
void Zenject::TickableManager::AddFixed(Zenject::IFixedTickable* tickable, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable), ::il2cpp_utils::ExtractType(priority)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable, priority);
}
// Autogenerated method: Zenject.TickableManager.AddFixed
void Zenject::TickableManager::AddFixed(Zenject::IFixedTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::AddFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.Remove
void Zenject::TickableManager::Remove(Zenject::ITickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.RemoveLate
void Zenject::TickableManager::RemoveLate(Zenject::ILateTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::RemoveLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.RemoveFixed
void Zenject::TickableManager::RemoveFixed(Zenject::IFixedTickable* tickable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::RemoveFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tickable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tickable);
}
// Autogenerated method: Zenject.TickableManager.Update
void Zenject::TickableManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.FixedUpdate
void Zenject::TickableManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TickableManager.LateUpdate
void Zenject::TickableManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c__DisplayClass17_0
#include "Zenject/TickableManager_--c__DisplayClass17_0.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager/<>c__DisplayClass17_0.<InitFixedTickables>b__1
bool Zenject::TickableManager::$$c__DisplayClass17_0::$InitFixedTickables$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c__DisplayClass17_0::<InitFixedTickables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c
#include "Zenject/TickableManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.TickableManager/<>c <>9
Zenject::TickableManager::$$c* Zenject::TickableManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::TickableManager::$$c*>("Zenject", "TickableManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.TickableManager/<>c <>9
void Zenject::TickableManager::$$c::_set_$$9(Zenject::TickableManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__17_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__17_0
void Zenject::TickableManager::$$c::_set_$$9__17_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__17_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__17_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__17_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__17_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__17_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__17_2
void Zenject::TickableManager::$$c::_set_$$9__17_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__17_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__17_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__18_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__18_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__18_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__18_0
void Zenject::TickableManager::$$c::_set_$$9__18_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__18_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__18_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__18_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__18_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__18_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__18_2
void Zenject::TickableManager::$$c::_set_$$9__18_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__18_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__18_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__19_0
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* Zenject::TickableManager::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>*>("Zenject", "TickableManager/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Type> <>9__19_0
void Zenject::TickableManager::$$c::_set_$$9__19_0(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__19_2
System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* Zenject::TickableManager::$$c::_get_$$9__19_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_get_$$9__19_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>*>("Zenject", "TickableManager/<>c", "<>9__19_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ModestTree.Util.ValuePair`2<System.Type,System.Int32>,System.Int32> <>9__19_2
void Zenject::TickableManager::$$c::_set_$$9__19_2(System::Func_2<ModestTree::Util::ValuePair_2<System::Type*, int>*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::_set_$$9__19_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "TickableManager/<>c", "<>9__19_2", value)));
}
// Autogenerated method: Zenject.TickableManager/<>c..cctor
void Zenject::TickableManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "TickableManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitFixedTickables>b__17_0
System::Type* Zenject::TickableManager::$$c::$InitFixedTickables$b__17_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitFixedTickables>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitFixedTickables>b__17_2
int Zenject::TickableManager::$$c::$InitFixedTickables$b__17_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitFixedTickables>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitFixedTickables>b__17_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitTickables>b__18_0
System::Type* Zenject::TickableManager::$$c::$InitTickables$b__18_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitTickables>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitTickables>b__18_2
int Zenject::TickableManager::$$c::$InitTickables$b__18_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitTickables>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__18_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitLateTickables>b__19_0
System::Type* Zenject::TickableManager::$$c::$InitLateTickables$b__19_0(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitLateTickables>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitLateTickables>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.TickableManager/<>c.<InitLateTickables>b__19_2
int Zenject::TickableManager::$$c::$InitLateTickables$b__19_2(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c::<InitLateTickables>b__19_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitLateTickables>b__19_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TickableManager/<>c__DisplayClass18_0
#include "Zenject/TickableManager_--c__DisplayClass18_0.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.TickableManager/<>c__DisplayClass18_0.<InitTickables>b__1
bool Zenject::TickableManager::$$c__DisplayClass18_0::$InitTickables$b__1(ModestTree::Util::ValuePair_2<System::Type*, int>* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TickableManager::$$c__DisplayClass18_0::<InitTickables>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitTickables>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
