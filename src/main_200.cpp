// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/RequestKickPlayerRpc
#include "GlobalNamespace/MenuRpcManager_RequestKickPlayerRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelCompletionResults/MultiplayerLevelEndState _levelEndState
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState& GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelEndState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndState"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelCompletionResults _levelCompletionResults
GlobalNamespace::LevelCompletionResults*& GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::dyn__levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCompletionResults"))->offset;
  return *reinterpret_cast<GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_levelEndState
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::get_levelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_levelEndState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelEndState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_levelCompletionResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelCompletionResults*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_hasAnyResults
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAnyResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_failedOrGivenUp
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failedOrGivenUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.Serialize
void GlobalNamespace::MultiplayerLevelCompletionResults::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CreateFromSerializedData
GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLevelCompletionResults*, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CompareTo
int GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelCompletionResults/MultiplayerLevelEndState
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Cleared
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Cleared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Cleared"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Cleared
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Cleared(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Cleared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Cleared", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Failed
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Failed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Failed(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState GivenUp
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_GivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_GivenUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "GivenUp"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState GivenUp
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_GivenUp(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_GivenUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "GivenUp", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState WasInactive
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_WasInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_WasInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "WasInactive"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState WasInactive
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_WasInactive(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_WasInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "WasInactive", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState StartupFailed
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_StartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_StartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "StartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState StartupFailed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_StartupFailed(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_StartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "StartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState HostEndedLevel
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_HostEndedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_HostEndedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "HostEndedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState HostEndedLevel
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_HostEndedLevel(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_HostEndedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "HostEndedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState ConnectedAfterLevelEnded
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_ConnectedAfterLevelEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_ConnectedAfterLevelEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "ConnectedAfterLevelEnded"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState ConnectedAfterLevelEnded
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_ConnectedAfterLevelEnded(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_ConnectedAfterLevelEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "ConnectedAfterLevelEnded", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Quit
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Quit
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Quit(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Quit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState None
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState None
void GlobalNamespace::MultiplayerLobbyState::_set_None(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbySetup
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbySetup"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbySetup
void GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbySetup", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbyCountdown
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbyCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbyCountdown
void GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbyCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameStarting
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameStarting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameStarting
void GlobalNamespace::MultiplayerLobbyState::_set_GameStarting(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameStarting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameRunning
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameRunning"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameRunning
void GlobalNamespace::MultiplayerLobbyState::_set_GameRunning(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameRunning", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState Error
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState Error
void GlobalNamespace::MultiplayerLobbyState::_set_Error(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerLobbyState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState None
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState None
void GlobalNamespace::MultiplayerGameState::_set_None(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Lobby
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Lobby
void GlobalNamespace::MultiplayerGameState::_set_Lobby(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Lobby", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Game
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Game"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Game
void GlobalNamespace::MultiplayerGameState::_set_Game(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Game", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerGameState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: MultiplayerSessionManager/<>c__DisplayClass97_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass97_0.hpp"
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerSessionState
::Il2CppString* GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerSessionManager", "kMultiplayerSessionState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerSessionState
void GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager", "kMultiplayerSessionState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MultiplayerSessionManager/MessageType,IConnectedPlayer> _packetSerializer
GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::MultiplayerSessionManager_MessageType, GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__packetSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::MultiplayerSessionManager_MessageType, GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _localPlayerState
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::MultiplayerSessionManager::dyn__localPlayerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__localPlayerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerState"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SynchronizedActionQueue _synchronizedActionQueue
GlobalNamespace::SynchronizedActionQueue*& GlobalNamespace::MultiplayerSessionManager::dyn__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__synchronizedActionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synchronizedActionQueue"))->offset;
  return *reinterpret_cast<GlobalNamespace::SynchronizedActionQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPlayerCount
int& GlobalNamespace::MultiplayerSessionManager::dyn__maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerSessionManager/ConnectionState _connectionState
GlobalNamespace::MultiplayerSessionManager::ConnectionState& GlobalNamespace::MultiplayerSessionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSessionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.Int32> _freeSortIndices
System::Collections::Generic::Queue_1<int>*& GlobalNamespace::MultiplayerSessionManager::dyn__freeSortIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__freeSortIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeSortIndices"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Queue_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectedEvent
System::Action*& GlobalNamespace::MultiplayerSessionManager::dyn_connectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_connectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> connectionFailedEvent
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::MultiplayerSessionManager::dyn_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_connectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionFailedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_playerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerConnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_playerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDisconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerAvatarChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerAvatarChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_playerAvatarChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAvatarChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerStateChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_playerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_playerStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStateChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> connectionOwnerStateChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::MultiplayerSessionManager::dyn_connectionOwnerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_connectionOwnerStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionOwnerStateChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> disconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MultiplayerSessionManager::dyn_disconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_disconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer <connectionOwner>k__BackingField
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerSessionManager::dyn_$connectionOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn_$connectionOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionOwner>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exclusiveConnectedPlayerManager
bool& GlobalNamespace::MultiplayerSessionManager::dyn__exclusiveConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__exclusiveConnectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exclusiveConnectedPlayerManager"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.set_connectionOwner
void GlobalNamespace::MultiplayerSessionManager::set_connectionOwner(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::set_connectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::MultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTime
float GlobalNamespace::MultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTimeDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::MultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.StartSession
void GlobalNamespace::MultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayerManager)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayerManager);
}
// Autogenerated method: MultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, maxPlayerCount);
}
// Autogenerated method: MultiplayerSessionManager.InitInternal
void GlobalNamespace::MultiplayerSessionManager::InitInternal(GlobalNamespace::MultiplayerSessionManager::SessionType sessionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sessionType);
}
// Autogenerated method: MultiplayerSessionManager.EndSession
void GlobalNamespace::MultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Disconnect
void GlobalNamespace::MultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformAtSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(action)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, syncTime, action);
}
// Autogenerated method: MultiplayerSessionManager.UpdateSynchronizedActions
void GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSynchronizedActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleReinitialized
void GlobalNamespace::MultiplayerSessionManager::HandleReinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleReinitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleReinitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnected
void GlobalNamespace::MultiplayerSessionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disconnectedReason);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnectionFailed
void GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reason);
}
// Autogenerated method: MultiplayerSessionManager.HandleSyncTimeInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerConnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerAvatarChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerAvatarChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerOrderChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(___instance_arg, ___internal__method, i);
}
// Autogenerated method: MultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(hasState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, hasState);
}
// Autogenerated method: MultiplayerSessionManager.KickPlayer
void GlobalNamespace::MultiplayerSessionManager::KickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::KickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: MultiplayerSessionManager.UpdateConnectionState
void GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState(GlobalNamespace::UpdateConnectionStateReason updateReason, GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateReason), ::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, updateReason, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MultiplayerSessionManager.TryUpdateConnectedPlayer
bool GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer(GlobalNamespace::IConnectedPlayer* player, bool isPlayerConnected) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryUpdateConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(isPlayerConnected)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, player, isPlayerConnected);
}
// Autogenerated method: MultiplayerSessionManager.GetNextAvailableSortIndex
int GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAvailableSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Start
void GlobalNamespace::MultiplayerSessionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Update
void GlobalNamespace::MultiplayerSessionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnDestroy
void GlobalNamespace::MultiplayerSessionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnApplicationPause
void GlobalNamespace::MultiplayerSessionManager::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pauseStatus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Player
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Player
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Spectator
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Spectator"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Spectator
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Spectator", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType DedicatedServer
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "DedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType DedicatedServer
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "DedicatedServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerSessionManager::SessionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/ConnectionState
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MultiplayerSessionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager/<>c__DisplayClass97_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass97_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSessionManager/<>c__DisplayClass97_0.<GetPlayerByUserId>b__0
bool GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::$GetPlayerByUserId$b__0(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::<GetPlayerByUserId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPlayerByUserId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MultiplayerSessionManager/<>c <>9
GlobalNamespace::MultiplayerSessionManager::$$c* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::$$c*>("", "MultiplayerSessionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MultiplayerSessionManager/<>c <>9
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9(GlobalNamespace::MultiplayerSessionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__103_0
System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__103_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__103_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IConnectedPlayer*, int>*>("", "MultiplayerSessionManager/<>c", "<>9__103_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__103_0
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__103_0(System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__103_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9__103_0", value)));
}
// Autogenerated method: MultiplayerSessionManager/<>c..cctor
void GlobalNamespace::MultiplayerSessionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerSessionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager/<>c.<TryUpdateConnectedPlayer>b__103_0
int GlobalNamespace::MultiplayerSessionManager::$$c::$TryUpdateConnectedPlayer$b__103_0(GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::<TryUpdateConnectedPlayer>b__103_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryUpdateConnectedPlayer>b__103_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkConstants
#include "GlobalNamespace/NetworkConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 kProtocolVersion
uint GlobalNamespace::NetworkConstants::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kProtocolVersion
void GlobalNamespace::NetworkConstants::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.String dedicatedServerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_dedicatedServerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_dedicatedServerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "dedicatedServerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String dedicatedServerState
void GlobalNamespace::NetworkConstants::_set_dedicatedServerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_dedicatedServerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "dedicatedServerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String playerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_playerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "playerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String playerState
void GlobalNamespace::NetworkConstants::_set_playerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_playerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "playerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String spectatingState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_spectatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_spectatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "spectatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String spectatingState
void GlobalNamespace::NetworkConstants::_set_spectatingState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_spectatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "spectatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String backgroundedState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_backgroundedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_backgroundedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "backgroundedState"));
}
// Autogenerated static field setter
// Set static field: static public System.String backgroundedState
void GlobalNamespace::NetworkConstants::_set_backgroundedState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_backgroundedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "backgroundedState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String terminatingState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_terminatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_terminatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "terminatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String terminatingState
void GlobalNamespace::NetworkConstants::_set_terminatingState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_terminatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "terminatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wantsToPlayNextLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wantsToPlayNextLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String wantsToPlayNextLevel
void GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wantsToPlayNextLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wasActiveAtLevelStart
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wasActiveAtLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public System.String wasActiveAtLevelStart
void GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wasActiveAtLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.String isActive
::Il2CppString* GlobalNamespace::NetworkConstants::_get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_isActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "isActive"));
}
// Autogenerated static field setter
// Set static field: static public System.String isActive
void GlobalNamespace::NetworkConstants::_set_isActive(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_isActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "isActive", value));
}
// Autogenerated static field getter
// Get static field: static public System.String finishedLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_finishedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_finishedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "finishedLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String finishedLevel
void GlobalNamespace::NetworkConstants::_set_finishedLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_finishedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "finishedLevel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkUtility
#include "GlobalNamespace/NetworkUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionKey
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionKey
void GlobalNamespace::NetworkUtility::_set__nameEncryptionKey(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionIv
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionIv() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionIv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionIv"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionIv
void GlobalNamespace::NetworkUtility::_set__nameEncryptionIv(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionIv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionIv", value));
}
// Autogenerated method: NetworkUtility..cctor
void GlobalNamespace::NetworkUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.Init
void GlobalNamespace::NetworkUtility::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashedUserId
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashedUserId(::Il2CppString* userId, GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashedUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userId, platform);
}
// Autogenerated method: NetworkUtility.EncryptName
::Il2CppString* GlobalNamespace::NetworkUtility::EncryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::EncryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "EncryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.DecryptName
::Il2CppString* GlobalNamespace::NetworkUtility::DecryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::DecryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "DecryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.GenerateId
::Il2CppString* GlobalNamespace::NetworkUtility::GenerateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GenerateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GenerateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashBase64
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashBase64(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashBase64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kEncryptedPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptedPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kPlaintextPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kPlaintextPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kPlaintextPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPlaintextPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch _stopwatch
System::Diagnostics::Stopwatch* GlobalNamespace::PacketEncryptionLayer::_get__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__stopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Stopwatch*>("", "PacketEncryptionLayer", "_stopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch _stopwatch
void GlobalNamespace::PacketEncryptionLayer::_set__stopwatch(System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__stopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_stopwatch", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly PacketEncryptionLayer/EncryptionStatistics statistics
GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics*& GlobalNamespace::PacketEncryptionLayer::dyn_statistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn_statistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statistics"))->offset;
  return *reinterpret_cast<GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,EncryptionUtility/IEncryptionState> _encryptionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, GlobalNamespace::EncryptionUtility::IEncryptionState*>*& GlobalNamespace::PacketEncryptionLayer::dyn__encryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn__encryptionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionStates"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, GlobalNamespace::EncryptionUtility::IEncryptionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPAddress,PacketEncryptionLayer/PendingEncryptionStateList> _pendingEncryptionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPAddress*, GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>*& GlobalNamespace::PacketEncryptionLayer::dyn__pendingEncryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn__pendingEncryptionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingEncryptionStates"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<System::Net::IPAddress*, GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _unencryptedTrafficFilter
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::dyn__unencryptedTrafficFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn__unencryptedTrafficFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unencryptedTrafficFilter"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterUnencryptedTraffic>k__BackingField
bool& GlobalNamespace::PacketEncryptionLayer::dyn_$filterUnencryptedTraffic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn_$filterUnencryptedTraffic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterUnencryptedTraffic>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <enableStatistics>k__BackingField
bool& GlobalNamespace::PacketEncryptionLayer::dyn_$enableStatistics$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::dyn_$enableStatistics$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<enableStatistics>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer.get_filterUnencryptedTraffic
bool GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_filterUnencryptedTraffic
void GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.get_enableStatistics
bool GlobalNamespace::PacketEncryptionLayer::get_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_enableStatistics
void GlobalNamespace::PacketEncryptionLayer::set_enableStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.SetUnencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter(::Array<uint8_t>* unencryptedTrafficFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUnencryptedTrafficFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unencryptedTrafficFilter)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, unencryptedTrafficFilter);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpoint
GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(___instance_arg, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpointAsync
System::Threading::Tasks::Task_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(___instance_arg, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.RemoveEncryptedEndpoint
bool GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(encryptedState)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, encryptedState);
}
// Autogenerated method: PacketEncryptionLayer.AddPendingEncryptedEndpointAsync
System::Threading::Tasks::Task* GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPendingEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.PollUpdate
void GlobalNamespace::PacketEncryptionLayer::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PollUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.RemoveAllEndpoints
void GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllEndpoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState(System::Net::IPEndPoint* endPoint, ByRef<GlobalNamespace::EncryptionUtility::IEncryptionState*> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, byref(state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPendingEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState(System::Net::IPEndPoint* endPoint, ByRef<GlobalNamespace::EncryptionUtility::IEncryptionState*> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, byref(state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPotentialPendingEncryptionStates
bool GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates(System::Net::IPEndPoint* endPoint, ByRef<::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*> encryptionStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPotentialPendingEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, byref(encryptionStates));
}
// Autogenerated method: PacketEncryptionLayer.PromotePendingEncryptionState
void GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PromotePendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.MatchesFilter
bool GlobalNamespace::PacketEncryptionLayer::MatchesFilter(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::MatchesFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ByRef<::Array<uint8_t>*> data, ByRef<int> offset, ByRef<int> length, ByRef<bool> encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length), byref(encrypted));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ByRef<::Array<uint8_t>*> data, ByRef<int> offset, ByRef<int> length, ByRef<bool> encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length), byref(encrypted));
}
// Autogenerated method: PacketEncryptionLayer.Log
void GlobalNamespace::PacketEncryptionLayer::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.LogV
void GlobalNamespace::PacketEncryptionLayer::LogV(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::LogV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "LogV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::Array<uint8_t>*> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ByRef<::Array<uint8_t>*> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, byref(data), byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedPlaintext
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedPlaintext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedEncrypted
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedEncrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedRejected
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsReceivedRejected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsReceivedRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentPlaintext
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentPlaintext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentPlaintext"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentEncrypted
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentEncrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentEncrypted"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentRejected
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__packetsSentRejected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetsSentRejected"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _encryptionProcessingTime
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__encryptionProcessingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _decryptionProcessingTime
int64_t& GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::dyn__decryptionProcessingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decryptionProcessingTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_encryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_decryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_decryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddEncryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddDecryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDecryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,EncryptionUtility/IEncryptionState> _pendingStatesByPort
System::Collections::Generic::Dictionary_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>*& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::dyn__pendingStatesByPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::dyn__pendingStatesByPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingStatesByPort"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.get_isEmpty
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Dispose
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.GetSortedEncryptionStates
::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortedEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(___instance_arg, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState(int port, ByRef<GlobalNamespace::EncryptionUtility::IEncryptionState*> encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, port, byref(encryptionState));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Add
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add(int port, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, port, encryptionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0.<GetSortedEncryptionStates>b__0
int GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::$GetSortedEncryptionStates$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::<GetSortedEncryptionStates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9(GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1(System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1", value)));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c..cctor
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c.<GetSortedEncryptionStates>b__4_1
GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::$GetSortedEncryptionStates$b__4_1(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::<GetSortedEncryptionStates>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(___instance_arg, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EncryptionUtility/IEncryptionState encryptionState
GlobalNamespace::EncryptionUtility::IEncryptionState*& GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::dyn_encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::dyn_encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encryptionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0.<Remove>b__0
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::$Remove$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EncryptionUtility/IEncryptionState> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_preMasterSecret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_serverRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
bool& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_isClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint*& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_preMasterSecret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_serverRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_clientRandom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
bool& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_isClient");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint*& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<PartyMessageHandler/MessageType,IConnectedPlayer> _serializer
GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::PartyMessageHandler::MessageType, GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::PartyMessageHandler::dyn__serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::dyn__serializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::PartyMessageHandler::MessageType, GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectedPlayerManager _connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::PartyMessageHandler::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler/ConnectToMasterServerDelegate connectToMasterServerEvent
GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate*& GlobalNamespace::PartyMessageHandler::dyn_connectToMasterServerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::dyn_connectToMasterServerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectToMasterServerEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyMessageHandler.add_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.Dispose
void GlobalNamespace::PartyMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PartyMessageHandler.ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServer(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler.HandleConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler/MessageType
#include "GlobalNamespace/PartyMessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ConnectToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer(GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ConnectToMasterServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PartyMessageHandler::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke(GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke(GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, selectionMask, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke(::Il2CppString* secret, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, secret, callback, object);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString*& GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PartyMessageHandler/ConnectToMasterServerMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Init
GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*, false>(___instance_arg, ___internal__method, secret);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Release
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<PlayerSpecificSettingsNetSerializable> <activePlayerSpecificSettingsAtGameStart>k__BackingField
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn_$activePlayerSpecificSettingsAtGameStart$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn_$activePlayerSpecificSettingsAtGameStart$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activePlayerSpecificSettingsAtGameStart>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _activePlayersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn__activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::dyn__activePlayersAtGameStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activePlayersAtGameStart"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayerSpecificSettingsAtGameStart
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.set_activePlayerSpecificSettingsAtGameStart
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHanded
bool& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_leftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean automaticPlayerHeight
bool& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_automaticPlayerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticPlayerHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
float& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headPosToPlayerHeightOffset
float& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_headPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_headPosToPlayerHeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosToPlayerHeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSchemeNetSerializable colorScheme
GlobalNamespace::ColorSchemeNetSerializable& GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::dyn_colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScheme"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSchemeNetSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerStateHash
#include "GlobalNamespace/PlayerStateHash.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::Il2CppString* GlobalNamespace::PlayerStateHash::_get_kToStringPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerStateHash", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::PlayerStateHash::_set_kToStringPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::Il2CppString* GlobalNamespace::PlayerStateHash::_get_kToStringSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerStateHash", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::PlayerStateHash::_set_kToStringSuffix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BitMask128 _bloomFilter
GlobalNamespace::BitMask128& GlobalNamespace::PlayerStateHash::dyn__bloomFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::dyn__bloomFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFilter"))->offset;
  return *reinterpret_cast<GlobalNamespace::BitMask128*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerStateHash.Contains
bool GlobalNamespace::PlayerStateHash::Contains(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.AddState
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::AddState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::AddState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(*this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.Serialize
void GlobalNamespace::PlayerStateHash::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: PlayerStateHash.CreateFromSerializedData
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(*this, ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.Deserialize
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.ToShortString
::Il2CppString* GlobalNamespace::PlayerStateHash::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToShortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.ToBytes
::Array<uint8_t>* GlobalNamespace::PlayerStateHash::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(GlobalNamespace::PlayerStateHash other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: PlayerStateHash.TryParse
bool GlobalNamespace::PlayerStateHash::TryParse(::Il2CppString* stringSerializedMask, ByRef<GlobalNamespace::PlayerStateHash> playerStateHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerStateHash&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, byref(playerStateHash));
}
// Autogenerated method: PlayerStateHash.Parse
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Parse(::Il2CppString* stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: PlayerStateHash.FromBytes
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::FromBytes(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: PlayerStateHash.ToString
::Il2CppString* GlobalNamespace::PlayerStateHash::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.GetHashCode
int GlobalNamespace::PlayerStateHash::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsNetSerializable <localPlayerSpecificSettings>k__BackingField
GlobalNamespace::PlayerSpecificSettingsNetSerializable*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$localPlayerSpecificSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$localPlayerSpecificSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localPlayerSpecificSettings>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpecificSettingsNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsAtStartNetSerializable <playersAtGameStartNetSerializable>k__BackingField
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$playersAtGameStartNetSerializable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn_$playersAtGameStartNetSerializable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playersAtGameStartNetSerializable>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_localPlayerSpecificSettings
GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_localPlayerSpecificSettings
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings(GlobalNamespace::PlayerSpecificSettingsNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStartNetSerializable
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_playersAtGameStartNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.GetPlayerSpecificSettingsForUserId
GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSpecificSettingsForUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.SaveFromNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playersAtGameStartNetSerializable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IConnectedPlayer player
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::dyn_player");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0.<SaveFromNetSerializable>b__0
bool GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::$SaveFromNetSerializable$b__0(GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::<SaveFromNetSerializable>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveFromNetSerializable>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ProfanityFilter/TrieNode _trie
GlobalNamespace::ProfanityFilter::TrieNode*& GlobalNamespace::ProfanityFilter::dyn__trie() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::dyn__trie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trie"))->offset;
  return *reinterpret_cast<GlobalNamespace::ProfanityFilter::TrieNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter.IsProfane
bool GlobalNamespace::ProfanityFilter::IsProfane(::Il2CppString* word) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::IsProfane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProfane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.GetLookalikeLetters
System::Collections::Generic::IEnumerable_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::GetLookalikeLetters(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::GetLookalikeLetters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLookalikeLetters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: ProfanityFilter.GetLeetEquivalent
::Il2CppChar GlobalNamespace::ProfanityFilter::GetLeetEquivalent(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::GetLeetEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLeetEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Char,ProfanityFilter/TrieNode> _children
System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>*& GlobalNamespace::ProfanityFilter::TrieNode::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shortestWord
int& GlobalNamespace::ProfanityFilter::TrieNode::dyn__shortestWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::dyn__shortestWord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortestWord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter/TrieNode.AddWord
void GlobalNamespace::ProfanityFilter::TrieNode::AddWord(::Il2CppString* word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, word, index);
}
// Autogenerated method: ProfanityFilter/TrieNode.IsMatch
bool GlobalNamespace::ProfanityFilter::TrieNode::IsMatch(::Il2CppString* word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, word, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char <>2__current
::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char c
::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char <>3__c
::Il2CppChar& GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$3__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::dyn_$$3__c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__c"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerator<System.Char>.get_Current
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerator$System_Char$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerator<System.Char>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Char>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.IDisposable.Dispose
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.MoveNext
bool GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemoteProcedureCall
#include "GlobalNamespace/RemoteProcedureCall.hpp"
// Including type: RemoteProcedureCall/TypeWrapper`1
#include "GlobalNamespace/RemoteProcedureCall_TypeWrapper_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <syncTime>k__BackingField
float& GlobalNamespace::RemoteProcedureCall::dyn_$syncTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::dyn_$syncTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<syncTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RemoteProcedureCall.get_syncTime
float GlobalNamespace::RemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.set_syncTime
void GlobalNamespace::RemoteProcedureCall::set_syncTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::set_syncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RemoteProcedureCall.SerializeData
void GlobalNamespace::RemoteProcedureCall::SerializeData(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::SerializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: RemoteProcedureCall.DeserializeData
void GlobalNamespace::RemoteProcedureCall::DeserializeData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::DeserializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: RemoteProcedureCall.Release
void GlobalNamespace::RemoteProcedureCall::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.Init
GlobalNamespace::IRemoteProcedureCall* GlobalNamespace::RemoteProcedureCall::Init(float syncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IRemoteProcedureCall*, false>(___instance_arg, ___internal__method, syncTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kGranularity
int64_t GlobalNamespace::RollingAverage::_get_kGranularity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get_kGranularity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "RollingAverage", "kGranularity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kGranularity
void GlobalNamespace::RollingAverage::_set_kGranularity(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set_kGranularity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RollingAverage", "kGranularity", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _currentTotal
int64_t& GlobalNamespace::RollingAverage::dyn__currentTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::dyn__currentTotal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTotal"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentAverage
float& GlobalNamespace::RollingAverage::dyn__currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::dyn__currentAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentAverage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64[] _buffer
::Array<int64_t>*& GlobalNamespace::RollingAverage::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Array<int64_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& GlobalNamespace::RollingAverage::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& GlobalNamespace::RollingAverage::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RollingAverage.get_currentAverage
float GlobalNamespace::RollingAverage::get_currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::get_currentAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RollingAverage.get_hasValue
bool GlobalNamespace::RollingAverage::get_hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::get_hasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: RollingAverage.Update
void GlobalNamespace::RollingAverage::Update(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: RollingAverage.Reset
void GlobalNamespace::RollingAverage::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RpcPool
#include "GlobalNamespace/RpcPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: IPacketPool
#include "GlobalNamespace/IPacketPool.hpp"
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>* GlobalNamespace::RpcPool::_get__pools() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::_get__pools");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>*>("", "RpcPool", "_pools")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
void GlobalNamespace::RpcPool::_set__pools(System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::_set__pools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RpcPool", "_pools", value));
}
// Autogenerated method: RpcPool.Release
void GlobalNamespace::RpcPool::Release(GlobalNamespace::IRemoteProcedureCall* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RpcPool", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SceneStartHandler
#include "GlobalNamespace/SceneStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SceneStartHandler::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SceneStartHandler::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*& GlobalNamespace::SceneStartHandler::dyn__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__playersAtGameStartModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersAtGameStartModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayersSpecificSettingsAtGameStartModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::SceneStartHandler::dyn__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__readyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyPlayers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,PlayerSpecificSettingsNetSerializable> _playersSpecificSettings
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& GlobalNamespace::SceneStartHandler::dyn__playersSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__playersSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersSpecificSettings"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& GlobalNamespace::SceneStartHandler::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sessionGameId
::Il2CppString*& GlobalNamespace::SceneStartHandler::dyn__sessionGameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn__sessionGameId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sessionGameId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidFinishEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneSetupDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidReceiveTooLateEvent
System::Action_1<::Il2CppString*>*& GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidReceiveTooLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::dyn_sceneSetupDidReceiveTooLateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneSetupDidReceiveTooLateEvent"))->offset;
  return *reinterpret_cast<System::Action_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.Dispose
void GlobalNamespace::SceneStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SceneStartHandler.GetSceneLoadStatus
void GlobalNamespace::SceneStartHandler::GetSceneLoadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::GetSceneLoadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneLoadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SceneStartHandler.ForceStart
void GlobalNamespace::SceneStartHandler::ForceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, playerSpecificSettings);
}
// Autogenerated method: SceneStartHandler.HandleGetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneSyncFinished
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::Il2CppString* sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.HandleSetPlayerDidConnectLate
void GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate(::Il2CppString* userId, ::Il2CppString* failedUserId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::Il2CppString* sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(failedUserId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, failedUserId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.AddPlayerSpecificSettingsToDictionary
void GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary(GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayerSpecificSettingsToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettingsNetSerializable)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, playerSpecificSettingsNetSerializable);
}
// Autogenerated method: SceneStartHandler.CreatePlayersSpecificSettingsAtGameStartData
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayersSpecificSettingsAtGameStartData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SecureRandomProvider
#include "GlobalNamespace/SecureRandomProvider.hpp"
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
GlobalNamespace::SecureRandomProvider::SecureRandomState* GlobalNamespace::SecureRandomProvider::_get__secureRandomState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::_get__secureRandomState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SecureRandomProvider::SecureRandomState*>("", "SecureRandomProvider", "_secureRandomState"));
}
// Autogenerated static field setter
// Set static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
void GlobalNamespace::SecureRandomProvider::_set__secureRandomState(GlobalNamespace::SecureRandomProvider::SecureRandomState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::_set__secureRandomState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider", "_secureRandomState", value));
}
// Autogenerated method: SecureRandomProvider..cctor
void GlobalNamespace::SecureRandomProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
::Array<uint8_t>* GlobalNamespace::SecureRandomProvider::GetBytes(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length);
}
// Autogenerated method: SecureRandomProvider.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::Array<uint8_t>* buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kBufferSize
int GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SecureRandomProvider/SecureRandomState", "kBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBufferSize
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider/SecureRandomState", "kBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.RNGCryptoServiceProvider _random
System::Security::Cryptography::RNGCryptoServiceProvider*& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::RNGCryptoServiceProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer0
::Array<uint8_t>*& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomBuffer0"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer1
::Array<uint8_t>*& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__randomBuffer1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomBuffer1"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetBytes
void GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes(::Array<uint8_t>* buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.FillBuffer
void GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallSize
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallSize
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeSize
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeSize
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxMaxCapacity", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheSmall
System::Collections::Generic::List_1<::Array<uint8_t>*>*& GlobalNamespace::SmallBufferPool::dyn__cacheSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::dyn__cacheSmall");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheSmall"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMedium
System::Collections::Generic::List_1<::Array<uint8_t>*>*& GlobalNamespace::SmallBufferPool::dyn__cacheMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::dyn__cacheMedium");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheMedium"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheLarge
System::Collections::Generic::List_1<::Array<uint8_t>*>*& GlobalNamespace::SmallBufferPool::dyn__cacheLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::dyn__cacheLarge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheLarge"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMax
System::Collections::Generic::List_1<::Array<uint8_t>*>*& GlobalNamespace::SmallBufferPool::dyn__cacheMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::dyn__cacheMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheMax"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmallBufferPool.GetBuffer
::Array<uint8_t>* GlobalNamespace::SmallBufferPool::GetBuffer(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method, length);
}
// Autogenerated method: SmallBufferPool.ReleaseBuffer
void GlobalNamespace::SmallBufferPool::ReleaseBuffer(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedStartDelay
float GlobalNamespace::SongStartHandler::_get_kFixedStartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get_kFixedStartDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartHandler", "kFixedStartDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedStartDelay
void GlobalNamespace::SongStartHandler::_set_kFixedStartDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set_kFixedStartDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartHandler", "kFixedStartDelay", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SongStartHandler::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager*& GlobalNamespace::SongStartHandler::dyn__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__gameplayRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayRpcManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*& GlobalNamespace::SongStartHandler::dyn__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__playersAtGameStartModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersAtGameStartModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayersSpecificSettingsAtGameStartModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::SongStartHandler::dyn__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__readyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyPlayers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& GlobalNamespace::SongStartHandler::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float& GlobalNamespace::SongStartHandler::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> setSongStartSyncTimeEvent
System::Action_1<float>*& GlobalNamespace::SongStartHandler::dyn_setSongStartSyncTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::dyn_setSongStartSyncTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSongStartSyncTimeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongStartHandler.get_songStartSyncTime
float GlobalNamespace::SongStartHandler::get_songStartSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::get_songStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongStartHandler.add_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.remove_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.GetLevelStartTimeOffset
void GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelStartTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongStartHandler.Dispose
void GlobalNamespace::SongStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongStartHandler.ForceStart
void GlobalNamespace::SongStartHandler::ForceStart(::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sessionGameId);
}
// Autogenerated method: SongStartHandler.StartSong
void GlobalNamespace::SongStartHandler::StartSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongStartHandler.HandleSetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady(::Il2CppString* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleGetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady(::Il2CppString* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleSetSongStartTime
void GlobalNamespace::SongStartHandler::HandleSetSongStartTime(::Il2CppString* user, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleSetSongStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user), ::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, user, time);
}
// Autogenerated method: SongStartHandler.Log
void GlobalNamespace::SongStartHandler::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SortExtensions
#include "GlobalNamespace/SortExtensions.hpp"
// Including type: SortExtensions/<>c__DisplayClass1_0`1
#include "GlobalNamespace/SortExtensions_--c__DisplayClass1_0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior
#include "GlobalNamespace/StandaloneMonobehavior.hpp"
// Including type: StandaloneMonobehavior/<AfterOneFrame>d__18
#include "GlobalNamespace/StandaloneMonobehavior_-AfterOneFrame-d__18.hpp"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__21.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isReady
bool& GlobalNamespace::StandaloneMonobehavior::dyn__isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::dyn__isReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float& GlobalNamespace::StandaloneMonobehavior::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FrameTiming[] _lastFrameTimings
::Array<UnityEngine::FrameTiming>*& GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameTimings"))->offset;
  return *reinterpret_cast<::Array<UnityEngine::FrameTiming>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameTimeCount
int& GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::dyn__lastFrameTimeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameTimeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior.get_objectLifeTime
float GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectLifeTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_deltaTime
float GlobalNamespace::StandaloneMonobehavior::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_lastFrameTime
float GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_isReady
bool GlobalNamespace::StandaloneMonobehavior::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_isReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Awake
void GlobalNamespace::StandaloneMonobehavior::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Start
void GlobalNamespace::StandaloneMonobehavior::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Update
void GlobalNamespace::StandaloneMonobehavior::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnDestroy
void GlobalNamespace::StandaloneMonobehavior::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnApplicationPause
void GlobalNamespace::StandaloneMonobehavior::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pauseStatus);
}
// Autogenerated method: StandaloneMonobehavior.WhenReady
void GlobalNamespace::StandaloneMonobehavior::WhenReady(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::WhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.AfterOneFrame
System::Collections::IEnumerator* GlobalNamespace::StandaloneMonobehavior::AfterOneFrame(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::AfterOneFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterOneFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.RunAsync
System::Threading::Tasks::Task* GlobalNamespace::StandaloneMonobehavior::RunAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::RunAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.RunAsyncCoroutine
System::Collections::IEnumerator* GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine(System::Threading::Tasks::TaskCompletionSource_1<bool>* tcs, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsyncCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tcs), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, tcs, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.GetLastFrameTime
float GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior/<AfterOneFrame>d__18
#include "GlobalNamespace/StandaloneMonobehavior_-AfterOneFrame-d__18.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
GlobalNamespace::StandaloneMonobehavior*& GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandaloneMonobehavior**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
System::Action*& GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.IDisposable.Dispose
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.MoveNext
bool GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__21.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
GlobalNamespace::StandaloneMonobehavior*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandaloneMonobehavior**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.IDisposable.Dispose
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.MoveNext
bool GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncState
#include "GlobalNamespace/NodePoseSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _head
GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::dyn__head");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _leftController
GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::dyn__leftController");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _rightController
GlobalNamespace::PoseSerializable& GlobalNamespace::NodePoseSyncState::dyn__rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::dyn__rightController");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PoseSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncState.Serialize
void GlobalNamespace::NodePoseSyncState::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncState.Deserialize
void GlobalNamespace::NodePoseSyncState::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncState.SetState
void GlobalNamespace::NodePoseSyncState::SetState(GlobalNamespace::NodePoseSyncState_NodePose nodePose, GlobalNamespace::PoseSerializable pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, nodePose, pose);
}
// Autogenerated method: NodePoseSyncState.GetState
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::GetState(GlobalNamespace::NodePoseSyncState_NodePose nodePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(*this, ___internal__method, nodePose);
}
// Autogenerated method: NodePoseSyncState.Equals
bool GlobalNamespace::NodePoseSyncState::Equals(ByRef<GlobalNamespace::NodePoseSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated method: NodePoseSyncState.GetDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::GetDelta(ByRef<GlobalNamespace::NodePoseSyncState> latest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latest)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, byref(latest));
}
// Autogenerated method: NodePoseSyncState.ApplyDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::ApplyDelta(ByRef<GlobalNamespace::NodePoseSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, byref(delta));
}
// Autogenerated method: NodePoseSyncState.GetSize
int GlobalNamespace::NodePoseSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_GetDelta(ByRef<GlobalNamespace::NodePoseSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, byref(stateTable));
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_ApplyDelta(ByRef<GlobalNamespace::NodePoseSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, byref(delta));
}
// Autogenerated method: NodePoseSyncState.IEquatableByReference<NodePoseSyncState>.Equals
bool GlobalNamespace::NodePoseSyncState::IEquatableByReference$NodePoseSyncState$_Equals(ByRef<GlobalNamespace::NodePoseSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IEquatableByReference<NodePoseSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<NodePoseSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketPool`1<NodePoseSyncStateDeltaNetSerializable> pool
GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*>("", "NodePoseSyncStateDeltaNetSerializable", "pool"));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketPool`1<NodePoseSyncStateDeltaNetSerializable> pool
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_pool(GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncStateDeltaNetSerializable", "pool", value));
}
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _delta
GlobalNamespace::NodePoseSyncState& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn__delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delta"))->offset;
  return *reinterpret_cast<GlobalNamespace::NodePoseSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
GlobalNamespace::SyncStateId& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<baseId>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
int& GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeOffsetMs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_baseId
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_delta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable..cctor
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateDeltaNetSerializable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.NoDomainReloadInit
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateDeltaNetSerializable", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _state
GlobalNamespace::NodePoseSyncState& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<GlobalNamespace::NodePoseSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
GlobalNamespace::SyncStateId& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float& GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_id
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_id
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_id(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_time
float GlobalNamespace::NodePoseSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_time
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_state
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_state
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_state(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosePrediction
#include "GlobalNamespace/PosePrediction.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PosePrediction.PredictPose
UnityEngine::Pose GlobalNamespace::PosePrediction::PredictPose(UnityEngine::Pose prev, float prevTime, UnityEngine::Pose curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::PredictPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePose
UnityEngine::Pose GlobalNamespace::PosePrediction::InterpolatePose(UnityEngine::Pose prev, UnityEngine::Pose curr, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::InterpolatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, curr, t);
}
// Autogenerated method: PosePrediction.PredictPoseSerializable
GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::PredictPoseSerializable(GlobalNamespace::PoseSerializable prev, float prevTime, GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::PredictPoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePoseSerializable
GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::InterpolatePoseSerializable(GlobalNamespace::PoseSerializable a, GlobalNamespace::PoseSerializable b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::InterpolatePoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncState
#include "GlobalNamespace/StandardScoreSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _modifiedScore
int& GlobalNamespace::StandardScoreSyncState::dyn__modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::dyn__modifiedScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rawScore
int& GlobalNamespace::StandardScoreSyncState::dyn__rawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::dyn__rawScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rawScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _immediateMaxPossibleRawScore
int& GlobalNamespace::StandardScoreSyncState::dyn__immediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::dyn__immediateMaxPossibleRawScore");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_immediateMaxPossibleRawScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _combo
int& GlobalNamespace::StandardScoreSyncState::dyn__combo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::dyn__combo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplier
int& GlobalNamespace::StandardScoreSyncState::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::dyn__multiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncState.SetState
void GlobalNamespace::StandardScoreSyncState::SetState(GlobalNamespace::StandardScoreSyncState_Score s, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, s, value);
}
// Autogenerated method: StandardScoreSyncState.GetDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::GetDelta(ByRef<GlobalNamespace::StandardScoreSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, byref(stateTable));
}
// Autogenerated method: StandardScoreSyncState.ApplyDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::ApplyDelta(ByRef<GlobalNamespace::StandardScoreSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, byref(delta));
}
// Autogenerated method: StandardScoreSyncState.GetState
int GlobalNamespace::StandardScoreSyncState::GetState(GlobalNamespace::StandardScoreSyncState_Score s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, s);
}
// Autogenerated method: StandardScoreSyncState.Serialize
void GlobalNamespace::StandardScoreSyncState::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncState.Deserialize
void GlobalNamespace::StandardScoreSyncState::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncState.Equals
bool GlobalNamespace::StandardScoreSyncState::Equals(ByRef<GlobalNamespace::StandardScoreSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated method: StandardScoreSyncState.GetSize
int GlobalNamespace::StandardScoreSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_GetDelta(ByRef<GlobalNamespace::StandardScoreSyncState> stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, byref(stateTable));
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_ApplyDelta(ByRef<GlobalNamespace::StandardScoreSyncState> delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, byref(delta));
}
// Autogenerated method: StandardScoreSyncState.IEquatableByReference<StandardScoreSyncState>.Equals
bool GlobalNamespace::StandardScoreSyncState::IEquatableByReference$StandardScoreSyncState$_Equals(ByRef<GlobalNamespace::StandardScoreSyncState> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IEquatableByReference<StandardScoreSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<StandardScoreSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, byref(other));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateDeltaNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateDeltaNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketPool`1<StandardScoreSyncStateDeltaNetSerializable> pool
GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>*>("", "StandardScoreSyncStateDeltaNetSerializable", "pool"));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketPool`1<StandardScoreSyncStateDeltaNetSerializable> pool
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_pool(GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncStateDeltaNetSerializable", "pool", value));
}
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _delta
GlobalNamespace::StandardScoreSyncState& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn__delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delta"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardScoreSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
GlobalNamespace::SyncStateId& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$baseId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<baseId>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
int& GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::dyn_$timeOffsetMs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeOffsetMs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_baseId
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_delta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable..cctor
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateDeltaNetSerializable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.NoDomainReloadInit
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateDeltaNetSerializable", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _state
GlobalNamespace::StandardScoreSyncState& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<GlobalNamespace::StandardScoreSyncState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
GlobalNamespace::SyncStateId& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::SyncStateId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float& GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>* GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_id
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_id
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_time
float GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_time
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_state
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_state
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SyncStateId
#include "GlobalNamespace/SyncStateId.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kMaxValue
uint8_t GlobalNamespace::SyncStateId::_get_kMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_get_kMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "SyncStateId", "kMaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kMaxValue
void GlobalNamespace::SyncStateId::_set_kMaxValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_set_kMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SyncStateId", "kMaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _id
uint8_t& GlobalNamespace::SyncStateId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::dyn__id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(GlobalNamespace::SyncStateId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SyncStateId.Increment
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.Serialize
void GlobalNamespace::SyncStateId::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: SyncStateId.SerializeWithFlag
void GlobalNamespace::SyncStateId::SerializeWithFlag(LiteNetLib::Utils::NetDataWriter* writer, bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::SerializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SerializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer, flag);
}
// Autogenerated method: SyncStateId.Deserialize
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SyncStateId.DeserializeWithFlag
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::DeserializeWithFlag(LiteNetLib::Utils::NetDataReader* reader, ByRef<bool> flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::DeserializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "DeserializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader, byref(flag));
}
// Autogenerated method: SyncStateId.CreateFromSerializedData
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(*this, ___internal__method, reader);
}
// Autogenerated method: SyncStateId.WithinRange
bool GlobalNamespace::SyncStateId::WithinRange(GlobalNamespace::SyncStateId a, GlobalNamespace::SyncStateId b, int range) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::WithinRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "WithinRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(range)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, range);
}
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: SyncStateId.GetHashCode
int GlobalNamespace::SyncStateId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.ToString
::Il2CppString* GlobalNamespace::SyncStateId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::SyncStateId& a, const GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SyncStateId.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::SyncStateId& a, const GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<SynchronizedActionQueue/SynchronizedAction> _synchronizedActionQueue
System::Collections::Generic::List_1<GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>*& GlobalNamespace::SynchronizedActionQueue::dyn__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::dyn__synchronizedActionQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_synchronizedActionQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SynchronizedActionQueue.Clear
void GlobalNamespace::SynchronizedActionQueue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SynchronizedActionQueue.EnqueueAction
void GlobalNamespace::SynchronizedActionQueue::EnqueueAction(float time, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::EnqueueAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnqueueAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(action)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time, action);
}
// Autogenerated method: SynchronizedActionQueue.Update
void GlobalNamespace::SynchronizedActionQueue::Update(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue/SynchronizedAction
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float& GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Action action
System::Action*& GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::dyn_action");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TaskExtensions
#include "GlobalNamespace/TaskExtensions.hpp"
// Including type: TaskExtensions/<>c__DisplayClass0_0`1
#include "GlobalNamespace/TaskExtensions_--c__DisplayClass0_0_1.hpp"
// Including type: TaskExtensions/<WaitForTask>d__1`1
#include "GlobalNamespace/TaskExtensions_-WaitForTask-d__1_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Init
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Init"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Init
void GlobalNamespace::UpdateConnectionStateReason::_set_Init(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason PlayerOrderChanged
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_PlayerOrderChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "PlayerOrderChanged"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason PlayerOrderChanged
void GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_PlayerOrderChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "PlayerOrderChanged", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason Connected
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason Connected
void GlobalNamespace::UpdateConnectionStateReason::_set_Connected(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartSession
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_StartSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartSession"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartSession
void GlobalNamespace::UpdateConnectionStateReason::_set_StartSession(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_StartSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartSession", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason StartDedicatedServer
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_StartDedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "StartDedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason StartDedicatedServer
void GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_StartDedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "StartDedicatedServer", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason SyncTimeInitialized
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_SyncTimeInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "SyncTimeInitialized"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason SyncTimeInitialized
void GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_SyncTimeInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "SyncTimeInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ManualDisconnect
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_ManualDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ManualDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ManualDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_ManualDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ManualDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason RemoteDisconnect
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_RemoteDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "RemoteDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason RemoteDisconnect
void GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_RemoteDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "RemoteDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason ConnectionFailed
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason ConnectionFailed
void GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "ConnectionFailed", value));
}
// Autogenerated static field getter
// Get static field: static public UpdateConnectionStateReason OnDestroy
GlobalNamespace::UpdateConnectionStateReason GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_get_OnDestroy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UpdateConnectionStateReason>("", "UpdateConnectionStateReason", "OnDestroy"));
}
// Autogenerated static field setter
// Set static field: static public UpdateConnectionStateReason OnDestroy
void GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy(GlobalNamespace::UpdateConnectionStateReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::_set_OnDestroy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UpdateConnectionStateReason", "OnDestroy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::UpdateConnectionStateReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UpdateConnectionStateReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UtcTimeProvider
#include "GlobalNamespace/UtcTimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE10048
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime _epoch
System::DateTime GlobalNamespace::UtcTimeProvider::_get__epoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::_get__epoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::DateTime>("", "UtcTimeProvider", "_epoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime _epoch
void GlobalNamespace::UtcTimeProvider::_set__epoch(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::_set__epoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UtcTimeProvider", "_epoch", value));
}
// Autogenerated method: UtcTimeProvider..cctor
void GlobalNamespace::UtcTimeProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UtcTimeProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UtcTimeProvider.GetTimeMs
int64_t GlobalNamespace::UtcTimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UtcTimeProvider.DelayMs
System::Threading::Tasks::Task* GlobalNamespace::UtcTimeProvider::DelayMs(int millis, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UtcTimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility
#include "GlobalNamespace/X509CertificateUtility.hpp"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: X509CertificateUtility.GetCertificateEncryptionProvider
GlobalNamespace::ICertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider(::Il2CppString* privateKeyPem, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ICertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, password);
}
// Autogenerated method: X509CertificateUtility.GetRSACertificateEncryptionProvider
GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider(::Il2CppString* privateKeyPem, GlobalNamespace::X509CertificateUtility::PasswordFinder* passwordFinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetRSACertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKeyPem), ::il2cpp_utils::ExtractType(passwordFinder)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, passwordFinder);
}
// Autogenerated method: X509CertificateUtility.GetCertificateList
::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>* GlobalNamespace::X509CertificateUtility::GetCertificateList(::Il2CppString* certificatePem, ::Il2CppString* certificateChainPem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::GetCertificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificatePem), ::il2cpp_utils::ExtractType(certificateChainPem)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificatePem, certificateChainPem);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChain
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChain(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainUnity
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainDotNet
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainDotNet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Char[] _password
::Array<::Il2CppChar>*& GlobalNamespace::X509CertificateUtility::PasswordFinder::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::PasswordFinder::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::Array<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: X509CertificateUtility/PasswordFinder.GetPassword
::Array<::Il2CppChar>* GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: Org.BouncyCastle.Crypto.ISigner
#include "Org/BouncyCastle/Crypto/ISigner.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.RsaPrivateCrtKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/RsaPrivateCrtKeyParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Crypto.ISigner _signer
Org::BouncyCastle::Crypto::ISigner*& GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::dyn__signer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::dyn__signer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signer"))->offset;
  return *reinterpret_cast<Org::BouncyCastle::Crypto::ISigner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.Dispose
void GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: X509CertificateUtility/RSACertificateEncryptionProvider.SignData
::Array<uint8_t>* GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider::SignData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly X509CertificateUtility/<>c <>9
GlobalNamespace::X509CertificateUtility::$$c* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::X509CertificateUtility::$$c*>("", "X509CertificateUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly X509CertificateUtility/<>c <>9
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9(GlobalNamespace::X509CertificateUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__6_0
System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>*>("", "X509CertificateUtility/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__6_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__6_0(System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__7_0
System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>*>("", "X509CertificateUtility/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Security.Cryptography.X509Certificates.X509ChainStatus,System.String> <>9__7_0
void GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__7_0(System::Func_2<System::Security::Cryptography::X509Certificates::X509ChainStatus, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "X509CertificateUtility/<>c", "<>9__7_0", value)));
}
// Autogenerated method: X509CertificateUtility/<>c..cctor
void GlobalNamespace::X509CertificateUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "X509CertificateUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainUnity>b__6_0
::Il2CppString* GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainUnity$b__6_0(System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainUnity>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainUnity>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated method: X509CertificateUtility/<>c.<ValidateCertificateChainDotNet>b__7_0
::Il2CppString* GlobalNamespace::X509CertificateUtility::$$c::$ValidateCertificateChainDotNet$b__7_0(System::Security::Cryptography::X509Certificates::X509ChainStatus s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::X509CertificateUtility::$$c::<ValidateCertificateChainDotNet>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ValidateCertificateChainDotNet>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ITimeProvider.GetTimeMs
int64_t MasterServer::ITimeProvider::GetTimeMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ITimeProvider::GetTimeMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ITimeProvider.DelayMs
System::Threading::Tasks::Task* MasterServer::ITimeProvider::DelayMs(int millis, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ITimeProvider::DelayMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millis), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, millis, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler
#include "MasterServer/BaseClientMessageHandler.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequest-d__18.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__19.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__20`1
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__20_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__21.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22
#include "MasterServer/BaseClientMessageHandler_-OnSendFailed-d__22.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailedAwaitResponse>d__23`1
#include "MasterServer/BaseClientMessageHandler_-OnSendFailedAwaitResponse-d__23_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24
#include "MasterServer/BaseClientMessageHandler_-ReauthenticateWithMasterServer-d__24.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServer-d__27.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternalVerbose-d__28.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternal-d__29.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass32_0.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
LiteNetLib::Utils::NetDataWriter* MasterServer::BaseClientMessageHandler::_get__authenticationDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_get__authenticationDataWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NetDataWriter*>("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter"));
}
// Autogenerated static field setter
// Set static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
void MasterServer::BaseClientMessageHandler::_set__authenticationDataWriter(LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::_set__authenticationDataWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServerEndPoint _endPoint
GlobalNamespace::MasterServerEndPoint*& MasterServer::BaseClientMessageHandler::dyn__endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPoint"))->offset;
  return *reinterpret_cast<GlobalNamespace::MasterServerEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ICertificateValidator _certificateValidator
GlobalNamespace::ICertificateValidator*& MasterServer::BaseClientMessageHandler::dyn__certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateValidator"))->offset;
  return *reinterpret_cast<GlobalNamespace::ICertificateValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _authenticationTask
System::Threading::Tasks::Task*& MasterServer::BaseClientMessageHandler::dyn__authenticationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__authenticationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.AuthenticationException _authenticationException
System::Security::Authentication::AuthenticationException*& MasterServer::BaseClientMessageHandler::dyn__authenticationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__authenticationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationException"))->offset;
  return *reinterpret_cast<System::Security::Authentication::AuthenticationException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
bool& MasterServer::BaseClientMessageHandler::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Threading.Tasks.Task> _orderedRequests
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>*& MasterServer::BaseClientMessageHandler::dyn__orderedRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::dyn__orderedRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderedRequests"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_endPoint
GlobalNamespace::MasterServerEndPoint* MasterServer::BaseClientMessageHandler::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MasterServerEndPoint*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticated
bool MasterServer::BaseClientMessageHandler::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_isAuthenticated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticating
bool MasterServer::BaseClientMessageHandler::get_isAuthenticating() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_isAuthenticating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_hasAuthenticationFailed
bool MasterServer::BaseClientMessageHandler::get_hasAuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::get_hasAuthenticationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAuthenticationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendOrderedAuthenticatedRequest
void MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequest(::Il2CppString* queue, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(queue), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, queue, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendOrderedAuthenticatedRequestAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequestAsync(System::Threading::Tasks::Task* previousTask, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendOrderedAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOrderedAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousTask), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, previousTask, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendAuthenticatedRequestAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::SendAuthenticatedRequestAsync(MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::SendAuthenticatedRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAuthenticatedRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.OnSendFailed
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::OnSendFailed(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::OnSendFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSendFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ReauthenticateWithMasterServer
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::ReauthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ReauthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReauthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.UnauthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::UnauthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::UnauthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnauthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsyncInternalVerbose
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternalVerbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternalVerbose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsyncInternalVerbose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsyncInternal
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithMasterServerAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::BaseClientMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.VerifySignature
System::Threading::Tasks::Task_1<bool>* MasterServer::BaseClientMessageHandler::VerifySignature(::Array<uint8_t>* clientRandom, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* serverKey, ::Array<uint8_t>* signature, ::Array<::Array<uint8_t>*>* certData) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(serverKey), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(certData)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, clientRandom, serverRandom, serverKey, signature, certData);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.HandshakeLog
void MasterServer::BaseClientMessageHandler::HandshakeLog(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.Dispose
void MasterServer::BaseClientMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::BaseClientMessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ShouldHandleHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::BaseClientMessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequest-d__18.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String queue
::Il2CppString*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_queue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task <task>5__2
System::Threading::Tasks::Task*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$task$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$task$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<task>5__2"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18.MoveNext
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequest>d__18.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequest$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19
#include "MasterServer/BaseClientMessageHandler_-SendOrderedAuthenticatedRequestAsync-d__19.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task previousTask
System::Threading::Tasks::Task*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_previousTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_previousTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19.MoveNext
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendOrderedAuthenticatedRequestAsync>d__19.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendOrderedAuthenticatedRequestAsync$d__19::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__21.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21.MoveNext
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<SendAuthenticatedRequestAsync>d__21.SetStateMachine
void MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$SendAuthenticatedRequestAsync$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22
#include "MasterServer/BaseClientMessageHandler_-OnSendFailed-d__22.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22.MoveNext
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<OnSendFailed>d__22.SetStateMachine
void MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$OnSendFailed$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24
#include "MasterServer/BaseClientMessageHandler_-ReauthenticateWithMasterServer-d__24.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24.MoveNext
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<ReauthenticateWithMasterServer>d__24.SetStateMachine
void MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$ReauthenticateWithMasterServer$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServer-d__27.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServer>d__27.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServer$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternalVerbose-d__28.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternalVerbose>d__28.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternalVerbose$d__28::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverPublicKey
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::dyn_serverPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::dyn_serverPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverPublicKey"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0.<AuthenticateWithMasterServerAsyncInternal>b__0
System::Threading::Tasks::Task_1<MasterServer::HelloVerifyRequest*>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::$AuthenticateWithMasterServerAsyncInternal$b__0(uint protocolVersion, System::Net::IPEndPoint* ep, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::<AuthenticateWithMasterServerAsyncInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithMasterServerAsyncInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(ep), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(ct)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::HelloVerifyRequest*>*, false>(___instance_arg, ___internal__method, protocolVersion, ep, request, ct);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0.<AuthenticateWithMasterServerAsyncInternal>b__1
System::Threading::Tasks::Task_1<::Array<uint8_t>*>* MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::$AuthenticateWithMasterServerAsyncInternal$b__1(System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0::<AuthenticateWithMasterServerAsyncInternal>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AuthenticateWithMasterServerAsyncInternal>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternal-d__29.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ServerHelloRequest
#include "MasterServer/ServerHelloRequest.hpp"
// Including type: MasterServer.ChangeCipherSpecRequest
#include "MasterServer/ChangeCipherSpecRequest.hpp"
// Including type: MasterServer.IMasterServerAuthenticateResponse
#include "MasterServer/IMasterServerAuthenticateResponse.hpp"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass29_0 <>8__1
MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler::$$c__DisplayClass29_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint <endPoint>5__2
System::Net::IPEndPoint*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$endPoint$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$endPoint$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<endPoint>5__2"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.IMasterServerAuthenticateRequest <authenticationRequest>5__3
MasterServer::IMasterServerAuthenticateRequest*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$authenticationRequest$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$authenticationRequest$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authenticationRequest>5__3"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerAuthenticateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <clientRandom>5__4
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$clientRandom$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$clientRandom$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientRandom>5__4"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<IDiffieHellmanKeyPair> <generateKeysTask>5__5
System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$generateKeysTask$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$generateKeysTask$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<generateKeysTask>5__5"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<GlobalNamespace::IDiffieHellmanKeyPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MasterServer.ServerCertificateRequest> <serverCertificateTask>5__6
System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$serverCertificateTask$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$serverCertificateTask$5__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverCertificateTask>5__6"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<MasterServer::ServerCertificateRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <serverRandom>5__7
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$serverRandom$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$serverRandom$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serverRandom>5__7"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <signature>5__8
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$signature$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$signature$5__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<signature>5__8"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <responseId>5__9
uint& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$responseId$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$responseId$5__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<responseId>5__9"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Byte[]> <getPreMasterSecretTask>5__10
System::Threading::Tasks::Task_1<::Array<uint8_t>*>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$getPreMasterSecretTask$5__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$getPreMasterSecretTask$5__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<getPreMasterSecretTask>5__10"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Boolean> <verifySignatureTask>5__11
System::Threading::Tasks::Task_1<bool>*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$verifySignatureTask$5__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$verifySignatureTask$5__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<verifySignatureTask>5__11"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <clientKeys>5__12
GlobalNamespace::IDiffieHellmanKeyPair*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$clientKeys$5__12() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$clientKeys$5__12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__12"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState <encryptionState>5__13
GlobalNamespace::EncryptionUtility::IEncryptionState*& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$encryptionState$5__13() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$encryptionState$5__13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<encryptionState>5__13"))->offset;
  return *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.IPEndPoint> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Net::IPEndPoint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateRequest> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.HelloVerifyRequest> <>u__3
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::HelloVerifyRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerHelloRequest> <>u__4
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__4"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerHelloRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ServerCertificateRequest> <>u__5
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__5"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ServerCertificateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__6
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__6"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__7
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__7"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ChangeCipherSpecRequest> <>u__8
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__8");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__8"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ChangeCipherSpecRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__9
System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__9");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__9"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__10
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__10() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__10"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.IMasterServerAuthenticateResponse> <>u__11
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*>& MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__11() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::dyn_$$u__11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__11"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::IMasterServerAuthenticateResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29.MoveNext
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<AuthenticateWithMasterServerAsyncInternal>d__29.SetStateMachine
void MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$AuthenticateWithMasterServerAsyncInternal$d__29::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass32_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_clientRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_serverRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverRandom"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverKey
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_serverKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_serverKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverKey"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[][] certData
::Array<::Array<uint8_t>*>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_certData() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_certData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certData"))->offset;
  return *reinterpret_cast<::Array<::Array<uint8_t>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseClientMessageHandler <>4__this
MasterServer::BaseClientMessageHandler*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::BaseClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] signature
::Array<uint8_t>*& MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::dyn_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseClientMessageHandler/MasterServer.<>c__DisplayClass32_0.<VerifySignature>b__0
bool MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::$VerifySignature$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseClientMessageHandler::$$c__DisplayClass32_0::<VerifySignature>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<VerifySignature>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseMasterServerMultipartMessage
#include "MasterServer/BaseMasterServerMultipartMessage.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kDataChunkSize
int MasterServer::BaseMasterServerMultipartMessage::_get_kDataChunkSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_kDataChunkSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "BaseMasterServerMultipartMessage", "kDataChunkSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDataChunkSize
void MasterServer::BaseMasterServerMultipartMessage::_set_kDataChunkSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_kDataChunkSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseMasterServerMultipartMessage", "kDataChunkSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaximumDataSize
int MasterServer::BaseMasterServerMultipartMessage::_get_kMaximumDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_get_kMaximumDataSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "BaseMasterServerMultipartMessage", "kMaximumDataSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaximumDataSize
void MasterServer::BaseMasterServerMultipartMessage::_set_kMaximumDataSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::_set_kMaximumDataSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseMasterServerMultipartMessage", "kMaximumDataSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 <multipartMessageId>k__BackingField
uint& MasterServer::BaseMasterServerMultipartMessage::dyn_$multipartMessageId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::dyn_$multipartMessageId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multipartMessageId>k__BackingField"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <offset>k__BackingField
int& MasterServer::BaseMasterServerMultipartMessage::dyn_$offset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::dyn_$offset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offset>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <length>k__BackingField
int& MasterServer::BaseMasterServerMultipartMessage::dyn_$length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::dyn_$length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <totalLength>k__BackingField
int& MasterServer::BaseMasterServerMultipartMessage::dyn_$totalLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::dyn_$totalLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalLength>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _data
::Array<uint8_t>*& MasterServer::BaseMasterServerMultipartMessage::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_multipartMessageId
uint MasterServer::BaseMasterServerMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_multipartMessageId
void MasterServer::BaseMasterServerMultipartMessage::set_multipartMessageId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_multipartMessageId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_offset
int MasterServer::BaseMasterServerMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_offset
void MasterServer::BaseMasterServerMultipartMessage::set_offset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_length
int MasterServer::BaseMasterServerMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_length
void MasterServer::BaseMasterServerMultipartMessage::set_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_totalLength
int MasterServer::BaseMasterServerMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.set_totalLength
void MasterServer::BaseMasterServerMultipartMessage::set_totalLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::set_totalLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.get_data
::Array<uint8_t>* MasterServer::BaseMasterServerMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Init
MasterServer::BaseMasterServerMultipartMessage* MasterServer::BaseMasterServerMultipartMessage::Init(uint multipartMessageId, ::Array<uint8_t>* data, int offset, int length, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipartMessageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(totalLength)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::BaseMasterServerMultipartMessage*, false>(___instance_arg, ___internal__method, multipartMessageId, data, offset, length, totalLength);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Serialize
void MasterServer::BaseMasterServerMultipartMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.BaseMasterServerMultipartMessage.Deserialize
void MasterServer::BaseMasterServerMultipartMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::BaseMasterServerMultipartMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IDedicatedServerClientToServerMessage
#include "MasterServer/IDedicatedServerClientToServerMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IDedicatedServerClientToServerMessage.get_dedicatedServerId
::Il2CppString* MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IDedicatedServerClientToServerMessage.get_dedicatedServerCreationTime
int64_t MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IDedicatedServerClientToServerMessage::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.AuthenticateDedicatedServerRequest
#include "MasterServer/AuthenticateDedicatedServerRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::AuthenticateDedicatedServerRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable nonce
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::AuthenticateDedicatedServerRequest::dyn_nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::dyn_nonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonce"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable hash
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::AuthenticateDedicatedServerRequest::dyn_hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::dyn_hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hash"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 timestamp
int64_t& MasterServer::AuthenticateDedicatedServerRequest::dyn_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::dyn_timestamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timestamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerRequest*>* MasterServer::AuthenticateDedicatedServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.get_dedicatedServerId
::Il2CppString* MasterServer::AuthenticateDedicatedServerRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::get_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.set_dedicatedServerId
void MasterServer::AuthenticateDedicatedServerRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Init
MasterServer::AuthenticateDedicatedServerRequest* MasterServer::AuthenticateDedicatedServerRequest::Init(::Il2CppString* dedicatedServerId, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateDedicatedServerRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Serialize
void MasterServer::AuthenticateDedicatedServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Deserialize
void MasterServer::AuthenticateDedicatedServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerRequest.Release
void MasterServer::AuthenticateDedicatedServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.AuthenticateDedicatedServerResponse
#include "MasterServer/AuthenticateDedicatedServerResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result result
MasterServer::AuthenticateDedicatedServerResponse::Result& MasterServer::AuthenticateDedicatedServerResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::AuthenticateDedicatedServerResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerResponse*>* MasterServer::AuthenticateDedicatedServerResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "AuthenticateDedicatedServerResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::AuthenticateDedicatedServerResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_isAuthenticated
bool MasterServer::AuthenticateDedicatedServerResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Init
MasterServer::AuthenticateDedicatedServerResponse* MasterServer::AuthenticateDedicatedServerResponse::Init(MasterServer::AuthenticateDedicatedServerResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::AuthenticateDedicatedServerResponse*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_resultCode
uint8_t MasterServer::AuthenticateDedicatedServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.get_resultCodeString
::Il2CppString* MasterServer::AuthenticateDedicatedServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Serialize
void MasterServer::AuthenticateDedicatedServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Deserialize
void MasterServer::AuthenticateDedicatedServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.AuthenticateDedicatedServerResponse.Release
void MasterServer::AuthenticateDedicatedServerResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result
#include "MasterServer/AuthenticateDedicatedServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Success
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Success
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Success(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Failed
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result Failed
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Failed(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result UnknownError
MasterServer::AuthenticateDedicatedServerResponse::Result MasterServer::AuthenticateDedicatedServerResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AuthenticateDedicatedServerResponse::Result>("MasterServer", "AuthenticateDedicatedServerResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AuthenticateDedicatedServerResponse/MasterServer.Result UnknownError
void MasterServer::AuthenticateDedicatedServerResponse::Result::_set_UnknownError(MasterServer::AuthenticateDedicatedServerResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AuthenticateDedicatedServerResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::AuthenticateDedicatedServerResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AuthenticateDedicatedServerResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateDedicatedServerInstanceRequest
#include "MasterServer/CreateDedicatedServerInstanceRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::CreateDedicatedServerInstanceRequest::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint userEndPoint
System::Net::IPEndPoint*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_userEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userRandom
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_userRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userRandom"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable userPublicKey
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceRequest::dyn_userPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_userPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration& MasterServer::CreateDedicatedServerInstanceRequest::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.get_pool
GlobalNamespace::IPacketPool_1<MasterServer::CreateDedicatedServerInstanceRequest*>* MasterServer::CreateDedicatedServerInstanceRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateDedicatedServerInstanceRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPacketPool_1<MasterServer::CreateDedicatedServerInstanceRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.get_version
uint MasterServer::CreateDedicatedServerInstanceRequest::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::get_version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Init
MasterServer::CreateDedicatedServerInstanceRequest* MasterServer::CreateDedicatedServerInstanceRequest::Init(::Il2CppString* secret, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* userEndPoint, ::Array<uint8_t>* userRandom, ::Array<uint8_t>* userPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(userEndPoint), ::il2cpp_utils::ExtractType(userRandom), ::il2cpp_utils::ExtractType(userPublicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateDedicatedServerInstanceRequest*, false>(___instance_arg, ___internal__method, secret, selectionMask, configuration, userId, userName, userEndPoint, userRandom, userPublicKey);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Release
void MasterServer::CreateDedicatedServerInstanceRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Serialize
void MasterServer::CreateDedicatedServerInstanceRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceRequest.Deserialize
void MasterServer::CreateDedicatedServerInstanceRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.CreateDedicatedServerInstanceResponse
#include "MasterServer/CreateDedicatedServerInstanceResponse.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result result
MasterServer::CreateDedicatedServerInstanceResponse::Result& MasterServer::CreateDedicatedServerInstanceResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::CreateDedicatedServerInstanceResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int& MasterServer::CreateDedicatedServerInstanceResponse::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayerCount
int& MasterServer::CreateDedicatedServerInstanceResponse::dyn_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_maxPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::CreateDedicatedServerInstanceResponse::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::CreateDedicatedServerInstanceResponse*>* MasterServer::CreateDedicatedServerInstanceResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "CreateDedicatedServerInstanceResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::CreateDedicatedServerInstanceResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_dedicatedServerId
::Il2CppString* MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.set_dedicatedServerId
void MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_dedicatedServerCreationTime
int64_t MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.set_dedicatedServerCreationTime
void MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.InitForFailure
MasterServer::CreateDedicatedServerInstanceResponse* MasterServer::CreateDedicatedServerInstanceResponse::InitForFailure(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, MasterServer::CreateDedicatedServerInstanceResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateDedicatedServerInstanceResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.InitForSuccess
MasterServer::CreateDedicatedServerInstanceResponse* MasterServer::CreateDedicatedServerInstanceResponse::InitForSuccess(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, int port, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(maxPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::CreateDedicatedServerInstanceResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, port, random, publicKey, maxPlayerCount);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_resultCode
uint8_t MasterServer::CreateDedicatedServerInstanceResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.get_resultCodeString
::Il2CppString* MasterServer::CreateDedicatedServerInstanceResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Serialize
void MasterServer::CreateDedicatedServerInstanceResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Deserialize
void MasterServer::CreateDedicatedServerInstanceResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.CreateDedicatedServerInstanceResponse.Release
void MasterServer::CreateDedicatedServerInstanceResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result
#include "MasterServer/CreateDedicatedServerInstanceResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result Success
MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result Success
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_Success(MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result NoAvailableServerSlots
MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_NoAvailableServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_NoAvailableServerSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "NoAvailableServerSlots"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result NoAvailableServerSlots
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_NoAvailableServerSlots(MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_NoAvailableServerSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "NoAvailableServerSlots", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result UnknownError
MasterServer::CreateDedicatedServerInstanceResponse::Result MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::CreateDedicatedServerInstanceResponse::Result>("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.CreateDedicatedServerInstanceResponse/MasterServer.Result UnknownError
void MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_UnknownError(MasterServer::CreateDedicatedServerInstanceResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "CreateDedicatedServerInstanceResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::CreateDedicatedServerInstanceResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::CreateDedicatedServerInstanceResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerInstanceNoLongerOccupiedRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*>* MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerInstanceNoLongerOccupiedRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.set_dedicatedServerId
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Init
MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest* MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Init(::Il2CppString* dedicatedServerId, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(id)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, id);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Serialize
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Deserialize
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest.Release
void MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerInstanceStatusUpdateRequest
#include "MasterServer/DedicatedServerInstanceStatusUpdateRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPlayerCount
int& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_currentPlayerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameStateType gameState
GlobalNamespace::GameStateType& MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::dyn_gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameState"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerInstanceStatusUpdateRequest*>* MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerInstanceStatusUpdateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerInstanceStatusUpdateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.set_dedicatedServerId
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Init
MasterServer::DedicatedServerInstanceStatusUpdateRequest* MasterServer::DedicatedServerInstanceStatusUpdateRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, ::Il2CppString* id, GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerInstanceStatusUpdateRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Serialize
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Deserialize
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerInstanceStatusUpdateRequest.Release
void MasterServer::DedicatedServerInstanceStatusUpdateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerInstanceStatusUpdateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cpuUtilization
int& MasterServer::DedicatedServerHeartbeatRequest::dyn_cpuUtilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::dyn_cpuUtilization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cpuUtilization"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 occupiedServerSlots
int& MasterServer::DedicatedServerHeartbeatRequest::dyn_occupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::dyn_occupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unoccupiedServerSlots
int& MasterServer::DedicatedServerHeartbeatRequest::dyn_unoccupiedServerSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::dyn_unoccupiedServerSlots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unoccupiedServerSlots"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatRequest*>* MasterServer::DedicatedServerHeartbeatRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerId
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Init
MasterServer::DedicatedServerHeartbeatRequest* MasterServer::DedicatedServerHeartbeatRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, int cpuUtilization, int occupiedServerSlots, int unoccupiedServerSlots) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlots), ::il2cpp_utils::ExtractType(unoccupiedServerSlots)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerHeartbeatRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, cpuUtilization, occupiedServerSlots, unoccupiedServerSlots);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Serialize
void MasterServer::DedicatedServerHeartbeatRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Deserialize
void MasterServer::DedicatedServerHeartbeatRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatRequest.Release
void MasterServer::DedicatedServerHeartbeatRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatResponse*>* MasterServer::DedicatedServerHeartbeatResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerHeartbeatResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerHeartbeatResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Serialize
void MasterServer::DedicatedServerHeartbeatResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Deserialize
void MasterServer::DedicatedServerHeartbeatResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerHeartbeatResponse.Release
void MasterServer::DedicatedServerHeartbeatResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerHeartbeatResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerShutDownRequest*>* MasterServer::DedicatedServerShutDownRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerShutDownRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerShutDownRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerId
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Init
MasterServer::DedicatedServerShutDownRequest* MasterServer::DedicatedServerShutDownRequest::Init(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerShutDownRequest*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Serialize
void MasterServer::DedicatedServerShutDownRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Deserialize
void MasterServer::DedicatedServerShutDownRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerShutDownRequest.Release
void MasterServer::DedicatedServerShutDownRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerShutDownRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionRequest*>* MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Init
MasterServer::DedicatedServerPrepareForConnectionRequest* MasterServer::DedicatedServerPrepareForConnectionRequest::Init(::Il2CppString* id, ::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionRequest*, false>(___instance_arg, ___internal__method, id, userId, userName, remoteEndPoint, random, publicKey);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Serialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionRequest.Release
void MasterServer::DedicatedServerPrepareForConnectionRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result result
MasterServer::DedicatedServerPrepareForConnectionResponse::Result& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<MasterServer::DedicatedServerPrepareForConnectionResponse::Result*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <dedicatedServerId>k__BackingField
::Il2CppString*& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerId>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <dedicatedServerCreationTime>k__BackingField
int64_t& MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerCreationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::dyn_$dedicatedServerCreationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dedicatedServerCreationTime>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionResponse*>* MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerPrepareForConnectionResponse", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerPrepareForConnectionResponse*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerId
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerId
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_dedicatedServerCreationTime
int64_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_dedicatedServerCreationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.set_dedicatedServerCreationTime
void MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::set_dedicatedServerCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dedicatedServerCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForFailure
MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, MasterServer::DedicatedServerPrepareForConnectionResponse::Result result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::InitForFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime, result);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.InitForSuccess
MasterServer::DedicatedServerPrepareForConnectionResponse* MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess(::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::InitForSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitForSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::DedicatedServerPrepareForConnectionResponse*, false>(___instance_arg, ___internal__method, dedicatedServerId, dedicatedServerCreationTime);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCode
uint8_t MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.get_resultCodeString
::Il2CppString* MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Serialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Deserialize
void MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.DedicatedServerPrepareForConnectionResponse.Release
void MasterServer::DedicatedServerPrepareForConnectionResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result
#include "MasterServer/DedicatedServerPrepareForConnectionResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result Success
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownServer
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownServer", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
MasterServer::DedicatedServerPrepareForConnectionResponse::Result MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_get_UnknownError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::DedicatedServerPrepareForConnectionResponse::Result>("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.DedicatedServerPrepareForConnectionResponse/MasterServer.Result UnknownError
void MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError(MasterServer::DedicatedServerPrepareForConnectionResponse::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::_set_UnknownError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "DedicatedServerPrepareForConnectionResponse/Result", "UnknownError", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::DedicatedServerPrepareForConnectionResponse::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerPrepareForConnectionResponse::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMessageReceivedAcknowledge
#include "MasterServer/DedicatedServerMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMessageReceivedAcknowledge*>* MasterServer::DedicatedServerMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMessageReceivedAcknowledge.Release
void MasterServer::DedicatedServerMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.DedicatedServerMultipartMessage
#include "MasterServer/DedicatedServerMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.DedicatedServerMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMultipartMessage*>* MasterServer::DedicatedServerMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "DedicatedServerMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::DedicatedServerMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.DedicatedServerMultipartMessage.Release
void MasterServer::DedicatedServerMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::DedicatedServerMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] random
::Array<uint8_t>*& MasterServer::ClientHelloRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ClientHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>* MasterServer::ClientHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Init
MasterServer::ClientHelloRequest* MasterServer::ClientHelloRequest::Init(::Array<uint8_t>* random) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloRequest*, false>(___instance_arg, ___internal__method, random);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Serialize
void MasterServer::ClientHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Deserialize
void MasterServer::ClientHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloRequest.Release
void MasterServer::ClientHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 certificateResponseId
uint& MasterServer::ClientHelloWithCookieRequest::dyn_certificateResponseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::dyn_certificateResponseId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateResponseId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ClientHelloWithCookieRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable cookie
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ClientHelloWithCookieRequest::dyn_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::dyn_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>* MasterServer::ClientHelloWithCookieRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientHelloWithCookieRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientHelloWithCookieRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Init
MasterServer::ClientHelloWithCookieRequest* MasterServer::ClientHelloWithCookieRequest::Init(uint certificateResponseId, ::Array<uint8_t>* random, ::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateResponseId), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientHelloWithCookieRequest*, false>(___instance_arg, ___internal__method, certificateResponseId, random, cookie);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Serialize
void MasterServer::ClientHelloWithCookieRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Deserialize
void MasterServer::ClientHelloWithCookieRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientHelloWithCookieRequest.Release
void MasterServer::ClientHelloWithCookieRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientHelloWithCookieRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable cookie
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::HelloVerifyRequest::dyn_cookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::dyn_cookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookie"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>* MasterServer::HelloVerifyRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HelloVerifyRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HelloVerifyRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Init
MasterServer::HelloVerifyRequest* MasterServer::HelloVerifyRequest::Init(::Array<uint8_t>* cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cookie)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::HelloVerifyRequest*, false>(___instance_arg, ___internal__method, cookie);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Serialize
void MasterServer::HelloVerifyRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Deserialize
void MasterServer::HelloVerifyRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.HelloVerifyRequest.Release
void MasterServer::HelloVerifyRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HelloVerifyRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerHelloRequest
#include "MasterServer/ServerHelloRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ServerHelloRequest::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicKey
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ServerHelloRequest::dyn_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::dyn_publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable signature
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ServerHelloRequest::dyn_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::dyn_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ServerHelloRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>* MasterServer::ServerHelloRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerHelloRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerHelloRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Init
MasterServer::ServerHelloRequest* MasterServer::ServerHelloRequest::Init(::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Array<uint8_t>* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(signature)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerHelloRequest*, false>(___instance_arg, ___internal__method, random, publicKey, signature);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Serialize
void MasterServer::ServerHelloRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Deserialize
void MasterServer::ServerHelloRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerHelloRequest.Release
void MasterServer::ServerHelloRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerHelloRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest
#include "MasterServer/ServerCertificateRequest.hpp"
// Including type: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ByteArrayNetSerializable[] _certificateList
::Array<GlobalNamespace::ByteArrayNetSerializable*>*& MasterServer::ServerCertificateRequest::dyn__certificateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::dyn__certificateList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateList"))->offset;
  return *reinterpret_cast<::Array<GlobalNamespace::ByteArrayNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _certificateCount
int& MasterServer::ServerCertificateRequest::dyn__certificateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::dyn__certificateCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>* MasterServer::ServerCertificateRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ServerCertificateRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ServerCertificateRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.get_certificateList
System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::get_certificateList() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::get_certificateList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_certificateList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Init
MasterServer::ServerCertificateRequest* MasterServer::ServerCertificateRequest::Init(System::Collections::Generic::IEnumerable_1<::Array<uint8_t>*>* certificateList) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificateList)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ServerCertificateRequest*, false>(___instance_arg, ___internal__method, certificateList);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Serialize
void MasterServer::ServerCertificateRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Deserialize
void MasterServer::ServerCertificateRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ServerCertificateRequest.Release
void MasterServer::ServerCertificateRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5
#include "MasterServer/ServerCertificateRequest_-get_certificateList-d__5.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <>2__current
::Array<uint8_t>*& MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.ServerCertificateRequest <>4__this
MasterServer::ServerCertificateRequest*& MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::ServerCertificateRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
int& MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current
::Array<uint8_t>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerator$System_Byte$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Byte[]>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.IDisposable.Dispose
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.MoveNext
bool MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerator.Reset
void MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_Generic_IEnumerable$System_Byte$$$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Byte[]>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Array<uint8_t>*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.ServerCertificateRequest/MasterServer.<get_certificateList>d__5.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ServerCertificateRequest::$get_certificateList$d__5::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ClientKeyExchangeRequest
#include "MasterServer/ClientKeyExchangeRequest.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable clientPublicKey
GlobalNamespace::ByteArrayNetSerializable*& MasterServer::ClientKeyExchangeRequest::dyn_clientPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::dyn_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  return *reinterpret_cast<GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>* MasterServer::ClientKeyExchangeRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ClientKeyExchangeRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ClientKeyExchangeRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Init
MasterServer::ClientKeyExchangeRequest* MasterServer::ClientKeyExchangeRequest::Init(::Array<uint8_t>* clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ClientKeyExchangeRequest*, false>(___instance_arg, ___internal__method, clientPublicKey);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Serialize
void MasterServer::ClientKeyExchangeRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, writer);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Deserialize
void MasterServer::ClientKeyExchangeRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, reader);
}
// Autogenerated method: MasterServer.ClientKeyExchangeRequest.Release
void MasterServer::ClientKeyExchangeRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ClientKeyExchangeRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.ChangeCipherSpecRequest
#include "MasterServer/ChangeCipherSpecRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>* MasterServer::ChangeCipherSpecRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "ChangeCipherSpecRequest", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::ChangeCipherSpecRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.ChangeCipherSpecRequest.Release
void MasterServer::ChangeCipherSpecRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::ChangeCipherSpecRequest::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMessageReceivedAcknowledge
#include "MasterServer/HandshakeMessageReceivedAcknowledge.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>* MasterServer::HandshakeMessageReceivedAcknowledge::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMessageReceivedAcknowledge", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMessageReceivedAcknowledge*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMessageReceivedAcknowledge.Release
void MasterServer::HandshakeMessageReceivedAcknowledge::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMessageReceivedAcknowledge::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.HandshakeMultipartMessage
#include "MasterServer/HandshakeMultipartMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.HandshakeMultipartMessage.get_pool
GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>* MasterServer::HandshakeMultipartMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "HandshakeMultipartMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::HandshakeMultipartMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.HandshakeMultipartMessage.Release
void MasterServer::HandshakeMultipartMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::HandshakeMultipartMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit None
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "None"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit None
void MasterServer::AnalyticsMetricUnit::_set_None(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Count
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Count"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Count
void MasterServer::AnalyticsMetricUnit::_set_Count(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Percent
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Percent
void MasterServer::AnalyticsMetricUnit::_set_Percent(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Seconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Seconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Seconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Seconds
void MasterServer::AnalyticsMetricUnit::_set_Seconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Seconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Seconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Milliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Milliseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Milliseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Milliseconds
void MasterServer::AnalyticsMetricUnit::_set_Milliseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Milliseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Milliseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Microseconds
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Microseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Microseconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Microseconds"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Microseconds
void MasterServer::AnalyticsMetricUnit::_set_Microseconds(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Microseconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Microseconds", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.AnalyticsMetricUnit Bytes
MasterServer::AnalyticsMetricUnit MasterServer::AnalyticsMetricUnit::_get_Bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_get_Bytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::AnalyticsMetricUnit>("MasterServer", "AnalyticsMetricUnit", "Bytes"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.AnalyticsMetricUnit Bytes
void MasterServer::AnalyticsMetricUnit::_set_Bytes(MasterServer::AnalyticsMetricUnit value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::_set_Bytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "AnalyticsMetricUnit", "Bytes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::AnalyticsMetricUnit::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::AnalyticsMetricUnit::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MetricIdentifier
#include "GlobalNamespace/MetricIdentifier.hpp"
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IAnalyticsManager.PollUpdate
void MasterServer::IAnalyticsManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateState
void MasterServer::IAnalyticsManager::UpdateState(GlobalNamespace::MetricIdentifier metricIdentifier, int64_t state, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricIdentifier, state, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateAverage
void MasterServer::IAnalyticsManager::UpdateAverage(GlobalNamespace::MetricIdentifier metricIdentifier, double value, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::UpdateAverage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(unit), ::il2cpp_utils::ExtractType(alarmMetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricIdentifier, value, unit, alarmMetric);
}
// Autogenerated method: MasterServer.IAnalyticsManager.IncrementCounter
void MasterServer::IAnalyticsManager::IncrementCounter(GlobalNamespace::MetricIdentifier metricIdentifier, int64_t incrementAmount, MasterServer::AnalyticsMetricUnit unit) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IAnalyticsManager::IncrementCounter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metricIdentifier), ::il2cpp_utils::ExtractType(incrementAmount), ::il2cpp_utils::ExtractType(unit)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, metricIdentifier, incrementAmount, unit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServer
#include "MasterServer/IMasterServer.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: GameStateType
#include "GlobalNamespace/GameStateType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServer.ShouldHandleMessageFromEndPoint
bool MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, remoteEndPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ReportExceptionForEndPoint
void MasterServer::IMasterServer::ReportExceptionForEndPoint(System::Net::IPEndPoint* remoteEndPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ReportExceptionForEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportExceptionForEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(exception)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, exception);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateUser
System::Threading::Tasks::Task_1<bool>* MasterServer::IMasterServer::TryAuthenticateUser(uint protocolVersion, System::Net::IPEndPoint* endPoint, GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(authenticationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, authenticationToken);
}
// Autogenerated method: MasterServer.IMasterServer.ConnectToServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::ConnectToServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Il2CppString* secret, ::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::ConnectToServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicKey), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, selectionMask, configuration, random, publicKey, secret, code);
}
// Autogenerated method: MasterServer.IMasterServer.GetPublicServers
System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>* MasterServer::IMasterServer::GetPublicServers(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, int skip, int count, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::GetPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>*, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, userId, userName, skip, count, selectionMask, configuration);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateDedicatedServer
bool MasterServer::IMasterServer::TryAuthenticateDedicatedServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::TryAuthenticateDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAuthenticateDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(nonce), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(timestamp)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, protocolVersion, endPoint, id, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatDedicatedServer
void MasterServer::IMasterServer::HeartbeatDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, int cpuUtilization, int occupiedServerSlotCount, int unoccupiedServerSlotCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::HeartbeatDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartbeatDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(cpuUtilization), ::il2cpp_utils::ExtractType(occupiedServerSlotCount), ::il2cpp_utils::ExtractType(unoccupiedServerSlotCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateDedicatedServerInstanceStatus
void MasterServer::IMasterServer::UpdateDedicatedServerInstanceStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, GlobalNamespace::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::UpdateDedicatedServerInstanceStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDedicatedServerInstanceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(gameState), ::il2cpp_utils::ExtractType(currentPlayerCount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.SetDedicatedServerInstanceNoLongerOccupied
void MasterServer::IMasterServer::SetDedicatedServerInstanceNoLongerOccupied(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::SetDedicatedServerInstanceNoLongerOccupied");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDedicatedServerInstanceNoLongerOccupied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(id)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveDedicatedServer
void MasterServer::IMasterServer::RemoveDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServer::RemoveDedicatedServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDedicatedServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(dedicatedServerId), ::il2cpp_utils::ExtractType(dedicatedServerCreationTime), ::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableRequest.get_requestId
uint MasterServer::IMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::get_requestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* MasterServer::IMasterServerReliableRequest::WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableRequest::WithRequestId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerResponse.get_responseId
uint MasterServer::IMasterServerResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_responseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCode
uint8_t MasterServer::IMasterServerResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.get_resultCodeString
::Il2CppString* MasterServer::IMasterServerResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::get_resultCodeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* MasterServer::IMasterServerResponse::WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerResponse::WithResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(___instance_arg, ___internal__method, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerReliableResponse::WithRequestAndResponseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId), ::il2cpp_utils::ExtractType(responseId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(___instance_arg, ___internal__method, requestId, responseId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAcknowledgeMessage.get_messageHandled
bool MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAcknowledgeMessage::get_messageHandled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.IMasterServerAuthenticateResponse
#include "MasterServer/IMasterServerAuthenticateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerAuthenticateResponse.get_isAuthenticated
bool MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerAuthenticateResponse::get_isAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_multipartMessageId
uint MasterServer::IMasterServerMultipartMessage::get_multipartMessageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_multipartMessageId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multipartMessageId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_offset
int MasterServer::IMasterServerMultipartMessage::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_offset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_length
int MasterServer::IMasterServerMultipartMessage::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_totalLength
int MasterServer::IMasterServerMultipartMessage::get_totalLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_totalLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.IMasterServerMultipartMessage.get_data
::Array<uint8_t>* MasterServer::IMasterServerMultipartMessage::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::IMasterServerMultipartMessage::get_data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass65_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass65_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass70_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass70_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass71_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass71_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendResponse>d__76`2
#include "MasterServer/MessageHandler_-GetAndSendResponse-d__76_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendResponseAsync>d__77`2
#include "MasterServer/MessageHandler_-GetAndSendResponseAsync-d__77_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<GetAndSendUnreilableResponse>d__78`2
#include "MasterServer/MessageHandler_-GetAndSendUnreilableResponse-d__78_2.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__91
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__91.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass93_0
#include "MasterServer/MessageHandler_--c__DisplayClass93_0.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__93
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__93.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__94
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__94.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAwaitResponseAsync>d__95`1
#include "MasterServer/MessageHandler_-SendMessageWithRetryAwaitResponseAsync-d__95_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass96_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass96_0_1.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<AwaitResponseAsync>d__97`1
#include "MasterServer/MessageHandler_-AwaitResponseAsync-d__97_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.ConnectToServerRequest
#include "MasterServer/ConnectToServerRequest.hpp"
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: MasterServer.IDedicatedServerMessage
#include "MasterServer/IDedicatedServerMessage.hpp"
// Including type: MasterServer.CreateDedicatedServerInstanceRequest
#include "MasterServer/CreateDedicatedServerInstanceRequest.hpp"
// Including type: MasterServer.DedicatedServerInstanceNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerInstanceNoLongerOccupiedRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: MasterServer.DedicatedServerInstanceStatusUpdateRequest
#include "MasterServer/DedicatedServerInstanceStatusUpdateRequest.hpp"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: INetworkPacketSerializer`1
#include "GlobalNamespace/INetworkPacketSerializer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 kHandshakeMessageType
uint MasterServer::MessageHandler::_get_kHandshakeMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kHandshakeMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kHandshakeMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kHandshakeMessageType
void MasterServer::MessageHandler::_set_kHandshakeMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kHandshakeMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kHandshakeMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kUserMessageType
uint MasterServer::MessageHandler::_get_kUserMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kUserMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kUserMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kUserMessageType
void MasterServer::MessageHandler::_set_kUserMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kUserMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kUserMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kDedicatedServerMessageType
uint MasterServer::MessageHandler::_get_kDedicatedServerMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kDedicatedServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kDedicatedServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kDedicatedServerMessageType
void MasterServer::MessageHandler::_set_kDedicatedServerMessageType(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kDedicatedServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kDedicatedServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static protected System.UInt32 kProtocolVersion
uint MasterServer::MessageHandler::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static protected System.UInt32 kProtocolVersion
void MasterServer::MessageHandler::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMinSignatureLength
int MasterServer::MessageHandler::_get_kMinSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMinSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMinSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMinSignatureLength
void MasterServer::MessageHandler::_set_kMinSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMinSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMinSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxSignatureLength
int MasterServer::MessageHandler::_get_kMaxSignatureLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxSignatureLength
void MasterServer::MessageHandler::_set_kMaxSignatureLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPacketSize
int MasterServer::MessageHandler::_get_kMaxPacketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPacketSize
void MasterServer::MessageHandler::_set_kMaxPacketSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryCount
int MasterServer::MessageHandler::_get_kRetryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryCount
void MasterServer::MessageHandler::_set_kRetryCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay0Ms
int MasterServer::MessageHandler::_get_kRetryDelay0Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay0Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay0Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay0Ms
void MasterServer::MessageHandler::_set_kRetryDelay0Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay0Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay0Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay1Ms
int MasterServer::MessageHandler::_get_kRetryDelay1Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay1Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay1Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay1Ms
void MasterServer::MessageHandler::_set_kRetryDelay1Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay1Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay1Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay2Ms
int MasterServer::MessageHandler::_get_kRetryDelay2Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay2Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay2Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay2Ms
void MasterServer::MessageHandler::_set_kRetryDelay2Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay2Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay2Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay3Ms
int MasterServer::MessageHandler::_get_kRetryDelay3Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay3Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay3Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay3Ms
void MasterServer::MessageHandler::_set_kRetryDelay3Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay3Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay3Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay4Ms
int MasterServer::MessageHandler::_get_kRetryDelay4Ms() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kRetryDelay4Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay4Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay4Ms
void MasterServer::MessageHandler::_set_kRetryDelay4Ms(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kRetryDelay4Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay4Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kConnectionStateTimeoutMs
int64_t MasterServer::MessageHandler::_get_kConnectionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kConnectionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kConnectionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kConnectionStateTimeoutMs
void MasterServer::MessageHandler::_set_kConnectionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kConnectionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kConnectionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestTimeoutMs
int64_t MasterServer::MessageHandler::_get_kSentRequestTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestTimeoutMs
void MasterServer::MessageHandler::_set_kSentRequestTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestWithResponseTimeoutMs
int64_t MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestWithResponseTimeoutMs
void MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kMultipartMessageTimeoutMs
int64_t MasterServer::MessageHandler::_get_kMultipartMessageTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_get_kMultipartMessageTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kMultipartMessageTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kMultipartMessageTimeoutMs
void MasterServer::MessageHandler::_set_kMultipartMessageTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::_set_kMultipartMessageTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMultipartMessageTimeoutMs", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.HandshakeMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _handshakeMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>*& MasterServer::MessageHandler::dyn__handshakeMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__handshakeMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handshakeMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::HandshakeMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.UserMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _userMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>*& MasterServer::MessageHandler::dyn__userMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__userMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::UserMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType,MasterServer.MessageHandler/MasterServer.MessageOrigin> _dedicatedServerMessageSerializer
GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>*& MasterServer::MessageHandler::dyn__dedicatedServerMessageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__dedicatedServerMessageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dedicatedServerMessageSerializer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NetworkPacketSerializer_2<MasterServer::MessageHandler::DedicatedServerMessageType, MasterServer::MessageHandler::MessageOrigin>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _dataWriter
LiteNetLib::Utils::NetDataWriter*& MasterServer::MessageHandler::dyn__dataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__dataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataWriter"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataReader _multipartReader
LiteNetLib::Utils::NetDataReader*& MasterServer::MessageHandler::dyn__multipartReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__multipartReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartReader"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnconnectedSenderReceiver _sender
GlobalNamespace::IUnconnectedSenderReceiver*& MasterServer::MessageHandler::dyn__sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sender"))->offset;
  return *reinterpret_cast<GlobalNamespace::IUnconnectedSenderReceiver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly MasterServer.IAnalyticsManager analytics
MasterServer::IAnalyticsManager*& MasterServer::MessageHandler::dyn_analytics() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn_analytics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "analytics"))->offset;
  return *reinterpret_cast<MasterServer::IAnalyticsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServer.ITimeProvider _timeProvider
MasterServer::ITimeProvider*& MasterServer::MessageHandler::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<MasterServer::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.SentRequestWaiter> _sentRequestWaiters
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>*& MasterServer::MessageHandler::dyn__sentRequestWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__sentRequestWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentRequestWaiters"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::SentRequestWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.RequestResponseWaiter> _requestResponseWaiters
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>*& MasterServer::MessageHandler::dyn__requestResponseWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__requestResponseWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestResponseWaiters"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::RequestResponseWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,MasterServer.MessageHandler/MasterServer.ConnectionState> _connectionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>*& MasterServer::MessageHandler::dyn__connectionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__connectionStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionStates"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, MasterServer::MessageHandler::ConnectionState*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<MasterServer.MessageHandler/MasterServer.RequestWaiterId,MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter> _multipartMessageBuffer
GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>*& MasterServer::MessageHandler::dyn__multipartMessageBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__multipartMessageBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multipartMessageBuffer"))->offset;
  return *reinterpret_cast<GlobalNamespace::ExpiringDictionary_2<MasterServer::MessageHandler::RequestWaiterId, MasterServer::MessageHandler::MultipartMessageWaiter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SmallBufferPool _bufferPool
GlobalNamespace::SmallBufferPool*& MasterServer::MessageHandler::dyn__bufferPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenSource _disposedTokenSource
System::Threading::CancellationTokenSource*& MasterServer::MessageHandler::dyn__disposedTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::dyn__disposedTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedTokenSource"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* MasterServer::MessageHandler::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::get_encryptionLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.get_timeProvider
MasterServer::ITimeProvider* MasterServer::MessageHandler::get_timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::get_timeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::ITimeProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterHandshakeMessageHandlers
void MasterServer::MessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::MessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleHandshakeMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloRequest
void MasterServer::MessageHandler::HandleClientHelloRequest(MasterServer::ClientHelloRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleHelloVerifyRequest
void MasterServer::MessageHandler::HandleHelloVerifyRequest(MasterServer::HelloVerifyRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleHelloVerifyRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHelloVerifyRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandleClientHelloWithCookieRequest(MasterServer::ClientHelloWithCookieRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleClientHelloWithCookieRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleClientHelloWithCookieRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterUserMessageHandlers
void MasterServer::MessageHandler::RegisterUserMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterUserMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterUserMessageHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleUserMessage
bool MasterServer::MessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToServerRequest
void MasterServer::MessageHandler::HandleConnectToServerRequest(MasterServer::ConnectToServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleConnectToServerRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetPublicServersRequest
void MasterServer::MessageHandler::HandleGetPublicServersRequest(MasterServer::GetPublicServersRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleGetPublicServersRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetPublicServersRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleSessionKeepaliveMessage
void MasterServer::MessageHandler::HandleSessionKeepaliveMessage(MasterServer::SessionKeepaliveMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleSessionKeepaliveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSessionKeepaliveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterDedicatedServerHandlers
void MasterServer::MessageHandler::RegisterDedicatedServerHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RegisterDedicatedServerHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDedicatedServerHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleDedicatedServerMessage
bool MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage(MasterServer::IDedicatedServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleDedicatedServerMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleCreateDedicatedServerInstanceRequest
void MasterServer::MessageHandler::HandleCreateDedicatedServerInstanceRequest(MasterServer::CreateDedicatedServerInstanceRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleCreateDedicatedServerInstanceRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCreateDedicatedServerInstanceRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerInstanceNoLongerAvailableRequest
void MasterServer::MessageHandler::HandleDedicatedServerInstanceNoLongerAvailableRequest(MasterServer::DedicatedServerInstanceNoLongerOccupiedRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerInstanceNoLongerAvailableRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerInstanceNoLongerAvailableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest(MasterServer::DedicatedServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse(MasterServer::DedicatedServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerInstanceStatusUpdateRequest
void MasterServer::MessageHandler::HandleDedicatedServerInstanceStatusUpdateRequest(MasterServer::DedicatedServerInstanceStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerInstanceStatusUpdateRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerInstanceStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerShutDownRequest
void MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest(MasterServer::DedicatedServerShutDownRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerShutDownRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest(MasterServer::DedicatedServerPrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDedicatedServerPrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.IsUnhandledMessage
bool MasterServer::MessageHandler::IsUnhandledMessage(MasterServer::IMasterServerReliableRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsUnhandledMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnhandledMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteSend
void MasterServer::MessageHandler::CompleteSend(MasterServer::IMasterServerResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteRequest
bool MasterServer::MessageHandler::CompleteRequest(MasterServer::IMasterServerReliableResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CompleteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(remoteEndPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessage
bool MasterServer::MessageHandler::ShouldHandleMessage(MasterServer::IMasterServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableMessage
void MasterServer::MessageHandler::SendUnreliableMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, responseId, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequest
void MasterServer::MessageHandler::SendReliableRequest(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequestAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableRequestAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableRequestAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableRequestAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(responseId), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, responseId, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponseAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableResponseAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendReliableResponseAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendReliableResponseAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(response), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessage
void MasterServer::MessageHandler::SendMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetry
void MasterServer::MessageHandler::SendMessageWithRetry(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMultipartMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, LiteNetLib::Utils::NetDataWriter* data, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMultipartMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, data, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsyncInternal
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onSendFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.WaitForRetry
System::Threading::Tasks::Task* MasterServer::MessageHandler::WaitForRetry(int retryAttempt, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::WaitForRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(retryAttempt), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, retryAttempt, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.Write
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::Write(uint protocolVersion, LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(___instance_arg, ___internal__method, protocolVersion, message);
}
// Autogenerated method: MasterServer.MessageHandler.PollUpdate
void MasterServer::MessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ReceiveMessage
void MasterServer::MessageHandler::ReceiveMessage(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceiveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, remoteEndPoint, reader);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ReceivedMessageException
void MasterServer::MessageHandler::ReceivedMessageException(System::Net::IPEndPoint* endPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ReceivedMessageException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceivedMessageException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(exception)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, exception);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.GetNextRequestId
uint MasterServer::MessageHandler::GetNextRequestId(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetConnectionState
MasterServer::MessageHandler::ConnectionState* MasterServer::MessageHandler::GetConnectionState(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<MasterServer::MessageHandler::ConnectionState*, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::IsValidSessionStartRequestId(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.IsConnectionStateEncrypted
bool MasterServer::MessageHandler::IsConnectionStateEncrypted(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::IsConnectionStateEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnectionStateEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetSerializer
GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::GetSerializer(uint protocolVersion, uint messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::GetSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(messageType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>*, false>(___instance_arg, ___internal__method, protocolVersion, messageType);
}
// Autogenerated method: MasterServer.MessageHandler.Dispose
void MasterServer::MessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.CreateHandshakeHeader
::Array<uint8_t>* MasterServer::MessageHandler::CreateHandshakeHeader(::Array<uint8_t>* packetHeader) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::CreateHandshakeHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler", "CreateHandshakeHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packetHeader)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, packetHeader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kEpochBitOffset
int MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kEpochBitOffset
void MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRequestIdRange
uint MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestIdRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRequestIdRange
void MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestIdRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestIdRange", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kRangeMask
uint MasterServer::MessageHandler::ConnectionState::_get_kRangeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRangeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kRangeMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kRangeMask
void MasterServer::MessageHandler::ConnectionState::_set_kRangeMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRangeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRangeMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kEpochMask
uint MasterServer::MessageHandler::ConnectionState::_get_kEpochMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kEpochMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler/ConnectionState", "kEpochMask"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kEpochMask
void MasterServer::MessageHandler::ConnectionState::_set_kEpochMask(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kEpochMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kEpochMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestBufferLength
int MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_get_kRequestBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestBufferLength
void MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::_set_kRequestBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/ConnectionState", "kRequestBufferLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _userId
::Il2CppString*& MasterServer::MessageHandler::ConnectionState::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
::Il2CppString*& MasterServer::MessageHandler::ConnectionState::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _protocolVersion
uint& MasterServer::MessageHandler::ConnectionState::dyn__protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasIdentity
bool& MasterServer::MessageHandler::ConnectionState::dyn__hasIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__hasIdentity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasIdentity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState _encryptionState
GlobalNamespace::EncryptionUtility::IEncryptionState*& MasterServer::MessageHandler::ConnectionState::dyn__encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionState"))->offset;
  return *reinterpret_cast<GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastReceivedRequestIndex
int& MasterServer::MessageHandler::ConnectionState::dyn__lastReceivedRequestIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__lastReceivedRequestIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastReceivedRequestId
uint& MasterServer::MessageHandler::ConnectionState::dyn__lastReceivedRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__lastReceivedRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedRequestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _receivedRequestCount
int& MasterServer::MessageHandler::ConnectionState::dyn__receivedRequestCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__receivedRequestCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequestCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] _receivedRequest
::Array<bool>*& MasterServer::MessageHandler::ConnectionState::dyn__receivedRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__receivedRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedRequest"))->offset;
  return *reinterpret_cast<::Array<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _currentRequestId
uint& MasterServer::MessageHandler::ConnectionState::dyn__currentRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__currentRequestId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRequestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _currentEpoch
uint& MasterServer::MessageHandler::ConnectionState::dyn__currentEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::dyn__currentEpoch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentEpoch"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.get_isEncrypted
bool MasterServer::MessageHandler::ConnectionState::get_isEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::get_isEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.GetNextRequestId
uint MasterServer::MessageHandler::ConnectionState::GetNextRequestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.BeginSession
void MasterServer::MessageHandler::ConnectionState::BeginSession(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::BeginSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetEpoch
void MasterServer::MessageHandler::ConnectionState::SetEpoch(uint epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEpoch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEpoch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(epoch)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, epoch);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.CanAcceptRequest
bool MasterServer::MessageHandler::ConnectionState::CanAcceptRequest(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::CanAcceptRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanAcceptRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, requestId);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetEncryptionState
void MasterServer::MessageHandler::ConnectionState::SetEncryptionState(GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, encryptionState);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.SetIdentity
void MasterServer::MessageHandler::ConnectionState::SetIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::SetIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.VerifyIdentity
bool MasterServer::MessageHandler::ConnectionState::VerifyIdentity(uint protocolVersion, ::Il2CppString* userId, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::VerifyIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocolVersion), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, protocolVersion, userId, userName);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.Dispose
void MasterServer::MessageHandler::ConnectionState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.ConnectionState.LogD
void MasterServer::MessageHandler::ConnectionState::LogD(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::ConnectionState::LogD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MasterServer", "MessageHandler/ConnectionState", "LogD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiterId
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.IPEndPoint endPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::RequestWaiterId::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 requestId
uint& MasterServer::MessageHandler::RequestWaiterId::dyn_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::dyn_requestId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestId"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(MasterServer::MessageHandler::RequestWaiterId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.Equals
bool MasterServer::MessageHandler::RequestWaiterId::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiterId.GetHashCode
int MasterServer::MessageHandler::RequestWaiterId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiterId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestWaiter.Dispose
void MasterServer::MessageHandler::RequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _taskCompletionSource
System::Threading::Tasks::TaskCompletionSource_1<bool>*& MasterServer::MessageHandler::SentRequestWaiter::dyn__taskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::dyn__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
System::Threading::CancellationTokenRegistration& MasterServer::MessageHandler::SentRequestWaiter::dyn__disposedCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::dyn__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
System::Threading::CancellationTokenRegistration& MasterServer::MessageHandler::SentRequestWaiter::dyn__requestCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::dyn__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.get_task
System::Threading::Tasks::Task* MasterServer::MessageHandler::SentRequestWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.get_isWaiting
bool MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Complete
void MasterServer::MessageHandler::SentRequestWaiter::Complete(bool handled) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handled)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, handled);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Cancel
void MasterServer::MessageHandler::SentRequestWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.SentRequestWaiter.Dispose
void MasterServer::MessageHandler::SentRequestWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::SentRequestWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskCompletionSource`1<MasterServer.IMasterServerMessage> _taskCompletionSource
System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>*& MasterServer::MessageHandler::RequestResponseWaiter::dyn__taskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::dyn__taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskCompletionSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<MasterServer::IMasterServerMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _disposedCancellationTokenRegistration
System::Threading::CancellationTokenRegistration& MasterServer::MessageHandler::RequestResponseWaiter::dyn__disposedCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::dyn__disposedCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposedCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenRegistration _requestCancellationTokenRegistration
System::Threading::CancellationTokenRegistration& MasterServer::MessageHandler::RequestResponseWaiter::dyn__requestCancellationTokenRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::dyn__requestCancellationTokenRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestCancellationTokenRegistration"))->offset;
  return *reinterpret_cast<System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.get_task
System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>* MasterServer::MessageHandler::RequestResponseWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.get_isWaiting
bool MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Complete
void MasterServer::MessageHandler::RequestResponseWaiter::Complete(MasterServer::IMasterServerMessage* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, response);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Fail
void MasterServer::MessageHandler::RequestResponseWaiter::Fail(System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ex)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ex);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Cancel
void MasterServer::MessageHandler::RequestResponseWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.RequestResponseWaiter.Dispose
void MasterServer::MessageHandler::RequestResponseWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::RequestResponseWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SmallBufferPool _bufferPool
GlobalNamespace::SmallBufferPool*& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__bufferPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__bufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufferPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::SmallBufferPool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::Array<uint8_t>*& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> _ranges
System::Collections::Generic::List_1<int>*& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ranges"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isComplete
bool& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool& MasterServer::MessageHandler::MultipartMessageWaiter::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_isWaiting
bool MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_data
::Array<uint8_t>* MasterServer::MessageHandler::MultipartMessageWaiter::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.get_length
int MasterServer::MessageHandler::MultipartMessageWaiter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.Append
void MasterServer::MessageHandler::MultipartMessageWaiter::Append(MasterServer::IMasterServerMultipartMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, packet);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.MultipartMessageWaiter.Dispose
void MasterServer::MessageHandler::MultipartMessageWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MultipartMessageWaiter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.MessageOrigin
#include "MasterServer/MessageHandler.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Net.IPEndPoint endPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::MessageOrigin::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::dyn_endPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt32 protocolVersion
uint& MasterServer::MessageHandler::MessageOrigin::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::MessageOrigin::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.HandshakeMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType HelloVerifyRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_HelloVerifyRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType HelloVerifyRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_HelloVerifyRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "HelloVerifyRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloWithCookieRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientHelloWithCookieRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientHelloWithCookieRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientHelloWithCookieRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerHelloRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerHelloRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerHelloRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerHelloRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerHelloRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ServerCertificateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ServerCertificateRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ServerCertificateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ServerCertificateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientKeyExchangeRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ClientKeyExchangeRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ClientKeyExchangeRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ClientKeyExchangeRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ClientKeyExchangeRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ChangeCipherSpecRequest
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_ChangeCipherSpecRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType ChangeCipherSpecRequest
void MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_ChangeCipherSpecRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "ChangeCipherSpecRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MultipartMessage
MasterServer::MessageHandler::HandshakeMessageType MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::HandshakeMessageType>("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.HandshakeMessageType MultipartMessage
void MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage(MasterServer::MessageHandler::HandshakeMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/HandshakeMessageType", "MultipartMessage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::MessageHandler::HandshakeMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::HandshakeMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.UserMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserRequest
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_AuthenticateUserResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType AuthenticateUserResponse
void MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_AuthenticateUserResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "AuthenticateUserResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerResponse
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_ConnectToServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType ConnectToServerRequest
void MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_ConnectToServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "ConnectToServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MultipartMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType MultipartMessage
void MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType SessionKeepaliveMessage
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_SessionKeepaliveMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType SessionKeepaliveMessage
void MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_SessionKeepaliveMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "SessionKeepaliveMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicServersRequest
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicServersRequest
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersRequest(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicServersResponse
MasterServer::MessageHandler::UserMessageType MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_get_GetPublicServersResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::UserMessageType>("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.UserMessageType GetPublicServersResponse
void MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersResponse(MasterServer::MessageHandler::UserMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::_set_GetPublicServersResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/UserMessageType", "GetPublicServersResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::MessageHandler::UserMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::UserMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_AuthenticateDedicatedServerResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType AuthenticateDedicatedServerResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_AuthenticateDedicatedServerResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "AuthenticateDedicatedServerResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateDedicatedServerInstanceRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateDedicatedServerInstanceRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateDedicatedServerInstanceRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateDedicatedServerInstanceRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateDedicatedServerInstanceRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateDedicatedServerInstanceRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateDedicatedServerInstanceRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateDedicatedServerInstanceRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateDedicatedServerInstanceResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateDedicatedServerInstanceResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_CreateDedicatedServerInstanceResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateDedicatedServerInstanceResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType CreateDedicatedServerInstanceResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateDedicatedServerInstanceResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_CreateDedicatedServerInstanceResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "CreateDedicatedServerInstanceResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerInstanceNoLongerAvailableRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerInstanceNoLongerAvailableRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerInstanceNoLongerAvailableRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerInstanceNoLongerAvailableRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerInstanceNoLongerAvailableRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerInstanceNoLongerAvailableRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerInstanceNoLongerAvailableRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerHeartbeatResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerHeartbeatResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerHeartbeatResponse", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerInstanceStatusUpdateRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerInstanceStatusUpdateRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerInstanceStatusUpdateRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerInstanceStatusUpdateRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerInstanceStatusUpdateRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerInstanceStatusUpdateRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerInstanceStatusUpdateRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerInstanceStatusUpdateRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerShutDownRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerShutDownRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerShutDownRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerShutDownRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerShutDownRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionRequest", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MessageReceivedAcknowledge
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MessageReceivedAcknowledge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MessageReceivedAcknowledge
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MessageReceivedAcknowledge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MessageReceivedAcknowledge", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MultipartMessage
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_MultipartMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType MultipartMessage
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_MultipartMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "MultipartMessage", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionResponse
MasterServer::MessageHandler::DedicatedServerMessageType MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_get_DedicatedServerPrepareForConnectionResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<MasterServer::MessageHandler::DedicatedServerMessageType>("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionResponse"));
}
// Autogenerated static field setter
// Set static field: static public MasterServer.MessageHandler/MasterServer.DedicatedServerMessageType DedicatedServerPrepareForConnectionResponse
void MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionResponse(MasterServer::MessageHandler::DedicatedServerMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::_set_DedicatedServerPrepareForConnectionResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler/DedicatedServerMessageType", "DedicatedServerPrepareForConnectionResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MasterServer::MessageHandler::DedicatedServerMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::DedicatedServerMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__91
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__91.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler*& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__91.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetry$d__91::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetry>d__91.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetry$d__91::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetry$d__91::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass93_0
#include "MasterServer/MessageHandler_--c__DisplayClass93_0.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler*& MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint& MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_protocolVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_remoteEndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass93_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass93_0.<SendMultipartMessageWithRetryAsync>b__0
System::Threading::Tasks::Task* MasterServer::MessageHandler::$$c__DisplayClass93_0::$SendMultipartMessageWithRetryAsync$b__0(MasterServer::IMasterServerReliableRequest* mm) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$$c__DisplayClass93_0::<SendMultipartMessageWithRetryAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendMultipartMessageWithRetryAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mm)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, mm);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__93
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__93.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.<>c__DisplayClass93_0
#include "MasterServer/MessageHandler_--c__DisplayClass93_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLib.Utils.NetDataWriter data
LiteNetLib::Utils::NetDataWriter*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_onSendFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  return *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.<>c__DisplayClass93_0 <>8__1
MasterServer::MessageHandler::$$c__DisplayClass93_0*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::$$c__DisplayClass93_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldReleaseMessage>5__2
bool& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$shouldReleaseMessage$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$shouldReleaseMessage$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap2
::Il2CppObject*& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
int& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__93.MoveNext
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMultipartMessageWithRetryAsync>d__93.SetStateMachine
void MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMultipartMessageWithRetryAsync$d__93::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__94
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__94.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.MessageHandler <>4__this
MasterServer::MessageHandler*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint remoteEndPoint
System::Net::IPEndPoint*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_remoteEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_remoteEndPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteEndPoint"))->offset;
  return *reinterpret_cast<System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.IMasterServerReliableRequest message
MasterServer::IMasterServerReliableRequest*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_message");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<MasterServer::IMasterServerReliableRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 protocolVersion
uint& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_protocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_protocolVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocolVersion"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`5<System.UInt32,System.Net.IPEndPoint,MasterServer.IMasterServerReliableRequest,System.Threading.CancellationToken,System.Threading.Tasks.Task> onSendFailed
System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_onSendFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_onSendFailed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSendFailed"))->offset;
  return *reinterpret_cast<System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.SentRequestWaiter <sentRequest>5__2
MasterServer::MessageHandler::SentRequestWaiter*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$sentRequest$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$sentRequest$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sentRequest>5__2"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::SentRequestWaiter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.MessageHandler/MasterServer.RequestWaiterId <waiterId>5__3
MasterServer::MessageHandler::RequestWaiterId& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$waiterId$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$waiterId$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waiterId>5__3"))->offset;
  return *reinterpret_cast<MasterServer::MessageHandler::RequestWaiterId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldReleaseMessage>5__4
bool& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$shouldReleaseMessage$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$shouldReleaseMessage$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldReleaseMessage>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>7__wrap4
::Il2CppObject*& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap5
int& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$7__wrap5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__7
int& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$i$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$i$5__7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__7"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Threading.Tasks.Task> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*>& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<System::Threading::Tasks::Task*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__94.MoveNext
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/MasterServer.<SendMessageWithRetryAsyncInternal>d__94.SetStateMachine
void MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::MessageHandler::$SendMessageWithRetryAsyncInternal$d__94::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<GetAuthenticationRequest>d__9
#include "MasterServer/UserMessageHandler_-GetAuthenticationRequest-d__9.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass12_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass13_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<WithFailureHandler>d__14
#include "MasterServer/UserMessageHandler_-WithFailureHandler-d__14.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: IUnconnectedSenderReceiver
#include "GlobalNamespace/IUnconnectedSenderReceiver.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: MasterServer.MessageHandler/MasterServer.MessageOrigin
#include "MasterServer/MessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kKeepaliveRequestIntervalMs
int64_t MasterServer::UserMessageHandler::_get_kKeepaliveRequestIntervalMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_get_kKeepaliveRequestIntervalMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "UserMessageHandler", "kKeepaliveRequestIntervalMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kKeepaliveRequestIntervalMs
void MasterServer::UserMessageHandler::_set_kKeepaliveRequestIntervalMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::_set_kKeepaliveRequestIntervalMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "UserMessageHandler", "kKeepaliveRequestIntervalMs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastKeepaliveTime
int64_t& MasterServer::UserMessageHandler::dyn__lastKeepaliveTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::dyn__lastKeepaliveTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastKeepaliveTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAuthenticationTokenProvider _authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider*& MasterServer::UserMessageHandler::dyn__authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::dyn__authenticationTokenProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTokenProvider"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler.get_authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider* MasterServer::UserMessageHandler::get_authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::get_authenticationTokenProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authenticationTokenProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAuthenticationTokenProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.UpdateKeepalive
void MasterServer::UserMessageHandler::UpdateKeepalive() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::UpdateKeepalive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateKeepalive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ConnectToServer
void MasterServer::UserMessageHandler::ConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, ::Il2CppString* code, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, selectionMask, configuration, secret, code, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.SendConnectToServerRequest
void MasterServer::UserMessageHandler::SendConnectToServerRequest(MasterServer::BaseConnectToServerRequest* request, MasterServer::UserMessageHandler::ConnectToServerDelegate* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onConnectionFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::SendConnectToServerRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendConnectToServerRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onConnectionFailed), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, request, onSuccess, onConnectionFailed, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetPublicServers
void MasterServer::UserMessageHandler::GetPublicServers(::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, offset, count, selectionMask, configuration, onSuccess, onFailure, cancellationToken);
}
// Autogenerated method: MasterServer.UserMessageHandler.WithFailureHandler
void MasterServer::UserMessageHandler::WithFailureHandler(System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, System::Func_1<System::Threading::Tasks::Task*>* performTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::WithFailureHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithFailureHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(performTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, onFailure, performTask);
}
// Autogenerated method: MasterServer.UserMessageHandler.PollUpdate
void MasterServer::UserMessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.ShouldHandleUserMessage
bool MasterServer::UserMessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ShouldHandleUserMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.UserMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::UserMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler.HandshakeLog
void MasterServer::UserMessageHandler::HandshakeLog(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::HandshakeLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandshakeLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate.Invoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::Invoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, ::Il2CppString* code, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, ::Il2CppString* managerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(managerId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, userId, userName, remoteEndPoint, secret, code, selectionMask, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, managerId);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate.BeginInvoke
System::IAsyncResult* MasterServer::UserMessageHandler::ConnectToServerDelegate::BeginInvoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, ::Il2CppString* code, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, ::Il2CppString* managerId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(myRandom), ::il2cpp_utils::ExtractType(remoteRandom), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(isDedicatedServer), ::il2cpp_utils::ExtractType(managerId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, userId, userName, remoteEndPoint, secret, code, selectionMask, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, managerId, callback, object);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate.EndInvoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::ConnectToServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/MasterServer.<GetAuthenticationRequest>d__9
#include "MasterServer/UserMessageHandler_-GetAuthenticationRequest-d__9.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MasterServer.IMasterServerAuthenticateRequest> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<MasterServer::IMasterServerAuthenticateRequest*>& MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<MasterServer::IMasterServerAuthenticateRequest*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler <>4__this
MasterServer::UserMessageHandler*& MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AuthenticationToken> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AuthenticationToken>& MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AuthenticationToken>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<GetAuthenticationRequest>d__9.MoveNext
void MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<GetAuthenticationRequest>d__9.SetStateMachine
void MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$GetAuthenticationRequest$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass12_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0/MasterServer.<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass12_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: MasterServer.BaseConnectToServerRequest
#include "MasterServer/BaseConnectToServerRequest.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler <>4__this
MasterServer::UserMessageHandler*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.BaseConnectToServerRequest request
MasterServer::BaseConnectToServerRequest*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<MasterServer::BaseConnectToServerRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler/MasterServer.ConnectToServerDelegate onSuccess
MasterServer::UserMessageHandler::ConnectToServerDelegate*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler::ConnectToServerDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onConnectionFailed
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_onConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::dyn_onConnectionFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailed"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0.<SendConnectToServerRequest>b__0
System::Threading::Tasks::Task* MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$SendConnectToServerRequest$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::<SendConnectToServerRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendConnectToServerRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0/MasterServer.<<SendConnectToServerRequest>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass12_0_--SendConnectToServerRequest-b__0-d.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0 <>4__this
MasterServer::UserMessageHandler::$$c__DisplayClass12_0*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler::$$c__DisplayClass12_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair <clientKeys>5__2
GlobalNamespace::IDiffieHellmanKeyPair*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$clientKeys$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$clientKeys$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clientKeys>5__2"))->offset;
  return *reinterpret_cast<GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <random>5__3
::Array<uint8_t>*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$random$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$random$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<random>5__3"))->offset;
  return *reinterpret_cast<::Array<uint8_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MasterServer.ConnectToServerResponse <response>5__4
MasterServer::ConnectToServerResponse*& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$response$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$response$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<response>5__4"))->offset;
  return *reinterpret_cast<MasterServer::ConnectToServerResponse**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IDiffieHellmanKeyPair> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::IDiffieHellmanKeyPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.ConnectToServerResponse> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ConnectToServerResponse*>& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::ConnectToServerResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__3
System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>& MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<::Array<uint8_t>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0/MasterServer.<<SendConnectToServerRequest>b__0>d.MoveNext
void MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass12_0/MasterServer.<<SendConnectToServerRequest>b__0>d.SetStateMachine
void MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass12_0::$$SendConnectToServerRequest$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0
#include "MasterServer/UserMessageHandler_--c__DisplayClass13_0.hpp"
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0/MasterServer.<<GetPublicServers>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass13_0_--GetPublicServers-b__0-d.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler <>4__this
MasterServer::UserMessageHandler*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
int& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
int& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.IReadOnlyList`1<PublicServerInfo>> onSuccess
System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onFailure
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0.<GetPublicServers>b__0
System::Threading::Tasks::Task* MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$GetPublicServers$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::<GetPublicServers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPublicServers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0/MasterServer.<<GetPublicServers>b__0>d
#include "MasterServer/UserMessageHandler_--c__DisplayClass13_0_--GetPublicServers-b__0-d.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0 <>4__this
MasterServer::UserMessageHandler::$$c__DisplayClass13_0*& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<MasterServer::UserMessageHandler::$$c__DisplayClass13_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MasterServer.GetPublicServersResponse> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::GetPublicServersResponse*>& MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<MasterServer::GetPublicServersResponse*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0/MasterServer.<<GetPublicServers>b__0>d.MoveNext
void MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<>c__DisplayClass13_0/MasterServer.<<GetPublicServers>b__0>d.SetStateMachine
void MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$$c__DisplayClass13_0::$$GetPublicServers$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.UserMessageHandler/MasterServer.<WithFailureHandler>d__14
#include "MasterServer/UserMessageHandler_-WithFailureHandler-d__14.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder& MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`1<System.Threading.Tasks.Task> performTask
System::Func_1<System::Threading::Tasks::Task*>*& MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_performTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_performTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "performTask"))->offset;
  return *reinterpret_cast<System::Func_1<System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<ConnectionFailedReason> onFailure
System::Action_1<GlobalNamespace::ConnectionFailedReason>*& MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_onFailure");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<WithFailureHandler>d__14.MoveNext
void MasterServer::UserMessageHandler::$WithFailureHandler$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServer.UserMessageHandler/MasterServer.<WithFailureHandler>d__14.SetStateMachine
void MasterServer::UserMessageHandler::$WithFailureHandler$d__14::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("MasterServer::UserMessageHandler::$WithFailureHandler$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
