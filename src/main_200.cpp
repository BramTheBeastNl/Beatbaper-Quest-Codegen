// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuRpcManager/RequestKickPlayerRpc
#include "GlobalNamespace/MenuRpcManager_RequestKickPlayerRpc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelCompletionResults/MultiplayerLevelEndState _levelEndState
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::_get__levelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::_get__levelEndState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>(___internal__instance, "_levelEndState"));
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerLevelCompletionResults/MultiplayerLevelEndState _levelEndState
void GlobalNamespace::MultiplayerLevelCompletionResults::_set__levelEndState(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::_set__levelEndState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_levelEndState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelCompletionResults _levelCompletionResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::_get__levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::_get__levelCompletionResults");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelCompletionResults*>(___internal__instance, "_levelCompletionResults"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LevelCompletionResults _levelCompletionResults
void GlobalNamespace::MultiplayerLevelCompletionResults::_set__levelCompletionResults(GlobalNamespace::LevelCompletionResults* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::_set__levelCompletionResults");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_levelCompletionResults", value));
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_levelEndState
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::get_levelEndState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_levelEndState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelEndState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_levelCompletionResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_levelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelCompletionResults*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_hasAnyResults
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_hasAnyResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasAnyResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.get_failedOrGivenUp
bool GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::get_failedOrGivenUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failedOrGivenUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelCompletionResults.Serialize
void GlobalNamespace::MultiplayerLevelCompletionResults::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CreateFromSerializedData
GlobalNamespace::MultiplayerLevelCompletionResults* GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLevelCompletionResults*, false>(this, ___internal__method, reader);
}
// Autogenerated method: MultiplayerLevelCompletionResults.CompareTo
int GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelCompletionResults/MultiplayerLevelEndState
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Cleared
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Cleared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Cleared"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Cleared
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Cleared(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Cleared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Cleared", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Failed
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Failed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Failed(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState GivenUp
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_GivenUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_GivenUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "GivenUp"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState GivenUp
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_GivenUp(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_GivenUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "GivenUp", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState WasInactive
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_WasInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_WasInactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "WasInactive"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState WasInactive
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_WasInactive(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_WasInactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "WasInactive", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState StartupFailed
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_StartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_StartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "StartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState StartupFailed
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_StartupFailed(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_StartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "StartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState HostEndedLevel
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_HostEndedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_HostEndedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "HostEndedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState HostEndedLevel
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_HostEndedLevel(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_HostEndedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "HostEndedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState ConnectedAfterLevelEnded
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_ConnectedAfterLevelEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_ConnectedAfterLevelEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "ConnectedAfterLevelEnded"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState ConnectedAfterLevelEnded
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_ConnectedAfterLevelEnded(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_ConnectedAfterLevelEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "ConnectedAfterLevelEnded", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Quit
GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState>("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelCompletionResults/MultiplayerLevelEndState Quit
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Quit(GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelCompletionResults/MultiplayerLevelEndState", "Quit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelCompletionResults::MultiplayerLevelEndState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState None
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState None
void GlobalNamespace::MultiplayerLobbyState::_set_None(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbySetup
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_LobbySetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbySetup"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbySetup
void GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_LobbySetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbySetup", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState LobbyCountdown
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_LobbyCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "LobbyCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState LobbyCountdown
void GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_LobbyCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "LobbyCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameStarting
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameStarting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameStarting
void GlobalNamespace::MultiplayerLobbyState::_set_GameStarting(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameStarting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState GameRunning
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_GameRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_GameRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "GameRunning"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState GameRunning
void GlobalNamespace::MultiplayerLobbyState::_set_GameRunning(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_GameRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "GameRunning", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyState Error
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::MultiplayerLobbyState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>("", "MultiplayerLobbyState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyState Error
void GlobalNamespace::MultiplayerLobbyState::_set_Error(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerLobbyState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerLobbyState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState None
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState None
void GlobalNamespace::MultiplayerGameState::_set_None(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Lobby
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Lobby
void GlobalNamespace::MultiplayerGameState::_set_Lobby(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Lobby", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameState Game
GlobalNamespace::MultiplayerGameState GlobalNamespace::MultiplayerGameState::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>("", "MultiplayerGameState", "Game"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameState Game
void GlobalNamespace::MultiplayerGameState::_set_Game(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameState", "Game", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerGameState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerGameState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerGameState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: MultiplayerSessionManager/<>c__DisplayClass97_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass97_0.hpp"
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerSessionState
::Il2CppString* GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerSessionManager", "kMultiplayerSessionState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerSessionState
void GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager", "kMultiplayerSessionState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<MultiplayerSessionManager/MessageType,IConnectedPlayer> _packetSerializer
GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::MultiplayerSessionManager_MessageType, GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__packetSerializer");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::MultiplayerSessionManager_MessageType, GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_packetSerializer")));
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<MultiplayerSessionManager/MessageType,IConnectedPlayer> _packetSerializer
void GlobalNamespace::MultiplayerSessionManager::_set__packetSerializer(GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::MultiplayerSessionManager_MessageType, GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__packetSerializer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetSerializer", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__connectedPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_connectedPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
void GlobalNamespace::MultiplayerSessionManager::_set__connectedPlayers(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__connectedPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _localPlayerState
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::MultiplayerSessionManager::_get__localPlayerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__localPlayerState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<::Il2CppString*>*>(___internal__instance, "_localPlayerState"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _localPlayerState
void GlobalNamespace::MultiplayerSessionManager::_set__localPlayerState(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__localPlayerState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localPlayerState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly SynchronizedActionQueue _synchronizedActionQueue
GlobalNamespace::SynchronizedActionQueue* GlobalNamespace::MultiplayerSessionManager::_get__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__synchronizedActionQueue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SynchronizedActionQueue*>(___internal__instance, "_synchronizedActionQueue"));
}
// Autogenerated instance field setter
// Set instance field: private readonly SynchronizedActionQueue _synchronizedActionQueue
void GlobalNamespace::MultiplayerSessionManager::_set__synchronizedActionQueue(GlobalNamespace::SynchronizedActionQueue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__synchronizedActionQueue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_synchronizedActionQueue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::_get__maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__maxPlayerCount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_maxPlayerCount"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _maxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::_set__maxPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__maxPlayerCount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_maxPlayerCount", value));
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerSessionManager/ConnectionState _connectionState
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::_get__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__connectionState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>(___internal__instance, "_connectionState"));
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerSessionManager/ConnectionState _connectionState
void GlobalNamespace::MultiplayerSessionManager::_set__connectionState(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__connectionState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectionState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<System.Int32> _freeSortIndices
System::Collections::Generic::Queue_1<int>* GlobalNamespace::MultiplayerSessionManager::_get__freeSortIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__freeSortIndices");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<int>*>(___internal__instance, "_freeSortIndices"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Queue`1<System.Int32> _freeSortIndices
void GlobalNamespace::MultiplayerSessionManager::_set__freeSortIndices(System::Collections::Generic::Queue_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__freeSortIndices");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_freeSortIndices", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectedEvent
System::Action* GlobalNamespace::MultiplayerSessionManager::_get_connectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_connectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "connectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action connectedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_connectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> connectionFailedEvent
System::Action_1<GlobalNamespace::ConnectionFailedReason>* GlobalNamespace::MultiplayerSessionManager::_get_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_connectionFailedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::ConnectionFailedReason>*>(___internal__instance, "connectionFailedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<ConnectionFailedReason> connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_connectionFailedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectionFailedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_playerConnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerConnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_playerConnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerConnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_playerDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerDisconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_playerDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerDisconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerAvatarChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get_playerAvatarChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_playerAvatarChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerAvatarChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_playerAvatarChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerAvatarChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerStateChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get_playerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_playerStateChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerStateChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_playerStateChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerStateChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> connectionOwnerStateChangedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::_get_connectionOwnerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_connectionOwnerStateChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "connectionOwnerStateChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_connectionOwnerStateChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectionOwnerStateChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> disconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>* GlobalNamespace::MultiplayerSessionManager::_get_disconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_disconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::DisconnectedReason>*>(___internal__instance, "disconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<DisconnectedReason> disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::_set_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_disconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "disconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer <connectionOwner>k__BackingField
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::_get_$connectionOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get_$connectionOwner$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::IConnectedPlayer*>(___internal__instance, "<connectionOwner>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private IConnectedPlayer <connectionOwner>k__BackingField
void GlobalNamespace::MultiplayerSessionManager::_set_$connectionOwner$k__BackingField(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set_$connectionOwner$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<connectionOwner>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exclusiveConnectedPlayerManager
bool GlobalNamespace::MultiplayerSessionManager::_get__exclusiveConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__exclusiveConnectedPlayerManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_exclusiveConnectedPlayerManager"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _exclusiveConnectedPlayerManager
void GlobalNamespace::MultiplayerSessionManager::_set__exclusiveConnectedPlayerManager(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__exclusiveConnectedPlayerManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_exclusiveConnectedPlayerManager", value));
}
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::_get__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_get__connectedPlayerManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ConnectedPlayerManager*>(___internal__instance, "_connectedPlayerManager"));
}
// Autogenerated instance field setter
// Set instance field: private ConnectedPlayerManager _connectedPlayerManager
void GlobalNamespace::MultiplayerSessionManager::_set__connectedPlayerManager(GlobalNamespace::ConnectedPlayerManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::_set__connectedPlayerManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayerManager", value));
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.set_connectionOwner
void GlobalNamespace::MultiplayerSessionManager::set_connectionOwner(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::set_connectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::MultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTime
float GlobalNamespace::MultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTimeDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerAvatarChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionOwnerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::MultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: MultiplayerSessionManager.StartSession
void GlobalNamespace::MultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayerManager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayerManager);
}
// Autogenerated method: MultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maxPlayerCount);
}
// Autogenerated method: MultiplayerSessionManager.InitInternal
void GlobalNamespace::MultiplayerSessionManager::InitInternal(GlobalNamespace::MultiplayerSessionManager::SessionType sessionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionType);
}
// Autogenerated method: MultiplayerSessionManager.EndSession
void GlobalNamespace::MultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Disconnect
void GlobalNamespace::MultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformAtSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, syncTime, action);
}
// Autogenerated method: MultiplayerSessionManager.UpdateSynchronizedActions
void GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSynchronizedActions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleReinitialized
void GlobalNamespace::MultiplayerSessionManager::HandleReinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleReinitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleReinitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnected
void GlobalNamespace::MultiplayerSessionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandleDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: MultiplayerSessionManager.HandleConnectionFailed
void GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerSessionManager.HandleSyncTimeInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerConnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerAvatarChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerAvatarChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerAvatarChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerOrderChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: MultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, i);
}
// Autogenerated method: MultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(hasState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, hasState);
}
// Autogenerated method: MultiplayerSessionManager.KickPlayer
void GlobalNamespace::MultiplayerSessionManager::KickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::KickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: MultiplayerSessionManager.UpdateConnectionState
void GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState(GlobalNamespace::UpdateConnectionStateReason updateReason, GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConnectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateReason), ::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateReason, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: MultiplayerSessionManager.TryUpdateConnectedPlayer
bool GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer(GlobalNamespace::IConnectedPlayer* player, bool isPlayerConnected) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryUpdateConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(isPlayerConnected)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, player, isPlayerConnected);
}
// Autogenerated method: MultiplayerSessionManager.GetNextAvailableSortIndex
int GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextAvailableSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Start
void GlobalNamespace::MultiplayerSessionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.Update
void GlobalNamespace::MultiplayerSessionManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnDestroy
void GlobalNamespace::MultiplayerSessionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager.OnApplicationPause
void GlobalNamespace::MultiplayerSessionManager::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Player
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Player");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Player"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Player
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Player");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Player", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType Spectator
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_Spectator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "Spectator"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType Spectator
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_Spectator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "Spectator", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/SessionType DedicatedServer
GlobalNamespace::MultiplayerSessionManager::SessionType GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_DedicatedServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::SessionType>("", "MultiplayerSessionManager/SessionType", "DedicatedServer"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/SessionType DedicatedServer
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer(GlobalNamespace::MultiplayerSessionManager::SessionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_DedicatedServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/SessionType", "DedicatedServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerSessionManager::SessionType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerSessionManager::SessionType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::SessionType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/ConnectionState
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Connected
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Connected
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
GlobalNamespace::MultiplayerSessionManager::ConnectionState GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::ConnectionState>("", "MultiplayerSessionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerSessionManager/ConnectionState Disconnecting
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting(GlobalNamespace::MultiplayerSessionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::ConnectionState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager/<>c__DisplayClass97_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass97_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated method: MultiplayerSessionManager/<>c__DisplayClass97_0.<GetPlayerByUserId>b__0
bool GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::$GetPlayerByUserId$b__0(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c__DisplayClass97_0::<GetPlayerByUserId>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPlayerByUserId>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MultiplayerSessionManager/<>c <>9
GlobalNamespace::MultiplayerSessionManager::$$c* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSessionManager::$$c*>("", "MultiplayerSessionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MultiplayerSessionManager/<>c <>9
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9(GlobalNamespace::MultiplayerSessionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__103_0
System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__103_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_get_$$9__103_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IConnectedPlayer*, int>*>("", "MultiplayerSessionManager/<>c", "<>9__103_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IConnectedPlayer,System.Int32> <>9__103_0
void GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__103_0(System::Func_2<GlobalNamespace::IConnectedPlayer*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::_set_$$9__103_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager/<>c", "<>9__103_0", value)));
}
// Autogenerated method: MultiplayerSessionManager/<>c..cctor
void GlobalNamespace::MultiplayerSessionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerSessionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MultiplayerSessionManager/<>c.<TryUpdateConnectedPlayer>b__103_0
int GlobalNamespace::MultiplayerSessionManager::$$c::$TryUpdateConnectedPlayer$b__103_0(GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSessionManager::$$c::<TryUpdateConnectedPlayer>b__103_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryUpdateConnectedPlayer>b__103_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkConstants
#include "GlobalNamespace/NetworkConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 kProtocolVersion
uint GlobalNamespace::NetworkConstants::_get_kProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "NetworkConstants", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kProtocolVersion
void GlobalNamespace::NetworkConstants::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.String dedicatedServerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_dedicatedServerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_dedicatedServerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "dedicatedServerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String dedicatedServerState
void GlobalNamespace::NetworkConstants::_set_dedicatedServerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_dedicatedServerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "dedicatedServerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String playerState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_playerState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "playerState"));
}
// Autogenerated static field setter
// Set static field: static public System.String playerState
void GlobalNamespace::NetworkConstants::_set_playerState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_playerState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "playerState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String spectatingState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_spectatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_spectatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "spectatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String spectatingState
void GlobalNamespace::NetworkConstants::_set_spectatingState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_spectatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "spectatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String backgroundedState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_backgroundedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_backgroundedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "backgroundedState"));
}
// Autogenerated static field setter
// Set static field: static public System.String backgroundedState
void GlobalNamespace::NetworkConstants::_set_backgroundedState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_backgroundedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "backgroundedState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String terminatingState
::Il2CppString* GlobalNamespace::NetworkConstants::_get_terminatingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_terminatingState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "terminatingState"));
}
// Autogenerated static field setter
// Set static field: static public System.String terminatingState
void GlobalNamespace::NetworkConstants::_set_terminatingState(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_terminatingState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "terminatingState", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wantsToPlayNextLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wantsToPlayNextLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wantsToPlayNextLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String wantsToPlayNextLevel
void GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wantsToPlayNextLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wantsToPlayNextLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String wasActiveAtLevelStart
::Il2CppString* GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_wasActiveAtLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "wasActiveAtLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public System.String wasActiveAtLevelStart
void GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_wasActiveAtLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "wasActiveAtLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.String isActive
::Il2CppString* GlobalNamespace::NetworkConstants::_get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_isActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "isActive"));
}
// Autogenerated static field setter
// Set static field: static public System.String isActive
void GlobalNamespace::NetworkConstants::_set_isActive(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_isActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "isActive", value));
}
// Autogenerated static field getter
// Get static field: static public System.String finishedLevel
::Il2CppString* GlobalNamespace::NetworkConstants::_get_finishedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_get_finishedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "NetworkConstants", "finishedLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String finishedLevel
void GlobalNamespace::NetworkConstants::_set_finishedLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConstants::_set_finishedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkConstants", "finishedLevel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkUtility
#include "GlobalNamespace/NetworkUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionKey
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionKey
void GlobalNamespace::NetworkUtility::_set__nameEncryptionKey(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _nameEncryptionIv
::Array<uint8_t>* GlobalNamespace::NetworkUtility::_get__nameEncryptionIv() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_get__nameEncryptionIv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "NetworkUtility", "_nameEncryptionIv"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _nameEncryptionIv
void GlobalNamespace::NetworkUtility::_set__nameEncryptionIv(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::_set__nameEncryptionIv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NetworkUtility", "_nameEncryptionIv", value));
}
// Autogenerated method: NetworkUtility..cctor
void GlobalNamespace::NetworkUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.Init
void GlobalNamespace::NetworkUtility::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashedUserId
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashedUserId(::Il2CppString* userId, GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashedUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userId, platform);
}
// Autogenerated method: NetworkUtility.EncryptName
::Il2CppString* GlobalNamespace::NetworkUtility::EncryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::EncryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "EncryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.DecryptName
::Il2CppString* GlobalNamespace::NetworkUtility::DecryptName(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::DecryptName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "DecryptName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: NetworkUtility.GenerateId
::Il2CppString* GlobalNamespace::NetworkUtility::GenerateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GenerateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GenerateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NetworkUtility.GetHashBase64
::Il2CppString* GlobalNamespace::NetworkUtility::GetHashBase64(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkUtility::GetHashBase64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NetworkUtility", "GetHashBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: MasterServer.ITimeProvider
#include "MasterServer/ITimeProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kEncryptedPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptedPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kPlaintextPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kPlaintextPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kPlaintextPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPlaintextPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kPendingEncryptionStateTimeoutMs
void GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch _stopwatch
System::Diagnostics::Stopwatch* GlobalNamespace::PacketEncryptionLayer::_get__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__stopwatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Stopwatch*>("", "PacketEncryptionLayer", "_stopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch _stopwatch
void GlobalNamespace::PacketEncryptionLayer::_set__stopwatch(System::Diagnostics::Stopwatch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__stopwatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_stopwatch", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly PacketEncryptionLayer/EncryptionStatistics statistics
GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics* GlobalNamespace::PacketEncryptionLayer::_get_statistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_statistics");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics*>(___internal__instance, "statistics"));
}
// Autogenerated instance field setter
// Set instance field: public readonly PacketEncryptionLayer/EncryptionStatistics statistics
void GlobalNamespace::PacketEncryptionLayer::_set_statistics(GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_statistics");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "statistics", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,EncryptionUtility/IEncryptionState> _encryptionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::_get__encryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__encryptionStates");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(___internal__instance, "_encryptionStates")));
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<System.Net.IPEndPoint,EncryptionUtility/IEncryptionState> _encryptionStates
void GlobalNamespace::PacketEncryptionLayer::_set__encryptionStates(GlobalNamespace::ExpiringDictionary_2<System::Net::IPEndPoint*, GlobalNamespace::EncryptionUtility::IEncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__encryptionStates");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_encryptionStates", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ExpiringDictionary`2<System.Net.IPAddress,PacketEncryptionLayer/PendingEncryptionStateList> _pendingEncryptionStates
GlobalNamespace::ExpiringDictionary_2<System::Net::IPAddress*, GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>* GlobalNamespace::PacketEncryptionLayer::_get__pendingEncryptionStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__pendingEncryptionStates");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::ExpiringDictionary_2<System::Net::IPAddress*, GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>*>(___internal__instance, "_pendingEncryptionStates")));
}
// Autogenerated instance field setter
// Set instance field: private readonly ExpiringDictionary`2<System.Net.IPAddress,PacketEncryptionLayer/PendingEncryptionStateList> _pendingEncryptionStates
void GlobalNamespace::PacketEncryptionLayer::_set__pendingEncryptionStates(GlobalNamespace::ExpiringDictionary_2<System::Net::IPAddress*, GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__pendingEncryptionStates");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_pendingEncryptionStates", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _unencryptedTrafficFilter
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__unencryptedTrafficFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get__unencryptedTrafficFilter");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "_unencryptedTrafficFilter"));
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] _unencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::_set__unencryptedTrafficFilter(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set__unencryptedTrafficFilter");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_unencryptedTrafficFilter", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <filterUnencryptedTraffic>k__BackingField
bool GlobalNamespace::PacketEncryptionLayer::_get_$filterUnencryptedTraffic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_$filterUnencryptedTraffic$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<filterUnencryptedTraffic>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <filterUnencryptedTraffic>k__BackingField
void GlobalNamespace::PacketEncryptionLayer::_set_$filterUnencryptedTraffic$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_$filterUnencryptedTraffic$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<filterUnencryptedTraffic>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <enableStatistics>k__BackingField
bool GlobalNamespace::PacketEncryptionLayer::_get_$enableStatistics$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_get_$enableStatistics$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<enableStatistics>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <enableStatistics>k__BackingField
void GlobalNamespace::PacketEncryptionLayer::_set_$enableStatistics$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::_set_$enableStatistics$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<enableStatistics>k__BackingField", value));
}
// Autogenerated method: PacketEncryptionLayer.get_filterUnencryptedTraffic
bool GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_filterUnencryptedTraffic
void GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterUnencryptedTraffic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.get_enableStatistics
bool GlobalNamespace::PacketEncryptionLayer::get_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::get_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.set_enableStatistics
void GlobalNamespace::PacketEncryptionLayer::set_enableStatistics(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::set_enableStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PacketEncryptionLayer.SetUnencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter(::Array<uint8_t>* unencryptedTrafficFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUnencryptedTrafficFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unencryptedTrafficFilter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unencryptedTrafficFilter);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpoint
GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpointAsync
System::Threading::Tasks::Task_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.RemoveEncryptedEndpoint
bool GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptedState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEncryptedEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(encryptedState)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, encryptedState);
}
// Autogenerated method: PacketEncryptionLayer.AddPendingEncryptedEndpointAsync
System::Threading::Tasks::Task* GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync(System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPendingEncryptedEndpointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverRandom), ::il2cpp_utils::ExtractType(clientRandom), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, endPoint, preMasterSecret, serverRandom, clientRandom, isClient);
}
// Autogenerated method: PacketEncryptionLayer.PollUpdate
void GlobalNamespace::PacketEncryptionLayer::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PollUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.RemoveAllEndpoints
void GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllEndpoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState*& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.TryGetPendingEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState*& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.TryGetPotentialPendingEncryptionStates
bool GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates(System::Net::IPEndPoint* endPoint, ::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*& encryptionStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPotentialPendingEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, encryptionStates);
}
// Autogenerated method: PacketEncryptionLayer.PromotePendingEncryptionState
void GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::EncryptionUtility::IEncryptionState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PromotePendingEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, state);
}
// Autogenerated method: PacketEncryptionLayer.MatchesFilter
bool GlobalNamespace::PacketEncryptionLayer::MatchesFilter(::Array<uint8_t>* data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::MatchesFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint, data, offset, length, encrypted);
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacketInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint, data, offset, length, encrypted);
}
// Autogenerated method: PacketEncryptionLayer.Log
void GlobalNamespace::PacketEncryptionLayer::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.LogV
void GlobalNamespace::PacketEncryptionLayer::LogV(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::LogV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer", "LogV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInboundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOutBoundPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedPlaintext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsReceivedPlaintext"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsReceivedPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedPlaintext(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedPlaintext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsReceivedPlaintext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedEncrypted");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsReceivedEncrypted"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsReceivedEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedEncrypted(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedEncrypted");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsReceivedEncrypted", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsReceivedRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsReceivedRejected");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsReceivedRejected"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsReceivedRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedRejected(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsReceivedRejected");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsReceivedRejected", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentPlaintext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsSentPlaintext"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsSentPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentPlaintext(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentPlaintext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsSentPlaintext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentEncrypted");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsSentEncrypted"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsSentEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentEncrypted(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentEncrypted");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsSentEncrypted", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _packetsSentRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__packetsSentRejected");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_packetsSentRejected"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _packetsSentRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentRejected(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__packetsSentRejected");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetsSentRejected", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _encryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__encryptionProcessingTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_encryptionProcessingTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _encryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__encryptionProcessingTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__encryptionProcessingTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_encryptionProcessingTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _decryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_get__decryptionProcessingTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_decryptionProcessingTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _decryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__decryptionProcessingTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::_set__decryptionProcessingTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_decryptionProcessingTime", value));
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsReceivedRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentPlaintext
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentEncrypted
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_packetsSentRejected
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_packetsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packetsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_encryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_encryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.get_decryptionProcessingTime
int64_t GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::get_decryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_decryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsReceivedRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsReceivedRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsReceivedRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentPlaintext
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentPlaintext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentPlaintext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentEncrypted
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.IncrementPacketsSentRejected
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::IncrementPacketsSentRejected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPacketsSentRejected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddEncryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddEncryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEncryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PacketEncryptionLayer/EncryptionStatistics.AddDecryptionProcessingTime
void GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::EncryptionStatistics::AddDecryptionProcessingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDecryptionProcessingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,EncryptionUtility/IEncryptionState> _pendingStatesByPort
System::Collections::Generic::Dictionary_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::_get__pendingStatesByPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::_get__pendingStatesByPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(___internal__instance, "_pendingStatesByPort")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,EncryptionUtility/IEncryptionState> _pendingStatesByPort
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::_set__pendingStatesByPort(System::Collections::Generic::Dictionary_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::_set__pendingStatesByPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_pendingStatesByPort", value));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.get_isEmpty
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Dispose
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.GetSortedEncryptionStates
::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::GetSortedEncryptionStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortedEncryptionStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState(int port, GlobalNamespace::EncryptionUtility::IEncryptionState*& encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::TryGetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EncryptionUtility::IEncryptionState*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Add
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add(int port, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList.Remove
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove(int port, GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(encryptionState)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, encryptionState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass4_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
int GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::_get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::_get_port");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "port"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 port
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::_set_port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::_set_port");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "port", value));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass4_0.<GetSortedEncryptionStates>b__0
int GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::$GetSortedEncryptionStates$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass4_0::<GetSortedEncryptionStates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketEncryptionLayer/PendingEncryptionStateList/<>c <>9
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9(GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>*>("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.Int32,EncryptionUtility/IEncryptionState>,EncryptionUtility/IEncryptionState> <>9__4_1
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1(System::Func_2<System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*>, GlobalNamespace::EncryptionUtility::IEncryptionState*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", "<>9__4_1", value)));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c..cctor
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PacketEncryptionLayer/PendingEncryptionStateList/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c.<GetSortedEncryptionStates>b__4_1
GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::$GetSortedEncryptionStates$b__4_1(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c::<GetSortedEncryptionStates>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSortedEncryptionStates>b__4_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EncryptionUtility/IEncryptionState encryptionState
GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::_get_encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::_get_encryptionState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EncryptionUtility::IEncryptionState*>(___internal__instance, "encryptionState"));
}
// Autogenerated instance field setter
// Set instance field: public EncryptionUtility/IEncryptionState encryptionState
void GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::_set_encryptionState(GlobalNamespace::EncryptionUtility::IEncryptionState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::_set_encryptionState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "encryptionState", value));
}
// Autogenerated method: PacketEncryptionLayer/PendingEncryptionStateList/<>c__DisplayClass8_0.<Remove>b__0
bool GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::$Remove$b__0(System::Collections::Generic::KeyValuePair_2<int, GlobalNamespace::EncryptionUtility::IEncryptionState*> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::PendingEncryptionStateList::$$c__DisplayClass8_0::<Remove>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Remove>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24
#include "GlobalNamespace/PacketEncryptionLayer_-AddEncryptedEndpointAsync-d__24.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EncryptionUtility/IEncryptionState> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EncryptionUtility/IEncryptionState> <>t__builder
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_preMasterSecret");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "preMasterSecret"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] preMasterSecret
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_preMasterSecret(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_preMasterSecret");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "preMasterSecret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_serverRandom");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "serverRandom"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] serverRandom
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_serverRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_serverRandom");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverRandom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_clientRandom");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "clientRandom"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] clientRandom
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_clientRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_clientRandom");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "clientRandom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
bool GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_isClient");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isClient"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean isClient
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_isClient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_isClient");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isClient", value));
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public PacketEncryptionLayer <>4__this
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$4__this(GlobalNamespace::PacketEncryptionLayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint* GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_endPoint");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::IPEndPoint*>(___internal__instance, "endPoint"));
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint endPoint
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_endPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_endPoint");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "endPoint", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddEncryptedEndpointAsync>d__24.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddEncryptedEndpointAsync$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26
#include "GlobalNamespace/PacketEncryptionLayer_-AddPendingEncryptedEndpointAsync-d__26.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncTaskMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_preMasterSecret");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "preMasterSecret"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] preMasterSecret
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_preMasterSecret(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_preMasterSecret");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "preMasterSecret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverRandom
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_serverRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_serverRandom");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "serverRandom"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] serverRandom
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_serverRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_serverRandom");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverRandom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientRandom
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_clientRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_clientRandom");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "clientRandom"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte[] clientRandom
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_clientRandom(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_clientRandom");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "clientRandom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
bool GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_isClient");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isClient"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean isClient
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_isClient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_isClient");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isClient", value));
}
// Autogenerated instance field getter
// Get instance field: public PacketEncryptionLayer <>4__this
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PacketEncryptionLayer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public PacketEncryptionLayer <>4__this
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$4__this(GlobalNamespace::PacketEncryptionLayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint* GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_endPoint");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::IPEndPoint*>(___internal__instance, "endPoint"));
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint endPoint
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_endPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_endPoint");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "endPoint", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__1
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EncryptionUtility::IEncryptionState*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.MoveNext
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PacketEncryptionLayer/<AddPendingEncryptedEndpointAsync>d__26.SetStateMachine
void GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PacketEncryptionLayer::$AddPendingEncryptedEndpointAsync$d__26::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: PartyMessageHandler/ServerStatusUpdateMessage
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdateMessage.hpp"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<PartyMessageHandler/MessageType,IConnectedPlayer> _serializer
GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::PartyMessageHandler::MessageType, GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PartyMessageHandler::_get__serializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_get__serializer");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::PartyMessageHandler::MessageType, GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_serializer")));
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<PartyMessageHandler/MessageType,IConnectedPlayer> _serializer
void GlobalNamespace::PartyMessageHandler::_set__serializer(GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::PartyMessageHandler::MessageType, GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_set__serializer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_serializer", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectedPlayerManager _connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::PartyMessageHandler::_get__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_get__connectedPlayerManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ConnectedPlayerManager*>(___internal__instance, "_connectedPlayerManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ConnectedPlayerManager _connectedPlayerManager
void GlobalNamespace::PartyMessageHandler::_set__connectedPlayerManager(GlobalNamespace::ConnectedPlayerManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_set__connectedPlayerManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayerManager", value));
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler/ServerStatusUpdatedDelegate serverStatusUpdatedEvent
GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* GlobalNamespace::PartyMessageHandler::_get_serverStatusUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_get_serverStatusUpdatedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate*>(___internal__instance, "serverStatusUpdatedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private PartyMessageHandler/ServerStatusUpdatedDelegate serverStatusUpdatedEvent
void GlobalNamespace::PartyMessageHandler::_set_serverStatusUpdatedEvent(GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_set_serverStatusUpdatedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverStatusUpdatedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler/ConnectToMasterServerDelegate connectToMasterServerEvent
GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* GlobalNamespace::PartyMessageHandler::_get_connectToMasterServerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_get_connectToMasterServerEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate*>(___internal__instance, "connectToMasterServerEvent"));
}
// Autogenerated instance field setter
// Set instance field: private PartyMessageHandler/ConnectToMasterServerDelegate connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::_set_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::_set_connectToMasterServerEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectToMasterServerEvent", value));
}
// Autogenerated method: PartyMessageHandler.add_serverStatusUpdatedEvent
void GlobalNamespace::PartyMessageHandler::add_serverStatusUpdatedEvent(GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::add_serverStatusUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_serverStatusUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_serverStatusUpdatedEvent
void GlobalNamespace::PartyMessageHandler::remove_serverStatusUpdatedEvent(GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::remove_serverStatusUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_serverStatusUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.add_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::add_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.remove_connectToMasterServerEvent
void GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::remove_connectToMasterServerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectToMasterServerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PartyMessageHandler.Dispose
void GlobalNamespace::PartyMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PartyMessageHandler.SetServerStatus
void GlobalNamespace::PartyMessageHandler::SetServerStatus(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::SetServerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, password, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler.HandleServerStatusUpdate
void GlobalNamespace::PartyMessageHandler::HandleServerStatusUpdate(GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::HandleServerStatusUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerStatusUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: PartyMessageHandler.ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServer(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler.HandleConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer(GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::HandleConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyMessageHandler/MessageType
#include "GlobalNamespace/PartyMessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ServerStatusUpdate
GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ServerStatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_ServerStatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ServerStatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ServerStatusUpdate
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ServerStatusUpdate(GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_ServerStatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ServerStatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
GlobalNamespace::PartyMessageHandler::MessageType GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_ConnectToMasterServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler::MessageType>("", "PartyMessageHandler/MessageType", "ConnectToMasterServer"));
}
// Autogenerated static field setter
// Set static field: static public PartyMessageHandler/MessageType ConnectToMasterServer
void GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer(GlobalNamespace::PartyMessageHandler::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_ConnectToMasterServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PartyMessageHandler/MessageType", "ConnectToMasterServer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::PartyMessageHandler::MessageType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::PartyMessageHandler::MessageType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::MessageType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdatedDelegate
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdatedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, password, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, serverName, password, selectionMask, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdatedDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerDelegate
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.Invoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, selectionMask, configuration, callback, object);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerDelegate.EndInvoke
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ServerStatusUpdateMessage
#include "GlobalNamespace/PartyMessageHandler_ServerStatusUpdateMessage.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serverName
::Il2CppString* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_serverName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "serverName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String serverName
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_serverName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_serverName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String password
::Il2CppString* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_password");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "password"));
}
// Autogenerated instance field setter
// Set instance field: public System.String password
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_password");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "password", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*>* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PartyMessageHandler/ServerStatusUpdateMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Init
GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage* GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Init(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage*, false>(this, ___internal__method, serverName, password, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ServerStatusUpdateMessage.Release
void GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ServerStatusUpdateMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PartyMessageHandler/ConnectToMasterServerMessage
#include "GlobalNamespace/PartyMessageHandler_ConnectToMasterServerMessage.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
System::Net::IPEndPoint* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_endPoint");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::IPEndPoint*>(___internal__instance, "endPoint"));
}
// Autogenerated instance field setter
// Set instance field: public System.Net.IPEndPoint endPoint
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_endPoint(System::Net::IPEndPoint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_endPoint");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "endPoint", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String serverName
::Il2CppString* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_serverName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "serverName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String serverName
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_serverName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_serverName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String password
::Il2CppString* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_password");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "password"));
}
// Autogenerated instance field setter
// Set instance field: public System.String password
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_password");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "password", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userName", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PartyMessageHandler/ConnectToMasterServerMessage", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Init
GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage* GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage*, false>(this, ___internal__method, endPoint, serverName, password, secret, userId, userName, selectionMask, configuration);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Serialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Deserialize
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PartyMessageHandler/ConnectToMasterServerMessage.Release
void GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PartyMessageHandler::ConnectToMasterServerMessage::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<PlayerSpecificSettingsNetSerializable> <activePlayerSpecificSettingsAtGameStart>k__BackingField
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_get_$activePlayerSpecificSettingsAtGameStart$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_get_$activePlayerSpecificSettingsAtGameStart$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*>(___internal__instance, "<activePlayerSpecificSettingsAtGameStart>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IReadOnlyList`1<PlayerSpecificSettingsNetSerializable> <activePlayerSpecificSettingsAtGameStart>k__BackingField
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_set_$activePlayerSpecificSettingsAtGameStart$k__BackingField(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_set_$activePlayerSpecificSettingsAtGameStart$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<activePlayerSpecificSettingsAtGameStart>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _activePlayersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_get__activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_get__activePlayersAtGameStart");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_activePlayersAtGameStart"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _activePlayersAtGameStart
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_set__activePlayersAtGameStart(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::_set__activePlayersAtGameStart");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_activePlayersAtGameStart", value));
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.get_activePlayerSpecificSettingsAtGameStart
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::get_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.set_activePlayerSpecificSettingsAtGameStart
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::set_activePlayerSpecificSettingsAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activePlayerSpecificSettingsAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsAtStartNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHanded
bool GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_leftHanded");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "leftHanded"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean leftHanded
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_leftHanded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_leftHanded");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "leftHanded", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean automaticPlayerHeight
bool GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_automaticPlayerHeight");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "automaticPlayerHeight"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean automaticPlayerHeight
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_automaticPlayerHeight(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_automaticPlayerHeight");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "automaticPlayerHeight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
float GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_playerHeight");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "playerHeight"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single playerHeight
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_playerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_playerHeight");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerHeight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single headPosToPlayerHeightOffset
float GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_headPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_headPosToPlayerHeightOffset");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "headPosToPlayerHeightOffset"));
}
// Autogenerated instance field setter
// Set instance field: public System.Single headPosToPlayerHeightOffset
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_headPosToPlayerHeightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_headPosToPlayerHeightOffset");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "headPosToPlayerHeightOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public ColorSchemeNetSerializable colorScheme
GlobalNamespace::ColorSchemeNetSerializable GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_get_colorScheme");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ColorSchemeNetSerializable>(___internal__instance, "colorScheme"));
}
// Autogenerated instance field setter
// Set instance field: public ColorSchemeNetSerializable colorScheme
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_colorScheme(GlobalNamespace::ColorSchemeNetSerializable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::_set_colorScheme");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "colorScheme", value));
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Serialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerSpecificSettingsNetSerializable.Deserialize
void GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpecificSettingsNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerStateHash
#include "GlobalNamespace/PlayerStateHash.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::Il2CppString* GlobalNamespace::PlayerStateHash::_get_kToStringPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerStateHash", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::PlayerStateHash::_set_kToStringPrefix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::Il2CppString* GlobalNamespace::PlayerStateHash::_get_kToStringSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerStateHash", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::PlayerStateHash::_set_kToStringSuffix(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerStateHash", "kToStringSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BitMask128 _bloomFilter
GlobalNamespace::BitMask128 GlobalNamespace::PlayerStateHash::_get__bloomFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_get__bloomFilter");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BitMask128>(___internal__instance, "_bloomFilter"));
}
// Autogenerated instance field setter
// Set instance field: private readonly BitMask128 _bloomFilter
void GlobalNamespace::PlayerStateHash::_set__bloomFilter(GlobalNamespace::BitMask128 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::_set__bloomFilter");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bloomFilter", value));
}
// Autogenerated method: PlayerStateHash.Contains
bool GlobalNamespace::PlayerStateHash::Contains(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.AddState
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::AddState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::AddState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(*this, ___internal__method, state);
}
// Autogenerated method: PlayerStateHash.Serialize
void GlobalNamespace::PlayerStateHash::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: PlayerStateHash.CreateFromSerializedData
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(*this, ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.Deserialize
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: PlayerStateHash.ToShortString
::Il2CppString* GlobalNamespace::PlayerStateHash::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToShortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.ToBytes
::Array<uint8_t>* GlobalNamespace::PlayerStateHash::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(GlobalNamespace::PlayerStateHash other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: PlayerStateHash.TryParse
bool GlobalNamespace::PlayerStateHash::TryParse(::Il2CppString* stringSerializedMask, GlobalNamespace::PlayerStateHash& playerStateHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerStateHash&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, playerStateHash);
}
// Autogenerated method: PlayerStateHash.Parse
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::Parse(::Il2CppString* stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: PlayerStateHash.FromBytes
GlobalNamespace::PlayerStateHash GlobalNamespace::PlayerStateHash::FromBytes(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerStateHash", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerStateHash, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: PlayerStateHash.ToString
::Il2CppString* GlobalNamespace::PlayerStateHash::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.GetHashCode
int GlobalNamespace::PlayerStateHash::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStateHash.Equals
bool GlobalNamespace::PlayerStateHash::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStateHash::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsNetSerializable <localPlayerSpecificSettings>k__BackingField
GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get_$localPlayerSpecificSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get_$localPlayerSpecificSettings$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSpecificSettingsNetSerializable*>(___internal__instance, "<localPlayerSpecificSettings>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private PlayerSpecificSettingsNetSerializable <localPlayerSpecificSettings>k__BackingField
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set_$localPlayerSpecificSettings$k__BackingField(GlobalNamespace::PlayerSpecificSettingsNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set_$localPlayerSpecificSettings$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<localPlayerSpecificSettings>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettingsAtStartNetSerializable <playersAtGameStartNetSerializable>k__BackingField
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get_$playersAtGameStartNetSerializable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get_$playersAtGameStartNetSerializable$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*>(___internal__instance, "<playersAtGameStartNetSerializable>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private PlayerSpecificSettingsAtStartNetSerializable <playersAtGameStartNetSerializable>k__BackingField
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set_$playersAtGameStartNetSerializable$k__BackingField(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set_$playersAtGameStartNetSerializable$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<playersAtGameStartNetSerializable>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStart
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_localPlayerSpecificSettings
GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_localPlayerSpecificSettings
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings(GlobalNamespace::PlayerSpecificSettingsNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_localPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.get_playersAtGameStartNetSerializable
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::get_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.set_playersAtGameStartNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::set_playersAtGameStartNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playersAtGameStartNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.GetPlayerSpecificSettingsForUserId
GlobalNamespace::PlayerSpecificSettingsNetSerializable* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::GetPlayerSpecificSettingsForUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSpecificSettingsForUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsNetSerializable*, false>(this, ___internal__method, userId);
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel.SaveFromNetSerializable
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable(GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::SaveFromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playersAtGameStartNetSerializable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel_--c__DisplayClass13_0.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IConnectedPlayer player
GlobalNamespace::IConnectedPlayer* GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::_get_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::_get_player");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IConnectedPlayer*>(___internal__instance, "player"));
}
// Autogenerated instance field setter
// Set instance field: public IConnectedPlayer player
void GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::_set_player(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::_set_player");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "player", value));
}
// Autogenerated method: PlayersSpecificSettingsAtGameStartModel/<>c__DisplayClass13_0.<SaveFromNetSerializable>b__0
bool GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::$SaveFromNetSerializable$b__0(GlobalNamespace::IConnectedPlayer* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayersSpecificSettingsAtGameStartModel::$$c__DisplayClass13_0::<SaveFromNetSerializable>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveFromNetSerializable>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ProfanityFilter/TrieNode _trie
GlobalNamespace::ProfanityFilter::TrieNode* GlobalNamespace::ProfanityFilter::_get__trie() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::_get__trie");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ProfanityFilter::TrieNode*>(___internal__instance, "_trie"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ProfanityFilter/TrieNode _trie
void GlobalNamespace::ProfanityFilter::_set__trie(GlobalNamespace::ProfanityFilter::TrieNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::_set__trie");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_trie", value));
}
// Autogenerated method: ProfanityFilter.IsProfane
bool GlobalNamespace::ProfanityFilter::IsProfane(::Il2CppString* word) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::IsProfane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProfane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.GetLookalikeLetters
System::Collections::Generic::IEnumerable_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::GetLookalikeLetters(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::GetLookalikeLetters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLookalikeLetters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: ProfanityFilter.GetLeetEquivalent
::Il2CppChar GlobalNamespace::ProfanityFilter::GetLeetEquivalent(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::GetLeetEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLeetEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Char,ProfanityFilter/TrieNode> _children
System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>* GlobalNamespace::ProfanityFilter::TrieNode::_get__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::_get__children");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>*>(___internal__instance, "_children")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.Char,ProfanityFilter/TrieNode> _children
void GlobalNamespace::ProfanityFilter::TrieNode::_set__children(System::Collections::Generic::Dictionary_2<::Il2CppChar, GlobalNamespace::ProfanityFilter::TrieNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::_set__children");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_children", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shortestWord
int GlobalNamespace::ProfanityFilter::TrieNode::_get__shortestWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::_get__shortestWord");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_shortestWord"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _shortestWord
void GlobalNamespace::ProfanityFilter::TrieNode::_set__shortestWord(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::_set__shortestWord");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_shortestWord", value));
}
// Autogenerated method: ProfanityFilter/TrieNode.AddWord
void GlobalNamespace::ProfanityFilter::TrieNode::AddWord(::Il2CppString* word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, word, index);
}
// Autogenerated method: ProfanityFilter/TrieNode.IsMatch
bool GlobalNamespace::ProfanityFilter::TrieNode::IsMatch(::Il2CppString* word, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::TrieNode::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(word), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, word, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Char <>2__current
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppChar>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Char <>2__current
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$2__current(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Char c
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_c");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>(___internal__instance, "c"));
}
// Autogenerated instance field setter
// Set instance field: private System.Char c
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_c(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_c");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "c", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Char <>3__c
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$3__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_get_$$3__c");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppChar>(___internal__instance, "<>3__c")));
}
// Autogenerated instance field setter
// Set instance field: public System.Char <>3__c
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$3__c(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::_set_$$3__c");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>3__c", value));
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerator<System.Char>.get_Current
::Il2CppChar GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerator$System_Char$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerator<System.Char>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Char>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.IDisposable.Dispose
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.MoveNext
bool GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_Generic_IEnumerable$System_Char$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: ProfanityFilter/<GetLookalikeLetters>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ProfanityFilter::$GetLookalikeLetters$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RemoteProcedureCall
#include "GlobalNamespace/RemoteProcedureCall.hpp"
// Including type: RemoteProcedureCall/TypeWrapper`1
#include "GlobalNamespace/RemoteProcedureCall_TypeWrapper_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <syncTime>k__BackingField
float GlobalNamespace::RemoteProcedureCall::_get_$syncTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::_get_$syncTime$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<syncTime>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <syncTime>k__BackingField
void GlobalNamespace::RemoteProcedureCall::_set_$syncTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::_set_$syncTime$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<syncTime>k__BackingField", value));
}
// Autogenerated method: RemoteProcedureCall.get_syncTime
float GlobalNamespace::RemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.set_syncTime
void GlobalNamespace::RemoteProcedureCall::set_syncTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::set_syncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RemoteProcedureCall.SerializeData
void GlobalNamespace::RemoteProcedureCall::SerializeData(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::SerializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: RemoteProcedureCall.DeserializeData
void GlobalNamespace::RemoteProcedureCall::DeserializeData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::DeserializeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: RemoteProcedureCall.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::RemoteProcedureCall::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::LiteNetLib.Utils.INetSerializable.Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: RemoteProcedureCall.Release
void GlobalNamespace::RemoteProcedureCall::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RemoteProcedureCall.Init
GlobalNamespace::IRemoteProcedureCall* GlobalNamespace::RemoteProcedureCall::Init(float syncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RemoteProcedureCall::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IRemoteProcedureCall*, false>(this, ___internal__method, syncTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kGranularity
int64_t GlobalNamespace::RollingAverage::_get_kGranularity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get_kGranularity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "RollingAverage", "kGranularity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kGranularity
void GlobalNamespace::RollingAverage::_set_kGranularity(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set_kGranularity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RollingAverage", "kGranularity", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _currentTotal
int64_t GlobalNamespace::RollingAverage::_get__currentTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get__currentTotal");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>(___internal__instance, "_currentTotal"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int64 _currentTotal
void GlobalNamespace::RollingAverage::_set__currentTotal(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set__currentTotal");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentTotal", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentAverage
float GlobalNamespace::RollingAverage::_get__currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get__currentAverage");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_currentAverage"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _currentAverage
void GlobalNamespace::RollingAverage::_set__currentAverage(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set__currentAverage");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentAverage", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64[] _buffer
::Array<int64_t>* GlobalNamespace::RollingAverage::_get__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get__buffer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int64_t>*>(___internal__instance, "_buffer"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Int64[] _buffer
void GlobalNamespace::RollingAverage::_set__buffer(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set__buffer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_buffer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int GlobalNamespace::RollingAverage::_get__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get__index");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_index"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _index
void GlobalNamespace::RollingAverage::_set__index(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set__index");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_index", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int GlobalNamespace::RollingAverage::_get__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_get__length");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_length"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _length
void GlobalNamespace::RollingAverage::_set__length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::_set__length");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_length", value));
}
// Autogenerated method: RollingAverage.get_currentAverage
float GlobalNamespace::RollingAverage::get_currentAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::get_currentAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: RollingAverage.get_hasValue
bool GlobalNamespace::RollingAverage::get_hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::get_hasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RollingAverage.Update
void GlobalNamespace::RollingAverage::Update(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RollingAverage.Reset
void GlobalNamespace::RollingAverage::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RollingAverage::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RpcPool
#include "GlobalNamespace/RpcPool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: IPacketPool
#include "GlobalNamespace/IPacketPool.hpp"
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>* GlobalNamespace::RpcPool::_get__pools() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::_get__pools");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>*>("", "RpcPool", "_pools")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,IPacketPool> _pools
void GlobalNamespace::RpcPool::_set__pools(System::Collections::Generic::Dictionary_2<System::Type*, GlobalNamespace::IPacketPool*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::_set__pools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RpcPool", "_pools", value));
}
// Autogenerated method: RpcPool.Release
void GlobalNamespace::RpcPool::Release(GlobalNamespace::IRemoteProcedureCall* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RpcPool::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RpcPool", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SceneStartHandler
#include "GlobalNamespace/SceneStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::SceneStartHandler::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::SceneStartHandler::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager* GlobalNamespace::SceneStartHandler::_get__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__gameplayRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IGameplayRpcManager*>(___internal__instance, "_gameplayRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameplayRpcManager _gameplayRpcManager
void GlobalNamespace::SceneStartHandler::_set__gameplayRpcManager(GlobalNamespace::IGameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__gameplayRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameplayRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* GlobalNamespace::SceneStartHandler::_get__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__playersAtGameStartModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*>(___internal__instance, "_playersAtGameStartModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
void GlobalNamespace::SceneStartHandler::_set__playersAtGameStartModel(GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__playersAtGameStartModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playersAtGameStartModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::SceneStartHandler::_get__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__readyPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<::Il2CppString*>*>(___internal__instance, "_readyPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
void GlobalNamespace::SceneStartHandler::_set__readyPlayers(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__readyPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_readyPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,PlayerSpecificSettingsNetSerializable> _playersSpecificSettings
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* GlobalNamespace::SceneStartHandler::_get__playersSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__playersSpecificSettings");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*>(___internal__instance, "_playersSpecificSettings")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,PlayerSpecificSettingsNetSerializable> _playersSpecificSettings
void GlobalNamespace::SceneStartHandler::_set__playersSpecificSettings(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__playersSpecificSettings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playersSpecificSettings", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool GlobalNamespace::SceneStartHandler::_get__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__started");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_started"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _started
void GlobalNamespace::SceneStartHandler::_set__started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__started");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_started", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _sessionGameId
::Il2CppString* GlobalNamespace::SceneStartHandler::_get__sessionGameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get__sessionGameId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_sessionGameId"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _sessionGameId
void GlobalNamespace::SceneStartHandler::_set__sessionGameId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set__sessionGameId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_sessionGameId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidFinishEvent
System::Action_1<::Il2CppString*>* GlobalNamespace::SceneStartHandler::_get_sceneSetupDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get_sceneSetupDidFinishEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>(___internal__instance, "sceneSetupDidFinishEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.String> sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::_set_sceneSetupDidFinishEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set_sceneSetupDidFinishEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sceneSetupDidFinishEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> sceneSetupDidReceiveTooLateEvent
System::Action_1<::Il2CppString*>* GlobalNamespace::SceneStartHandler::_get_sceneSetupDidReceiveTooLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_get_sceneSetupDidReceiveTooLateEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>(___internal__instance, "sceneSetupDidReceiveTooLateEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.String> sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::_set_sceneSetupDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::_set_sceneSetupDidReceiveTooLateEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "sceneSetupDidReceiveTooLateEvent", value));
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::add_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidFinishEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::remove_sceneSetupDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.add_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::add_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.remove_sceneSetupDidReceiveTooLateEvent
void GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::remove_sceneSetupDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sceneSetupDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartHandler.Dispose
void GlobalNamespace::SceneStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.GetSceneLoadStatus
void GlobalNamespace::SceneStartHandler::GetSceneLoadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::GetSceneLoadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSceneLoadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.ForceStart
void GlobalNamespace::SceneStartHandler::ForceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playerSpecificSettings);
}
// Autogenerated method: SceneStartHandler.HandleGetGameplaySceneReady
void GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleGetGameplaySceneReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: SceneStartHandler.HandleSetGameplaySceneSyncFinished
void GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished(::Il2CppString* userId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::Il2CppString* sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetGameplaySceneSyncFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.HandleSetPlayerDidConnectLate
void GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate(::Il2CppString* userId, ::Il2CppString* failedUserId, GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::Il2CppString* sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::HandleSetPlayerDidConnectLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(failedUserId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, failedUserId, playersAtGameStart, sessionId);
}
// Autogenerated method: SceneStartHandler.AddPlayerSpecificSettingsToDictionary
void GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary(GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::AddPlayerSpecificSettingsToDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayerSpecificSettingsToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettingsNetSerializable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerSpecificSettingsNetSerializable);
}
// Autogenerated method: SceneStartHandler.CreatePlayersSpecificSettingsAtGameStartData
GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartHandler::CreatePlayersSpecificSettingsAtGameStartData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayersSpecificSettingsAtGameStartData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SecureRandomProvider
#include "GlobalNamespace/SecureRandomProvider.hpp"
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
GlobalNamespace::SecureRandomProvider::SecureRandomState* GlobalNamespace::SecureRandomProvider::_get__secureRandomState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::_get__secureRandomState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SecureRandomProvider::SecureRandomState*>("", "SecureRandomProvider", "_secureRandomState"));
}
// Autogenerated static field setter
// Set static field: static private SecureRandomProvider/SecureRandomState _secureRandomState
void GlobalNamespace::SecureRandomProvider::_set__secureRandomState(GlobalNamespace::SecureRandomProvider::SecureRandomState* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::_set__secureRandomState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider", "_secureRandomState", value));
}
// Autogenerated method: SecureRandomProvider..cctor
void GlobalNamespace::SecureRandomProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
::Array<uint8_t>* GlobalNamespace::SecureRandomProvider::GetBytes(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length);
}
// Autogenerated method: SecureRandomProvider.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::Array<uint8_t>* buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider.GetBytes
void GlobalNamespace::SecureRandomProvider::GetBytes(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SecureRandomProvider", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SecureRandomProvider/SecureRandomState
#include "GlobalNamespace/SecureRandomProvider_SecureRandomState.hpp"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kBufferSize
int GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get_kBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SecureRandomProvider/SecureRandomState", "kBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBufferSize
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set_kBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SecureRandomProvider/SecureRandomState", "kBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.RNGCryptoServiceProvider _random
System::Security::Cryptography::RNGCryptoServiceProvider* GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__random");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RNGCryptoServiceProvider*>(___internal__instance, "_random"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Security.Cryptography.RNGCryptoServiceProvider _random
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__random(System::Security::Cryptography::RNGCryptoServiceProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__random");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_random", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer0
::Array<uint8_t>* GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__randomBuffer0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__randomBuffer0");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "_randomBuffer0"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Byte[] _randomBuffer0
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__randomBuffer0(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__randomBuffer0");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_randomBuffer0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _randomBuffer1
::Array<uint8_t>* GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__randomBuffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__randomBuffer1");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "_randomBuffer1"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Byte[] _randomBuffer1
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__randomBuffer1(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__randomBuffer1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_randomBuffer1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_get__index");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_index"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _index
void GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__index(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::_set__index");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_index", value));
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetBytes
void GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes(::Array<uint8_t>* buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.GetByte
uint8_t GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::GetByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: SecureRandomProvider/SecureRandomState.FillBuffer
void GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SecureRandomProvider::SecureRandomState::FillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallSize
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheSmallSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallSize
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheSmallSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMediumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMediumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeSize
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheLargeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeSize
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheLargeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxSize
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxSize
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheSmallMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheSmallMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheSmallMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheSmallMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheSmallMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheSmallMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMediumMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMediumMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMediumMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMediumMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMediumMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMediumMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheLargeMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheLargeMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheLargeMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheLargeMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheLargeMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheLargeMaxCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCacheMaxMaxCapacity
int GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get_kCacheMaxMaxCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SmallBufferPool", "kCacheMaxMaxCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCacheMaxMaxCapacity
void GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set_kCacheMaxMaxCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SmallBufferPool", "kCacheMaxMaxCapacity", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheSmall
System::Collections::Generic::List_1<::Array<uint8_t>*>* GlobalNamespace::SmallBufferPool::_get__cacheSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get__cacheSmall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Array<uint8_t>*>*>(___internal__instance, "_cacheSmall"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheSmall
void GlobalNamespace::SmallBufferPool::_set__cacheSmall(System::Collections::Generic::List_1<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set__cacheSmall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cacheSmall", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMedium
System::Collections::Generic::List_1<::Array<uint8_t>*>* GlobalNamespace::SmallBufferPool::_get__cacheMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get__cacheMedium");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Array<uint8_t>*>*>(___internal__instance, "_cacheMedium"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMedium
void GlobalNamespace::SmallBufferPool::_set__cacheMedium(System::Collections::Generic::List_1<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set__cacheMedium");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cacheMedium", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheLarge
System::Collections::Generic::List_1<::Array<uint8_t>*>* GlobalNamespace::SmallBufferPool::_get__cacheLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get__cacheLarge");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Array<uint8_t>*>*>(___internal__instance, "_cacheLarge"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheLarge
void GlobalNamespace::SmallBufferPool::_set__cacheLarge(System::Collections::Generic::List_1<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set__cacheLarge");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cacheLarge", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMax
System::Collections::Generic::List_1<::Array<uint8_t>*>* GlobalNamespace::SmallBufferPool::_get__cacheMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_get__cacheMax");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Array<uint8_t>*>*>(___internal__instance, "_cacheMax"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Byte[]> _cacheMax
void GlobalNamespace::SmallBufferPool::_set__cacheMax(System::Collections::Generic::List_1<::Array<uint8_t>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::_set__cacheMax");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cacheMax", value));
}
// Autogenerated method: SmallBufferPool.GetBuffer
::Array<uint8_t>* GlobalNamespace::SmallBufferPool::GetBuffer(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, length);
}
// Autogenerated method: SmallBufferPool.ReleaseBuffer
void GlobalNamespace::SmallBufferPool::ReleaseBuffer(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmallBufferPool::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedStartDelay
float GlobalNamespace::SongStartHandler::_get_kFixedStartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get_kFixedStartDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartHandler", "kFixedStartDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedStartDelay
void GlobalNamespace::SongStartHandler::_set_kFixedStartDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set_kFixedStartDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartHandler", "kFixedStartDelay", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::SongStartHandler::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::SongStartHandler::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager* GlobalNamespace::SongStartHandler::_get__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__gameplayRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IGameplayRpcManager*>(___internal__instance, "_gameplayRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameplayRpcManager _gameplayRpcManager
void GlobalNamespace::SongStartHandler::_set__gameplayRpcManager(GlobalNamespace::IGameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__gameplayRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameplayRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* GlobalNamespace::SongStartHandler::_get__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__playersAtGameStartModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*>(___internal__instance, "_playersAtGameStartModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
void GlobalNamespace::SongStartHandler::_set__playersAtGameStartModel(GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__playersAtGameStartModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playersAtGameStartModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::SongStartHandler::_get__readyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__readyPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<::Il2CppString*>*>(___internal__instance, "_readyPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _readyPlayers
void GlobalNamespace::SongStartHandler::_set__readyPlayers(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__readyPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_readyPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool GlobalNamespace::SongStartHandler::_get__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__started");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_started"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _started
void GlobalNamespace::SongStartHandler::_set__started(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__started");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_started", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float GlobalNamespace::SongStartHandler::_get__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get__startTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_startTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startTime
void GlobalNamespace::SongStartHandler::_set__startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set__startTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_startTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> setSongStartSyncTimeEvent
System::Action_1<float>* GlobalNamespace::SongStartHandler::_get_setSongStartSyncTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_get_setSongStartSyncTimeEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<float>*>(___internal__instance, "setSongStartSyncTimeEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Single> setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::_set_setSongStartSyncTimeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::_set_setSongStartSyncTimeEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "setSongStartSyncTimeEvent", value));
}
// Autogenerated method: SongStartHandler.get_songStartSyncTime
float GlobalNamespace::SongStartHandler::get_songStartSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::get_songStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.add_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::add_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.remove_setSongStartSyncTimeEvent
void GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::remove_setSongStartSyncTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartSyncTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartHandler.GetLevelStartTimeOffset
void GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::GetLevelStartTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelStartTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.Dispose
void GlobalNamespace::SongStartHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.ForceStart
void GlobalNamespace::SongStartHandler::ForceStart(::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::ForceStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated method: SongStartHandler.StartSong
void GlobalNamespace::SongStartHandler::StartSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartHandler.HandleSetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady(::Il2CppString* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleSetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleGetGameplaySongReady
void GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady(::Il2CppString* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleGetGameplaySongReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: SongStartHandler.HandleSetSongStartTime
void GlobalNamespace::SongStartHandler::HandleSetSongStartTime(::Il2CppString* user, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::HandleSetSongStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, user, time);
}
// Autogenerated method: SongStartHandler.Log
void GlobalNamespace::SongStartHandler::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartHandler::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SortExtensions
#include "GlobalNamespace/SortExtensions.hpp"
// Including type: SortExtensions/<>c__DisplayClass1_0`1
#include "GlobalNamespace/SortExtensions_--c__DisplayClass1_0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior
#include "GlobalNamespace/StandaloneMonobehavior.hpp"
// Including type: StandaloneMonobehavior/<AfterOneFrame>d__18
#include "GlobalNamespace/StandaloneMonobehavior_-AfterOneFrame-d__18.hpp"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__21.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isReady
bool GlobalNamespace::StandaloneMonobehavior::_get__isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_get__isReady");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isReady"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isReady
void GlobalNamespace::StandaloneMonobehavior::_set__isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_set__isReady");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isReady", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float GlobalNamespace::StandaloneMonobehavior::_get__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_get__startTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_startTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startTime
void GlobalNamespace::StandaloneMonobehavior::_set__startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_set__startTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_startTime", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.FrameTiming[] _lastFrameTimings
::Array<UnityEngine::FrameTiming>* GlobalNamespace::StandaloneMonobehavior::_get__lastFrameTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_get__lastFrameTimings");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::FrameTiming>*>(___internal__instance, "_lastFrameTimings"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.FrameTiming[] _lastFrameTimings
void GlobalNamespace::StandaloneMonobehavior::_set__lastFrameTimings(::Array<UnityEngine::FrameTiming>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_set__lastFrameTimings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastFrameTimings", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameTimeCount
int GlobalNamespace::StandaloneMonobehavior::_get__lastFrameTimeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_get__lastFrameTimeCount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_lastFrameTimeCount"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _lastFrameTimeCount
void GlobalNamespace::StandaloneMonobehavior::_set__lastFrameTimeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::_set__lastFrameTimeCount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastFrameTimeCount", value));
}
// Autogenerated method: StandaloneMonobehavior.get_objectLifeTime
float GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_objectLifeTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectLifeTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_deltaTime
float GlobalNamespace::StandaloneMonobehavior::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_lastFrameTime
float GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_lastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.get_isReady
bool GlobalNamespace::StandaloneMonobehavior::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::get_isReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Awake
void GlobalNamespace::StandaloneMonobehavior::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Start
void GlobalNamespace::StandaloneMonobehavior::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.Update
void GlobalNamespace::StandaloneMonobehavior::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnDestroy
void GlobalNamespace::StandaloneMonobehavior::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior.OnApplicationPause
void GlobalNamespace::StandaloneMonobehavior::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::OnApplicationPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: StandaloneMonobehavior.WhenReady
void GlobalNamespace::StandaloneMonobehavior::WhenReady(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::WhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.AfterOneFrame
System::Collections::IEnumerator* GlobalNamespace::StandaloneMonobehavior::AfterOneFrame(System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::AfterOneFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterOneFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action);
}
// Autogenerated method: StandaloneMonobehavior.RunAsync
System::Threading::Tasks::Task* GlobalNamespace::StandaloneMonobehavior::RunAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::RunAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.RunAsyncCoroutine
System::Collections::IEnumerator* GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine(System::Threading::Tasks::TaskCompletionSource_1<bool>* tcs, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::RunAsyncCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsyncCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tcs), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, tcs, cancellationToken);
}
// Autogenerated method: StandaloneMonobehavior.GetLastFrameTime
float GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::GetLastFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior/<AfterOneFrame>d__18
#include "GlobalNamespace/StandaloneMonobehavior_-AfterOneFrame-d__18.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
GlobalNamespace::StandaloneMonobehavior* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::StandaloneMonobehavior*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public StandaloneMonobehavior <>4__this
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$4__this(GlobalNamespace::StandaloneMonobehavior* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Action action
System::Action* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_get_action");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "action"));
}
// Autogenerated instance field setter
// Set instance field: public System.Action action
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_action(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::_set_action");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "action", value));
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.IDisposable.Dispose
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.MoveNext
bool GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<AfterOneFrame>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$AfterOneFrame$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandaloneMonobehavior/<RunAsyncCoroutine>d__21
#include "GlobalNamespace/StandaloneMonobehavior_-RunAsyncCoroutine-d__21.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Object <>2__current
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$2__current(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_cancellationToken");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationToken>(___internal__instance, "cancellationToken"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.CancellationToken cancellationToken
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_cancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_cancellationToken");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "cancellationToken", value));
}
// Autogenerated instance field getter
// Get instance field: public StandaloneMonobehavior <>4__this
GlobalNamespace::StandaloneMonobehavior* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::StandaloneMonobehavior*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public StandaloneMonobehavior <>4__this
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$4__this(GlobalNamespace::StandaloneMonobehavior* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
System::Threading::Tasks::TaskCompletionSource_1<bool>* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_get_tcs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<bool>*>(___internal__instance, "tcs"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_tcs(System::Threading::Tasks::TaskCompletionSource_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::_set_tcs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "tcs", value));
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.IDisposable.Dispose
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.MoveNext
bool GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandaloneMonobehavior/<RunAsyncCoroutine>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandaloneMonobehavior::$RunAsyncCoroutine$d__21::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncState
#include "GlobalNamespace/NodePoseSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _head
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::_get__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_get__head");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PoseSerializable>(___internal__instance, "_head"));
}
// Autogenerated instance field setter
// Set instance field: private PoseSerializable _head
void GlobalNamespace::NodePoseSyncState::_set__head(GlobalNamespace::PoseSerializable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_set__head");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_head", value));
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _leftController
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::_get__leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_get__leftController");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PoseSerializable>(___internal__instance, "_leftController"));
}
// Autogenerated instance field setter
// Set instance field: private PoseSerializable _leftController
void GlobalNamespace::NodePoseSyncState::_set__leftController(GlobalNamespace::PoseSerializable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_set__leftController");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_leftController", value));
}
// Autogenerated instance field getter
// Get instance field: private PoseSerializable _rightController
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::_get__rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_get__rightController");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PoseSerializable>(___internal__instance, "_rightController"));
}
// Autogenerated instance field setter
// Set instance field: private PoseSerializable _rightController
void GlobalNamespace::NodePoseSyncState::_set__rightController(GlobalNamespace::PoseSerializable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::_set__rightController");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_rightController", value));
}
// Autogenerated method: NodePoseSyncState.Serialize
void GlobalNamespace::NodePoseSyncState::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncState.Deserialize
void GlobalNamespace::NodePoseSyncState::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncState.SetState
void GlobalNamespace::NodePoseSyncState::SetState(GlobalNamespace::NodePoseSyncState_NodePose nodePose, GlobalNamespace::PoseSerializable pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose), ::il2cpp_utils::ExtractType(pose)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, nodePose, pose);
}
// Autogenerated method: NodePoseSyncState.GetState
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncState::GetState(GlobalNamespace::NodePoseSyncState_NodePose nodePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(*this, ___internal__method, nodePose);
}
// Autogenerated method: NodePoseSyncState.Equals
bool GlobalNamespace::NodePoseSyncState::Equals(GlobalNamespace::NodePoseSyncState& other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: NodePoseSyncState.GetDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::GetDelta(GlobalNamespace::NodePoseSyncState& latest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latest)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, latest);
}
// Autogenerated method: NodePoseSyncState.ApplyDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::ApplyDelta(GlobalNamespace::NodePoseSyncState& delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, delta);
}
// Autogenerated method: NodePoseSyncState.GetSize
int GlobalNamespace::NodePoseSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_GetDelta(GlobalNamespace::NodePoseSyncState& stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, stateTable);
}
// Autogenerated method: NodePoseSyncState.IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncState::IStateTable$NodePoseSyncState_NodePoseSyncState_NodePose_PoseSerializable$_ApplyDelta(GlobalNamespace::NodePoseSyncState& delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<NodePoseSyncState,NodePoseSyncState.NodePose,PoseSerializable>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(*this, ___internal__method, delta);
}
// Autogenerated method: NodePoseSyncState.IEquatableByReference<NodePoseSyncState>.Equals
bool GlobalNamespace::NodePoseSyncState::IEquatableByReference$NodePoseSyncState$_Equals(GlobalNamespace::NodePoseSyncState& other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncState::IEquatableByReference<NodePoseSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<NodePoseSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketPool`1<NodePoseSyncStateDeltaNetSerializable> pool
GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*>("", "NodePoseSyncStateDeltaNetSerializable", "pool"));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketPool`1<NodePoseSyncStateDeltaNetSerializable> pool
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_pool(GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NodePoseSyncStateDeltaNetSerializable", "pool", value));
}
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _delta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get__delta");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState>(___internal__instance, "_delta"));
}
// Autogenerated instance field setter
// Set instance field: private NodePoseSyncState _delta
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set__delta(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set__delta");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_delta", value));
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_$baseId$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SyncStateId>(___internal__instance, "<baseId>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private SyncStateId <baseId>k__BackingField
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_$baseId$k__BackingField(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_$baseId$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<baseId>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
int GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_get_$timeOffsetMs$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<timeOffsetMs>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <timeOffsetMs>k__BackingField
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_$timeOffsetMs$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_set_$timeOffsetMs$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<timeOffsetMs>k__BackingField", value));
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_baseId
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.get_delta
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable..cctor
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateDeltaNetSerializable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.NoDomainReloadInit
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateDeltaNetSerializable", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateDeltaNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NodePoseSyncState _state
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateNetSerializable::_get__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_get__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NodePoseSyncState>(___internal__instance, "_state"));
}
// Autogenerated instance field setter
// Set instance field: private NodePoseSyncState _state
void GlobalNamespace::NodePoseSyncStateNetSerializable::_set__state(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_set__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_state", value));
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateNetSerializable::_get_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_get_$id$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SyncStateId>(___internal__instance, "<id>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private SyncStateId <id>k__BackingField
void GlobalNamespace::NodePoseSyncStateNetSerializable::_set_$id$k__BackingField(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_set_$id$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<id>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float GlobalNamespace::NodePoseSyncStateNetSerializable::_get_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_get_$time$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<time>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <time>k__BackingField
void GlobalNamespace::NodePoseSyncStateNetSerializable::_set_$time$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::_set_$time$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<time>k__BackingField", value));
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NodePoseSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_id
GlobalNamespace::SyncStateId GlobalNamespace::NodePoseSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_id
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_id(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_time
float GlobalNamespace::NodePoseSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_time
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.get_state
GlobalNamespace::NodePoseSyncState GlobalNamespace::NodePoseSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NodePoseSyncState, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.set_state
void GlobalNamespace::NodePoseSyncStateNetSerializable::set_state(GlobalNamespace::NodePoseSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Serialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Deserialize
void GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NodePoseSyncStateNetSerializable.Release
void GlobalNamespace::NodePoseSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosePrediction
#include "GlobalNamespace/PosePrediction.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PosePrediction.PredictPose
UnityEngine::Pose GlobalNamespace::PosePrediction::PredictPose(UnityEngine::Pose prev, float prevTime, UnityEngine::Pose curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::PredictPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePose
UnityEngine::Pose GlobalNamespace::PosePrediction::InterpolatePose(UnityEngine::Pose prev, UnityEngine::Pose curr, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::InterpolatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, curr, t);
}
// Autogenerated method: PosePrediction.PredictPoseSerializable
GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::PredictPoseSerializable(GlobalNamespace::PoseSerializable prev, float prevTime, GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::PredictPoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "PredictPoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: PosePrediction.InterpolatePoseSerializable
GlobalNamespace::PoseSerializable GlobalNamespace::PosePrediction::InterpolatePoseSerializable(GlobalNamespace::PoseSerializable a, GlobalNamespace::PoseSerializable b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PosePrediction::InterpolatePoseSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosePrediction", "InterpolatePoseSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncState
#include "GlobalNamespace/StandardScoreSyncState.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _modifiedScore
int GlobalNamespace::StandardScoreSyncState::_get__modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_get__modifiedScore");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_modifiedScore"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _modifiedScore
void GlobalNamespace::StandardScoreSyncState::_set__modifiedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_set__modifiedScore");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_modifiedScore", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rawScore
int GlobalNamespace::StandardScoreSyncState::_get__rawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_get__rawScore");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_rawScore"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _rawScore
void GlobalNamespace::StandardScoreSyncState::_set__rawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_set__rawScore");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_rawScore", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _immediateMaxPossibleRawScore
int GlobalNamespace::StandardScoreSyncState::_get__immediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_get__immediateMaxPossibleRawScore");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_immediateMaxPossibleRawScore"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _immediateMaxPossibleRawScore
void GlobalNamespace::StandardScoreSyncState::_set__immediateMaxPossibleRawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_set__immediateMaxPossibleRawScore");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_immediateMaxPossibleRawScore", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _combo
int GlobalNamespace::StandardScoreSyncState::_get__combo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_get__combo");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_combo"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _combo
void GlobalNamespace::StandardScoreSyncState::_set__combo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_set__combo");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_combo", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplier
int GlobalNamespace::StandardScoreSyncState::_get__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_get__multiplier");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_multiplier"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _multiplier
void GlobalNamespace::StandardScoreSyncState::_set__multiplier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::_set__multiplier");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplier", value));
}
// Autogenerated method: StandardScoreSyncState.SetState
void GlobalNamespace::StandardScoreSyncState::SetState(GlobalNamespace::StandardScoreSyncState_Score s, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::SetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, s, value);
}
// Autogenerated method: StandardScoreSyncState.GetDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::GetDelta(GlobalNamespace::StandardScoreSyncState& stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, stateTable);
}
// Autogenerated method: StandardScoreSyncState.ApplyDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::ApplyDelta(GlobalNamespace::StandardScoreSyncState& delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::ApplyDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, delta);
}
// Autogenerated method: StandardScoreSyncState.GetState
int GlobalNamespace::StandardScoreSyncState::GetState(GlobalNamespace::StandardScoreSyncState_Score s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, s);
}
// Autogenerated method: StandardScoreSyncState.Serialize
void GlobalNamespace::StandardScoreSyncState::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncState.Deserialize
void GlobalNamespace::StandardScoreSyncState::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncState.Equals
bool GlobalNamespace::StandardScoreSyncState::Equals(GlobalNamespace::StandardScoreSyncState& other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: StandardScoreSyncState.GetSize
int GlobalNamespace::StandardScoreSyncState::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::GetSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_GetDelta(GlobalNamespace::StandardScoreSyncState& stateTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.GetDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateTable)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, stateTable);
}
// Autogenerated method: StandardScoreSyncState.IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncState::IStateTable$StandardScoreSyncState_StandardScoreSyncState_Score_System_Int32$_ApplyDelta(GlobalNamespace::StandardScoreSyncState& delta) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IStateTable<StandardScoreSyncState,StandardScoreSyncState.Score,System.Int32>.ApplyDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delta)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(*this, ___internal__method, delta);
}
// Autogenerated method: StandardScoreSyncState.IEquatableByReference<StandardScoreSyncState>.Equals
bool GlobalNamespace::StandardScoreSyncState::IEquatableByReference$StandardScoreSyncState$_Equals(GlobalNamespace::StandardScoreSyncState& other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncState::IEquatableByReference<StandardScoreSyncState>.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IEquatableByReference<StandardScoreSyncState>.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateDeltaNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateDeltaNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PacketPool`1<StandardScoreSyncStateDeltaNetSerializable> pool
GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_pool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>*>("", "StandardScoreSyncStateDeltaNetSerializable", "pool"));
}
// Autogenerated static field setter
// Set static field: static public readonly PacketPool`1<StandardScoreSyncStateDeltaNetSerializable> pool
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_pool(GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardScoreSyncStateDeltaNetSerializable", "pool", value));
}
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _delta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get__delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get__delta");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState>(___internal__instance, "_delta"));
}
// Autogenerated instance field setter
// Set instance field: private StandardScoreSyncState _delta
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set__delta(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set__delta");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_delta", value));
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <baseId>k__BackingField
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_$baseId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_$baseId$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SyncStateId>(___internal__instance, "<baseId>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private SyncStateId <baseId>k__BackingField
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_$baseId$k__BackingField(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_$baseId$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<baseId>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <timeOffsetMs>k__BackingField
int GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_$timeOffsetMs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_get_$timeOffsetMs$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<timeOffsetMs>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <timeOffsetMs>k__BackingField
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_$timeOffsetMs$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_set_$timeOffsetMs$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<timeOffsetMs>k__BackingField", value));
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_baseId
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_baseId
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_baseId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_baseId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_timeOffsetMs
int GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_timeOffsetMs
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_timeOffsetMs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeOffsetMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.get_delta
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::get_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.set_delta
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::set_delta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable..cctor
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateDeltaNetSerializable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.NoDomainReloadInit
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateDeltaNetSerializable", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateDeltaNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardScoreSyncState _state
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateNetSerializable::_get__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_get__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardScoreSyncState>(___internal__instance, "_state"));
}
// Autogenerated instance field setter
// Set instance field: private StandardScoreSyncState _state
void GlobalNamespace::StandardScoreSyncStateNetSerializable::_set__state(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_set__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_state", value));
}
// Autogenerated instance field getter
// Get instance field: private SyncStateId <id>k__BackingField
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateNetSerializable::_get_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_get_$id$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SyncStateId>(___internal__instance, "<id>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private SyncStateId <id>k__BackingField
void GlobalNamespace::StandardScoreSyncStateNetSerializable::_set_$id$k__BackingField(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_set_$id$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<id>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
float GlobalNamespace::StandardScoreSyncStateNetSerializable::_get_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_get_$time$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<time>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <time>k__BackingField
void GlobalNamespace::StandardScoreSyncStateNetSerializable::_set_$time$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::_set_$time$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<time>k__BackingField", value));
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_pool
GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>* GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardScoreSyncStateNetSerializable", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_id
GlobalNamespace::SyncStateId GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_id
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id(GlobalNamespace::SyncStateId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_time
float GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_time
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.get_state
GlobalNamespace::StandardScoreSyncState GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardScoreSyncState, false>(this, ___internal__method);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.set_state
void GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state(GlobalNamespace::StandardScoreSyncState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Serialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Deserialize
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: StandardScoreSyncStateNetSerializable.Release
void GlobalNamespace::StandardScoreSyncStateNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardScoreSyncStateNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SyncStateId
#include "GlobalNamespace/SyncStateId.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte kMaxValue
uint8_t GlobalNamespace::SyncStateId::_get_kMaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_get_kMaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "SyncStateId", "kMaxValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kMaxValue
void GlobalNamespace::SyncStateId::_set_kMaxValue(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_set_kMaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SyncStateId", "kMaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _id
uint8_t GlobalNamespace::SyncStateId::_get__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_get__id");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>(___internal__instance, "_id"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Byte _id
void GlobalNamespace::SyncStateId::_set__id(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::_set__id");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_id", value));
}
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(GlobalNamespace::SyncStateId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SyncStateId.Increment
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.Serialize
void GlobalNamespace::SyncStateId::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: SyncStateId.SerializeWithFlag
void GlobalNamespace::SyncStateId::SerializeWithFlag(LiteNetLib::Utils::NetDataWriter* writer, bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::SerializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SerializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer, flag);
}
// Autogenerated method: SyncStateId.Deserialize
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SyncStateId.DeserializeWithFlag
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::DeserializeWithFlag(LiteNetLib::Utils::NetDataReader* reader, bool& flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::DeserializeWithFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "DeserializeWithFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader, flag);
}
// Autogenerated method: SyncStateId.CreateFromSerializedData
GlobalNamespace::SyncStateId GlobalNamespace::SyncStateId::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SyncStateId, false>(*this, ___internal__method, reader);
}
// Autogenerated method: SyncStateId.WithinRange
bool GlobalNamespace::SyncStateId::WithinRange(GlobalNamespace::SyncStateId a, GlobalNamespace::SyncStateId b, int range) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::WithinRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "WithinRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(range)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, range);
}
// Autogenerated method: SyncStateId.Equals
bool GlobalNamespace::SyncStateId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: SyncStateId.GetHashCode
int GlobalNamespace::SyncStateId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.ToString
::Il2CppString* GlobalNamespace::SyncStateId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SyncStateId.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::SyncStateId& a, const GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SyncStateId.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::SyncStateId& a, const GlobalNamespace::SyncStateId& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SyncStateId::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SyncStateId", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<SynchronizedActionQueue/SynchronizedAction> _synchronizedActionQueue
System::Collections::Generic::List_1<GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>* GlobalNamespace::SynchronizedActionQueue::_get__synchronizedActionQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::_get__synchronizedActionQueue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>*>(___internal__instance, "_synchronizedActionQueue"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<SynchronizedActionQueue/SynchronizedAction> _synchronizedActionQueue
void GlobalNamespace::SynchronizedActionQueue::_set__synchronizedActionQueue(System::Collections::Generic::List_1<GlobalNamespace::SynchronizedActionQueue::SynchronizedAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::_set__synchronizedActionQueue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_synchronizedActionQueue", value));
}
// Autogenerated method: SynchronizedActionQueue.Clear
void GlobalNamespace::SynchronizedActionQueue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SynchronizedActionQueue.EnqueueAction
void GlobalNamespace::SynchronizedActionQueue::EnqueueAction(float time, System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::EnqueueAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnqueueAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, action);
}
// Autogenerated method: SynchronizedActionQueue.Update
void GlobalNamespace::SynchronizedActionQueue::Update(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SynchronizedActionQueue/SynchronizedAction
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_get_time");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "time"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Single time
void GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_set_time");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "time", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Action action
System::Action* GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_get_action");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "action"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Action action
void GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_set_action(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SynchronizedActionQueue::SynchronizedAction::_set_action");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "action", value));
}
